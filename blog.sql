/*
Navicat MySQL Data Transfer

Source Server         : localhost
Source Server Version : 50524
Source Host           : localhost:3306
Source Database       : blog

Target Server Type    : MYSQL
Target Server Version : 50524
File Encoding         : 65001

Date: 2016-04-28 20:31:14
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for `admin`
-- ----------------------------
DROP TABLE IF EXISTS `admin`;
CREATE TABLE `admin` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(30) NOT NULL COMMENT '管理员账号',
  `password` varchar(32) NOT NULL COMMENT '管理员密码',
  `login_ip` varchar(20) DEFAULT '0' COMMENT '登录IP地址',
  `login_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '登录时间',
  `login_times` int(10) unsigned DEFAULT '0' COMMENT '登录次数',
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of admin
-- ----------------------------
INSERT INTO `admin` VALUES ('1', 'admin', 'e13dd027be0f2152ce387ac0ea83d863', '127.0.0.1', '2016-04-28 19:59:10', '31');
INSERT INTO `admin` VALUES ('2', 'admin1', 'e10adc3949ba59abbe56e057f20f883e', '127.0.0.1', '2016-04-28 15:59:55', '0');
INSERT INTO `admin` VALUES ('3', 'gen', 'e10adc3949ba59abbe56e057f20f883e', '127.0.0.1', '2016-04-28 16:02:51', '0');
INSERT INTO `admin` VALUES ('4', 'admin2', 'e10adc3949ba59abbe56e057f20f883e', '127.0.0.1', '2016-04-28 16:04:13', '0');

-- ----------------------------
-- Table structure for `blog`
-- ----------------------------
DROP TABLE IF EXISTS `blog`;
CREATE TABLE `blog` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(60) NOT NULL COMMENT '标题',
  `author` varchar(10) NOT NULL DEFAULT '0' COMMENT '作者',
  `content` longtext NOT NULL COMMENT '内容',
  `create_time` datetime DEFAULT NULL COMMENT '创建时间',
  `update_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新',
  `hit` int(10) unsigned DEFAULT '0' COMMENT '点击量',
  `is_top` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否置顶',
  `is_display` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否显示',
  `is_delete` tinyint(1) DEFAULT '0' COMMENT '是否删除',
  `category_id` int(10) unsigned NOT NULL COMMENT '分类ID',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3135 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of blog
-- ----------------------------
INSERT INTO `blog` VALUES ('2959', '又是一周-AJAX（三） ', '网络', '\n<p>　　hi</p>\r\n<p>我又食言了，但我还是厚颜无耻的回来了。。。</p>\r\n<p><strong>1、AJAX（三）</strong></p>\r\n<p><strong>三、</strong><strong>AJAX</strong><strong>的简单的例子</strong></p>\r\n<p><strong>3.1 </strong><strong>简介</strong></p>\r\n<p>完成：查询员工信息，通过输入员工编号查询员工的基本信息+新建员工的信息，包含员工姓名，编号，性别，职位；</p>\r\n<p>实现：纯html页面+PHP页面，用来实现查询员工和新建员工的后台接口；</p>\r\n<p><strong>3.2 服务器端实现</strong></p>\r\n<p>我这里用的是wamp集合端，很多东西都不用变。</p>\r\n<p>然后编写程序在adobe dreamwaverCs6</p>\r\n<p><strong>--DW</strong></p>\r\n<p>安装，网上有。</p>\r\n<p>建立站点先，放在www文件夹下，然后服务器什么的也要自己整一下。</p>\r\n<p>具体就是，站点就是个文件夹，在apache文件夹下就行，然后服务器地址记得写写清楚。最后保存之前，要把远程取消，勾选上测试。懒得放图片了，基本步骤很简单的。</p>\r\n<p>其他就是php的内容了。</p>\r\n<p><strong> --php代码</strong></p>\r\n<p>不再一步一步给出，直接给出。</p>\r\n<p>&lt;?php<br>//设置页面内容是html编码格式是utf-8<br>header(\"Content-Type: text/plain;charset=utf-8\"); <br>//header(\"Content-Type: application/json;charset=utf-8\"); <br>//header(\"Content-Type: text/xml;charset=utf-8\"); <br>//header(\"Content-Type: text/html;charset=utf-8\"); <br>//header(\"Content-Type: application/javascript;charset=utf-8\"); </p>\r\n<p>//定义一个多维数组，包含员工的信息，每条员工信息为一个数组<br>$staff = array<br>	(<br>		array(\"name\" =&gt; \"洪七\", \"number\" =&gt; \"101\", \"sex\" =&gt; \"男\", \"job\" =&gt; \"总经理\"),<br>		array(\"name\" =&gt; \"郭靖\", \"number\" =&gt; \"102\", \"sex\" =&gt; \"男\", \"job\" =&gt; \"开发工程师\"),<br>		array(\"name\" =&gt; \"黄蓉\", \"number\" =&gt; \"103\", \"sex\" =&gt; \"女\", \"job\" =&gt; \"产品经理\")<br>	);</p>\r\n<p>//判断如果是get请求，则进行搜索；如果是POST请求，则进行新建<br>//$_SERVER是一个超全局变量，在一个脚本的全部作用域中都可用，不用使用global关键字<br>//$_SERVER[\"REQUEST_METHOD\"]返回访问页面使用的请求方法<br>if ($_SERVER[\"REQUEST_METHOD\"] == \"GET\") {<br>	search();<br>} elseif ($_SERVER[\"REQUEST_METHOD\"] == \"POST\"){<br>	create();<br>}</p>\r\n<p>//通过员工编号搜索员工<br>function search(){<br>	//检查是否有员工编号的参数<br>	//isset检测变量是否设置；empty判断值为否为空<br>	//超全局变量 $_GET 和 $_POST 用于收集表单数据<br>	if (!isset($_GET[\"number\"]) || empty($_GET[\"number\"])) {<br>		echo \"参数错误\";<br>		return;<br>	}<br>	//函数之外声明的变量拥有 Global 作用域，只能在函数以外进行访问。<br>	//global 关键词用于访问函数内的全局变量<br>	global $staff;<br>	//获取number参数<br>	$number = $_GET[\"number\"];<br>	$result = \"没有找到员工。\";<br><br>	//遍历$staff多维数组，查找key值为number的员工是否存在，如果存在，则修改返回结果<br>	foreach ($staff as $value) {<br>		if ($value[\"number\"] == $number) {<br>			$result = \"找到员工：员工编号：\" . $value[\"number\"] . \"，员工姓名：\" . $value[\"name\"] . <br>			                  \"，员工性别：\" . $value[\"sex\"] . \"，员工职位：\" . $value[\"job\"];<br>			break;<br>		}<br>	}<br>    echo $result;<br>}</p>\r\n<p>//创建员工<br>function create(){<br>	//判断信息是否填写完全<br>	if (!isset($_POST[\"name\"]) || empty($_POST[\"name\"])<br>		|| !isset($_POST[\"number\"]) || empty($_POST[\"number\"])<br>		|| !isset($_POST[\"sex\"]) || empty($_POST[\"sex\"])<br>		|| !isset($_POST[\"job\"]) || empty($_POST[\"job\"])) {<br>		echo \"参数错误，员工信息填写不全\";<br>		return;<br>	}<br>	//TODO: 获取POST表单数据并保存到数据库<br><br>	//提示保存成功<br>	echo \"员工：\" . $_POST[\"name\"] . \" 信息保存成功！\";<br>}</p>\r\n<p><strong>--服务器端测试</strong></p>\r\n<p>通过工具实现——fiddler。</p>\r\n<p>在fiddler主页面，右边有一个composer的标签页；</p>\r\n<p>然后选择<strong>GET方式</strong>，写上我们文件的地址——localhost/AjaxDemo/server.php，点击执行/execute；</p>\r\n<p>返回时参数错误，因为我们没有get什么数据；在地址后面跟上?number=101，再次执行，应该可以看到，101的详细信息，文件正确；</p>\r\n<p>然后再次选择<strong>POST方式</strong>；则地址一栏就可以不填写参数，但再下面要写上Content-Type: application/x-www-form-urlencoded，告诉服务器要怎么做。在最下方写上数据，执行，就得到成功保存。</p>\r\n<p>测试完毕，如果哪里有问题就去哪里改就是了。</p>\r\n<p>这里的经验教训就是在web开发中，后台开发的测试，不要依赖前台的开发，独立完成先。</p>\r\n<p><strong>3.3 客户端的实现</strong></p>\r\n<p>明天说吧。。（又跑神去回忆幻世录了。。。。）</p>\r\n<p> </p>\n ', '2016-04-28 19:41:33', '2016-04-28 20:06:46', '0', '0', '0', '1', '76');
INSERT INTO `blog` VALUES ('2960', '退役了退役了-AJAX ', '网络', '\n<p>hi</p>\r\n<p>昨晚打球悲剧的把脚崴了。</p>\r\n<p>要知道，上一次崴脚是四年前；那一次伤的是左脚，也是我这么多年打篮球的生涯中，这么多次崴脚中，最严重的一次受伤。休息了整整一个月，受寝室兄弟们的无微不至的照顾，最后也买了高贵的护踝，才得以重新复出的。　　</p>\r\n<p>后来，再打球，我的左脚一般都是带着护踝的，平时的小崴基本没什么影响。四年过去了，昨晚算是好日子到头了。不幸的是，这次伤的是右脚，情况也是一样的严重。</p>\r\n<p>不过，受个伤，也有自己的时间来思考平时浮躁中来不及触碰的东西了。福祸相依的说，php学习不能停哦。</p>\r\n<p><strong>1</strong><strong>、</strong><strong>AJAX</strong></p>\r\n<p><strong>二、</strong><strong>AJAX</strong><strong>概念介绍</strong></p>\r\n<p><strong>2.2 XMLHttpRequest</strong><strong>对象创建</strong></p>\r\n<p>简写为<strong>XHR</strong>。</p>\r\n<p>第一件事儿，实例化XHR对象。</p>\r\n<p><strong>var request=new XMLHttpRequest();</strong></p>\r\n<p>IE6之前的版本不支持，其他都可以。</p>\r\n<p><strong>2.3 Http</strong><strong>请求</strong></p>\r\n<p>是计算机通过网络进行通信的<strong>一种规则</strong>。</p>\r\n<p><strong>是一种无状态的协议</strong><strong>——</strong><strong>不建立持久的连接。（没有记忆）</strong></p>\r\n<p>步骤：TCP连接，请求，应答，发送数据，关闭连接。</p>\r\n<p><strong>--</strong><strong>请求</strong></p>\r\n<p>基本格式：方法和动作（GET还是POST）+URL+头（验证信息）+正文</p>\r\n<p><strong>GET</strong><strong>：一般用于信息的获取</strong>，使用URL传递参数（所以字符有限制），<strong>是默认的</strong><strong>Http</strong><strong>方法；一般是安全的</strong>——因为GET只是获取信息，相当于查询，并不会更改数据；但是GET<strong>对所有人都是可见的</strong>。</p>\r\n<p><strong>POST</strong><strong>：一般用于修改服务器上的资源</strong>（比如发送表单数据）；<strong>对其他人不可见</strong>，不使用URL，对发送数量无限制。</p>\r\n<p>GET是幂等的（多少次的操作都不会有差别）。</p>\r\n<p><strong>--</strong><strong>响应</strong></p>\r\n<p>基本格式：状态码（数字和文字）+响应头+响应体</p>\r\n<p><strong>-</strong><strong>状态码</strong>：由三位数字开头，<strong>其中首位数字定义了状态码的类型</strong>：</p>\r\n<p><strong>1xx</strong>表示信息类，正在处理；</p>\r\n<p><strong>2xx</strong>表示成功；</p>\r\n<p><strong>3xx</strong>表示重定向，请求没有成功；</p>\r\n<p><strong>4xx</strong>，表示客户端错误，客户端提交的请求有误，比如404 not found，表示请求中所引用的文档不存在；</p>\r\n<p><strong>5xx</strong>，表示服务器错误，很令人头疼的情况，比如500.</p>\r\n<p><strong>2.4 XHR</strong><strong>发送请求</strong></p>\r\n<p>两个好用的方法。</p>\r\n<p>建立连接：request.open(method,url,async)——方法：GET和POST，url地址，同步还是异步（异步是true）</p>\r\n<p>发送请求：request.send(string)——每次连接都应该open，所以这里的send就可以不写method，url</p>\r\n<p>2.5 XHR取得/获取响应</p>\r\n<p>用以下的方法或属性<strong>获取</strong>相应的数据：</p>\r\n<p>responseText：获得字符串形式的响应数据</p>\r\n<p>responseXML：XML形式</p>\r\n<p>status和statusText：以数字和文本形式返回HTTP状态码</p>\r\n<p>getAllResponseHeader()：获取所有的响应报头</p>\r\n<p>getResponseHeader()：查询响应中的某个字段的值</p>\r\n<p><strong>判断是否响应</strong></p>\r\n<p>readyState属性——01234，到4是响应完成。用下列程序可以监听，判断。</p>\r\n<p>request.onreadystatechange=function(){</p>\r\n<p>if(request.readyState===4&amp;&amp;request.status===200){</p>\r\n<p>   request.responseText</p>\r\n<p>}</p>\r\n<p>}</p>\r\n<p><strong>--</strong><strong>一般步骤</strong></p>\r\n<p>new个XHR对象+open方法+send数据+对过程进行监听。</p>\r\n<p><strong>三、</strong><strong>AJAX</strong><strong>的简单的例子</strong></p>\r\n<p><strong>3.1 </strong><strong>简介</strong></p>\r\n<p>完成：查询员工信息，通过输入员工编号查询员工的基本信息+新建员工的信息，包含员工姓名，编号，性别，职位；</p>\r\n<p>实现：纯html页面+PHP页面，用来实现查询员工和新建员工的后台接口；</p>\r\n<p>3.2 服务器端实现</p>\r\n<p>我这里用的是wamp集合端，很多东西都不用变。</p>\r\n<p>然后编写程序在dreamwaver</p>\r\n<p> -------------------------</p>\r\n<p>哎，意志还是不够强大啊。。。不写了今天，明天必须完成这个，其他的再说！</p>\n ', '2016-04-28 19:41:33', '2016-04-28 20:08:33', '0', '0', '0', '1', '76');
INSERT INTO `blog` VALUES ('2961', '有评论就是我最大的动力~MySQL基础篇完结（存储引擎和图形化管理工具） ', '网络', '\n<p>　　hi</p>\r\n<p>今天登上来，发现竟然有了3个评论~~加油吧！</p>\r\n<p>这周的计划其实远远没有达到，然后下周还有一大堆事情。。。那么。。。周末好好玩吧~</p>\r\n<p>今天试图完结MySQL的基础篇知识，小白变为大白？</p>\r\n<p><strong>1、MySQL</strong></p>\r\n<p><strong>-----存储引擎（入门）-----</strong></p>\r\n<p><strong>----简介</strong></p>\r\n<p> </p>\r\n<p><strong>---直观的例子</strong></p>\r\n<p>mysql&gt; SHOW CREATE TABLE test;<br>+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+<br>| Table | Create Table                                                                                                                                                                                  |<br>+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+<br>| test  | CREATE TABLE `test` (<br>  `id` tinyint(3) unsigned NOT NULL AUTO_INCREMENT,<br>  `username` varchar(20) DEFAULT NULL,<br>  PRIMARY KEY (`id`)<br>) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=latin1 |<br>+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+<br>1 row in set (0.04 sec)</p>\r\n<p>这里的ENGINE=InnoDB就是一个/种存储引擎</p>\r\n<p>---</p>\r\n<p>MySQL可以将数据以不同的技术存储在文件/内存中，这种技术就是存储引擎（也就是说，存储引擎就是一种技术，一种存储技术）</p>\r\n<p>各种引擎功能不一样，源于存储机制、索引技巧、锁定水平的不同</p>\r\n<p>又称为表类型</p>\r\n<p>---</p>\r\n<p>MySQL支持的主要有</p>\r\n<p>MyISAM，InnoDB，Memory，CSV，Archive</p>\r\n<p><strong>----知识点-并发处理</strong></p>\r\n<p>当多个连接对记录进行修改时保证数据的一致性和完整性</p>\r\n<p>比如处理多个用户对同一条记录的请求————常用的为共享锁（读锁）（多个用户可以读取同一个资源，读取过程中数据不会发生任何变化），排它锁（写锁）（在任何时候只能有一个用户写入资源，进行写锁时会阻塞其他读锁或写锁操作）</p>\r\n<p>加锁，要注意只针对最正确的对象（对象不能太大太小）——表锁（是一种开销最小的锁策略），行锁（开销最大）</p>\r\n<p><strong>----知识点-事务处理</strong></p>\r\n<p>用于保证数据库的完整性</p>\r\n<p>满足：ACID（原子性，一致性，隔离性，持久性）</p>\r\n<p><strong>----知识点-外键</strong></p>\r\n<p>保证数据一致性的策略（在之前讲各种键的那里讲过的）</p>\r\n<p><strong>----知识点-索引</strong></p>\r\n<p>对数据表中一列或多列的值进行排序的一种结构（类似目录的功能）</p>\r\n<p>实现快速的查询</p>\r\n<p><strong>----各种引擎的特点</strong></p>\r\n<p>MyISAM：256TB，支持索引，表锁，支持数据压缩——适用于事务不多的情况</p>\r\n<p>InnoDB：64TB，支持事务安全（这是常选用该引擎的原因），支持索引，行锁，支持外键（同样只有该引擎支持这一项）——高大上</p>\r\n<p>Memory：有存储限制（由内存大小决定），支持索引，表锁</p>\r\n<p>Archive：无存储限制，支持索引，表锁，支持数据压缩</p>\r\n<p>索引的类型还有不同，再说。</p>\r\n<p>其他的：CSV不支持索引，Blackhole用作数据复制的中继（类似阅后即焚）</p>\r\n<p>用的最多的是前两个。</p>\r\n<p><strong>----设置存储引擎</strong></p>\r\n<p>---my.ini修改</p>\r\n<p>default-storage-engine=...</p>\r\n<p>---CREATE TABLE table(</p>\r\n<p>...</p>\r\n<p>举例子如下</p>\r\n<p>mysql&gt; CREATE TABLE tp1(<br>    -&gt; s1 VARCHAR(20)<br>    -&gt; )ENGINE=MyISAM;<br>Query OK, 0 rows affected (0.10 sec)</p>\r\n<p>mysql&gt; SHOW CREATE TABLE tp1;<br>+-------+---------------------------------------------------------------------------------------------+<br>| Table | Create Table                                                                                |<br>+-------+---------------------------------------------------------------------------------------------+<br>| tp1   | CREATE TABLE `tp1` (<br>  `s1` varchar(20) DEFAULT NULL<br>) ENGINE=MyISAM DEFAULT CHARSET=latin1 |<br>+-------+---------------------------------------------------------------------------------------------+<br>1 row in set (0.00 sec)</p>\r\n<p>mysql&gt; ALTER TABLE tp1 ENGINE=InnoDB;<br>Query OK, 0 rows affected (0.35 sec)<br>Records: 0  Duplicates: 0  Warnings: 0</p>\r\n<p>mysql&gt; SHOW CREATE TABLE tp1;<br>+-------+---------------------------------------------------------------------------------------------+<br>| Table | Create Table                                                                                |<br>+-------+---------------------------------------------------------------------------------------------+<br>| tp1   | CREATE TABLE `tp1` (<br>  `s1` varchar(20) DEFAULT NULL<br>) ENGINE=InnoDB DEFAULT CHARSET=latin1 |<br>+-------+---------------------------------------------------------------------------------------------+<br>1 row in set (0.00 sec)</p>\r\n<p><strong>-----图形化管理工具-----</strong></p>\r\n<p><strong>----PHPMyAdmin</strong></p>\r\n<p>由于我的是wamp集成环境，可以直接登陆到phpmyadmin</p>\r\n<p>正常的是要到phpmyadmin官网下载对应自己用的php版本的</p>\r\n<p>下载安装好也是要到网页端进行操作的，毕竟是放在服务器端的东西</p>\r\n<p>能够可视化的进行数据库、数据表、数据的操作，感觉上，不是很习惯，个人还是喜欢用命令的方式。不过可视化的方便查找错误什么的吧，还需要再去体会理解</p>\r\n<p>----Navicat</p>\r\n<p>有中文版客户端的</p>\r\n<p>----MySQL Workbench</p>\r\n<p>官网提供的客户端</p>\r\n<p>不打算具体说，网上查得到，而且多摸摸就会了</p>\r\n<p><strong> 2、AJAX</strong></p>\r\n<p><strong>-----简介-----</strong></p>\r\n<p><strong>中文名：异步的Javascript和XML（异步请求，局部刷新）</strong></p>\r\n<p>是一种无需重新加载整个网页而可以更新部分页面的<strong>技术</strong></p>\r\n<p>改变了web的格局</p>\r\n<p>预备知识：CSS，HTML，JS</p>\r\n<p><strong>----同步和异步</strong></p>\r\n<p>同步：（原来的技术）客户端请求后服务器响应处理后返回处理结果，整个过程中客户端一直在等待——同步指的是，客户端和服务器端同步进行处理</p>\r\n<p>异步：（举个例子，填写注册信息的时候，填了邮箱，然后输入框右侧很快给出一个绿色的对号）客户端有变化的时候，（似乎）立即发送请求到处理器端，然后处理器端处理后返回结果，这个过程中，客户端仍在进行其他操作<strong>——客户端、服务器端的异步操作</strong></p>\r\n<p>技术区别：在于缺少XMLHttpRequest这个对象——用于后台和服务器进行数据的交换</p>\r\n<p>过程简介：HTML&amp;CSS来实现页面，表达信息+XHR进行数据的异步交换+JavaScript操作DOM实现动态局部刷新</p>\r\n<p><strong>----XMLHttpRequest（XHR）对象创建</strong></p>\r\n<p>实例化XHR：var request=new XMLHttpRequest();</p>\r\n<p>除了IE6及以前版本的浏览器都支持XHR</p>\r\n<p><strong>----HTTP请求</strong></p>\r\n<p>http是计算机通过网络进行通信的规则/协议，是一种无状态（不保留状态/无记忆）的协议</p>\r\n<p>http请求的步骤：建立TCP连接-》浏览器“喊向”服务器-》服务器应答-》服务器回答-》关闭连接</p>\r\n<p>请求和响应有各自的格式，详细可以查《计算机网络》或者类似书籍，大概知道有GET/POST啊什么的就可以暂时继续</p>\r\n<p>注意：GET是用URL传递数据，是全部可见的（明文），而且有字符数限制，优点是简单、安全且可以保存为书签等</p>\r\n<p>响应后在浏览器有状态码要适当了解：主要看首位——1xx，信息类，表示正在处理；2xx，成功；3xx，重定向，表示请求不成功，需要客户进一步动作；4xx，客户端错误，表示客户端提交的请求有错误，比如404 NOT FOUND，意味着请求中所引用的文档不存在；5xx，服务器错误————有助于web程序的调试，背一下</p>\r\n<p> </p>\n ', '2016-04-28 19:41:33', '2016-04-28 20:08:33', '0', '0', '0', '1', '76');
INSERT INTO `blog` VALUES ('2962', '教研室的夜晚 ', '网络', '\n<p>hi</p>\r\n<p>总感觉这已经不是三天打渔两天晒网了，是。。四天晒网</p>\r\n<p>太阳穴嘣嘣痛的一天，反而只有网上课堂能进行下去的</p>\r\n<p>一、PHP</p>\r\n<p>1、数组</p>\r\n<p>-$var=array()</p>\r\n<p>-索引数组，关联数组</p>\r\n<p>-关联,</p>\r\n<p>$var=array(\'key\'=&gt;\'value\');</p>\r\n<p>array[\'key\'];</p>\r\n<p>-foreach($arr as $key =&gt;$value);</p>\r\n<p>2、函数</p>\r\n<p>-function function_name(){}</p>\r\n<p>-可变函数</p>\r\n<p>$var=\'function.name</p>\r\n<p> </p>\r\n<p>不想一一写下来了，贴代码</p>\r\n<p>&lt;?php</p>\r\n<p>//数组<br>$arr=array(\'apple\'=&gt;\'苹果\',\'pear\'=&gt;\'梨子\');<br>echo $arr[\'apple\'];<br>foreach($arr as $key=&gt;$value){<br>	echo $key.\"的值是\".$value;<br>}</p>\r\n<p>//函数，尤其是可变函数<br>function wahtf(){<br>	echo \"What the f**k\";<br>}<br>$wtf=\'wahtf\';<br>if(function_exists($wtf)){<br>	echo \"Oh shit!\";<br>}</p>\r\n<p>//类和对象<br>//类的基本定义<br>class man{<br>	//访问控制<br>	protected $gender=\"man\";<br>	protected $age=18;<br>	//构造函数<br>	//function __construct(){<br>		// print \"构造函数被调用\\n\"；<br>	//}<br>	//方法<br>	public function ageUp(){<br>		$this-&gt;age+=1;<br>	}<br>	//重载，动态创建属性等<br><br>}</p>\r\n<p>$peter=new man();<br>$peter-&gt;ageUp();<br>//echo $peter;</p>\r\n<p>//字符串<br>$a=\"I\";<br>$b=\"love\";<br>$c=\"you\";<br>$d=$a.$b.$c;<br>//$e=23.23;<br>echo strlen($d);<br>echo substr($d,2,4);<br>echo strpos($d,\"you\");<br>echo str_replace(\"him\",\"you\",$d);<br>//echo sprintf(%01.4f,$e);</p>\r\n<p> </p>\r\n<p>有不少错误，不想查了，留待以后弄吧，不知道是版本问题还是什么，学习其他的去了。</p>\r\n<p>---------19：19---------------</p>\r\n<p>2、git</p>\r\n<p>-仅仅是创建了下git的库，但是linux环境下。。什么鬼。。。</p>\r\n<p>-我觉得是时候装一个红帽子了</p>\r\n<p>3、MySQL</p>\r\n<p>-基本操作命令CREAT ALTER DROP SHOW+DATABASE；</p>\r\n<p>-数据类型之整型：TINYINT     SMALLINT,MEDIUMINT,INT,BIGINT</p>\r\n<p>                        1字节               2               3           4      8</p>\r\n<p>                        2的8次方个数    16             24         32     64</p>\r\n<p>-数据类型之浮点型：FLOAT[(M,D)]       DOUBLE[(M,D)]</p>\r\n<p>                             单精度                        双精度</p>\r\n<p>                         M是总位数，D是小数点后有几位数</p>\r\n<p>注意，这里的中括号是指括号里面的不是必选而是可选项。</p>\r\n<p>-数据类型之日期：YEAR  TIME  DATE  DATETIME  TIMESTAMP</p>\r\n<p>                           1       3        3           8                  4</p>\r\n<p>-数据类型之字符型：CHAR(M)  VARCHAR(M)  TINYTEXT  TEXT  MEDIUMTEXT  LONGTEXT</p>\r\n<p>                            定长             变长            &lt;2的8次    16          24                    42</p>\r\n<p>                          ENUM(\'value1\',\'value2\',...)   SET(\'value1\',\'value2\',...)</p>\r\n<p>                           枚举                                      选择</p>\r\n<p> </p>\n ', '2016-04-28 20:05:02', '2016-04-28 20:09:56', '0', '0', '0', '1', '85');
INSERT INTO `blog` VALUES ('2963', '任性就是没长大咯 ', '网络', '\n<p>　　hi</p>\r\n<p>两天没写，源于两天的任性，别说这个，就连教研室昨天都没去，然后就被召唤了，今天要去挨骂。。。</p>\r\n<p>是不是长大了就完全不能任性了，对于男人，似乎没什么机会了。还是好好学习，然后好好挣钱，早日实现可以任性的生活~上班去了~~</p>\r\n<p>------------------8：47-------------------</p>\r\n<p>要不要这么配合我，写了这么个题目，晚上就被老爸老妈老老实实的关心一通。。。好吧，就当我任性，事儿还是会去做的。</p>\r\n<p>现在在安装传说中的github，感觉这辈子都装不上了。。。102Mb的东西，基本上0.6Mb每分钟的在下载，你敢信？！</p>\r\n<p>还是干正事儿，总结下今天干了什么</p>\r\n<p>1、PHP</p>\r\n<p>-Zend Studio上的插件是使用学习，当然svn并没有装好。。。</p>\r\n<p>-Emmet很给力，又多了一个可以安利的东西</p>\r\n<p>-进阶的PHP要开始了，请多看书写东西</p>\r\n<p>2、Git</p>\r\n<p>-Git的作用：备份，记录历史，以及最重要的多端同步，多人共同开发</p>\r\n<p>-git可以简单看作是svn的升级，是一种版本管理工具</p>\r\n<p>-github是一个社区网站，可以寄托git上的代码</p>\r\n<p>3、MVC</p>\r\n<p>-了解学习MVC的流程，图就不化了，在实践中加深理解吧</p>\r\n<p> </p>\r\n<p>没做什么正事儿，没写什么代码，反而干了更多的科研。。。</p>\r\n<p>今天似乎有点郁闷啊，。。。这个略多。</p>\r\n<p>现在在纠结要不要装好github再睡觉，你说呢？</p>\r\n<p>晚安吧</p>\n ', '2016-04-28 20:05:02', '2016-04-28 20:09:56', '0', '0', '0', '1', '85');
INSERT INTO `blog` VALUES ('2964', '150929-拖延高于懒-HTML(End) ', '网络', '\n<p>四天未更了，分别是因为Xshell和虚拟机链接不好，累，懒（好像是三天。。）</p>\r\n<p>就像我一直嗷嗷着要去学开出一样，5年都没有去。。。。。。拖延症似乎比懒癌更可怕。慢慢的慢慢的，人长大了，小时候的一些东西才明白。一天之计在于晨，早上动起来，一天都不会太懒吧（这个句式就像爱笑的女生运气都不会太差），不说了，教研室去了。</p>\r\n<p>--------------------------9：00-------------------------------------------------------</p>\r\n<p>&lt;!DOCTYPE HTML&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;<br>&lt;title&gt;内联块状元素&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>div{background:230;}<br>p{display:block;<br>  border-bottom:2px solid blue;<br>  padding:20px 12px;<br>  height:100px;<br>  inline-height:100px;<br>  font:italic \"宋体\",sans-serif 120%/1.5em #369;<br>  text-align:center;}<br>table {margin:0 auto;}<br>.float1{float:left;<br>         position:relative;<br>         left:50%;}<br>.float2{position:relative;<br>        left:-50%;}<br>.layerabs{position:absolute;<br>          left:0 auto;}<br>.layerrel{position:relative;}<br>.layerfixed{position:fixed;<br>            right:0;<br>			bottom:0;}	  </p>\r\n<p>&lt;/style&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div class=\"layerfixed\"&gt;<br>&lt;p&gt;固定定位&lt;/p&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;div class=\"layerabs\"&gt;<br>&lt;p&gt;绝对定位&lt;/p&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;div class=\"layerrel\"&gt;<br>&lt;div class=\"layerabs\"&gt;<br>&lt;p&gt;定位的组合&lt;/p&gt;<br>&lt;/div&gt;&lt;/div&gt;</p>\r\n<p>&lt;div class=\"float1\"&gt;<br>&lt;div class=\"float2\"&gt;<br>&lt;p&gt;非定宽居中&lt;/p&gt;<br>&lt;/div&gt;&lt;/div&gt;</p>\r\n<p>&lt;div&gt;<br>&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;<br>&lt;p&gt;非定宽居中table&lt;/p&gt;<br>&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>HTML的初级内容学习完毕，上述内容主要是一点排版方法，然后还需要进一步的优化。暂时先记下慢慢消化~</p>\r\n<p>-------------------17：04-------------------------</p>\n ', '2016-04-28 20:05:03', '2016-04-28 20:09:56', '0', '0', '0', '1', '77');
INSERT INTO `blog` VALUES ('2965', '150925-周五不干活-HTML(CSS),Javascript ', '网络', '\n<p>不干活就干自己。。</p>\r\n<p>今天所有代码总结为一个如下</p>\r\n<p>&lt;!DOCTYPE HTML&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;JS代码的位置&lt;/title&gt;<br>&lt;script type=\"text/javascript\"&gt;<br>  document.write(\"I love\");<br>&lt;/script&gt;</p>\r\n<p>&lt;style&gt;</p>\r\n<p>p.span{font-family:\"宋体\";</p>\r\n<p>           font-style:italic;</p>\r\n<p>           font-decoration:underline;</p>\r\n<p>           text-indent:2em;</p>\r\n<p>           display:inline-block}<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;script type=\"text/javascript\"&gt;<br> document.write(\"javascript\");<br>&lt;/script&gt;</p>\r\n<p>&lt;P&gt;这是什么&lt;span&gt;鬼&lt;/span&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p> </p>\r\n<p>总结就是</p>\r\n<p>1、CSS</p>\r\n<p>--有权值这一说，类似优先级，但是是数字化，并且可以叠加的，自己查去；</p>\r\n<p>--字体相关的font-size\\style\\family都是对字体本身进行变动的，-decoration是对字体外的变动</p>\r\n<p>--text-indent缩进，大致了解即可</p>\r\n<p>--display是字段等的显示模式，block，inline，inline-block</p>\r\n<p>2、Javascript</p>\r\n<p>--可以写在&lt;head&gt;或&lt;body&gt;中，但按顺序来输出</p>\r\n<p>--------------------17：00----------------------</p>\r\n<p> </p>\n ', '2016-04-28 20:05:03', '2016-04-28 20:09:56', '0', '0', '0', '1', '77');
INSERT INTO `blog` VALUES ('2966', '150924-还是起得来床的好-HTML(CSS) ', '网络', '\n<p>一早醒来是9：10，这些天最晚的了，也可能是睡的最爽的了。</p>\r\n<p>不废话，早上Matlab仿真干不出来，不如学学html，上代码~</p>\r\n<p>&lt;!DOCTYPE HTML&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;<br>&lt;title&gt;分组选择符&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>h1,span{color:red;}<br>.first,#second span{<br>    color:green;<br>}</p>\r\n<p>.first&gt;span{border:3px solid blue;}</p>\r\n<p>.first span{border:1px solid red;}<br>&lt;/style&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>    &lt;h1&gt;勇气&lt;/h1&gt;<br>    &lt;p class=\"first\"&gt;三年级时，我还是一个&lt;span&gt;胆小如鼠&lt;/span&gt;的小女孩，上课从来不敢回答老师提出的问题，生怕回答错了老师会批评我。就一直没有这个勇气来回答老师提出的问题。学校举办的活动我也没勇气参加。&lt;/p&gt;<br>    &lt;p id=\"second\"&gt;到了三年级下学期时，我们班上了一节公开课，老师提出了一个很&lt;span&gt;简单&lt;/span&gt;的问题，班里很多同学都举手了，甚至成绩比我差很多的，也举手了，还说着：\"我来，我来。\"我环顾了四周，就我没有举手。&lt;/p&gt;<br>    &lt;img src=\"http://img.mukewang.com/52b4113500018cf102000200.jpg\" &gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>总而言之，就是css的一些简单应用。</p>\r\n<p>--------------10：56-----------------------------------------</p>\n ', '2016-04-28 20:05:03', '2016-04-28 20:09:56', '0', '0', '0', '1', '77');
INSERT INTO `blog` VALUES ('2967', '150922-写写博客监督下不自觉的自己-PPT,Linux,HTML ', '网络', '\n<p>开始学PHP的日子里，总是懒散的有一天没一天的。无意间听闻写博客来展示代码（现在还远远做不到哇），来监督个人每天的学习进度，鉴于自己还是爱写一点文字，但愿可以坚持下去。</p>\r\n<p>凡是都喜欢有个计划，骨子里的理科性，我喜欢早上就有人来拍一巴掌屁股，动动。so，早上起来写写，5分钟，再去上班，实在不行就手机上写。晚上呢，回来再修改下，哦了~</p>\r\n<p>------------------------------早上9：31------------------------------------------</p>\r\n<p>感觉还是状态好一点，不知道是教研室的氛围还是博客真的好用。</p>\r\n<p>中午学了点乱七八糟的东西，晚上说。下午在教研室搞定了今天的任务后，没事干，看完了PPT“说服力”的第一部分，真的很不错。主要是思路，作为工具的干货，有所得：比如文本框的对齐，图片的边缘柔化，最酷炫的图片顶点编辑~~</p>\r\n<p>晚上会不会萎？</p>\r\n<p>-------------------------------下午17：08------------------------------------------</p>\r\n<p>晚上真的萎了。。。好吧，好歹比昨天好，这是底线！！！！</p>\r\n<p>中午做了点事，带上其他所有，总结如下。</p>\r\n<p>1、PPT说服力第一章，定位与标题</p>\r\n<p>-形状顶点编辑，图片柔化等</p>\r\n<p>2、Linux简介</p>\r\n<p>--跟着课程学习CentOS，基本类似RedHat</p>\r\n<p>--开源软件是使用、研究、散步/改变的自由，请保持和延续下去</p>\r\n<p>--字符界面的使用是为了资源占用的减少以及更加稳定的系统</p>\r\n<p>--严格区分大小写</p>\r\n<p>--windows程序不能直接运行在Linux</p>\r\n<p>--重要原则！！！！！一切内容皆文件，用户，硬件全都是文件——应进一步在实践中加深理解</p>\r\n<p>--文件无拓展名，一般靠权限区分文件类型；但有特别的约定俗成的文件名——软件包.rpm——脚本.sh——配置文件.conf——网页文件.html.php——压缩文件.gz .bz2 .tgz .tar.bz2</p>\r\n<p>3、HTML基础-继续是标签的认识，代码如下</p>\r\n<p>&lt;html&gt;</p>\r\n<p>&lt;head&gt;</p>\r\n<p>&lt;title&gt;150922&lt;/title&gt;</p>\r\n<p>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;</p>\r\n<p>&lt;img src=\"shit.gif\" alt=\"OMG.jpg\" title=\"Beauty\"&gt;你好&lt;/img&gt;</p>\r\n<p>&lt;form method=\"post\" action=\"save.php\"&gt;</p>\r\n<p> &lt;label&gt;姓名:&lt;/label&gt;<br>    &lt;input type=\"text\" name=\"what\"/&gt;&lt;br&gt;<br>    &lt;label&gt;密码:&lt;/label&gt;<br>    &lt;input type=\"password\" name=\"what\"/&gt;&lt;br&gt;<br>    &lt;label&gt;性别:&lt;/label&gt;<br>    &lt;label&gt;女&lt;/label&gt;<br>    &lt;input type=\"radio\" value=\"female\" name=\"gender\"/&gt;<br>    &lt;label&gt;男&lt;/label&gt;<br>    &lt;input type=\"radio\" value=\"male\" name=\"gender\"/&gt;&lt;br&gt;<br>    &lt;label&gt;年龄&lt;/label&gt;<br>    &lt;textarea rows=\"1\" cols=\"10\"&gt;请输入年龄&lt;/textarea&gt;&lt;br&gt;<br>    &lt;label&gt;请选择职业&lt;/label&gt;<br>    &lt;select&gt;<br>      &lt;option value=\"stu\"&gt;学生&lt;/option&gt;<br>      &lt;option value=\"gov\"&gt;公务员&lt;/option&gt;<br>      &lt;option value=\"it\"&gt;IT从业者&lt;/option&gt;<br>      &lt;option value=\"others\"&gt;其他&lt;/option&gt;<br>    &lt;/select&gt;&lt;br&gt;<br>    &lt;input type=\"submit\"/&gt;</p>\r\n<p>    &lt;input type=\"reset\"/&gt;</p>\r\n<p>  &lt;/body&gt;</p>\r\n<p>&lt;/html&gt;</p>\r\n<p>基本上就是很基本的直接用html来进行引导用户的输入行为。注意：type=\"radio\"中name的值应该一样；&lt;&gt;内的数据不是显示数据，但是是给服务器等处理做准备的。</p>\r\n<p> </p>\r\n<p>总而言之，有收获的一天，继续吧，还有很大成长空间。</p>\r\n<p>--------------------------------------------------23：19----------------------------------------------------------------</p>\n ', '2016-04-28 20:05:03', '2016-04-28 20:09:56', '0', '0', '0', '1', '77');
INSERT INTO `blog` VALUES ('2968', 'I am back-电商网站开发&jQuery ', '网络', '\n<p>　　hi</p>\r\n<p>之前有将近两周的时间没有更新，除了懒就是其他的事情耽误了。现在好了，回家了，虽然家里停水，外面又有积雪，天寒地冻的，但诸多不便，都比不过有点闲的好。</p>\r\n<p>开搞每个学PHP的必经之路——电商网站的开发。</p>\r\n<p><strong>1、电商网站开发——前端</strong></p>\r\n<p><strong>一、首页制作</strong></p>\r\n<p><strong>1.1 概况&amp;准备</strong></p>\r\n<p>整个电商网站包括什么呢，就是首页信息，后面的分类信息页，商品详情页，购物页面，售后页面等等，所以就一步步做。自己做的时候可以简单的画个概况图来指导开发，免得逻辑搞混。</p>\r\n<p>准备：项目文件夹，其中要有images（图片素材），js（javascript），style（css）三个子文件夹中。工具的话，看个人爱好，不过涉及的是前端，一般上习惯用DS的多，我比较懒，直接用zend+浏览器算求。</p>\r\n<p>其中准备中有一部是实现reset.css，也就是清零/清除css效果。css我基本算是个白痴，找个源码贴出来，侵删：</p>\r\n<p>@charset \"utf-8\";<br>/* CSS Document */<br>body,ul,ol,li,p,h1,h2,h3,h4,h5,h6,form,fieldset,table,td,img,div,dl,dt,dd,input{margin:0;padding:0;}<br>body{font-size:12px;}<br>img{border:none;}<br>li{list-style:none;}<br>input,select,textarea{outline:none;border:none; background:none;}<br>textarea{resize:none;}<br>a{text-decoration:none; color:#656565;}</p>\r\n<p>/*清浮动*/<br>.clearfix:after{content:\"\";display:block;clear:both;}<br>.clearfix{zoom:1;}<br>.fl{float:left;}<br>.fr{float:right;}</p>\r\n<p>1.2 顶部结构</p>\r\n<p> 用fireworks做，我还不会，先去学习下。</p>\r\n<p>--------真是蛋疼，做个开头就发现自己naive，先完成web进阶的jQuery吧----------</p>\r\n<p><strong>2、jQuery</strong></p>\r\n<p><strong>十二、jQuery在线聊天室</strong></p>\r\n<p><strong>12.1 基本功能介绍</strong></p>\r\n<p>登陆后才能进入（用于基本信息的在线显示）；</p>\r\n<p>动态显示交流后的内容；</p>\r\n<p>文字和表情的沟通实现（表情也是字符代号编码）</p>\r\n<p><strong>技术重点</strong>：<strong>ajax</strong>的无刷新技术展示数据</p>\r\n<p><strong>12.2 实现效果</strong></p>\r\n<p>利用jq中的ajax函数（比如$.ajax等）实现登陆，登陆时，显示登陆中，正确或失败，有相应的动作；</p>\r\n<p>聊天室就是聊天内容区域，输入区域，人员显示区域。</p>\r\n<p><strong>12.3 流程</strong></p>\r\n<p>登录页面——》向服务器请求登录信息（用户名和密码信息）——》成功：跳转到聊天主页；否则，跳回登录页面。</p>\r\n<p>聊天页面——》请求聊天数据——》获取聊天数据；</p>\r\n<p>在线人员信息——》请求——》获取；</p>\r\n<p>所以，可以简单作图，这里我掠过了，然后清楚的看到需要做的页面数量，请求和响应的逻辑和对应关系。</p>\r\n<p><strong>12.4 登录页面开发login</strong></p>\r\n<p>--功能</p>\r\n<p>验证登录信息；</p>\r\n<p>进入聊天室；</p>\r\n<p>--代码</p>\r\n<p>以前在PDO中讲过的一种，直接用POST方法传递表格参数的方法：</p>\r\n<p>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html;chraset=UTF-8\"&gt;<br>&lt;title&gt;登录&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;form action=\'login.php\' method=\'post\'&gt;<br>用户名：&lt;input type=\'text\' name=\'username\'/&gt;&lt;br/&gt;<br>密     码：&lt;input type=\'password\' name=\'password\'/&gt;&lt;br/&gt;<br>&lt;input type=\'submit\' value=\'登录\'/&gt;<br>&lt;/form&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>然后后续工作在login.php中实现就好了；</p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>$username=$_POST[\'username\'];<br>$password=$_POST[\'password\'];<br>try {<br>	$pdo=new PDO(\'mysql:host=localhost;dbname=imooc\',\'root\',\'\');<br>	$pdo-&gt;exec(\'use imooc_pdo\');<br>	$sql=\"select * from user where username=? and password=?\";<br>	$stmt=$pdo-&gt;prepare($sql);<br>	$stmt-&gt;execute(array($username,$password));<br>	//$stmt=$pdo-&gt;query($sql);<br><br>	$shit=$stmt-&gt;rowCount();//显示结果集statement对象中的行数<br>	echo $shit;<br>	if($shit == 1){<br>		//$url=\"ChatMain.html\";<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"alert(\\\"登录成功\\\")\";<br>		echo \"&lt;/script&gt;\";<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"document.location=\\\"ChatMain.html\\\"\";<br>		echo \"&lt;/script&gt;\";<br>	}else{	<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"alert(\\\"用户名或密码错误\\\")\";<br>		echo \"&lt;/script&gt;\";<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"document.location=\\\"login2.html\\\"\";<br>		echo \"&lt;/script&gt;\";<br>	}</p>\r\n<p>} catch (PDOException $e) {<br>	echo $e-&gt;getMessage();<br>}</p>\r\n<p>----------------------------------------------</p>\r\n<p>我们在这里想要的是jQuery实现方法：换一种实现，同时把登录做的稍微好看一点点哈（我觉得好看，一个在于对应的css文件的编写，另一个在html中实现，DS工具实现要方便一点，有时间也得整着学一下）；</p>\r\n<p>&lt;!DOCTYPE html&gt;<br>&lt;HTML&gt;<br>&lt;head&gt;<br>&lt;TITLE&gt;登录&lt;/TITLE&gt;<br>  &lt;SCRIPT type=\"text/javascript\" src=\"jq/jquery-1.8.2.min.js\"&gt;&lt;/SCRIPT&gt;<br>  &lt;SCRIPT type=\"text/javascript\" src=\"js/jsLogin.js\"&gt;&lt;/SCRIPT&gt;<br>  &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"style/cssLogin.css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>  &lt;div id=\"divLogin\"&gt;<br>    &lt;h3&gt;用户登录&lt;/h3&gt;<br>      &lt;div class=\"content\"&gt;<br>        &lt;div&gt;用户：&lt;input id=\"txtName\" type=\"text\" class=\"txt\" /&gt;&lt;/div&gt;<br>        &lt;div&gt;密码：&lt;input id=\"txtPass\" type=\"text\" class=\"txt\" /&gt;&lt;/div&gt;<br>        &lt;div class=\"btnCenter\"&gt;<br>          &lt;input id=\"Button1\" type=\"button\" value=\"登录\" class=\"btn\" /&gt;<br>          &amp;nbsp;&amp;nbsp;<br>          &lt;input id=\"Button2\" type=\"button\" value=\"取消\" class=\"btn\" /&gt;<br>        &lt;/div&gt;<br>        &lt;span id=\"divMsg\" class=\"clsTip\"&gt;&lt;/span&gt;<br>      &lt;/div&gt;<br>  &lt;/div&gt;<br>&lt;/body&gt;<br>&lt;/HTML&gt;</p>\r\n<p>其中，js是javascript逻辑控制文件；jq是jquery实现文件；css是css文件；后面的span标签，是为了实现某些功能暂时留下的。</p>\r\n<p>$(function(){<br>	//元素绑定全局ajaxStart事件<br>	//这里就是用到span的标签，给出过程<br>	$(\"#divMsg\").ajaxStart(function(){<br>		$(this).show().html(\"正在发送登录请求...\");<br>	})<br>	$(\"#divMsg\").ajaxStop(function(){<br>		$(this).html(\"请求处理已完成！\").hide();<br>	})<br>	$(\"#Button1\").click(function(){<br>		var $name=$(\"#txtName\");<br>		var $pass=$(\"#txtPass\");<br>		if($name.val() !== \"\" &amp;&amp; $pass.val()!==\"\"){<br>			UserLogin($name.val(),$pass.val());<br>		}else{<br>			if($name.val()==\"\"){<br>				alert(\"用户名不能为空！\");<br>				$name.focus();<br>				return false;  // 阻止进一步的动作，很重要的一步<br>			}else{<br>				alert(\"密码不能为空！\");<br>				$pass.focus();<br>				return false;<br>			}<br>		}<br>	})<br>});</p>\r\n<p>function UserLogin(name,pass){<br>	$.ajax({<br>		type: \"GET\",  //提交方式<br>		url: \"index.php\",   //提交对象<br>		data:\"action=Login&amp;d=\"+new Date()+\"&amp;name=\"+name+\"&amp;pass=\"+pass, //提交数据<br>		success:function(data){<br>			if(data==\"1\"){<br>			window.location=\"ChatMain.html\";<br>		}else{<br>			alert(\"用户名或密码错误！\");<br>			return false;<br>		}<br>	}<br>	});<br>} </p>\r\n<p>其实这里面还是有错误的，实现起来感觉没有第一种实现方法简单明了，希望了解的兄弟们指点下，两种方法的优缺点。</p>\r\n<p>我还是稍微完善了下第一种PDO方法，直接在html中post表格数据，与数据库进行比对，然后返回信息。</p>\r\n<p> 当然呢，第二种，也就是本来应该采用的这种方式，很明显的优点在于其模块化实现，对于开发人员来说也是清晰明了。但，私以为，小型任务中，如果没有统一规划好的名称啊，什么的，这样子模块化是不是显得冗余，毕竟还需要看模块是否匹配啊什么的，不知道理解的对不对。</p>\r\n<p><strong>12.5 聊天室页面ChatMain</strong></p>\r\n<p>从页面本身来说，就是head包含jq文件，js文件，css文件；body实现当前页面的效果，也有接口功能的实现；</p>\r\n<p>从布局来说，就是聊天窗口的样子，三个框框搞定（可是尼玛老子不会用css啊！！！！）；</p>\r\n<p> -----晚上不一定还会写，先发了吧-----</p>\n ', '2016-04-28 20:05:03', '2016-04-28 20:13:22', '0', '0', '0', '1', '75');
INSERT INTO `blog` VALUES ('2969', '不就是抽个血吗，至于么-jQuery，Linux完结篇 ', '网络', '\n<p>　　hi</p>\r\n<p>趁着周一去抽血化验，真开心。。。下午报告才出来，不过早上来了就开始各种晕菜，叫错名字，说错话。。。。。至于么。。</p>\r\n<p> 还有在教研室的30天就可以肥家了，凯森凯森。今天不想干活（哪天想干过我就问问），学学jquery吧。</p>\r\n<p><strong>1、jQuery</strong></p>\r\n<p><strong>十、UI型插件</strong></p>\r\n<p><strong>10.1 拖曳插件——draggable</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>拖曳插件draggable的功能是拖动被绑定的元素，当这个jQuery UI插件与元素绑定后，可以通过调用<code class=\"marker\">draggable()</code>方法，实现各种拖曳元素的效果，调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector). draggable({options})</strong></code></p>\r\n<p>options参数为方法调用时的配置对象，根据该对象可以设置各种拖曳效果，如“containment”属性指定拖曳区域，“axis”属性设置拖曳时的坐标方向。</p>\r\n<p> &lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div id=\"x\" class=\"drag\"&gt;沿x轴拖拽&lt;/div&gt;<br>            &lt;div id=\"y\" class=\"drag\"&gt;沿y轴拖拽&lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#x\").draggable({axis:\"x\"});<br>                $(\"#y\").draggable({axis:\"y\"});<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>10.2 放置插件——droppable</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>除使用draggable插件拖曳任意元素外，还可以调用droppable UI插件将拖曳后的任意元素放置在指定区域中，类似购物车效果，调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector).droppable({options})</strong></code></p>\r\n<p>selector参数为接收拖曳元素，options为方法的配置对象，在对象中，drop函数表示当被接收的拖曳元素完全进入接收元素的容器时，触发该函数的调用。</p>\r\n<p> &lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"box\"&gt;<br>                &lt;div class=\"title\"&gt;产品区&lt;/div&gt;<br>                &lt;div class=\"drag\"&gt;&lt;div&gt;苹果&lt;/div&gt;&lt;/div&gt;<br>            &lt;/div&gt;<br>            &lt;div class=\"box\"&gt;<br>                &lt;div class=\"title\"&gt;回收站&lt;/div&gt;<br>                &lt;div class=\"cart\"&gt;&lt;div id=\"tip\"&gt;还没有产品&lt;/div&gt;&lt;/div&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\".drag\").draggable();<br>                $(\".cart\").droppable({<br>                    drop: function () {<br>                                sum--;<br>                        $(\".cart\").removeClass(\"focus\");<br>                        $(\"#tip\").html(\"还没有产品\");<br>                        $(\".title span\").html(sum);   <br>                    }<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>10.3 拖曳排序插件——sortable</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>拖曳排序插件的功能是将序列元素（例如&lt;option&gt;、&lt;li&gt;）按任意位置进行拖曳从而形成一个新的元素序列，实现拖曳排序的功能，它的调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).sortable({options});</strong></code></p>\r\n<p>selector参数为进行拖曳排序的元素，options为调用方法时的配置对象</p>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;我最喜欢的运动&lt;/span&gt;<br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;ul&gt;<br>                    &lt;li&gt;1)足球&lt;/li&gt;<br>                    &lt;li&gt;2)散步&lt;/li&gt;<br>                    &lt;li&gt;3)篮球&lt;/li&gt;<br>                    &lt;li&gt;4)乒乓球&lt;/li&gt;<br>                    &lt;li&gt;5)骑自行车&lt;/li&gt;<br>                &lt;/ul&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"ul\").sortable({<br>                    delay:2,<br>                    opacity:0.4<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>10.4 面板折叠插件——accordion</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>面板折叠插件可以实现页面中指定区域类似“手风琴”的折叠效果，即点击标题时展开内容，再点另一标题时，关闭已展开的内容，调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector).accordion({options});</strong></code></p>\r\n<p>其中，参数selector为整个面板元素，options参数为方法对应的配置对象。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p> &lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div id=\"accordion\"&gt;<br>                &lt;h3&gt;<br>                    &lt;a href=\"#\"&gt;白富美&lt;/a&gt;&lt;/h3&gt;<br>                &lt;p&gt;咱们结婚吧!&lt;/p&gt;<br>                &lt;h3&gt;<br>                    &lt;a href=\"#\"&gt;土豪族&lt;/a&gt;&lt;/h3&gt;<br>                &lt;p&gt;咱们交个朋友吧!&lt;/p&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#accordion\").accordion();<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>10.5 选项卡插件——tabs</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>使用选项卡插件可以将&lt;ul&gt;中的&lt;li&gt;选项定义为选项标题，在标题中，再使用&lt;a&gt;元素的“href”属性设置选项标题对应的内容，它的调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector).tabs({options});</strong></code></p>\r\n<p>selector参数为选项卡整体外围元素，该元素包含选项卡标题与内容，options参数为<code class=\"marker\">tabs()</code>方法的配置对象，通过该对象还能以ajax方式加载选项卡的内容。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div id=\"tabs\"&gt;<br>                &lt;ul&gt;<br>                    &lt;li&gt;&lt;a href=\"#tabs-1\"&gt;最爱吃的水果&lt;/a&gt;&lt;/li&gt;<br>                    &lt;li&gt;&lt;a href=\"#tabs-2\"&gt;最喜欢的运动&lt;/a&gt;&lt;/li&gt;<br>                &lt;/ul&gt;<br>                &lt;div id=\"tabs-1\"&gt;<br>                    &lt;p&gt;橘子&lt;/p&gt;<br>                    &lt;p&gt;香蕉&lt;/p&gt;<br>                    &lt;p&gt;葡萄&lt;/p&gt;<br>                    &lt;p&gt;苹果&lt;/p&gt;<br>                    &lt;p&gt;西瓜&lt;/p&gt;<br>                &lt;/div&gt;<br>                &lt;div id=\"tabs-2\"&gt;<br>                    &lt;p&gt;足球&lt;/p&gt;<br>                    &lt;p&gt;散步&lt;/p&gt;<br>                    &lt;p&gt;篮球&lt;/p&gt;<br>                    &lt;p&gt;乒乓球&lt;/p&gt;<br>                    &lt;p&gt;骑自行车&lt;/p&gt;<br>                &lt;/div&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>               $(\"#tabs\").tabs ({<br>                    //设置各选项卡在切换时的动画效果<br>                    fx: { opacity: \"toggle\", height: \"toggle\" },<br>                    event: \"mousemove\" //通过移动鼠标事件切换选项卡<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>10.6 对话框插件——dialog</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>对话框插件可以用动画的效果弹出多种类型的对话框，实现JavaScript代码中<code class=\"marker\">alert()</code>和<code class=\"marker\">confirm()</code>函数的功能，它的调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).dialog({options});</strong></code></p>\r\n<p>selector参数为显示弹出对话框的元素，通常为&lt;div&gt;，options参数为方法的配置对象，在对象中可以设置对话框类型、“确定”、“取消”按钮执行的代码等。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p> &lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;span id=\"spnName\" class=\"fl\"&gt;张三&lt;/span&gt;<br>                &lt;input id=\"btnDelete\" type=\"button\" value=\"删除\"  class=\"fr\"/&gt;<br>            &lt;/div&gt;<br>            &lt;div id=\'dialog-modal\'&gt;&lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#btnDelete\").bind(\"click\", function () { //询问按钮事件<br>                    if ($(\"#spnName\").html() != null) { //如果对象不为空<br>                        sys_Confirm(\"您真的要删除该条记录吗？\");<br>                        return false;<br>                    }<br>                });<br>            });<br>            function sys_Confirm(content) { //弹出询问信息窗口<br>                $(\"#btnDelete\").dialog({<br>                    height: 140,<br>                    modal: true,<br>                    title: \'系统提示\',<br>                    hide: \'slide\',<br>                    buttons: {<br>                        \'确定\': function () {<br>                            $(\"#spnName\").remove();<br>                            $(this).dialog(\"close\");<br>                        },<br>                        \'取消\': function () {<br>                            $(this).dialog(\"close\");<br>                        }<br>                    },<br>                    open: function (event, ui) {<br>                        $(this).html(\"\");<br>                        $(this).append(\"&lt;p&gt;\" + content + \"&lt;/p&gt;\");<br>                    }<br>                });<br>            }<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>10.7 菜单工具插件——menu</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>菜单工具插件可以通过&lt;ul&gt;创建多级内联或弹出式菜单，支持通过键盘方向键控制菜单滑动，允许为菜单的各个选项添加图标，调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector).menu({options});</strong></code></p>\r\n<p>selector参数为菜单列表中最外层&lt;ul&gt;元素，options为<code class=\"marker\">menu()</code>方法的配置对象。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p> &lt;body&gt;<br>        &lt;ul id=\"menu\"&gt;<br>            &lt;li&gt;&lt;a href=\"#\"&gt;小明一中&lt;/a&gt;<br>                &lt;ul&gt;<br>                    &lt;li&gt;&lt;a href=\"#\"&gt;高中部&lt;/a&gt;<br>                        &lt;ul&gt;<br>                            &lt;li&gt;&lt;a href=\"#\"&gt;高一(1)班&lt;/a&gt;&lt;/li&gt;<br>                            &lt;li&gt;&lt;a href=\"#\"&gt;高一(2)班&lt;/a&gt;&lt;/li&gt;<br>                            &lt;li&gt;&lt;a href=\"#\"&gt;高一(3)班&lt;/a&gt;<br>                                &lt;ul&gt;<br>                                    &lt;li&gt;&lt;a href=\"#\"&gt;小胡&lt;/a&gt;&lt;/li&gt;<br>                                    &lt;li&gt;&lt;a href=\"#\"&gt;小李&lt;/a&gt;&lt;/li&gt;<br>                                    &lt;li&gt;&lt;a href=\"#\"&gt;小陈&lt;/a&gt;&lt;/li&gt;<br>                                &lt;/ul&gt;<br>                            &lt;/li&gt;<br>                        &lt;/ul&gt;<br>                    &lt;/li&gt;<br>                    &lt;li&gt;&lt;a href=\"#\"&gt;初中部&lt;/a&gt;<br>                        &lt;ul&gt;<br>                            &lt;li&gt;&lt;a href=\"#\"&gt;初一(1)班&lt;/a&gt;&lt;/li&gt;<br>                            &lt;li&gt;&lt;a href=\"#\"&gt;初一(2)班&lt;/a&gt;&lt;/li&gt;<br>                            &lt;li&gt;&lt;a href=\"#\"&gt;初一(3)班&lt;/a&gt;&lt;/li&gt;<br>                        &lt;/ul&gt;<br>                    &lt;/li&gt;<br>                    &lt;li&gt;&lt;a href=\"#\"&gt;教研部&lt;/a&gt;&lt;/li&gt;<br>                &lt;/ul&gt;<br>            &lt;/li&gt;<br>            &lt;li class=\"ui-state-disabled\"&gt;&lt;a href=\"#\"&gt;大明二中&lt;/a&gt;&lt;/li&gt;<br>        &lt;/ul&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#menu\").menu();<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>10.8 微调按钮插件——spinner</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>微调按钮插件不仅能在文本框中直接输入数值，还可以通过点击输入框右侧的上下按钮修改输入框的值，还支持键盘的上下方向键改变输入值，调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector).spinner({options});</strong></code></p>\r\n<p>selector参数为文本输入框元素，可选项options参数为<code class=\"marker\">spinner()</code>方法的配置对象，在该对象中，可以设置输入的最大、最小值，获取改变值和设置对应事件。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                选择颜色值&lt;/div&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;span id=\"spnColor\" class=\"input fl\"&gt;<br>                    &lt;input /&gt;<br>                &lt;/span&gt;<br>                &lt;span id=\"spnPrev\" class=\"prev fr\"&gt;&lt;/span&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                //定义变量<br>                var intR = 0, intG = 0, intB = 0, strColor;<br>                $(\"input\").spinner({<br>                    //初始化插件<br>                    max: 10,<br>                    min: 0,<br>                    //设置微调按钮递增/递减事件<br>                    spin: function (event, ui) {<br>                        if (ui.value == 8)<br>                            spnPrev.style.backgroundColor = \"red\";<br>                        else<br>                            spnPrev.style.backgroundColor = \"green\";<br>                    },<br>                    //设置微调按钮值改变事件<br>                    change: function (event, ui) {<br>                        var intTmp = $(this).spinner(\"value\");<br>                        if (intTmp &lt; 0) $(this).spinner(\"value\", 0);<br>                        if (intTmp &gt; 10) $(this).spinner(\"value\", 10);<br>                        if (intTmp == 8)<br>                            spnPrev.style.backgroundColor = \"red\";<br>                        else<br>                            spnPrev.style.backgroundColor = \"green\";<br>                    }<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>10.9 工具提示插件——tooltip</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>工具提示插件可以定制元素的提示外观，提示内容支持变量、Ajax远程获取，还可以自定义提示内容显示的位置，它的调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector).tooltip({options});</strong></code></p>\r\n<p>其中selector为需要显示提示信息的元素，可选项参数options为<code class=\"marker\">tooltip()</code>方法的配置对象，在该对象中，可以设置提示信息的弹出、隐藏时的效果和所在位置。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                工具提示插件&lt;/div&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;div&gt;<br>                    &lt;label for=\"name\"&gt;<br>                        姓名&lt;/label&gt;<br>                    &lt;input id=\"name\" name=\"name\" title=\"我是土豪，欢迎与我做朋友\" /&gt;<br>                &lt;/div&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#name\").tooltip({<br>                    show: {<br>                        effect: \"slideDown\",<br>                        delay: 350<br>                    },<br>                    hide: {<br>                        effect: \"explode\",<br>                        delay: 350<br>                    },<br>                    position: {<br>                        my: \"left top\",<br>                        at: \"left bottom\"<br>                    }<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>十一、工具类函数</strong></p>\r\n<p><strong>11.1 获取浏览器的名称与版本信息</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>在jQuery中，通过<code class=\"marker\">$.browser</code>对象可以获取浏览器的名称和版本信息，如<code class=\"marker\">$.browser.chrome</code>为true，表示当前为Chrome浏览器，<code class=\"marker\">$.browser.mozilla</code>为true，表示当前为火狐浏览器，还可以通过<code class=\"marker\">$.browser.version</code>方式获取浏览器版本信息。</p>\r\n<p> &lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;获取浏览器名称和版本号&lt;/span&gt; <br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;&lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                var strTmp = \"您的浏览器名称是：\";<br>                if ($.browser.chrome) { //谷歌浏览器<br>                    strTmp += \"Chrome\";<br>                }<br>                if ($.browser.mozilla) { //火狐相关浏览器<br>                    strTmp += \"Mozilla FireFox\";<br>                }<br>                strTmp += \"&lt;br /&gt;&lt;br /&gt; 版本号是：\" //获取版本号<br>                       +$.browser.version;<br>                $(\".content\").html(strTmp);<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>很简单的一点，但是，要注意，jQuery的方法，一般是$()，函数常常是$.(?)</p>\r\n<p><strong>11.2 检测浏览器是否属于W3C盒子模型</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>浏览器的盒子模型分为两类，一类为标准的w3c盒子模型，另一类为IE盒子模型，两者区别为在Width和Height这两个属性值中是否包含padding和border的值，w3c盒子模型不包含，IE盒子模型则包含，而在jQuery 中，可以通过<code class=\"marker\">$.support.boxModel</code>对象返回的值，检测浏览器是否属于标准的w3c盒子模型。</p>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;检测是否是盒子模型&lt;/span&gt; <br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;&lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                var strTmp = \"您打开的页面是：\";<br>                if ($.support.boxModel) { //是W3C盒子模型<br>                    strTmp += \"W3C盒子模型\";<br>                }<br>                else { //是IE盒子模型<br>                    strTmp += \"IE盒子模型\";<br>                }<br>                $(\".content\").html(strTmp);<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>11.3 检测对象是否为空</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>在jQuery中，可以调用名为<code class=\"marker\">$.isEmptyObject</code>的工具函数，检测一个对象的内容是否为空，如果为空，则该函数返回true，否则，返回false值，调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$.isEmptyObject(obj);</strong></code></p>\r\n<p>其中，参数obj表示需要检测的对象名称。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;检测对象是否为空&lt;/span&gt; <br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;&lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                var obj = { \"姓名\": \"土豪一族\" };<br>                var strTmp = \"您定义了一个：\";<br>                if ($.isEmptyObject(obj)) { //检测是否为空<br>                    strTmp += \"空对象\";<br>                }<br>                else {<br>                    strTmp += \"非空对象\";<br>                }<br>                $(\".content\").html(strTmp);<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>11.4 检测对象是否为原始对象</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>调用名为<code class=\"marker\">$.isPlainObject</code>的工具函数，能检测对象是否为通过<code class=\"marker\">{}</code>或<code class=\"marker\">new Object()</code>关键字创建的原始对象，如果是，返回true，否则，返回false值，调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$.isPlainObject (obj);</strong></code></p>\r\n<p>其中，参数obj表示需要检测的对象名称。</p>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;检测对象是否为原始对象&lt;/span&gt; <br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;&lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                var obj = \"null\";<br>                var strTmp = \"您定义了一个：\";<br>                if ($.isPlainObject(obj)) { //检测是否为原始对象<br>                    strTmp += \"原始对象\";<br>                }<br>                else {<br>                    strTmp += \"非原始对象\";<br>                }<br>                $(\".content\").html(strTmp);<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>11.5 检测两个节点的包含关系</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>调用名为<code class=\"marker\">$.contains</code>的工具函数，能检测在一个DOM节点中是否包含另外一个DOM节点，如果包含，返回true，否则，返回false值，调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$.contains (container, contained);</strong></code></p>\r\n<p>参数container表示一个DOM对象节点元素，用于包含其他节点的容器，contained是另一个DOM对象节点元素，用于被其他容器所包含。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;检测两个节点的包含关系&lt;/span&gt; <br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;&lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                var node_a = document.body.firstChild;<br>                var node_b = document.body;<br>                var strTmp = \"对象node_a\";<br>                if ($.contains(node_a,node_b)) { //检测是否包含节点<br>                    strTmp += \" 包含 \";<br>                }<br>                else {<br>                    strTmp += \" 不包含 \";<br>                }<br>                strTmp += \"对象node_b\";<br>                $(\".content\").html(strTmp);<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>11.6 字符串操作函数</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>调用名为<code class=\"marker\">$.trim</code>的工具函数，能删除字符串中左右两边的空格符，但该函数不能删除字符串中间的空格，调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$.trim (str);</strong></code></p>\r\n<p>参数str表示需要删除左右两边空格符的字符串。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;字符串操作函数&lt;/span&gt; <br>                &lt;span class=\"fr\"&gt;<br>                    &lt;input id=\"btnShow\" name=\"btnShow\" type=\"button\" value=\"计算\" /&gt;<br>                &lt;/span&gt;<br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;input id=\"txtName\" name=\"txtName\" type=\"text\" /&gt;<br>                &lt;div class=\"tip\"&gt;&lt;/div&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#btnShow\").bind(\"click\", function () {<br>                    $(\".tip\").html(\"\");<br>                    var strTmp = \"内容：\";<br>                    var strOld = $(\"#txtName\").val();<br>                    var strNew =$.trim(strOld);<br>                    strTmp += strOld;<br>                    strTmp += \"&lt;br/&gt;&lt;br&gt;除掉空格符前的长度：\"<br>                    strTmp += strOld.length;<br>                    strTmp += \"&lt;br/&gt;&lt;br&gt;除掉空格符后的长度：\"<br>                    strTmp += strNew.length;<br>                    $(\".tip\").show().append(strTmp);<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>11.7 URL操作函数</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>调用名为<code class=\"marker\">$. param</code>的工具函数，能使对象或数组按照<code class=\"marker\">key/value</code>格式进行序列化编码，该编码后的值常用于向服务端发送URL请求，调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$.</strong> <strong>param (obj);</strong></code></p>\r\n<p>参数obj表示需要进行序列化的对象，该对象也可以是一个数组，整个函数返回一个经过序列化编码后的字符串。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;URL操作函数&lt;/span&gt; <br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;div class=\"tip\"&gt;&lt;/div&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                //基本信息对象<br>                var objInfo = new Object();<br>                objInfo.name = \"白富美\";<br>                objInfo.sex = 1;<br>                //序列化对象<br>                var objNewInfo =$.param(objInfo.name);<br>                //显示序列化后的对象<br>                var strTmp = \"&lt;b&gt;对象 白富美 序列化后&lt;/b&gt;：&lt;br/&gt;&lt;br/&gt;\";<br>                strTmp += objNewInfo;<br>                //显示在页面中<br>                $(\".tip\").show().append(strTmp);<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>11.8 使用$.extend()扩展工具函数</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>调用名为<code class=\"marker\">$. extend</code>的工具函数，可以对原有的工具函数进行扩展，自定义类级别的jQuery插件，调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$.</strong> <strong>extend ({options});</strong></code></p>\r\n<p>参数options表示自定义插件的函数内容。</p>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;自定义工具函数求两值中最小值&lt;/span&gt; <br>                &lt;span class=\"fr\"&gt;<br>                    &lt;input id=\"btnShow\" name=\"btnShow\" type=\"button\" value=\"计算\" /&gt;<br>                &lt;/span&gt;<br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;div class=\"tip\"&gt;&lt;/div&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            /*------------------------------------------------------------/<br>            功能：返回两个数中最小值<br>            参数：数字p1,p2<br>            返回：最小值的一个数<br>            示例：$.MinNum(1,2);<br>            /------------------------------------------------------------*/<br>            (function ($) {<br>                $.extend({<br>                    \"MinNum\": function (p1, p2) {<br>                        return (p1 &gt; p2) ? p2 : p1;<br>                    }<br>                });<br>            })(jQuery);<br>            $(function () {<br>                $(\"#btnShow\").bind(\"click\", function () {<br>                    $(\".tip\").html(\"\");<br>                    var strTmp = \"17与18中最小的数是：\";<br>                    strTmp +=$.MinNum(17, 18);<br>                    //显示在页面中<br>                    $(\".tip\").show().append(strTmp);<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>11.9 使用$.extend()扩展Object对象</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>除使用<code class=\"marker\">$.extend</code>扩展工具函数外，还可以扩展原有的<code class=\"marker\">Object</code>对象，在扩展对象时，两个对象将进行合并，当存在相同属性名时，后者将覆盖前者，调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$.</strong> <strong>extend (obj1,obj2,…objN);</strong></code></p>\r\n<p>参数obj1至objN表示需要合并的各个原有对象。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;合并原有对象&lt;/span&gt; <br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;div class=\"tip\"&gt;&lt;/div&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                var objInfo = { name: \"\" };<br>                var objMess = { name: \"白富美,\", title: \"欢迎与我联系！\" };<br>                var objNewInfo =$.extend(objInfo,objMess);<br>                var strTmp = \"&lt;b&gt;对象 白富美 合并后&lt;/b&gt;：&lt;br/&gt;&lt;br/&gt;\";<br>                strTmp += objNewInfo.name + objInfo.title;<br>                //显示在页面中<br>                $(\".tip\").show().append(strTmp);<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p> </p>\r\n<p><strong> 十二、在线聊天室实践</strong></p>\r\n<p><strong>12.1 基本功能介绍</strong></p>\r\n<p>登陆后才能进入（基本信息的显示）；</p>\r\n<p>动态显示交流后的内容；</p>\r\n<p>文字和表情的沟通实现（表情也是字符代号编码）</p>\r\n<p>技术重点：ajax的无刷新技术展示数据</p>\r\n<p><strong>12.2 实现效果</strong></p>\r\n<p>利用jq中的ajax函数实现登陆，登陆时，显示登陆中，正确或失败，有相应的动作；</p>\r\n<p>聊天室就是聊天内容区域，输入区域，人员显示区域</p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p>---------------------------------------------------</p>\r\n<p>2、Linux完结篇</p>\r\n<p><strong>九、shell基础</strong></p>\r\n<p><strong>9.1shell概述</strong></p>\r\n<p>--含义</p>\r\n<p>就是其英文单词的意思——壳</p>\r\n<p>是一个命令行解释器！——翻译依赖的是ASCII码，依赖它把命令翻译为二进制的，让内核能够解析命令。</p>\r\n<p>也就是：用户写命令《--》shell解释翻译《--》内核</p>\r\n<p>换言之，<strong>就是我们操作的界面。</strong></p>\r\n<p>但是，在linux特殊的在于，<strong>shell还是一个功能强大的编程语言，易编写，易调试，灵活性较强。</strong></p>\r\n<p>是解释执行的脚本语言，在shell中可以直接调用linux命令。</p>\r\n<p>--分类</p>\r\n<p>当前一般两类：Bourne shell（linux用的就是其下的Bash）和C shell（Unix中的，与c语言相似）</p>\r\n<p>绝大多数的命令是通用的（包括linux和unix），根本原因在于都用shell，版本有差别而已。</p>\r\n<p>[root@andy ~]# echo $SHELL<br>/bin/bash</p>\r\n<p>这个命令可以看到当前的shell</p>\r\n<p>--linux支持的</p>\r\n<p>vi /etc/shells</p>\r\n<p>打开一个文件</p>\r\n<p>/bin/sh<br>/bin/bash<br>/sbin/nologin<br>/bin/dash<br>/bin/tcsh<br>/bin/csh</p>\r\n<p>这些都支持</p>\r\n<p><strong>9.2 脚本执行方式</strong></p>\r\n<p><strong>--echo命令</strong></p>\r\n<p>就是打印嘛。</p>\r\n<p>但和php中不太一样的是，要输出换行的\\n时候需要这样</p>\r\n<p>[root@andy ~]# <strong>echo -e \"aldkjf\\nadsf\"</strong><br>aldkjf<br>adsf</p>\r\n<p>需要加选项-e。</p>\r\n<p>linux本机中是无法支持中文字符，远程工具是可以的</p>\r\n<p>[root@andy ~]# <strong>echo -e \"\\e[1;31m嫁人就要嫁凤姐\\e[0m\"</strong><br>嫁人就要嫁凤姐</p>\r\n<p>上个例子：<strong>\\e[1;31m是开启颜色显示，\\e[0m结束</strong></p>\r\n<p>31是红色，一直到40好像是，自己试试吧</p>\r\n<p><strong>--脚本</strong></p>\r\n<p>vi hello.sh</p>\r\n<p><strong>#!/bin/bash</strong><br>#The first program</p>\r\n<p>echo -e \"\\e[1;34m 天下掉下个林妹妹 \\e[0m\"</p>\r\n<p>要先写入bash的那句话，尽量避免报错。</p>\r\n<p>然后#后面的一般都是注释</p>\r\n<p>shell的好处就是可以直接输出</p>\r\n<p>但，暂时还不能运行——</p>\r\n<p><strong>--执行</strong></p>\r\n<p><strong>赋予权限，直接运行——chmod 755 hello.sh, ./hello.sh</strong></p>\r\n<p><strong>或者，bash命令，bash hello.sh</strong></p>\r\n<p>应该说，最好还是用赋予权限然后（绝对路径）运行</p>\r\n<p><strong>9.3bash的基本功能</strong></p>\r\n<p><strong>9.3.1 命令别名与快捷键</strong></p>\r\n<p><strong>--</strong></p>\r\n<p><strong>命令别名==人的小名/外号</strong></p>\r\n<p>[root@andy ~]# <strong>alias</strong><br>alias cp=\'cp -i\'<br>alias l.=\'ls -d .* --color=auto\'<br>alias ll=\'ls -l --color=auto\'<br>alias ls=\'ls --color=auto\'<br>alias mv=\'mv -i\'<br>alias rm=\'rm -i\'<br>alias which=\'alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde\'</p>\r\n<p>alias命令，可以查看别名。所以，我们设定别名也是上面的格式：alias cp=\'cp -i\'</p>\r\n<p><strong>alias 别名=‘原命令’</strong></p>\r\n<p><strong>重启的话会失效，要想一直有效，要写入对应的环境变量配置文件</strong></p>\r\n<p><strong>vi ~/.bashrc</strong></p>\r\n<p>[root@andy ~]# vi /root/.bashrc</p>\r\n<p># .bashrc</p>\r\n<p># User specific aliases and functions</p>\r\n<p>alias rm=\'rm -i\'<br>alias cp=\'cp -i\'<br>alias mv=\'mv -i\'</p>\r\n<p># Source global definitions<br>if [ -f /etc/bashrc ]; then<br>        . /etc/bashrc<br>fi<br>~</p>\r\n<p>写入alias vi=\'vim\'即可</p>\r\n<p><strong>unalias 别名，就是删除别名。同样，命令行的是临时删除</strong></p>\r\n<p>另外，命令的执行顺序，<strong>别名是优先级别第二高的</strong> </p>\r\n<p>路径+命令》别名》bash命令》目录中查到的第一条命令</p>\r\n<p>即，别名比原名级别高，或者，避免重叠/重复，除非你的目的就是这个</p>\r\n<p><strong>--快捷键</strong></p>\r\n<p><strong>ctrl+c 强制终止</strong></p>\r\n<p><strong>     +l 清屏</strong></p>\r\n<p>     +a 移到命令行首（home）</p>\r\n<p>     +u 删除命令到行首</p>\r\n<p>     +e 跳到行尾（end）</p>\r\n<p>     +z 把命令放入后台（没有终止命令，少用）</p>\r\n<p>     +r 在历史命令中搜索</p>\r\n<p><strong>9.3.2 历史命令</strong></p>\r\n<p><strong>上下箭头调用就好。</strong></p>\r\n<p><strong>[root@andy ~]# history</strong></p>\r\n<p>该命令会显示所有你/当前用户输入过的所有历史命令。所有的历史命令是保存在.bash_history文件中的</p>\r\n<p>history -c 清空历史命令。一般来说，最好不要清空历史命令——查错，以及防贼</p>\r\n<p>history !n 重复执行第n条命令</p>\r\n<p>history !! 重复执行上一条命令</p>\r\n<p><strong>history !字符串 调用最后一个以该字符串开头的命令（常用）</strong></p>\r\n<p><strong>9.3.3 输出重定向</strong></p>\r\n<p><strong>--标准输入输出</strong></p>\r\n<p><strong>键盘</strong>——/dev/stdin <strong>文件描述符为0</strong></p>\r\n<p><strong>显示器</strong>——/dev/sdtout <strong>文件描述符为1</strong></p>\r\n<p><strong>显示器</strong>——/dev/sdterr <strong>文件描述符为2，类型是标准错误输出</strong></p>\r\n<p>背就背文件描述符就好了</p>\r\n<p><strong>--输出重定向</strong></p>\r\n<p><strong>就是把原本应该标准输出的方向重新定向到文件（拐个弯）。</strong></p>\r\n<p>用处就是自动的记录等，<strong>有实际的用处，也常用。</strong></p>\r\n<p>比如</p>\r\n<p><strong>[root@andy ~]# ifconfig &gt; test.log</strong><br>[root@andy ~]# cat test.log<br>eth0      Link encap:Ethernet  HWaddr 00:0C:29:61:EB:6B  <br>          inet addr:192.168.23.50  Bcast:192.168.23.255  Mask:255.255.255.0<br>          inet6 addr: fe80::20c:29ff:fe61:eb6b/64 Scope:Link<br>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1<br>          RX packets:11069 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:3521 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:1000 <br>          RX bytes:798686 (779.9 KiB)  TX bytes:447837 (437.3 KiB)<br>          Interrupt:19 Base address:0x2000 </p>\r\n<p>lo        Link encap:Local Loopback  <br>          inet addr:127.0.0.1  Mask:255.0.0.0<br>          inet6 addr: ::1/128 Scope:Host<br>          UP LOOPBACK RUNNING  MTU:65536  Metric:1<br>          RX packets:20 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:20 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:0 <br>          RX bytes:1532 (1.4 KiB)  TX bytes:1532 (1.4 KiB)</p>\r\n<p>命令的执行，可能会是定时用户来做的。</p>\r\n<p>[root@andy ~]# ls &gt; test.log<br>[root@andy ~]# cat test.log<br>anaconda-ks.cfg<br>cangls<br>hello.sh<br>install.log<br>install.log.syslog<br>japan<br>test.log</p>\r\n<p><strong>单个&gt;，会覆盖结果；双&gt;&gt;是追加</strong></p>\r\n<p><strong>[root@andy ~]# ifconfig &gt;&gt; test.log</strong><br>[root@andy ~]# cat test.log<br>anaconda-ks.cfg<br>cangls<br>hello.sh<br>install.log<br>install.log.syslog<br>japan<br>test.log<br>eth0      Link encap:Ethernet  HWaddr 00:0C:29:61:EB:6B  <br>          inet addr:192.168.23.50  Bcast:192.168.23.255  Mask:255.255.255.0<br>          inet6 addr: fe80::20c:29ff:fe61:eb6b/64 Scope:Link<br>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1<br>          RX packets:11238 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:3586 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:1000 <br>          RX bytes:811445 (792.4 KiB)  TX bytes:455539 (444.8 KiB)<br>          Interrupt:19 Base address:0x2000 </p>\r\n<p>lo        Link encap:Local Loopback  <br>          inet addr:127.0.0.1  Mask:255.0.0.0<br>          inet6 addr: ::1/128 Scope:Host<br>          UP LOOPBACK RUNNING  MTU:65536  Metric:1<br>          RX packets:20 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:20 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:0 <br>          RX bytes:1532 (1.4 KiB)  TX bytes:1532 (1.4 KiB)</p>\r\n<p><strong>如果希望同时保存报错信息（犯2信息）</strong></p>\r\n<p><strong>dateads 2&gt;&gt;test.log</strong></p>\r\n<p><strong>另外注意，追加是有空格，错误输出是没有空格的2&gt;&gt;test.log</strong></p>\r\n<p> </p>\r\n<p>但是，最有用的是正确和错误都要</p>\r\n<p><strong>命令 &gt;&gt; 文件 2&gt;&amp;1   </strong></p>\r\n<p><strong>命令 &amp;&gt;&gt; 文件  ——写到同一个文件</strong></p>\r\n<p>[root@andy ~]# <br>[root@andy ~]# ifconfig &gt;&gt; test2.log 2&gt;&amp;1<br>[root@andy ~]# cat test2.log<br>eth0      Link encap:Ethernet  HWaddr 00:0C:29:61:EB:6B  <br>          inet addr:192.168.23.50  Bcast:192.168.23.255  Mask:255.255.255.0<br>          inet6 addr: fe80::20c:29ff:fe61:eb6b/64 Scope:Link<br>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1<br>          RX packets:11444 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:3638 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:1000 <br>          RX bytes:825629 (806.2 KiB)  TX bytes:461351 (450.5 KiB)<br>          Interrupt:19 Base address:0x2000 </p>\r\n<p>lo        Link encap:Local Loopback  <br>          inet addr:127.0.0.1  Mask:255.0.0.0<br>          inet6 addr: ::1/128 Scope:Host<br>          UP LOOPBACK RUNNING  MTU:65536  Metric:1<br>          RX packets:20 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:20 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:0 <br>          RX bytes:1532 (1.4 KiB)  TX bytes:1532 (1.4 KiB)</p>\r\n<p>[root@andy ~]# ifconfig2 &gt;&gt; test2.log 2&gt;&amp;1<br>[root@andy ~]# cat test2.log<br>eth0      Link encap:Ethernet  HWaddr 00:0C:29:61:EB:6B  <br>          inet addr:192.168.23.50  Bcast:192.168.23.255  Mask:255.255.255.0<br>          inet6 addr: fe80::20c:29ff:fe61:eb6b/64 Scope:Link<br>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1<br>          RX packets:11444 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:3638 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:1000 <br>          RX bytes:825629 (806.2 KiB)  TX bytes:461351 (450.5 KiB)<br>          Interrupt:19 Base address:0x2000 </p>\r\n<p>lo        Link encap:Local Loopback  <br>          inet addr:127.0.0.1  Mask:255.0.0.0<br>          inet6 addr: ::1/128 Scope:Host<br>          UP LOOPBACK RUNNING  MTU:65536  Metric:1<br>          RX packets:20 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:20 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:0 <br>          RX bytes:1532 (1.4 KiB)  TX bytes:1532 (1.4 KiB)</p>\r\n<p>-bash: ifconfig2: command not found</p>\r\n<p><strong> 命令&gt;&gt;文件1 2&gt;&gt;文件2  ——分开保存</strong></p>\r\n<p> 这三个操作是这一块需要记下来的！</p>\r\n<p><strong>--输入重定向</strong></p>\r\n<p> wc命令</p>\r\n<p>[root@andy ~]# wc<br>sadklfjkla<br>asdlkfjl<br>asdf^[[3~asdlfj<br>asdf<br>      4       4      40</p>\r\n<p>统计了你输入的字符长度。</p>\r\n<p> 很少用，大概了解下</p>\r\n<p>命令&lt;文件</p>\r\n<p>命令&lt;&lt;文件</p>\r\n<p><strong>9.3.4 管道符</strong></p>\r\n<p><strong> --多命令顺序执行</strong></p>\r\n<p><strong>; 命令1;命令2 多个命令无逻辑关系按顺序执行</strong></p>\r\n<p><strong>&amp;&amp; 逻辑与，其他一样——1成功，2才执行</strong></p>\r\n<p><strong>||   或——1或2只执行一个</strong></p>\r\n<p>[root@andy ~]# ls ; ifconfig<br>anaconda-ks.cfg  cangls  hello.sh  install.log  install.log.syslog  japan  test2.log  test3.log  test.log<br>eth0      Link encap:Ethernet  HWaddr 00:0C:29:61:EB:6B  <br>          inet addr:192.168.23.50  Bcast:192.168.23.255  Mask:255.255.255.0<br>          inet6 addr: fe80::20c:29ff:fe61:eb6b/64 Scope:Link<br>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1<br>          RX packets:12241 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:3901 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:1000 <br>          RX bytes:884175 (863.4 KiB)  TX bytes:489889 (478.4 KiB)<br>          Interrupt:19 Base address:0x2000 </p>\r\n<p>lo        Link encap:Local Loopback  <br>          inet addr:127.0.0.1  Mask:255.0.0.0<br>          inet6 addr: ::1/128 Scope:Host<br>          UP LOOPBACK RUNNING  MTU:65536  Metric:1<br>          RX packets:20 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:20 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:0 <br>          RX bytes:1532 (1.4 KiB)  TX bytes:1532 (1.4 KiB)</p>\r\n<p>[root@andy ~]# ls &amp;&amp; ifconfig<br>anaconda-ks.cfg  cangls  hello.sh  install.log  install.log.syslog  japan  test2.log  test3.log  test.log<br>eth0      Link encap:Ethernet  HWaddr 00:0C:29:61:EB:6B  <br>          inet addr:192.168.23.50  Bcast:192.168.23.255  Mask:255.255.255.0<br>          inet6 addr: fe80::20c:29ff:fe61:eb6b/64 Scope:Link<br>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1<br>          RX packets:12289 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:3926 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:1000 <br>          RX bytes:887929 (867.1 KiB)  TX bytes:493627 (482.0 KiB)<br>          Interrupt:19 Base address:0x2000 </p>\r\n<p>lo        Link encap:Local Loopback  <br>          inet addr:127.0.0.1  Mask:255.0.0.0<br>          inet6 addr: ::1/128 Scope:Host<br>          UP LOOPBACK RUNNING  MTU:65536  Metric:1<br>          RX packets:20 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:20 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:0 <br>          RX bytes:1532 (1.4 KiB)  TX bytes:1532 (1.4 KiB)</p>\r\n<p>[root@andy ~]# ls || config<br>anaconda-ks.cfg  cangls  hello.sh  install.log  install.log.syslog  japan  test2.log  test3.log  test.log</p>\r\n<p>当然，;可以顺序执行很多命令</p>\r\n<p>[root@andy ~]# ls ; ifconfig ; cd ;history</p>\r\n<p>再看第二个</p>\r\n<p>[root@andy ~]# ls &amp;&amp; echo \"yes\"<br>anaconda-ks.cfg  cangls  hello.sh  install.log  install.log.syslog  japan  test2.log  test3.log  test.log<br>yes</p>\r\n<p>适用于具有（简单）逻辑关系的情况，比如LAMP安装</p>\r\n<p><strong>简单的实现判断命令是否正确</strong></p>\r\n<p><strong>[root@andy ~]# ls &amp;&amp; echo yes || echo</strong> no<br>anaconda-ks.cfg  cangls  hello.sh  install.log  install.log.syslog  japan  test2.log  test3.log  test.log<br>yes</p>\r\n<p><strong>--管道符</strong></p>\r\n<p><strong>|</strong></p>\r\n<p>也是多命令顺序执行。<strong>区别在于，命令一的正确输出作为命令2的操作对象</strong></p>\r\n<p>[root@andy ~]# ls -l /etc | more</p>\r\n<p>所以，相应来说，管道符的命令要更加严格一点</p>\r\n<p>[root@andy ~]# netstat -an | grep ESTABLISHED | wc -l<br>1</p>\r\n<p>这个是以后常用的服务器的命令</p>\r\n<p><strong>9.3.5 通配符</strong></p>\r\n<p>--</p>\r\n<p>可以匹配其他字符的符号</p>\r\n<p><strong>? * [] [a-z] [^0-9]</strong></p>\r\n<p>真的就类似正则表达式中的东西。</p>\r\n<p>用法</p>\r\n<p><strong>[root@andy ~]# ls ja*</strong><br><strong>anaconda-ks.cfg  cangls  juls</strong><br><strong>[root@andy ~]# ls japan</strong><br><strong>anaconda-ks.cfg  cangls  juls</strong></p>\r\n<p><strong>主要用来匹配文件名或者目录的东西；要匹配文件中的内容，就真的用正则表达式了</strong></p>\r\n<p>--特殊</p>\r\n<p>$变量，取变量的值</p>\r\n<p>‘’ 单引号中所有的特殊符号（$`反引号）都没有意义；“”，特殊字符中的\\ ` $有含义</p>\r\n<p>$()，用来引用系统命令，和反引号一样，但推荐使用这个</p>\r\n<p>[root@andy ~]# aa=$(ls)<br>[root@andy ~]# $aa<br>-bash: anaconda-ks.cfg: command not found<br>[root@andy ~]# echo $aa<br>anaconda-ks.cfg cangls hello.sh install.log install.log.syslog japan test2.log test3.log test.log<br>[root@andy ~]# echo \'$aa\'<br>$aa<br>[root@andy ~]# echo \"$aa\"<br>anaconda-ks.cfg<br>cangls<br>hello.sh<br>install.log<br>install.log.syslog<br>japan<br>test2.log<br>test3.log<br>test.log<br><br></p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\n ', '2016-04-28 20:05:03', '2016-04-28 20:11:54', '0', '0', '0', '1', '75');
INSERT INTO `blog` VALUES ('2970', '以后上午就只能这样了么-jQuery ', '网络', '\n<p>　　hi</p>\r\n<p>昨天睡得不错</p>\r\n<p>为什么早上还是看不进论文，宁愿做这个，也不愿认真看论文。感觉上还是下午看论文感觉要好的多。不过最近有三十多篇要看哇。。。管球。。。</p>\r\n<p>1、jQuery</p>\r\n<p>-----jQuery常用插件-----</p>\r\n<p>----表单插件——form</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>通过表单form插件，调用<code class=\"marker\">ajaxForm()</code>方法，实现ajax方式向服务器提交表单数据，并通过方法中的options对象获取服务器返回数据，调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(form). ajaxForm ({options})</strong></code></p>\r\n<p>其中form参数表示表单元素名称；options是一个配置对象，用于在发送ajax请求过程，设置发送时的数据和参数。</p>\r\n<p>&lt;body&gt;<br>        &lt;form id=\"frmV\" method=\"post\" action=\"#\"&gt;<br>            &lt;div id=\"divtest\"&gt;<br>                &lt;div class=\"title\"&gt;<br>                    &lt;span class=\"fl\"&gt;个人信息页&lt;/span&gt; <br>                    &lt;span class=\"fr\"&gt;<br>                        &lt;input id=\"btnSubmit\" type=\"submit\" value=\"提交\" /&gt;<br>                    &lt;/span&gt;<br>                &lt;/div&gt;<br>                &lt;div class=\"content\"&gt;<br>                    &lt;span class=\"fl\"&gt;用户名：&lt;/span&gt;&lt;br /&gt;<br>                    &lt;input id=\"user\" name=\"user\" type=\"text\" /&gt;&lt;br /&gt;<br>                    &lt;span class=\"fl\"&gt;昵称：&lt;/span&gt;&lt;br /&gt;<br>                    &lt;input id=\"nick\" name=\"nick\" type=\"text\" /&gt;<br>                    &lt;div class=\"tip\"&gt;&lt;/div&gt;<br>                &lt;/div&gt;<br>            &lt;/div&gt;<br>        &lt;/form&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                var options = {<br>                    url: \"http://www.imooc.com/data/form_f.php\", <br>                    target: \".tip\"<br>                }<br>                $(\".content\").ajaxForm(options);<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----图片灯箱插件——lightBox</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>该插件可以用圆角的方式展示选择中的图片，使用按钮查看上下张图片，在加载图片时自带进度条，还能以自动播放的方式浏览图片，调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(linkimage).lightBox({options})</strong></code></p>\r\n<p>其中linkimage参数为包含图片的&lt;a&gt;元素名称，options为插件方法的配置对象。</p>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;我的相册&lt;/span&gt;<br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;div class=\"divPics\"&gt;<br>                    &lt;ul&gt;<br>                        &lt;li&gt;&lt;a href=\"http://img.mukewang.com/52e489f20001ecfc04480275.jpg\" title=\"第1篇风景图片\"&gt;<br>                            &lt;img src=\"http://img.mukewang.com/52e489f20001ecfc04480275.jpg\" alt=\"\" /&gt;<br>                        &lt;/a&gt;&lt;/li&gt;<br>                        &lt;li&gt;&lt;a href=\"http://img.mukewang.com/52e48a1e0001eec804480275.jpg\" title=\"第2篇风景图片\"&gt;<br>                            &lt;img src=\"http://img.mukewang.com/52e48a1e0001eec804480275.jpg\" alt=\"\" /&gt;<br>                        &lt;/a&gt;&lt;/li&gt;<br>                        &lt;li&gt;&lt;a href=\"http://img.mukewang.com/52e48a4c00015ad204480275.jpg\" title=\"第3篇风景图片\"&gt;<br>                            &lt;img src=\"http://img.mukewang.com/52e48a4c00015ad204480275.jpg\" alt=\"\" /&gt;<br>                        &lt;/a&gt;&lt;/li&gt;<br>                    &lt;/ul&gt;<br>                &lt;/div&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                   $(\".divPics\").lightBox({<br>                    overlayBgColor: \"#666\", //图片浏览时的背景色<br>                    overlayOpacity: 0.5, //背景色的透明度<br>                    containerResizeSpeed: 600 //图片切换时的速度<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----图片放大镜插件——jqzoom</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>在调用jqzoom图片放大镜插件时，需要准备一大一小两张一样的图片，在页面中显示小图片，当鼠标在小图片中移动时，调用该插件的<code class=\"marker\">jqzoom()</code>方法，显示与小图片相同的大图片区域，从而实现放大镜的效果，调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(linkimage).jqzoom({options})</strong></code></p>\r\n<p>其中linkimage参数为包含图片的&lt;a&gt;元素名称，options为插件方法的配置对象。</p>\r\n\r\n</div>\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;图片放大镜&lt;/span&gt; <br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;a href=\"http://img.mukewang.com/52e4aec90001924d06800599.jpg\" id=\"jqzoom\" title=\"小兔子乖乖\"&gt;<br>        	         &lt;img src=\"http://img.mukewang.com/52e4aee700012df702130212.jpg\" alt=\"\"/&gt;<br>                &lt;/a&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\".content\").jqzoom({ //绑定图片放大插件jqzoom<br>                    zoomWidth: 123, //小图片所选区域的宽<br>                    zoomHeight: 123, //小图片所选区域的高<br>                    zoomType: \'reverse\' //设置放大镜的类型<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----cookie插件——cookie</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>使用cookie插件后，可以很方便地通过cookie对象保存、读取、删除用户的信息，还能通过cookie插件保存用户的浏览记录，它的调用格式为：</p>\r\n<p><strong>保存：</strong><code class=\"marker\"><strong>$.cookie(key</strong><strong>，</strong><strong>value)</strong></code><strong>；读取：</strong><code class=\"marker\"><strong>$.cookie(key)</strong></code><strong>，删除：</strong><code class=\"marker\"><strong>$.cookie(key</strong><strong>，</strong><strong>null)</strong></code></p>\r\n<p>其中参数key为保存cookie对象的名称，value为名称对应的cookie值。</p>\r\n\r\n</div>\r\n\r\n</div>\r\n<p> &lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;cookie插件&lt;/span&gt; <br>                &lt;span class=\"fr\"&gt;<br>                    &lt;input id=\"btnSet\" type=\"button\" value=\"设置\" /&gt;<br>                &lt;/span&gt;<br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;span class=\"fl\"&gt;邮箱：&lt;/span&gt;&lt;br /&gt;<br>                &lt;input id=\"email\" name=\"email\" type=\"text\" /&gt;&lt;br /&gt;<br>                &lt;input id=\"chksave\" type=\"checkbox\" /&gt;是否保存邮箱<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                if ($.cookie(\"email\")) {<br>                    $(\"#email\").val($.cookie(\"email\"));<br>                }<br>                $(\"#btnSet\").bind(\"click\", function () {<br>                    if ($(\"#chksave\").is(\":checked\")) {<br>                        $.cookie(\"email\",$(\"#email\").val()), {<br>                            path: \"/\", expires: 7<br>                        })<br>                    }<br>                    else {<br>                        $.cookie(\"email\",null), {<br>                            path: \"/\"<br>                        })<br>                    }<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----搜索插件——autocomplete</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>搜索插件的功能是通过插件的<code class=\"marker\">autocomplete()</code>方法与文本框相绑定，当文本框输入字符时，绑定后的插件将返回与字符相近的字符串提示选择，调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(textbox).autocomplete(urlData,[options]);</strong></code></p>\r\n<p>其中，textbox参数为文本框元素名称，urlData为插件返回的相近字符串数据，可选项参数options为调用插件方法时的配置对象。</p>\r\n\r\n</div>\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;搜索插件&lt;/span&gt;<br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;span class=\"fl\"&gt;用户名&lt;/span&gt;&lt;br /&gt;<br>                &lt;input id=\"txtSearch\" name=\"txtSearch\" type=\"text\" /&gt;<br>                &lt;div class=\"tip\"&gt;<br>                &lt;/div&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                var arrUserName = [\"王五\", \"刘明\", \"李小四\", \"刘促明\", \"李渊\", \"张小三\", \"王小明\"];<br>                $(\"#txtSearch\").autocomplete(arrUserName,{<br>                    minChars: 0, //双击空白文本框时显示全部提示数据<br>                    formatItem: function (data, i, total) {<br>                        return \"&lt;I&gt;\" + data[0] + \"&lt;/I&gt;\"; //改变匹配数据显示的格式<br>                    },<br>                    formatMatch: function (data, i, total) {<br>                        return data[0];<br>                    },<br>                    formatResult: function (data) {<br>                        return data[0];<br>                    }<br>                }).result(SearchCallback); <br>                function SearchCallback(event, data, formatted) {<br>                    $(\".tip\").show().html(\"您的选择是：\" + (!data ? \"空\" : formatted));<br>                }<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----右键菜单插件——contextmenu</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>右键菜单插件可以绑定页面中的任意元素，绑定后，选中元素，点击右键，便通过该插件弹出一个快捷菜单，点击菜单各项名称执行相应操作，调用代码如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector).contextMenu(menuId,{options});</strong></code></p>\r\n<p>Selector参数为绑定插件的元素，meunId为快捷菜单元素，options为配置对象。</p>\r\n\r\n</div>\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;&lt;span class=\"fl\"&gt;点击右键&lt;/span&gt;&lt;/div&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;input id=\"btnSubmit\" type=\"button\" value=\"提交\" /&gt;<br>                &lt;div class=\"tip\"&gt;&lt;/div&gt;<br>            &lt;/div&gt;<br>            &lt;div class=\"contextMenu\" id=\"sysMenu\"&gt;<br>                &lt;ul&gt;<br>                    &lt;li id=\"Li3\"&gt;&lt;img src=\"http://img.mukewang.com/52e4b34b0001bb6d00160016.jpg\" alt=\"\" /&gt;保存&lt;/li&gt;<br>                    &lt;li id=\"Li4\"&gt;&lt;img src=\"http://img.mukewang.com/52e4b3680001424900160016.jpg\" alt=\"\" /&gt;退出&lt;/li&gt;<br>                &lt;/ul&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#btnSubmit\").contextMenu(\'sysMenu\',<br>                  { bindings:<br>                     {<br>                         \'Li3\': function (Item) {<br>                             $(\".tip\").show().html(\"您点击了“保存”项\");<br>                         },<br>                         \'Li4\': function (Item) {<br>                             $(\".tip\").show().html(\"您点击了“退出”项\");<br>                         }<br>                     }<br>                  });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----自定义对象级插件——lifocuscolor插件</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>自定义的lifocuscolor插件可以在&lt;ul&gt;元素中，鼠标在表项&lt;li&gt;元素移动时，自定义其获取焦点时的背景色，即定义&lt;li&gt;元素选中时的背景色，调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$(Id).focusColor(color)</strong></code></p>\r\n<p>其中，参数Id表示&lt;ul&gt;元素的Id号，color表示&lt;li&gt;元素选中时的背景色。</p>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;对象级别的插件&lt;/span&gt;<br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;ul id=\"u1\"&gt;<br>                    &lt;li&gt;&lt;span&gt;橘子&lt;/span&gt;&lt;span&gt;水果&lt;/span&gt;&lt;/li&gt;<br>                    &lt;li&gt;&lt;span&gt;芹菜&lt;/span&gt;&lt;span&gt;蔬菜&lt;/span&gt;&lt;/li&gt;<br>                    &lt;li&gt;&lt;span&gt;香蕉&lt;/span&gt;&lt;span&gt;水果&lt;/span&gt;&lt;/li&gt;<br>                &lt;/ul&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\".content\").focusColor(\"#ccc\");//调用自定义的插件<br>            })<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----自定义类级别插件—— twoaddresult</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>通过调用自定义插件twoaddresult中的不同方法，可以实现对两个数值进行相加和相减的运算，导入插件后，调用格式分别为：</p>\r\n<p><code class=\"marker\"><strong>$.addNum(p1,p2) </strong></code><strong>和</strong><code class=\"marker\"><strong> $.subNum(p1,p2)</strong></code></p>\r\n<p>上述调用格式分别为计算两数值相加和相减的结果，p1和p2为任意数值。</p>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;自定义类级别插件&lt;/span&gt; <br>                &lt;span class=\"fr\"&gt;<br>                    &lt;input id=\"btnCount\" type=\"button\" value=\"计算\" /&gt;<br>                &lt;/span&gt;<br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;<br>                两数相减：<br>                &lt;input id=\"Text1\" type=\"text\" class=\"txt\" /&gt;<br>                -<br>                &lt;input id=\"Text2\" type=\"text\" class=\"txt\" /&gt;<br>                =<br>                &lt;input id=\"Text3\" type=\"text\" class=\"txt\" /&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#btnCount\").bind(\"click\", function () {<br>                    $(\"#Text3\").val(<br>                        $.subNum($(\"#Text1\").val(),$(\"#Text2\").val())<br>        			);<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p> 2、MySQL&amp;PHP</p>\r\n<p>-----php内置MySQL函数（一）-----</p>\r\n<p>----连接数据库</p>\r\n<p>mysql_connect</p>\r\n<p>mysql_connect(\'localhost\',\'root\',\'\');</p>\r\n<p>也就是说这个函数有3个参数，<strong>数据库名或者ip地址</strong>，用户名，密码</p>\r\n<p><strong>注意，一般认为mysql_connect在以后的版本不再支持（php5.5以后版本似乎）改用mysqi_connect就可以了</strong></p>\r\n<p>&lt;?php<br>if(mysqli_connect(\'localhost\',\'root\',\'\')){<br>	echo \"连接成功\";</p>\r\n<p>}else{<br>		echo \"shit\";<br>	}</p>\r\n<p>测试代码如上</p>\r\n<p>连接成功后，会返回mysql连接标识符（用处下面会提到）；失败的话会返回false</p>\r\n<p><strong>---</strong>数据库扩展</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP中一个数据库可能有一个或者多个扩展，其中既有官方的，也有第三方提供的。像Mysql常用的扩展有原生的mysql库，也可以使用增强版的mysqli扩展，还可以使用PDO进行连接与操作。</p>\r\n<p>不同的扩展提供基本相近的操作方法，不同的是可能具备一些新特性，以及操作性能可能会有所不同。</p>\r\n<p>mysql扩展进行数据库连接的方法：</p>\r\n<pre class=\"code\">$link = mysql_connect(\'mysql_host\', \'mysql_user\', \'mysql_password\');</pre>\r\n<p>mysqli扩展：</p>\r\n<pre class=\"code\">$link = mysqli_connect(\'mysql_host\', \'mysql_user\', \'mysql_password\');</pre>\r\n<p>PDO扩展</p>\r\n<pre class=\"code\">$dsn = \'mysql:dbname=testdb;host=127.0.0.1\';\r\n$user = \'dbuser\';\r\n$password = \'dbpass\';\r\n$dbh = new PDO($dsn, $user, $password);</pre>\r\n</div>\r\n</div>\r\n<p> ----关闭数据库连接</p>\r\n<p>mysql_close</p>\r\n<p> mysql_close($con);关闭上一条的连接,这里的$con是mysql_connect()成功后返回的标识符</p>\r\n<p><strong><span style=\"line-height: 1.5;\">$con=mysqli_connect(\'localhost\',\'root\',\'\',\'info\');</span></strong></p>\r\n<p><span style=\"line-height: 1.5;\">----选择数据库</span></p>\r\n<p>mysql_select_db()</p>\r\n<p>&lt;?php<br>$con=mysqli_connect(\'localhost\',\'root\',\'\',\'info\');<br>if($con){<br>	echo \"连接成功\";<br>}else{<br>		echo \"shit\";<br>	}<br>//mysql_close($con);<br>if(mysqli_select_db($con, \'info\')){<br>	echo \"成功\";<br>}else{<br>		echo \"shit\";<br>	}</p>\r\n<p>由于我的php版本较高，mysql基本不认，所以我都改用mysqli，不过基本用法都差不多，就是参数要注意一下。一般来说，编译软件（我用Zend）都是有提示的，不用担心</p>\r\n<p>----执行SQL语句</p>\r\n<p>mysqli_query()</p>\r\n<p>mysqli_query($con, \"INSERT test(name) VALUES(\'Tom\')\");<br><br></p>\r\n<p>mysqli是要求连接的，$con</p>\r\n<p>---执行MySQL查询</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>在数据库建立连接以后就可以进行查询，采用mysql_query加sql语句的形式向数据库发送查询指令。</p>\r\n<pre class=\"code\">$res = mysql_query(\'select * from user limit 1\');</pre>\r\n<p>对于查询类的语句会返回一个资源句柄（resource），可以通过该资源获取查询结果集中的数据。</p>\r\n<pre class=\"code\">$row = mysql_fetch_array($res);\r\nvar_dump($row);</pre>\r\n<p>默认的，PHP使用最近的数据库连接执行查询，但如果存在多个连接的情况，则可以通过参数指令从那个连接中进行查询。</p>\r\n<pre class=\"code\">$link1 = mysql_connect(\'127.0.0.1\', \'code1\', \'\');\r\n$link2 = mysql_connect(\'127.0.0.1\', \'code1\', \'\', true); //开启一个新的连接\r\n$res = mysql_query(\'select * from user limit 1\', $link1); //从第一个连接中查询数据</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//在这里进行数据查询<br>$res = mysql_query(\"select * from user limit 1\");</p>\r\n<p>$row = mysql_fetch_array($res);</p>\r\n<p>var_dump($row);</p>\r\n<p>---插入新数据到MySQL中</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>当我们了解了如何使用mysql_query进行数据查询以后，那么类似的，插入数据其实也是通过执行一个sql语句来实现，例如：</p>\r\n<pre class=\"code\">$sql = \"insert into user(name, age, class) values(\'李四\', 18, \'高三一班\')\";\r\nmysql_query($sql); //执行插入语句</pre>\r\n<p>通常数据都是存储在变量或者数组中，因此sql语句需要先进行字符串拼接得到。</p>\r\n<pre class=\"code\">$name = \'李四\';\r\n$age = 18;\r\n$class = \'高三一班\';\r\n$sql = \"insert into user(name, age, class) values(\'$name\', \'$age\', \'$class\')\";\r\nmysql_query($sql); //执行插入语句</pre>\r\n<p>在mysql中，执行插入语句以后，可以得到自增的主键id,通过PHP的mysql_insert_id函数可以获取该id。</p>\r\n<pre class=\"code\">$uid = mysql_insert_id();</pre>\r\n<p>这个id的作用非常大，通常可以用来判断是否插入成功，或者作为关联ID进行其他的数据操作。</p>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//已知的数据变量有<br>$name = \'李四\';<br>$age = 18;<br>$class = \'高三一班\';<br>//在这里进行数据查询<br>$sql=\"insert into user(name,age,class) value (\'$name\',\'$age\',\'$class\')\";<br>mysql_query($sql);<br>$uid=mysql_insert_id();<br>print_r($uid);</p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p>要回去看中国队的比赛了，明天继续</p>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\n ', '2016-04-28 20:05:03', '2016-04-28 20:13:22', '0', '0', '0', '1', '75');
INSERT INTO `blog` VALUES ('2971', '失眠害死人-jQuery&AJAX ', '网络', '\n<p>　　hi</p>\r\n<p>又是两天没有做事情，后悔什么的只能带来更多的后悔吧，好好做事，忘了两天前自己作出来的失眠</p>\r\n<p>1、jQuery</p>\r\n<p>-----jQuery与AJAX-----（PS：ajax是什么请自行百度，或者看我之前的博客，千万不要以为是阿贾克斯球队就好）</p>\r\n<p>----使用load()方法异步请求数据</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>使用<code class=\"marker\">load()</code>方法通过Ajax请求加载服务器中的数据，并把返回的数据放置到指定的元素中，它的调用格式为：</p>\r\n<p><code class=\"marker\"><strong>load(url,[data],[callback])</strong></code></p>\r\n<p>参数url为加载服务器地址，可选项data参数为请求时发送的数据，callback参数为数据请求成功后，执行的回调函数。</p>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;我最爱吃的水果&lt;/span&gt; <br>                &lt;span class=\"fr\"&gt;<br>                    &lt;input id=\"btnShow\" type=\"button\" value=\"加载\" /&gt;<br>                &lt;/span&gt;<br>            &lt;/div&gt;<br>            &lt;ul&gt;&lt;/ul&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#btnShow\").bind(\"click\", function () {<br>                    var $this = $(this);<br>                    $(\"ul\")<br>                    .html(\"&lt;img src=\'Images/Loading.gif\' alt=\'\'/&gt;\")<br>                    .load(\"http://www.imooc.com/data/fruit_part.html\",function(){<br>                        $this.attr(\"disabled\", \"true\");<br>                    });<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>注意，用load()其中元素对空格敏感，比如url开头结尾不要有空格，比如function()后面不要有空格</p>\r\n<p>----使用getJSON()方法异步加载JSON格式数据</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>使用<code class=\"marker\">getJSON()</code>方法可以通过Ajax异步请求的方式，获取服务器中的数组，并对获取的数据进行解析，显示在页面中，它的调用格式为：</p>\r\n<p><code class=\"marker\"><strong>jQuery.getJSON(url,[data],[callback])</strong></code><strong>或</strong><code class=\"marker\"><strong>$.getJSON(url,[data],[callback])</strong></code></p>\r\n<p>其中，url参数为请求加载json格式文件的服务器地址，可选项data参数为请求时发送的数据，callback参数为数据请求成功后，执行的回调函数。</p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;我最喜欢的一项运动&lt;/span&gt; <br>                &lt;span class=\"fr\"&gt;<br>                    &lt;input id=\"btnShow\" type=\"button\" value=\"加载\" /&gt;<br>                &lt;/span&gt;<br>            &lt;/div&gt;<br>            &lt;ul&gt;&lt;/ul&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#btnShow\").bind(\"click\", function () {<br>                    var $this = $(this);<br>                    $.getJSON(\"http://www.imooc.com/data/sport.json\",function(data){<br>                        $this.attr(\"disabled\", \"true\");<br>                        $.each(data, function (index, sport) {<br>                            if(index==3)<br>                            $(\"ul\").append(\"&lt;li&gt;\" + sport[\"name\"] + \"&lt;/li&gt;\");<br>                        });<br><br>                    });<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用getScript()方法异步加载并执行js文件</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>使用<code class=\"marker\">getScript()</code>方法异步请求并执行服务器中的JavaScript格式的文件，它的调用格式如下所示：</p>\r\n<p><code class=\"marker\">jQuery.getScript(url,[callback])</code>或<code class=\"marker\">$.getScript(url,[callback])</code></p>\r\n<p>参数url为服务器请求地址，可选项callback参数为请求成功后执行的回调函数。</p>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;我最喜欢的运动&lt;/span&gt; <br>                &lt;span class=\"fr\"&gt;<br>                    &lt;input id=\"btnShow\" type=\"button\" value=\"加载\" /&gt;<br>                &lt;/span&gt;<br>            &lt;/div&gt;<br>            &lt;ul&gt;&lt;/ul&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#btnShow\").bind(\"click\", function () {<br>                    var $this = $(this);<br>                     $.getScript(\"http://www.imooc.com/data/sport_f.js\",function(){<br>                        $this.attr(\"disabled\", \"true\");<br>                    });<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用get()方法以GET方式从服务器获取数据</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>使用<code class=\"marker\">get()</code>方法时，采用GET方式向服务器请求数据，并通过方法中回调函数的参数返回请求的数据，它的调用格式如下：</p>\r\n<p><code class=\"marker\">$.get(url,[callback])</code></p>\r\n<p>参数url为服务器请求地址，可选项callback参数为请求成功后执行的回调函数。</p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;我的个人资料&lt;/span&gt; <br>                &lt;span class=\"fr\"&gt;<br>                    &lt;input id=\"btnShow\" type=\"button\" value=\"加载\" /&gt;<br>                &lt;/span&gt;<br>            &lt;/div&gt;<br>            &lt;ul&gt;&lt;/ul&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#btnShow\").bind(\"click\", function () {<br>                    var $this = $(this);<br>                    $.get(\"http://www.imooc.com/data/info_f.php\",function(data){<br>                        $this.attr(\"disabled\", \"true\");<br>                        $(\"ul\").append(\"&lt;li&gt;我的名字叫：\" + data.name + \"&lt;/li&gt;\");<br>                        $(\"ul\").append(\"&lt;li&gt;男朋友对我说：\" + data.say + \"&lt;/li&gt;\");<br>                    }, \"json\");<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用post()方法以POST方式从服务器发送数据</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>与<code class=\"marker\">get()</code>方法相比，<code class=\"marker\">post()</code>方法多用于以POST方式向服务器发送数据，服务器接收到数据之后，进行处理，并将处理结果返回页面，调用格式如下：</p>\r\n<p><code class=\"marker\">$.post(url,[data],[callback])</code></p>\r\n<p>参数url为服务器请求地址，可选项data为向服务器请求时发送的数据，可选项callback参数为请求成功后执行的回调函数。</p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n<p> &lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;检测数字是否大于0&lt;/span&gt; <br>                &lt;span class=\"fr\"&gt;&lt;input id=\"btnCheck\" type=\"button\" value=\"检测\" /&gt;&lt;/span&gt;<br>            &lt;/div&gt;<br>            &lt;ul&gt;<br>               &lt;li&gt;请求输入一个数字 &lt;input id=\"txtNumber\" type=\"text\" size=\"12\" /&gt;&lt;/li&gt;<br>            &lt;/ul&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#btnCheck\").bind(\"click\", function () {<br>                    $.post(\"http://www.imooc.com/data/check_f.php\",{<br>                    num:$(\"#txtNumber\").val()<br>                    },<br>                    function (data) {<br>                        $(\"ul\").append(\"&lt;li&gt;你输入的&lt;b&gt;  \"<br>                        + $(\"#txtNumber\").val() + \" &lt;/b&gt;是&lt;b&gt; \"<br>                        + data + \" &lt;/b&gt;&lt;/li&gt;\");<br>                    });<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>这里的val()是得到之前的selector的值，jQuery的函数</p>\r\n<p>----使用serialize()方法序列化表单元素值</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>使用<code class=\"marker\">serialize()</code>方法可以将表单中有name属性的元素值进行序列化，生成标准URL编码文本字符串，直接可用于ajax请求，它的调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector).serialize()</strong></code></p>\r\n<p>其中selector参数是一个或多个表单中的元素或表单元素本身。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;我的个人资料&lt;/span&gt; <br>                &lt;span class=\"fr\"&gt;<br>                    &lt;input id=\"btnAction\" type=\"button\" value=\"序列化\" /&gt;<br>                &lt;/span&gt;<br>            &lt;/div&gt;<br>            &lt;form action=\"\"&gt;<br>            &lt;ul&gt;<br>                &lt;li&gt;姓名：&lt;input name=\"Text1\" type=\"text\" size=\"12\" /&gt;&lt;/li&gt;<br>                &lt;li&gt;<br>                    &lt;select name=\"Select1\"&gt;<br>                        &lt;option value=\"0\"&gt;男&lt;/option&gt;<br>                        &lt;option value=\"1\"&gt;女&lt;/option&gt;<br>                    &lt;/select&gt;<br>                &lt;/li&gt;<br>                &lt;li&gt;&lt;input name=\"Checkbox1\" type=\"checkbox\" /&gt;资料是否可见 &lt;/li&gt;<br>                &lt;li id=\"litest\"&gt;&lt;/li&gt;<br>            &lt;/ul&gt;<br>            &lt;/form&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#btnAction\").bind(\"click\", function () {<br>                     $(\"#litest\").html($(\"form\").serialize());<br>                })<br>            })<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用ajax()方法加载服务器数据</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>使用<code class=\"marker\">ajax()</code>方法是最底层、功能最强大的请求服务器数据的方法，它不仅可以获取服务器返回的数据，还能向服务器发送请求并传递数值，它的调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>jQuery.ajax([settings])</strong></code><strong>或</strong><code class=\"marker\"><strong>$.ajax([settings])</strong></code></p>\r\n<p>其中参数settings为发送ajax请求时的配置对象，在该对象中，url表示服务器请求的路径，data为请求时传递的数据，dataType为服务器返回的数据类型，success为请求成功的执行的回调函数，type为发送数据请求的方式，默认为get。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p> </p>\r\n<p> &lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;检测数字的奇偶性&lt;/span&gt; <br>                &lt;span class=\"fr\"&gt;<br>                    &lt;input id=\"btnCheck\" type=\"button\" value=\"检测\" /&gt;<br>                &lt;/span&gt;<br>            &lt;/div&gt;<br>            &lt;ul&gt;<br>               &lt;li&gt;请求输入一个数字 <br>                   &lt;input id=\"txtNumber\" type=\"text\" size=\"12\" /&gt;<br>               &lt;/li&gt;<br>            &lt;/ul&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#btnCheck\").bind(\"click\", function () {<br>                    $.ajax({<br>                        url:\"http://www.imooc.com/data/check.php\",<br>                        data: { num: $(\"#txtNumber\").val() },<br>                        type:\"post\",<br>                        success: function (data) {<br>                            $(\"ul\").append(\"&lt;li&gt;你输入的&lt;b&gt;  \"<br>                            + $(\"#txtNumber\").val() + \" &lt;/b&gt;是&lt;b&gt; \"<br>                            + data + \" &lt;/b&gt;&lt;/li&gt;\");<br>                        }<br>                    });<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用ajaxSetup()方法设置全局Ajax默认选项</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>使用<code class=\"marker\">ajaxSetup()</code>方法可以设置Ajax请求的一些全局性选项值，设置完成后，后面的Ajax请求将不需要再添加这些选项值，它的调用格式为：</p>\r\n<p><code class=\"marker\"><strong>jQuery.ajaxSetup([options])</strong></code><strong>或</strong><code class=\"marker\"><strong>$.ajaxSetup([options])</strong></code></p>\r\n<p>可选项options参数为一个对象，通过该对象设置Ajax请求时的全局选项值。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p> &lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;奇偶性和是否大于0&lt;/span&gt; <br>                &lt;span class=\"fr\"&gt;<br>                    &lt;input id=\"btnShow_1\" type=\"button\" value=\"验证1\" /&gt;<br>                    &lt;input id=\"btnShow_2\" type=\"button\" value=\"验证2\" /&gt;<br>                &lt;/span&gt;<br>            &lt;/div&gt;<br>            &lt;ul&gt;<br>               &lt;li&gt;请求输入一个数字 <br>                   &lt;input id=\"txtNumber\" type=\"text\" size=\"12\" /&gt;<br>               &lt;/li&gt;<br>            &lt;/ul&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $.ajaxSetup({<br>                    url:\"http://www.imooc.com/data/check.php\",<br>data: { num: $(\"#txtNumber\").val() },<br>type:\"post\",<br>                       success:function(data){$(\"ul\").append(\"&lt;li&gt;你输入的&lt;b&gt;  \"<br>                            + $(\"#txtNumber\").val() + \" &lt;/b&gt;是&lt;b&gt; \"<br>                            + data + \" &lt;/b&gt;&lt;/li&gt;\");<br>                    }<br>                });<br>                $(\"#btnShow_1\").bind(\"click\", function () {<br>                    $.ajax({<br>                        data: { num: $(\"#txtNumber\").val() },<br>                        url: \"http://www.imooc.com/data/check.php\"<br>                    });<br>                })<br>                $(\"#btnShow_2\").bind(\"click\", function () {<br>                    $.ajax({<br>                        data: { num: $(\"#txtNumber\").val() },<br>                        url: \"http://www.imooc.com/data/check_f.php\"<br>                    });<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用ajaxStart()和ajaxStop()方法</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">ajaxStart()</code>和<code class=\"marker\">ajaxStop()</code>方法是绑定Ajax事件。ajaxStart()方法用于在Ajax请求发出前触发函数，ajaxStop()方法用于在Ajax请求完成后触发函数。它们的调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).ajaxStart(function())</strong></code><strong>和</strong><code class=\"marker\"><strong>$(selector).ajaxStop(function())</strong></code></p>\r\n<p>其中，两个方法中括号都是绑定的函数，当发送Ajax请求前执行<code class=\"marker\">ajaxStart()</code>方法绑定的函数，请求成功后，执行ajaxStop ()方法绑定的函数。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;加载一段文字&lt;/span&gt; <br>                &lt;span class=\"fr\"&gt;<br>                    &lt;input id=\"btnShow\" type=\"button\" value=\"加载\" /&gt;<br>                &lt;/span&gt;<br>            &lt;/div&gt;<br>            &lt;ul&gt;<br>               &lt;li id=\"divload\"&gt;&lt;/li&gt;<br>            &lt;/ul&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#divtest\").ajaxStart(function(){<br>                    $(this).html(\"正在请求数据...\");<br>                });<br>                $(\"#divtest\").ajaxStop(function(){<br>                    $(this).html(\"数据请求完成！\");<br>                });<br>                $(\"#btnShow\").bind(\"click\", function () {<br>                    var $this = $(this);<br>                    $.ajax({<br>                        url: \"http://www.imooc.com/data/info_f.php\",<br>                        dataType: \"json\",<br>                        success: function (data) {<br>                            $this.attr(\"disabled\", \"true\");<br>                        $(\"ul\").append(\"&lt;li&gt;我的名字叫：\" + data.name + \"&lt;/li&gt;\");<br>                        $(\"ul\").append(\"&lt;li&gt;男朋友对我说：\" + data.say + \"&lt;/li&gt;\");<br>                        }<br>                    });<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>-----jQuery常用插件-----</p>\r\n<p> ----表单验证插件——validate</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>该插件自带包含必填、数字、URL在内容的验证规则，即时显示异常信息，此外，还允许自定义验证规则，插件调用方法如下：</p>\r\n<p><code class=\"marker\"><strong>$(form).validate({options})</strong></code></p>\r\n<p>其中form参数表示表单元素名称，options参数表示调用方法时的配置对象，所有的验证规则和异常信息显示的位置都在该对象中进行设置。</p>\r\n\r\n</div>\r\n\r\n</div>\r\n<p> </p>\r\n<p>&lt;body&gt;<br>        &lt;form id=\"frmV\" method=\"get\" action=\"#\"&gt;<br>            &lt;div id=\"divtest\"&gt;<br>                &lt;div class=\"title\"&gt;<br>                    &lt;span class=\"fl\"&gt;表单验证插件&lt;/span&gt; <br>                    &lt;span class=\"fr\"&gt;<br>                        &lt;input id=\"btnSubmit\" type=\"submit\" value=\"提交\" /&gt;<br>                    &lt;/span&gt;<br>                &lt;/div&gt;<br>                &lt;div class=\"content\"&gt;<br>                    &lt;span class=\"fl\"&gt;邮箱：&lt;/span&gt;&lt;br /&gt;<br>                    &lt;input id=\"email\" name=\"email\" type=\"text\" /&gt;&lt;br /&gt;<br>                    &lt;span class=\"tip\"&gt;&lt;/span&gt;<br>                &lt;/div&gt;<br>            &lt;/div&gt;<br>        &lt;/form&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#frmV\").validate(<br>                  {<br>                      /*自定义验证规则*/<br>                      rules: {<br>                            email:{<br>                                required:true,<br>                                email:true<br>                            }<br>                          }<br>                      },<br>                      /*错误提示位置*/<br>                      errorPlacement: function (error, element) {<br>                          error.appendTo(\".tip\");<br>                      }<br>                  }<br>                );<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\n ', '2016-04-28 20:05:03', '2016-04-28 20:13:41', '0', '0', '0', '1', '75');
INSERT INTO `blog` VALUES ('2972', '有时候就是看不进论文-jQuery动画特效篇&MySQL ', '网络', '\n<p>　　hi</p>\r\n<p>早上知道新的乱斗模式后，没忍住开了几把，然后就无心论文了。。。用这个来破吧</p>\r\n<p>1、jQuery</p>\r\n<p>-----动画特效-----</p>\r\n<p>----调用show()和hide()方法显示和隐藏元素</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">show()</code>和<code class=\"marker\">hide()</code>方法用于显示或隐藏页面中的元素，它的调用格式分别为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).hide(speed,[callback])</strong></code><strong>和</strong><code class=\"marker\"><strong>$(selector).show(speed,[callback])</strong></code></p>\r\n<p>参数speed设置隐藏或显示时的速度值，可为“slow”、“fast”或毫秒数值，可选项参数callback为隐藏或显示动作执行完成后调用的函数名。</p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;使用show()和hide()方法显示和隐藏元素&lt;/h3&gt;<br>        &lt;div&gt;<br>            &lt;h4&gt;我喜欢吃的水果&lt;/h4&gt;<br>            &lt;ul&gt;<br>                &lt;li&gt;苹果&lt;/li&gt;<br>                &lt;li&gt;甘桔&lt;/li&gt;<br>                &lt;li&gt;梨&lt;/li&gt;<br>            &lt;/ul&gt;<br>            &lt;input id=\"hidval\" type=\"hidden\" value=\"0\"/&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"h4\").bind(\"click\", function () {<br>                    if ($(\"#hidval\").val() == 0) {<br>                        $(\"ul\").show();<br>                        $(\"#hidval\").val(1);<br>                    } else {<br>                        $(\"ul\").hide();<br>                        $(\"#hidval\").val(0);<br>                    }<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----动画效果的show()和hide()方法</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>在上一小节中，调用<code class=\"marker\">show()</code>和<code class=\"marker\">hide()</code>方法仅是实现的元素的显示和隐藏功能，如果在这些方法中增加“speed”参数可以实现动画效果的显示与隐藏，同时，如果添加了方法的回调函数，它将在显示或隐藏执行成功后被调用。</p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;show()和hide()方法动画方式显示和隐藏元素&lt;/h3&gt;<br>        &lt;div&gt;<br>            &lt;h4&gt;我喜欢吃的水果&lt;/h4&gt;<br>            &lt;ul&gt;<br>                &lt;li&gt;苹果&lt;/li&gt;<br>                &lt;li&gt;甘桔&lt;/li&gt;<br>                &lt;li&gt;梨&lt;/li&gt;<br>            &lt;/ul&gt;<br>            &lt;input id=\"hidval\" type=\"hidden\" value=\"0\"/&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"h4\").bind(\"click\", function () {<br>                    if ($(\"#hidval\").val() == 0) {<br>                        $(\"ul\").show(\"slow\",function(){<br>                            $(\"#hidval\").val(1);<br>                        })<br>                    } else {<br>                        $(\"ul\").hide(\"slow\",function(){<br>                            $(\"#hidval\").val(0);<br>                        })<br>                    }<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----调用toggle()方法实现动画切换效果</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>第一节我们学过实现元素的显示与隐藏需要使用<code class=\"marker\">hide()</code>与<code class=\"marker\">show()</code>，那么有没有更简便的方法来实现同样的动画效果呢？</p>\r\n<p>调用<code class=\"marker\">toggle()</code>方法就可以很容易做到，即如果元素处于显示状态，调用该方法则隐藏该元素，反之，则显示该元素，它的调用格式是：</p>\r\n<p><code class=\"marker\"><strong>$(selector).toggle(speed,[callback])</strong></code></p>\r\n<p>其中speed参数为动画效果时的速度值，可以为数字，单位为毫秒，也可是“fast”、“slow”字符，可选项参数callback为方法执行成功后回调的函数名称。</p>\r\n<p> &lt;body&gt;<br>        &lt;h3&gt;toggle()方法的动画切换效果&lt;/h3&gt;<br>        &lt;div&gt;<br>            &lt;h4&gt;<br>               &lt;span class=\"fl\"&gt;我喜欢吃的水果&lt;/span&gt;<br>               &lt;span class=\"fr\" id=\"spnTip\"&gt;显示&lt;/span&gt;<br>            &lt;/h4&gt;<br>            &lt;ul&gt;<br>                &lt;li&gt;苹果&lt;/li&gt;<br>                &lt;li&gt;甘桔&lt;/li&gt;<br>                &lt;li&gt;梨&lt;/li&gt;<br>            &lt;/ul&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                var $spn = $(\"#spnTip\");<br>                $(\"h4\").bind(\"click\", function () {<br>                    $($spn).toggle(\"slow\",function(){<br>                     $spn.html() == \"隐藏\" ? $spn.html(\"显示\") : $spn.html(\"隐藏\");<br>                    })<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用slideUp()和slideDown()方法的滑动效果</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>可以使用<code class=\"marker\">slideUp()</code>和<code class=\"marker\">slideDown()</code>方法在页面中滑动元素，前者用于向上滑动元素，后者用于向下滑动元素，它们的调用方法分别为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).slideUp(speed,[callback])</strong></code><strong>和</strong><code class=\"marker\"><strong>$(selector).slideDown(speed,[callback])</strong></code></p>\r\n<p>其中speed参数为滑动时的速度，单位是毫秒，可选项参数callback为滑动成功后执行的回调函数名。</p>\r\n<p><strong>要注意的是：</strong><code class=\"marker\">slideDown()</code>仅适用于<strong>被隐藏的元素；</strong><code class=\"marker\">slideup()</code>则<strong>相反。</strong></p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;使用slideUp()和slideDown()方法的滑动效果&lt;/h3&gt;<br>        &lt;div&gt;<br>            &lt;h4&gt;我喜欢吃的水果&lt;/h4&gt;<br>            &lt;ul&gt;<br>                &lt;li&gt;苹果&lt;/li&gt;<br>                &lt;li&gt;甘桔&lt;/li&gt;<br>                &lt;li&gt;梨&lt;/li&gt;<br>            &lt;/ul&gt;<br>            &lt;input id=\"hidval\" type=\"hidden\" value=\"0\"/&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"h4\").bind(\"click\", function () {<br>                    if ($(\"#hidval\").val() == 0) {<br>                        $(\"ul\").slideUp(\"fast\",function(){<br>                            $(\"#hidval\").val(1);<br>                        })<br>                    } else {<br>                        $(\"ul\").slideDown(\"fast\",function(){<br>                            $(\"#hidval\").val(0);<br>                        })<br>                    }<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>注意：JS对大小写敏感，函数名不要写错（不要问我是怎么知道的</p>\r\n<p>----使用slideToggle()方法实现图片“变脸”效果</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>使用<code class=\"marker\">slideToggle()</code>方法可以切换<code class=\"marker\">slideUp()</code>和<code class=\"marker\">slideDown()</code>，即调用该方法时，如果元素已向上滑动，则元素自动向下滑动，反之，则元素自动向上滑动，格式为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).slideToggle(speed,[callback])</strong></code></p>\r\n<p>其中speed参数为动画效果时的速度值，可以为数字，单位为毫秒，也可是“fast”、“slow”字符，可选项参数callback为方法执行成功后回调的函数名称。</p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;使用slideToggle()方法切换滑动效果&lt;/h3&gt;<br>        &lt;div&gt;<br>            &lt;h4&gt;<br>               &lt;span class=\"fl\"&gt;我喜欢吃的水果&lt;/span&gt;<br>               &lt;span class=\"fr\" id=\"spnTip\"&gt;向下滑&lt;/span&gt;&lt;/h4&gt;<br>            &lt;ul&gt;<br>                &lt;li&gt;苹果&lt;/li&gt;<br>                &lt;li&gt;甘桔&lt;/li&gt;<br>                &lt;li&gt;梨&lt;/li&gt;<br>            &lt;/ul&gt;<br>            &lt;input id=\"hidval\" type=\"hidden\" value=\"0\"/&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                var $spn = $(\"#spnTip\");<br>                $(\"h4\").bind(\"click\", function () {<br>                    $(\"ul\").slideToggle(\"fast\",function(){<br>               $spn.html() == \"向下滑\" ? $spn.html(\"向上滑\") : $spn.html(\"向下滑\");<br>                    })<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用fadeIn()与fadeOut()方法实现淡入淡出效果</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">fadeIn()</code>和<code class=\"marker\">fadeOut()</code>方法可以实现元素的淡入淡出效果，前者淡入隐藏的元素，后者可以淡出可见的元素，它们的调用格式分别为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).fadeIn(speed,[callback])</strong></code><strong>和</strong><code class=\"marker\"><strong>$(selector).fadeOut(speed,[callback])</strong></code></p>\r\n<p>其中参数speed为淡入淡出的速度，callback参数为完成后执行的回调函数名。</p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n<p> &lt;body&gt;<br>        &lt;h3&gt;使用fadeIn()与fadeOut()方法实现元素淡入淡出的效果&lt;/h3&gt;<br>        &lt;div&gt;<br>            &lt;h4&gt;我喜欢吃的水果&lt;/h4&gt;<br>            &lt;ul&gt;<br>                &lt;li&gt;苹果&lt;/li&gt;<br>                &lt;li&gt;甘桔&lt;/li&gt;<br>                &lt;li&gt;梨&lt;/li&gt;<br>            &lt;/ul&gt;<br>            &lt;input id=\"hidval\" type=\"hidden\" value=\"0\"/&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"h4\").bind(\"click\", function () {<br>                    if ($(\"#hidval\").val() == 0) {<br>                        $(\"ul\").fadeIn(\"fast\",function(){<br>                            $(\"#hidval\").val(1);<br>                        })<br>                    } else {<br>                         $(\"ul\").fadeOut(\"fast\",function(){<br>                            $(\"#hidval\").val(0);<br>                        })<br>                    }<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用fadeTo()方法设置淡入淡出效果的不透明度</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>调用<code class=\"marker\">fadeTo()</code>方法，可以将所选择元素的不透明度以淡入淡出的效果调整为指定的值，该方法的调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).fadeTo(speed,opacity,[callback])</strong></code></p>\r\n<p>其中speed参数为效果的速度，opacity参数为指定的不透明值，它的取值范围是0.0~1.0，可选项参数callback为效果完成后，回调的函数名。</p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n<p> &lt;body&gt;<br>        &lt;h3&gt;使用fadeTo()方法设置淡入淡出效果的不透明度&lt;/h3&gt;<br>        &lt;span class=\"red\"&gt;&lt;/span&gt;&lt;span class=\"orange\"&gt;&lt;/span&gt;&lt;span class=\"blue\"&gt;&lt;/span&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"span\").each(function (index) {<br>                    switch (index) {<br>                        case 0:<br>                            $(\".red\").fadeTo(\"fast\",0.2);<br>                            break;<br>                        case 1:<br>                            $(\".orange\").fadeTo(\"fast\",0.4);<br>                            break;<br>                        case 2:<br>                            $(\".blue\").fadeTo(\"fast\",0.6);<br>                            break;<br>                    }<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----调用animate()方法制作简单的动画效果</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>调用<code class=\"marker\">animate()</code>方法可以创建自定义动画效果，它的调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).animate({params},speed,[callback])</strong></code></p>\r\n<p>其中，params参数为制作动画效果的CSS属性名与值，speed参数为动画的效果的速度，单位为毫秒，可选项callback参数为动画完成时执行的回调函数名。</p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n<p>    &lt;body&gt;<br>        &lt;h3&gt;制作简单的动画效果&lt;/h3&gt;<br>        &lt;span&gt;&lt;/span&gt;<br>        &lt;div id=\"tip\"&gt;&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"span\").animate({<br>                    width: \"80px\",<br>                    height: \"80px\"<br>                },<br>                3000, function () {<br>                    $(\"#tip\").html(\"执行完成!\");<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----调用animate()方法制作移动位置的动画</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>调用<code class=\"marker\">animate()</code>方法不仅可以制作简单渐渐变大的动画效果，而且还能制作移动位置的动画，在移动位置之前，必须将被移元素的“position”属性值设为“absolute”或“relative”，否则，该元素移动不了。</p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n<p> &lt;body&gt;<br>        &lt;h3&gt;制作移动位置的动画&lt;/h3&gt;<br>        &lt;span&gt;&lt;/span&gt;<br>        &lt;div id=\"tip\"&gt;&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"span\").animate({<br>                    left: \"+=100px\"<br>                }, 3000, function () {<br>                    $(\"span\").animate({<br>                        height: \'+=30px\',<br>                        width: \'+=30px\'<br>                    }, 3000, function () {<br>                        $(\"#tip\").html(\"执行完成!\");<br>                    });<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----调用stop()方法停止当前所有动画效果</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">stop()</code>方法的功能是在动画完成之前，停止当前正在执行的动画效果，这些效果包括滑动、淡入淡出和自定义的动画，它的调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).stop([clearQueue],[goToEnd])</strong></code></p>\r\n<p>其中，两个可选项参数clearQueue和goToEnd都是布尔类型值，前者表示是否停止正在执行的动画，后者表示是否完成正在执行的动画，默认为false。</p>\r\n<p> &lt;body&gt;<br>        &lt;h3&gt;调用stop()方法停止当前所有动画效果&lt;/h3&gt;<br>        &lt;span&gt;&lt;/span&gt;<br>        &lt;input id=\"btnStop\" type=\"button\" value=\"停止\" /&gt;<br>        &lt;div id=\"tip\"&gt;&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"span\").animate({<br>                    left: \"+=100px\"<br>                }, 3000, function () {<br>                    $(this).animate({<br>                        height: \'+=60px\',<br>                        width: \'+=60px\'<br>                    }, 3000, function () {<br>                        $(\"#tip\").html(\"执行完成!\");<br>                    });<br>                });<br>                $(\"#btnStop\").bind(\"click\", function () {<br>                   $(\"span\").stop();<br>                    $(\"#tip\").html(\"执行停止!\");<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----调用delay()方法延时执行动画效果</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">delay()</code>方法的功能是设置一个延时值来推迟动画效果的执行，它的调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).delay(duration)</strong></code></p>\r\n<p>其中参数duration为延时值，它的单位是毫秒，当超过延时值时，动画继续执行。</p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;调用delay()方法延时执行动画效果&lt;/h3&gt;<br>        &lt;span&gt;&lt;/span&gt;<br>        &lt;input id=\"btnStop\" type=\"button\" value=\"延时\" /&gt;<br>        &lt;div id=\"tip\"&gt;&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"span\").animate({<br>                    left: \"+=100px\"<br>                }, 3000, function () {<br>                    $(this).animate({<br>                        height: \'+=60px\',<br>                        width: \'+=60px\'<br>                    }, 3000, function () {<br>                        $(\"#tip\").html(\"执行完成!\");<br>                    });<br>                });<br>                $(\"#btnStop\").bind(\"click\", function () {<br>                     $(\"span\").delay(3000);<br>                    $(\"#tip\").html(\"正在延时!\");<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>2、MySQL</p>\r\n<p>-----子查询与连接-----</p>\r\n<p>----复习</p>\r\n<p>上一次是增删改查</p>\r\n<p>主要记住，前三个是写操作；改是读操作</p>\r\n<p>----数据准备</p>\r\n<p>创建一个电子商城的数据表的缩小版如下</p>\r\n<p>创建数据库和数据表</p>\r\n<p>mysql&gt; CREATE DATABASE Tables_in_imooc;</p>\r\n<p>mysql&gt; USE Tables_in_imooc;</p>\r\n<p>mysql&gt; CREATE TABLE IF NOT EXISTS tdb_goods(<br>    -&gt;     goods_id    SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,<br>    -&gt;     goods_name  VARCHAR(150) NOT NULL,<br>    -&gt;     goods_cate  VARCHAR(40)  NOT NULL,<br>    -&gt;     brand_name  VARCHAR(40)  NOT NULL,<br>    -&gt;     goods_price DECIMAL(15,3) UNSIGNED NOT NULL DEFAULT 0,<br>    -&gt;     is_show     BOOLEAN NOT NULL DEFAULT 1,<br>    -&gt;     is_saleoff  BOOLEAN NOT NULL DEFAULT 0<br>    -&gt;   );</p>\r\n<p>mysql&gt; SHOW COLUMNS FROM TDB_GOODS;<br>+-------------+------------------------+------+-----+---------+----------------+<br>| Field       | Type                   | Null | Key | Default | Extra          |<br>+-------------+------------------------+------+-----+---------+----------------+<br>| goods_id    | smallint(5) unsigned   | NO   | PRI | NULL    | auto_increment |<br>| goods_name  | varchar(150)           | NO   |     | NULL    |                |<br>| goods_cate  | varchar(40)            | NO   |     | NULL    |                |<br>| brand_name  | varchar(40)            | NO   |     | NULL    |                |<br>| goods_price | decimal(15,3) unsigned | NO   |     | 0.000   |                |<br>| is_show     | tinyint(1)             | NO   |     | 1       |                |<br>| is_saleoff  | tinyint(1)             | NO   |     | 0       |                |<br>+-------------+------------------------+------+-----+---------+----------------+</p>\r\n<p>插入记录</p>\r\n<p>INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'R510VC 15.6英寸笔记本\',\'笔记本\',\'华硕\',\'3399\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'Y400N 14.0英寸笔记本电脑\',\'笔记本\',\'联想\',\'4899\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'G150TH 15.6英寸游戏本\',\'游戏本\',\'雷神\',\'8499\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'X550CC 15.6英寸笔记本\',\'笔记本\',\'华硕\',\'2799\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'X240(20ALA0EYCD) 12.5英寸超极本\',\'超级本\',\'联想\',\'4999\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'U330P 13.3英寸超极本\',\'超级本\',\'联想\',\'4299\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'SVP13226SCB 13.3英寸触控超极本\',\'超级本\',\'索尼\',\'7999\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'iPad mini MD531CH/A 7.9英寸平板电脑\',\'平板电脑\',\'苹果\',\'1998\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'iPad Air MD788CH/A 9.7英寸平板电脑 （16G WiFi版）\',\'平板电脑\',\'苹果\',\'3388\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\' iPad mini ME279CH/A 配备 Retina 显示屏 7.9英寸平板电脑 （16G WiFi版）\',\'平板电脑\',\'苹果\',\'2788\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'IdeaCentre C340 20英寸一体电脑 \',\'台式机\',\'联想\',\'3499\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'Vostro 3800-R1206 台式电脑\',\'台式机\',\'戴尔\',\'2899\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'iMac ME086CH/A 21.5英寸一体电脑\',\'台式机\',\'苹果\',\'9188\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'AT7-7414LP 台式电脑 （i5-3450四核 4G 500G 2G独显 DVD 键鼠 Linux ）\',\'台式机\',\'宏碁\',\'3699\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'Z220SFF F4F06PA工作站\',\'服务器/工作站\',\'惠普\',\'4288\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'PowerEdge T110 II服务器\',\'服务器/工作站\',\'戴尔\',\'5388\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'Mac Pro MD878CH/A 专业级台式电脑\',\'服务器/工作站\',\'苹果\',\'28888\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\' HMZ-T3W 头戴显示设备\',\'笔记本配件\',\'索尼\',\'6999\',DEFAULT,DEFAULT);</p>\r\n<p> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'商务双肩背包\',\'笔记本配件\',\'索尼\',\'99\',DEFAULT,DEFAULT);</p>\r\n<p> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'X3250 M4机架式服务器 2583i14\',\'服务器/工作站\',\'IBM\',\'6888\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'玄龙精英版 笔记本散热器\',\'笔记本配件\',\'九州风神\',\'\',DEFAULT,DEFAULT);</p>\r\n<p> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\' HMZ-T3W 头戴显示设备\',\'笔记本配件\',\'索尼\',\'6999\',DEFAULT,DEFAULT);</p>\r\n<p> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'商务双肩背包\',\'笔记本配件\',\'索尼\',\'99\',DEFAULT,DEFAULT);</p>\r\n<p>mysql&gt; SELECT * FROM TDB_GOODS\\G;</p>\r\n<p>这时候显示数据看看有没有乱码，如果有，改gbk</p>\r\n<p> </p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n<p> </p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\n ', '2016-04-28 20:05:03', '2016-04-28 20:13:41', '0', '0', '0', '1', '75');
INSERT INTO `blog` VALUES ('2973', '偷懒的一天-jQuery之事件与应用 ', '网络', '\n<p>　　hi</p>\r\n<p>睡得恍恍惚惚不知精神为何物了</p>\r\n<p>1、jQuery</p>\r\n<p>-----事件与应用-----</p>\r\n<p>----页面加载时触发ready()事件</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">ready()</code>事件类似于<code class=\"marker\">onLoad()</code>事件，但前者只要页面的DOM结构加载后便触发，而后者必须在页面全部元素加载成功才触发，<code class=\"marker\">ready()</code>可以写多个，按顺序执行。此外，下列写法是相等的：</p>\r\n<p><code class=\"marker\"><strong>$(document).ready(function(){})</strong></code><strong>等价于</strong><code class=\"marker\"><strong>$(function(){});</strong></code></p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;页面载入时触发ready()事件&lt;/h3&gt;<br>        &lt;div id=\"tip\"&gt;&lt;/div&gt;<br>        &lt;input id=\"btntest\" type=\"button\" value=\"点下我\" /&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"#btntest\").ready(function()) {<br>                $(\"#btntest\").bind(\"click\", function () {<br>                    $(\"#tip\").html(\"我被点击了！\");<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用bind()方法绑定元素的事件</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">bind()</code>方法绑定元素的事件非常方便，绑定前，需要知道被绑定的元素名，绑定的事件名称，事件中执行的函数内容就可以，它的绑定格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector).bind(event,[data] function)</strong></code></p>\r\n<p>参数event为事件名称，多个事件名称用空格隔开，function为事件执行的函数。</p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n<p> &lt;body&gt;<br>        &lt;h3&gt;bind()方法绑多个事件&lt;/h3&gt;<br>        &lt;input id=\"btntest\" type=\"button\" value=\"点击或移出就不可用了\" /&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#btntest\").bind(\"click mouseout\" , function () {<br>                    $(this).attr(\"disabled\", \"true\");<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用hover()方法切换事件</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">hover()</code>方法的功能是当鼠标移到所选元素上时，执行方法中的第一个函数，鼠标移出时，执行方法中的第二个函数，实现事件的切实效果，调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector).hover(over</strong><strong>，</strong><strong>out);</strong></code></p>\r\n<p>over参数为移到所选元素上触发的函数，out参数为移出元素时触发的函数。</p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;hover()方法切换事件&lt;/h3&gt;<br>        &lt;div&gt;别走！你就是土豪&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"div\").hover(<br>                function () {<br>                    $(this).addClass(\"orange\");<br>                },<br>                function () {<br>                    $(this).removeClass(\"orange\")<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用toggle()方法绑定多个函数</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">toggle()</code>方法可以在元素的click事件中绑定两个或两个以上的函数，同时，它还可以实现元素的隐藏与显示的切换，绑定多个函数的调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector).toggle(fun1(),fun2(),funN(),...)</strong></code></p>\r\n<p>其中，fun1，fun2就是多个函数的名称</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p> </p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;toggle()方法绑定多个函数&lt;/h3&gt;<br>        &lt;input id=\"btntest\" type=\"button\" value=\"点一下我\" /&gt;<br>        &lt;div&gt;我是动态显示的&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#btntest\").bind(\"click\", function () {<br>                    $(\"div\").toggle();}<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用unbind()方法移除元素绑定的事件</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">unbind()</code>方法可以移除元素已绑定的事件，它的调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector).unbind(event,fun)</strong></code></p>\r\n<p>其中参数event表示需要移除的事件名称，多个事件名用空格隔开，fun参数为事件执行时调用的函数名称。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p> 如果没有规定参数，unbind() 方法会删除指定元素的所有事件处理程序。</p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;unbind()移除绑定的事件&lt;/h3&gt;<br>        &lt;input id=\"btntest\" type=\"button\" value=\"移除事件\" /&gt;<br>        &lt;div&gt;土豪，咱们交个朋友吧&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"div\").bind(\"click\",<br>                function () {<br>                    $(this).removeClass(\"backcolor\").addClass(\"color\");<br>                }).bind(\"dblclick\", function () {<br>                    $(this).removeClass(\"color\").addClass(\"backcolor\");<br>                })<br>                $(\"#btntest\").bind(\"click\", function () {<br>                    $(\"div\").unbind()<br>                    $(this).attr(\"disabled\", \"true\");<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用one()方法绑定元素的一次性事件</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">one()</code>方法可以绑定元素任何有效的事件，但这种方法绑定的事件只会触发一次，它的调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector).one(event,[data],fun)</strong></code></p>\r\n<p>参数event为事件名称，data为触发事件时携带的数据，fun为触发该事件时执行的函数。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p> </p>\r\n<p> &lt;body&gt;<br>        &lt;h3&gt;one()方法执行一次绑定事件&lt;/h3&gt;<br>        &lt;div&gt;请点击我一下&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                var intI = 0;<br>                $(\"div\").one(\"click\", function () {<br>                    intI++;<br>                    $(this).css(\"font-size\", intI + \"px\");<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----调用trigger()方法手动触发指定的事件</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">trigger()</code>方法可以直接手动触发元素指定的事件，这些事件可以是元素自带事件，也可以是自定义的事件，总之，该事件必须能执行，它的调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).trigger(event)</strong></code></p>\r\n<p>其中event参数为需要手动触发的事件名称。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p> </p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;trigger()手动触发事件&lt;/h3&gt;<br>        &lt;div&gt;土豪，咱们交个朋友吧&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"div\").bind(\"change-color\", function () {<br>                    $(this).addClass(\"color\");<br>                });<br>                $(\"div\").trigger(\"change-color\");<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----文本框的focus和blur事件</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>focus事件在元素获取焦点时触发，如点击文本框时，触发该事件；而blur事件则在元素丢失焦点时触发，如点击除文本框的任何元素，都会触发该事件。</p>\r\n\r\n</div>\r\n\r\n</div>\r\n<p> </p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;表单中文本框的focus和blur事件&lt;/h3&gt;<br>        &lt;input id=\"txtest\" type=\"text\" value=\"\" /&gt;<br>        &lt;div&gt;&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"input\")<br>                .bind(\"focus\", function () {<br>                    $(\"div\").html(\"请输入您的姓名！\");<br>                })<br>$(\"input\").bind(\"blur\", function () {<br>                    if ($(this).val().length == 0)<br>                        $(\"div\").html(\"你的名称不能为空！\");<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----下拉列表框的change事件</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>当一个元素的值发生变化时，将会触发<code class=\"marker\">change</code>事件，例如在选择下拉列表框中的选项时，就会触<code class=\"marker\">change</code>事件。</p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;下拉列表的change事件&lt;/h3&gt;<br>        &lt;select id=\"seltest\"&gt;<br>            &lt;option value=\"葡萄\"&gt;葡萄&lt;/option&gt;<br>            &lt;option value=\"苹果\"&gt;苹果&lt;/option&gt;<br>            &lt;option value=\"荔枝\"&gt;荔枝&lt;/option&gt;<br>            &lt;option value=\"香焦\"&gt;香焦&lt;/option&gt;<br>        &lt;/select&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"select\").bind(\"change\", function () {<br>                    if ($(this).val() == \"苹果\")<br>                        $(this).css(\"background-color\", \"red\");<br>                    else<br>                        $(this).css(\"background-color\", \"green\");<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----调用live()方法绑定元素的事件</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>与<code class=\"marker\">bind()</code>方法相同，<code class=\"marker\">live()</code>方法与可以绑定元素的可执行事件，除此相同功能之外，<code class=\"marker\">live()</code>方法还可以绑定动态元素，即使用代码添加的元素事件，格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector).live(event,[data],fun)</strong></code></p>\r\n<p>参数event为事件名称，data为触发事件时携带的数据，fun为触发该事件时执行的函数。</p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;live()方法绑多个事件&lt;/h3&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#btntest\").live(\"click mouseout\", function () {<br>                    $(this).attr(\"disabled\", \"true\");<br>                })<br>                $(\"body\").append(\"&lt;input id=\'btntest\' type=\'button\' value=\'点击或移出就不可用了\' /&gt;\");<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----</p>\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\n ', '2016-04-28 20:05:04', '2016-04-28 20:16:32', '0', '0', '0', '1', '75');
INSERT INTO `blog` VALUES ('2974', 'web进阶之jQuery操作DOM元素&&MySQL记录操作&&PHP面向对象学习笔记 ', '网络', '\n<p>hi</p>\r\n<p>保持学习数量和质量</p>\r\n<p>1、jQuery操作DOM元素</p>\r\n<p>----使用attr()方法控制元素的属性</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">attr()</code>方法的作用是设置或者返回元素的属性，其中<code class=\"marker\">attr(属性名)</code>格式是获取元素属性名的值，<code class=\"marker\">attr(属性名，属性值)</code>格式则是设置元素属性名的值。</p>\r\n<p>控制就是获取以及设置</p>\r\n<p> &lt;h3&gt;attr()方法设置元素属性&lt;/h3&gt;<br>        &lt;a href=\"http://127.0.0.1\" id=\"a1\"&gt;点我就变&lt;/a&gt;<br>        &lt;div&gt;我改变后的地址是：&lt;span id=\"tip\"&gt;&lt;/span&gt;&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"#a1\").attr(\"href\",\"www.imooc.com\");<br>            var $url = $(\"#a1\").attr(\"href\");<br>            $(\"#tip\").html($url);<br>        &lt;/script&gt;</p>\r\n<p>----操作元素的内容</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>使用<code class=\"marker\">html()</code>和<code class=\"marker\">text()</code>方法操作元素的内容，当两个方法的参数为空时，表示获取该元素的内容，而如果方法中包含参数，则表示将参数值设置为元素内容。</p>\r\n<p>使用方法与attr()略有不同，但作用基本相同</p>\r\n<p> &lt;h3&gt;html()和text()方法设置元素内容&lt;/h3&gt;<br>        &lt;div id=\"html\"&gt;&lt;/div&gt;<br>        &lt;div id=\"text\"&gt;&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            var $content = \"&lt;b&gt;唉，我又变胖了！&lt;/b&gt;\";<br>            $(\"#html\").html($content);<br>            $(\"#text\").text($content);<br>        &lt;/script&gt;</p>\r\n<p>----操作元素的样式</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>通过<code class=\"marker\">addClass()</code>和<code class=\"marker\">css()</code>方法可以方便地操作元素中的样式，前者括号中的参数为增加元素的样式名称，后者直接将样式的属性内容写在括号中。</p>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;css()方法设置元素样式&lt;/h3&gt;<br>        &lt;div id=\"content\"&gt;我穿了一件红色外衣&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"#content\").css({\"background-color\":\"red\",\"color\":\"#fff\"}) ;<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----移除属性和样式</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>使用<code class=\"marker\">removeAttr(name)</code>和<code class=\"marker\">removeClass(class)</code>分别可以实现移除元素的属性和样式的功能，前者方法中参数表示移除属性名，后者方法中参数则表示移除的样式名</p>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;removeClass()方法移除元素样式&lt;/h3&gt;<br>        &lt;div id=\"content\" class=\"blue white\"&gt;我脱下了一件蓝色外衣&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"#content\").removeClass(\"blue white\");<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用append()方法向元素内追加内容</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">append(content)</code>方法的功能是向指定的元素中追加内容，被追加的content参数，可以是字符、HTML元素标记，还可以是一个返回字符串内容的函数。</p>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;append()方法追加内容&lt;/h3&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            function rethtml() {<br>                var $html = \"&lt;div id=\'test\' title=\'hi\'&gt;我是调用函数创建的&lt;/div&gt;\"<br>                return $html;<br>            }<br>            $(\"body\").append(rethtml());<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用appendTo()方法向被选元素内插入内容</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">appendTo()</code>方法也可以向指定的元素内插入内容，它的使用格式是：</p>\r\n<p><code class=\"marker\"><strong>$(content).appendTo(selector)</strong></code></p>\r\n<p>参数content表示需要插入的内容，参数selector表示被选的元素，即把content内容插入selector元素内，默认是在尾部。</p>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;appendTo()方法插入内容&lt;/h3&gt;<br>        &lt;div&gt;<br>            &lt;span class=\"green\"&gt;小乌龟&lt;/span&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            var $html = \"&lt;span class=\'red\'&gt;小青蛙&lt;/span&gt;\"<br>            $($html).appendTo(\"div\");<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p> 注意这里的div若换为.red，效果会有不同，自行实验以及思考吧。</p>\r\n<p>----使用before()和after()在元素前后插入内容</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>使用<code class=\"marker\">before()</code>和<code class=\"marker\">after()</code>方法可以在元素的前后插入内容，它们分别表示在整个元素的前面和后面插入指定的元素或内容，调用格式分别为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).before(content)</strong></code>和<code class=\"marker\"><strong>$(selector).after(content)</strong></code></p>\r\n<p>其中参数content表示插入的内容，该内容可以是元素或HTML字符串。</p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n<p> </p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;after()方法在元素之后插入内容&lt;/h3&gt;<br>        &lt;span class=\"green\"&gt;我们交个朋友吧！&lt;/span&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            var $html = \"&lt;span class=\'red\'&gt;兄弟。&lt;/span&gt;\"<br>            $(\"span\").after($html);<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用clone()方法复制元素</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>调用<code class=\"marker\">clone()</code>方法可以生成一个被选元素的副本，即复制了一个被选元素，包含它的节点、文本和属性，它的调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).clone()</strong></code></p>\r\n<p>其中参数selector可以是一个元素或HTML内容。</p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n<p> </p>\r\n<p> &lt;body&gt;<br>        &lt;h3&gt;使用clone()方法复制元素&lt;/h3&gt;<br>        &lt;span class=\"red\" title=\"hi\"&gt;我是美猴王&lt;/span&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"body\").append($(\"span\").clone());<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----替换内容</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">replaceWith()</code>和<code class=\"marker\">replaceAll()</code>方法都可以用于替换元素或元素中的内容，但它们调用时，内容和被替换元素所在的位置不同，分别为如下所示：</p>\r\n<p><code class=\"marker\"><strong>$(selector).replaceWith(content)</strong></code>和<code class=\"marker\"><strong>$(content).replaceAll(selector)</strong></code></p>\r\n<p>参数selector为被替换的元素，content为替换的内容。</p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n</div>\r\n<p> </p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;使用replaceAll()方法替换元素内容&lt;/h3&gt;<br>        &lt;span class=\"green\" title=\"hi\"&gt;我是屌丝&lt;/span&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            var $html = \"&lt;span class=\'red\' title=\'hi\'&gt;我是土豪&lt;/span&gt;\";<br>            $($html).replaceAll(\"span\");<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用wrap()和wrapInner()方法包裹元素和内容</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">wrap()</code>和<code class=\"marker\">wrapInner()</code>方法都可以进行元素的包裹，但前者用于包裹元素本身，后者则用于包裹元素中的内容，它们的调用格式分别为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).wrap(wrapper)</strong></code>和<code class=\"marker\"><strong>$(selector).wrapInner(wrapper)</strong></code></p>\r\n<p>参数selector为被包裹的元素，wrapper参数为包裹元素的格式。比如&lt;div&gt;&lt;/div&gt;</p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;使用wrapInner()方法包裹元素&lt;/h3&gt;<br>        &lt;span class=\"red\" title=\'hi\'&gt;我的身体有点歪&lt;/span&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\".red\").wrapInner(\"&lt;i&gt;&lt;/i&gt;\");<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用each()方法遍历元素</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>使用<code class=\"marker\">each()</code>方法可以遍历指定的元素集合，在遍历时，通过回调函数返回遍历元素的序列号，它的调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).each(function(index))</strong></code></p>\r\n<p>参数function为遍历时的回调函数，index为遍历元素的序列号，它从0开始。</p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;使用each()方法遍历元素&lt;/h3&gt;<br>        &lt;span class=\"green\"&gt;香蕉&lt;/span&gt;<br>        &lt;span class=\"green\"&gt;桃子&lt;/span&gt;<br>        &lt;span class=\"green\"&gt;葡萄&lt;/span&gt;<br>        &lt;span class=\"green\"&gt;荔枝&lt;/span&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"span\").each(function (index) {<br>                if (index == 1) {<br>                    $(this).attr(\"class\", \"red\");<br>                }<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用remove()和empty()方法删除元素</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">remove()</code>方法删除所选元素本身和子元素，该方法可以通过添加过滤参数指定需要删除的某些元素，而<code class=\"marker\">empty()</code>方法则只删除所选元素的子元素。</p>\r\n</div>\r\n</div>\r\n<p>    &lt;body&gt;<br>        &lt;h3&gt;使用empty()方法删除元素&lt;/h3&gt;<br>        &lt;span class=\"green\"&gt;香蕉&lt;/span&gt;<br>        &lt;span class=\"green\"&gt;桃子&lt;/span&gt;<br>        &lt;span class=\"green\"&gt;葡萄&lt;/span&gt;<br>        &lt;span class=\"green\"&gt;荔枝&lt;/span&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"span\").empty(\".green\");<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p> </p>\r\n<p>2、MySQL</p>\r\n<p>-----操作数据表中的记录-----</p>\r\n<p>mysql&gt; CREATE TABLE users(<br>    -&gt; id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,<br>    -&gt; username VARCHAR(20) NOT NULL,<br>    -&gt; password VARCHAR(32) NOT NULL,<br>    -&gt; age SMALLINT NOT NULL DEFAULT 10,<br>    -&gt; sex BOOLEAN<br>    -&gt; );</p>\r\n<p>----插入记录INSERT</p>\r\n<p>INSERT tbl_name [(col_name)] {VALUES|VALUE}...</p>\r\n<p>若省略字段，则对所有字段进行赋值操作。若此时想保持主键的递增，主键的VALUE写为NULL/DEFAULT即可。而且，省略字段时，必须且只能对所有赋值，每一个字段都要赋值，若不匹配会报错</p>\r\n<p>mysql&gt; INSERT users VALUES(NULL,\'Tom\',\'123\',23,1);</p>\r\n<p>赋值可以写值，也可以写函数，或者默认值。这里插入多个值为例。</p>\r\n<p>mysql&gt; INSERT users VALUES(NULL,\'Tom\',\'123\',23,1),(NULL,\'Rose\',md5(\'123\'),DEFAULT,0);</p>\r\n<p>mysql&gt; SELECT * FROM users;<br>+----+----------+----------------------------------+-----+------+<br>| id | username | password                         | age | sex  |<br>+----+----------+----------------------------------+-----+------+<br>|  1 | Tom      | 123                              |  23 |    1 |<br>|  2 | Tom      | 123                              |  23 |    1 |<br>|  3 | Rose     | 202cb962ac59075b964b07152d234b70 |  10 |    0 |<br>+----+----------+----------------------------------+-----+------+</p>\r\n<p>----其他插入记录的方法</p>\r\n<p>--INSERT.. SET </p>\r\n<p>与INSERT不同的在于可以进行子查询（SubQuery）;且每次只能插入一条记录</p>\r\n<p>INSERT tbl_name </p>\r\n<p>mysql&gt; INSERT users SET username=\'Ben\',password=\'323\';</p>\r\n<p>由于其他字段有默认或者非空，所以这样写没错。</p>\r\n<p>--INSERT...SELECT</p>\r\n<p>----更新（单表更新）UPDATE</p>\r\n<p>类似INSERT...SET...的书写方式</p>\r\n<p>mysql&gt; UPDATE users SET age=age+5;</p>\r\n<p>mysql&gt; SELECT * FROM users;<br>+----+----------+----------------------------------+-----+------+<br>| id | username | password                         | age | sex  |<br>+----+----------+----------------------------------+-----+------+<br>|  1 | Tom      | 123                              |  28 |    1 |<br>|  2 | Tom      | 123                              |  28 |    1 |<br>|  3 | Rose     | 202cb962ac59075b964b07152d234b70 |  15 |    0 |<br>|  4 | Ben      | 323                              |  15 | NULL |<br>+----+----------+----------------------------------+-----+------+</p>\r\n<p>此时更新所有列。</p>\r\n<p>若想更新某些列，要用到条件</p>\r\n<p>mysql&gt; UPDATE users SET age=age+10 WHERE id%2=0;</p>\r\n<p>这里的意思是把偶数id的age加10的操作</p>\r\n<p>----删除记录（单表删除）DELETE</p>\r\n<p>DELETE FROM tbl [WHERE ...]</p>\r\n<p>注意删除后再插入的id变化</p>\r\n<p>mysql&gt; DELETE FROM users WHERE id=2;<br>Query OK, 1 row affected (0.01 sec)</p>\r\n<p>mysql&gt; SELECT * FROM users;<br>+----+----------+----------------------------------+-----+------+<br>| id | username | password                         | age | sex  |<br>+----+----------+----------------------------------+-----+------+<br>|  1 | Tom      | 123                              |  27 |    0 |<br>|  3 | Rose     | 202cb962ac59075b964b07152d234b70 |  12 |    0 |<br>|  4 | Ben      | 323                              |  21 |    0 |<br>+----+----------+----------------------------------+-----+------+<br>3 rows in set (0.00 sec)</p>\r\n<p>mysql&gt; INSERT users SET username=\'Ben\',password=\'323\';<br>Query OK, 1 row affected (0.01 sec)</p>\r\n<p>mysql&gt; SELECT * FROM users;<br>+----+----------+----------------------------------+-----+------+<br>| id | username | password                         | age | sex  |<br>+----+----------+----------------------------------+-----+------+<br>|  1 | Tom      | 123                              |  27 |    0 |<br>|  3 | Rose     | 202cb962ac59075b964b07152d234b70 |  12 |    0 |<br>|  4 | Ben      | 323                              |  21 |    0 |<br>|  5 | Ben      | 323                              |  10 | NULL |<br>+----+----------+----------------------------------+-----+------+</p>\r\n<p>id号是自动增加，而不是智能的填补，请注意。</p>\r\n<p>----查询SELECT</p>\r\n<p>对于数据库最多应用的语句。比如之前见过的SELECT * FROM users;</p>\r\n<p>--查询表达式</p>\r\n<p>每一个表达式表示想要的一列，必须有且至少有一个；</p>\r\n<p>多个列之间以,分隔</p>\r\n<p>*表示所有列。tbl_name.*可以表示命名表的所有列；</p>\r\n<p>mysql&gt; SELECT id,username FROM users;</p>\r\n<p>也可以改变顺序来显示</p>\r\n<p>mysql&gt; SELECT username,id FROM userS;<br>+----------+----+<br>| username | id |<br>+----------+----+<br>| Tom      |  1 |<br>| Rose     |  3 |<br>| Ben      |  4 |<br>| Ben      |  5 |<br>+----------+----+</p>\r\n<p>为了以后多表查询的方便，“全”查询这样写</p>\r\n<p>mysql&gt; SELECT users.id,users.username FROM users;</p>\r\n<p>--赋予别名</p>\r\n<p>mysql&gt; SELECT id AS userid,username AS uname FROM users;<br>+--------+-------+<br>| userid | uname |<br>+--------+-------+<br>|      1 | Tom   |<br>|      3 | Rose  |<br>|      4 | Ben   |<br>|      5 | Ben   |<br>+--------+-------+</p>\r\n<p>数据表中的名称其实没有变</p>\r\n<p>----WHERE条件</p>\r\n<p>添加删除一般要加，不然就是对所有记录的操作；WHERE表达式中支持函数或运算符</p>\r\n<p>----GROUP BY查询结果分组</p>\r\n<p>ASC升序， DESC降序</p>\r\n<p>mysql&gt; SELECT sex FROM users GROUP BY sex;<br>+------+<br>| sex  |<br>+------+<br>| NULL |<br>|    0 |<br>+------+<br>2 rows in set (0.01 sec)</p>\r\n<p>mysql&gt; SELECT sex FROM users GROUP BY age ASC;<br>+------+<br>| sex  |<br>+------+<br>| NULL |<br>|    0 |<br>|    0 |<br>|    0 |<br>+------+</p>\r\n<p>----having分组条件</p>\r\n<p>mysql&gt; SELECT sex,age FROM users GROUP BY sex HAVING age&gt;20;<br>+------+-----+<br>| sex  | age |<br>+------+-----+<br>|    0 |  27 |<br>+------+-----+</p>\r\n<p>注意having语句中的字段必须出现在select中，或者就干脆是个聚合函数（max等）</p>\r\n<p>----查询结果进行排序ORDER BY</p>\r\n<p>类似GROUP BY</p>\r\n<p>mysql&gt; SELECT * FROM users ORDER BY age,id DESC;</p>\r\n<p>+----+----------+----------------------------------+-----+------+<br>| id | username | password                         | age | sex  |<br>+----+----------+----------------------------------+-----+------+<br>|  5 | Ben      | 323                              |  10 | NULL |<br>|  3 | Rose     | 202cb962ac59075b964b07152d234b70 |  12 |    0 |<br>|  4 | Ben      | 323                              |  21 |    0 |<br>|  1 | Tom      | 123                              |  27 |    0 |<br>+----+----------+----------------------------------+-----+------+</p>\r\n<p>注意这里排序的标准给了不止一个，则先按照age进行默认的升序，若遇到相同的，则再按照id对相同的进行降序排列</p>\r\n<p>----LIMIT限制返回数量</p>\r\n<p>mysql&gt; SELECT * FROM users LIMIT 2,2;<br>+----+----------+----------+-----+------+<br>| id | username | password | age | sex  |<br>+----+----------+----------+-----+------+<br>|  4 | Ben      | 323      |  21 |    0 |<br>|  5 | Ben      | 323      |  10 | NULL |<br>+----+----------+----------+-----+------+</p>\r\n<p>需要注意的是若只写一个数字2，是说从头算起的两个；这里的2,2是指，从第三条开始返回两条，因为排列是默认从0开始的，所以这里是第三条开始。</p>\r\n<p>另外，限制的顺序与id没有关系</p>\r\n<p>mysql&gt; SELECT * FROM users ORDER BY id DESC LIMIT 2;<br>+----+----------+----------+-----+------+<br>| id | username | password | age | sex  |<br>+----+----------+----------+-----+------+<br>|  5 | Ben      | 323      |  10 | NULL |<br>|  4 | Ben      | 323      |  21 |    0 |<br>+----+----------+----------+-----+------+</p>\r\n<p>----学习了SELECT之后</p>\r\n<p>mysql&gt; INSERT test(username) SELECT username FROM users WHERE age&gt;=20;</p>\r\n<p>mysql&gt; SELECT * FROM test;<br>+----+----------+<br>| id | username |<br>+----+----------+<br>|  1 | Tom      |<br>|  2 | Ben      |<br>+----+----------+</p>\r\n<p>就可以定向的查找并写入</p>\r\n<p>----小结</p>\r\n<p>记录操作：增更删查</p>\r\n<p>INSERT,UPDATE,DELETE,SELECT</p>\r\n<p>3、面向对象</p>\r\n<p> -----基本实践-----</p>\r\n<p>----类的概念</p>\r\n<p>类可以看作是“一类人”，具有相同的“属性”和“方法”（但相对应的值不一定相同）；</p>\r\n<p>属性，是类的固有性质</p>\r\n<p>方法，是类的“动作”</p>\r\n<p>类的对象称为类的实例化——对象就是属于类的某一个个体，类的具体化</p>\r\n<p>类的属性和方法是类成员</p>\r\n<p>----类的实例化</p>\r\n<p>用具体的数据填满类的框架</p>\r\n<p>&lt;?php<br>/*<br> * 面对对象的学习记录用代码<br> */<br>//定义类<br>class nbaPlayer{<br>	public $name=\"Jordan\";<br>	public $height=\"198cm\";<br>	public $team=\"Bull\";<br><br>	public function __construct(){<br><br>	}<br><br>	public function run(){<br>		echo \"Running\\n\";<br>	}<br>}<br>//实例化<br>$jordan=new nbaPlayer();<br>//调用对象的属性和方法<br>echo $jordan-&gt;name.\"\\n\";<br>$jordan-&gt;run();</p>\r\n<p>----构造函数</p>\r\n<p>__construct</p>\r\n<p>默认调用，可以自定义来给出类的默认值</p>\r\n<p>使用方法是在函数中写入变量，实例化的时候要给值</p>\r\n<p>&lt;?php<br>/*<br> * 面对对象的学习记录用代码<br> */<br>//定义类<br>class nbaPlayer{<br>	public $name;<br>	public $height;<br>	public $team;<br><br>	public function __construct($name,$height,$team){<br>		echo \"constructing\\n\";//判断是否调用了构造函数<br>		$this-&gt;name=$name;      //在方法中用$this伪变量来传递参数<br>		$this-&gt;height=$height;<br>		$this-&gt;team=$team;<br>	}<br><br>	public function run(){<br>		echo \"Running\\n\";<br>	}<br>}<br>//实例化<br>$jordan=new nbaPlayer(\"Jordan\",\"198cm\",\"Bull\");<br>//调用对象的属性和方法<br>echo $jordan-&gt;name.\"\\n\";</p>\r\n<p>$jordan-&gt;run();</p>\r\n<p>$james=new nbaPlayer(\"James\", \"197cm\", \"Heat\");</p>\r\n<p>注意这里会输出两次构造函数。也就是说，每一次实例化都会调用一次构造函数。</p>\r\n<p>----析构函数</p>\r\n<p>__destruct()</p>\r\n<p>写入析构函数后，</p>\r\n<p>function __destruct(){<br>		echo \"destructing\\n\";<br>	}</p>\r\n<p>结果如下</p>\r\n<p>constructing Jordan Running constructing destructing destructing</p>\r\n<p>也就是说，析构函数会在程序结束的时候自动调用</p>\r\n<p>或者，把实例化的对象赋值为null时也会调用析构函数</p>\r\n<p>一般用于清理使用的资源</p>\r\n<p>----对象引用</p>\r\n<p>//对象的引用<br>$james1=$james;</p>\r\n<p>$james2=&amp;$james;</p>\r\n<p>其中，有&amp;的引用，两个对象的变化是同步的，可以看作是一种映像。具体可以用上面提到的析构函数来简单的验证。</p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\n ', '2016-04-28 20:05:04', '2016-04-28 20:16:35', '0', '0', '0', '1', '75');
INSERT INTO `blog` VALUES ('2975', 'jQuery入门第二天&&&正则表达式完结篇——仿smarty引擎的制作 ', '网络', '\n<p>　　hi</p>\r\n<p>周一完全的不在状态。。。中午还去观战，没有睡觉的我，晚上的smarty不知道能不能做完，加油吧</p>\r\n<p>1、jQuery</p>\r\n<p>---过滤性选择器（二）---</p>\r\n<p>--[attribute=value]属性选择器</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>属性作为DOM元素的一个重要特征，也可以用于选择器中，从本节开始将介绍通过元素属性获取元素的选择器，<code class=\"marker\">[attribute=value]</code>属性选择器的功能是获取与属性名和属性值完全相同的全部元素，其中[]是专用于属性选择器的括号符，参数attribute表示属性名称，value参数表示属性值。</p>\r\n<p>&lt;h3&gt;改变\"title\"属性值为\"蔬菜\"的背景色&lt;/h3&gt;<br>        &lt;ul&gt;<br>            &lt;li title=\"蔬菜\"&gt;茄子&lt;/li&gt;<br>            &lt;li title=\"水果\"&gt;香蕉&lt;/li&gt;<br>            &lt;li title=\"蔬菜\"&gt;芹菜&lt;/li&gt;<br>            &lt;li title=\"水果\"&gt;苹果&lt;/li&gt;<br>            &lt;li title=\"水果\"&gt;西瓜&lt;/li&gt;<br>        &lt;/ul&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"li[title=\'蔬菜\']\").css(\"background-color\", \"green\");</p>\r\n<p>与<code class=\"marker\">[attribute=value]</code>属性选择器正好相反，<code class=\"marker\">[attribute!=value]</code>属性选择器的功能是获取不包含属性名，或者与属性名和属性值不相同的全部元素，其中[]是专用于属性选择器的括号符，参数attribute表示属性名称，value参数表示属性值。</p>\r\n<p>--[attribute*=value]属性选择器</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>介绍一个功能更为强大的属性选择器<code class=\"marker\">[attribute*=value]</code>，它可以获取属性值中包含指定内容的全部元素，其中[]是专用于属性选择器的括号符，参数attribute表示属性名称，value参数表示对应的属性值。</p>\r\n<p>&lt;h3&gt;改变\"title\"属性值包含\"果\"的背景色&lt;/h3&gt;<br>        &lt;ul&gt;<br>            &lt;li title=\"蔬菜\"&gt;茄子&lt;/li&gt;<br>            &lt;li title=\"水果\"&gt;香蕉&lt;/li&gt;<br>            &lt;li title=\"蔬菜\"&gt;芹菜&lt;/li&gt;<br>            &lt;li title=\"人参果\"&gt;小西红柿&lt;/li&gt;<br>            &lt;li title=\"水果\"&gt;西瓜&lt;/li&gt;<br>        &lt;/ul&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;</p>\r\n<p><span style=\"line-height: 1.5;\">$(\"li[title*=\'果\']\").css(\"background-color\", \"green\");</span></p>\r\n<p><span style=\"line-height: 1.5;\">--</span>:first-child子元素过滤选择器</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>通过上面章节的学习，我们知道使用<code class=\"marker\">:first</code>过滤选择器可以获取指定父元素中的首个子元素，但该选择器返回的只有一个元素，并不是一个集合，而使用<code class=\"marker\">:first-child</code>子元素过滤选择器则可以获取每个父元素中返回的首个子元素，它是一个集合，常用多个集合数据的选择处理。</p>\r\n<p>&lt;h3&gt;改变每个\"蔬菜水果\"中第一行的背景色&lt;/h3&gt;<br>        &lt;ol&gt;<br>            &lt;li&gt;芹菜&lt;/li&gt;<br>            &lt;li&gt;茄子&lt;/li&gt;<br>            &lt;li&gt;萝卜&lt;/li&gt;<br>            &lt;li&gt;大白菜&lt;/li&gt;<br>            &lt;li&gt;西红柿&lt;/li&gt;<br>        &lt;/ol&gt;<br>        &lt;ol&gt;<br>            &lt;li&gt;橘子&lt;/li&gt;<br>            &lt;li&gt;香蕉&lt;/li&gt;<br>            &lt;li&gt;葡萄&lt;/li&gt;<br>            &lt;li&gt;苹果&lt;/li&gt;<br>            &lt;li&gt;西瓜&lt;/li&gt;<br>        &lt;/ol&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"li:first-child\").css(\"background-color\", \"green\");</p>\r\n<p> $(\"li:last-child\").css(\"background-color\", \"blue\");</p>\r\n<p>与<code class=\"marker\">:first-child</code>子元素过滤选择器功能相反，<code class=\"marker\">:last-child</code>子元素过滤选择器的功能是获取每个父元素中返回的最后一个子元素，它也是一个集合，常用多个集合数据的选择处理。</p>\r\n<p>---表单选择器---</p>\r\n<p>--:input表单选择器</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>如何获取表单全部元素？<code class=\"marker\">:input</code>表单选择器可以实现，它的功能是返回<strong>全部的表单元素</strong>，不仅包括所有&lt;input&gt;标记的表单元素，而且还包括&lt;textarea&gt;、&lt;select&gt; 和 &lt;button&gt;标记的表单元素，因此，它选择的表单元素是最广的。</p>\r\n<p> &lt;h3&gt;修改全部表单元素的背景色&lt;/h3&gt;<br>        &lt;form id=\"frmTest\" action=\"#\"&gt;<br>        &lt;input type=\"button\" value=\"Input Button\" /&gt;&lt;br /&gt;<br>        &lt;select&gt;<br>            &lt;option&gt;Option&lt;/option&gt;<br>        &lt;/select&gt;&lt;br /&gt;<br>        &lt;textarea rows=\"3\" cols=\"8\"&gt;&lt;/textarea&gt;&lt;br /&gt;<br>        &lt;button&gt;<br>            Button&lt;/button&gt;&lt;br /&gt;<br>        &lt;/form&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"#frmTest:input\").addClass(\"bg_blue\");<br>        &lt;/script&gt;</p>\r\n<p>--:text表单文本选择器</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">:text</code>表单文本选择器可以获取表单中全部单行的文本输入框元素，单行的文本输入框就像一个不换行的字条工具，使用非常广泛。</p>\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p> </p>\r\n<p> &lt;h3&gt;修改多个单行输入框元素的背景色&lt;/h3&gt;<br>        &lt;form id=\"frmTest\" action=\"#\"&gt;<br>        &lt;input type=\"text\" id=\"Text1\" value=\"我是小纸条\"/&gt;&lt;br /&gt;<br>        &lt;textarea rows=\"3\" cols=\"8\"&gt;&lt;/textarea&gt;&lt;br /&gt;<br>        &lt;input type=\"text\" id=\"Text2\" value=\"我也是小纸条\"/&gt;&lt;br /&gt;<br>        &lt;button&gt;<br>            Button&lt;/button&gt;&lt;br /&gt;<br>        &lt;/form&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"#frmTest :text\").addClass(\"bg_blue\");<br>        &lt;/script&gt;</p>\r\n<p>--:password表单密码选择器</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>如果想要获取密码输入文本框，可以使用<code class=\"marker\">:password</code>选择器，它的功能是获取表单中全部的密码输入文本框元素。</p>\r\n\r\n</div>\r\n\r\n</div>\r\n<p> </p>\r\n<p>&lt;h3&gt;修改多个密码输入框元素的背景色&lt;/h3&gt;<br>        &lt;form id=\"frmTest\" action=\"#\"&gt;<br>        &lt;input type=\"text\" id=\"Text1\" value=\"单行文本输入框\"/&gt;&lt;br /&gt;<br>        &lt;input type=\"password\" id=\"Text2\" value=\"密码文本输入框\"/&gt;&lt;br /&gt;<br>        &lt;textarea rows=\"3\" cols=\"8\"&gt;区域文本输入框&lt;/textarea&gt;&lt;br /&gt;<br>        &lt;input type=\"password\" id=\"Text3\" value=\"密码文本输入框\"/&gt;&lt;br /&gt;<br>        &lt;button&gt;<br>            Button&lt;/button&gt;&lt;br /&gt;<br>        &lt;/form&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"#frmTest :password\").addClass(\"bg_red\");<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>--:radio单选按钮选择器</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>表单中的单选按钮常用于多项数据中仅选择其一，而使用<code class=\"marker\">:radio</code>选择器可轻松获取表单中的<strong>全部单选按钮</strong>元素。</p>\r\n\r\n</div>\r\n\r\n</div>\r\n<p> </p>\r\n<p>&lt;h3&gt;将表单中单选按钮设为不可用&lt;/h3&gt;<br>        &lt;form id=\"frmTest\" action=\"#\"&gt;<br>        &lt;input type=\"button\" value=\"Input Button\" /&gt;&lt;br /&gt;<br>        &lt;input id=\"Radio1\" type=\"radio\" /&gt;<br>        &lt;label for=\"Radio1\"&gt;<br>            男&lt;/label&gt;<br>        &lt;input id=\"Radio2\" type=\"radio\" /&gt;<br>        &lt;label for=\"Radio2\"&gt;<br>            女&lt;/label&gt;&lt;br /&gt;<br>        &lt;button&gt;<br>            Button&lt;/button&gt;&lt;br /&gt;<br>        &lt;/form&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"#frmTest :radio\").attr(\"disabled\",\"true\");<br>        &lt;/script&gt;</p>\r\n<p>--:checkbox复选框选择器</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>表单中的复选框常用于多项数据的选择，使用<code class=\"marker\">:checkbox</code>选择器可以快速定位并获取表单中的复选框元素。</p>\r\n\r\n</div>\r\n\r\n</div>\r\n<p> &lt;h3&gt;将表单的全部复选框设为不可用&lt;/h3&gt;<br>        &lt;form id=\"frmTest\" action=\"#\"&gt;<br>        &lt;input type=\"button\" value=\"Input Button\" /&gt;&lt;br /&gt;<br>        &lt;input id=\"Checkbox1\" type=\"checkbox\" /&gt;<br>        &lt;label for=\"Checkbox1\"&gt;<br>            西红柿&lt;/label&gt;&lt;br /&gt;<br>        &lt;input id=\"Checkbox2\" type=\"checkbox\" /&gt;<br>        &lt;label for=\"Checkbox2\"&gt;<br>            茄子&lt;/label&gt;&lt;br /&gt;<br>        &lt;input id=\"Checkbox3\" type=\"checkbox\" /&gt;<br>        &lt;label for=\"Checkbox3\"&gt;<br>            黄瓜&lt;/label&gt;&lt;br /&gt;<br>        &lt;button&gt;<br>            Button&lt;/button&gt;&lt;br /&gt;<br>        &lt;/form&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"#frmTest :checkbox\").attr(\"disabled\",\"true\");<br>        &lt;/script&gt;</p>\r\n<p>--:submit提交按钮选择器</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>通常情况下，一个表单中只允许有一个“type”属性值为“submit”的提交按钮，使用<code class=\"marker\">:submit</code>选择器可获取表单中的这个<strong>提交按钮</strong>元素。</p>\r\n\r\n</div>\r\n\r\n</div>\r\n<p> </p>\r\n<p> &lt;h3&gt;修改表单中提交按钮的背景色&lt;/h3&gt;<br>        &lt;form id=\"frmTest\" action=\"#\"&gt;<br>        &lt;input type=\"button\" value=\"Input Button\" /&gt;&lt;br /&gt;<br>        &lt;input type=\"submit\" value=\"点我就提交了\" /&gt;&lt;br /&gt;<br>        &lt;button&gt;<br>            Button&lt;/button&gt;&lt;br /&gt;<br>        &lt;/form&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"#frmTest input:submit\").addClass(\"bg_red\");<br>        &lt;/script&gt;</p>\r\n<p>--:image图像域选择器</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>当一个&lt;input&gt;元素的“type”属性值设为“image”时，该元素就是一个图像域，使用<code class=\"marker\">:image</code>选择器可以快速获取该类全部元素。</p>\r\n\r\n</div>\r\n\r\n</div>\r\n<p> </p>\r\n<p> &lt;h3&gt;修改表单中图像元素的背景色&lt;/h3&gt;<br>        &lt;form id=\"frmTest\" action=\"#\"&gt;<br>        &lt;input type=\"image\" src=\"http://img.mukewang.com/52b284ea00016b2902590070.jpg\" /&gt;&lt;br /&gt;<br>        &lt;br /&gt;<br>        &lt;img alt=\"\" src=\"http://img.mukewang.com/52b284ea00016b2902590070.jpg\" /&gt;&lt;br /&gt;<br>        &lt;/form&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"#frmTest :image\").addClass(\"bg_red\");<br>        &lt;/script&gt;</p>\r\n<p>--:button表单按钮选择器</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>表单中包含许多类型的按钮，而使用<code class=\"marker\">:button</code>选择器能获取且只能获取“type”属性值为“button”的&lt;input&gt;和&lt;button&gt;这两类普通按钮元素。</p>\r\n\r\n</div>\r\n\r\n</div>\r\n<p> </p>\r\n<p>&lt;h3&gt;修改表单中按钮元素的背景色&lt;/h3&gt;<br>        &lt;form id=\"frmTest\" action=\"#\"&gt;<br>            &lt;input id=\"Button1\" type=\"button\" value=\"我是普通按钮\" /&gt;&lt;br /&gt;<br>            &lt;input id=\"Submit1\" type=\"submit\" value=\"点我就提交\" /&gt;&lt;br /&gt;<br>            &lt;button&gt; 我也是普通按钮 &lt;/button&gt;&lt;br /&gt;<br>        &lt;/form&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"#frmTest :button\").addClass(\"bg_blue\");<br>        &lt;/script&gt;</p>\r\n<p>--:checked选中状态选择器</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>有一些元素存在选中状态，如复选框、单选按钮元素，选中时“checked”属性值为“checked”，调用:checked可以获取处于选中状态的全部元素。</p>\r\n<p>&lt;h3&gt;将处于选中状态的元素设为不可用&lt;/h3&gt;<br>        &lt;form id=\"frmTest\" action=\"#\"&gt;<br>        &lt;input id=\"Radio1\" type=\"radio\" checked=\"checked\" /&gt;<br>        &lt;label id=\"Label1\" for=\"Radio1\"&gt;<br>            苹果&lt;/label&gt;&lt;br /&gt;<br>        &lt;input id=\"Radio2\" type=\"radio\" /&gt;<br>        &lt;label id=\"Label2\" for=\"Radio2\"&gt;<br>            桔子&lt;/label&gt;&lt;br /&gt;<br>        &lt;input id=\"Checkbox1\" type=\"checkbox\" checked=\"checked\" /&gt;<br>        &lt;label id=\"Label3\" for=\"Checkbox1\"&gt;<br>            荔枝&lt;/label&gt;&lt;br /&gt;<br>        &lt;input id=\"Checkbox2\" type=\"checkbox\" /&gt;<br>        &lt;label id=\"Label4\" for=\"Checkbox2\"&gt;<br>            葡萄&lt;/label&gt;&lt;br /&gt;<br>        &lt;input id=\"Checkbox3\" type=\"checkbox\" checked=\"checked\" /&gt;<br>        &lt;label id=\"Label5\" for=\"Checkbox3\"&gt;<br>            香蕉&lt;/label&gt;&lt;br /&gt;<br>        &lt;/form&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"#frmTest :checked\").attr(\"disabled\", true);<br>        &lt;/script&gt;</p>\r\n<p>--:selected选中状态选择器</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>与<code class=\"marker\">:checked</code>选择器相比，<code class=\"marker\">:selected</code>选择器只能获取&lt;select&gt;下拉列表框中全部处于选中状态的&lt;option&gt;选项元素。</p>\r\n\r\n</div>\r\n\r\n</div>\r\n<p> &lt;h3&gt;获取处于选中状态元素的内容&lt;/h3&gt;<br>        &lt;form id=\"frmTest\" action=\"#\"&gt;<br>        &lt;select id=\"Select1\" multiple=\"multiple\"&gt;<br>            &lt;option value=\"0\"&gt;苹果&lt;/option&gt;<br>            &lt;option value=\"1\" selected=\"selected\"&gt;桔子&lt;/option&gt;<br>            &lt;option value=\"2\"&gt;荔枝&lt;/option&gt;<br>            &lt;option value=\"3\" selected=\"selected\"&gt;葡萄&lt;/option&gt;<br>            &lt;option value=\"4\"&gt;香蕉&lt;/option&gt;<br>        &lt;/select&gt;&lt;br /&gt;&lt;br /&gt;<br>        &lt;div id=\"tip\"&gt;&lt;/div&gt;<br>        &lt;/form&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            var $txtOpt = $(\"#frmTest :selected\").text();<br>            $(\"#tip\").html(\"选中内容为:\" + $txtOpt);<br>        &lt;/script&gt;</p>\r\n<p>----------------------------------------------------------------</p>\r\n<p><span style=\"line-height: 1.5;\">2、正则表达式</span></p>\r\n<p> 这里要做的引擎模板的作用是，替换变量输出。</p>\r\n<p>需要的是模板文件.class，编译源文件.php</p>\r\n<p>--template.class.php</p>\r\n<p>&lt;?php<br>/*<br> * 描述：仿smarty模板引擎类文件<br> * <br> */</p>\r\n<p>class template{<br>	private $templateDir;  //用来存储源文件所在目录<br>	private $compileDir;   //用来存放编译后的文件目录<br>	private $leftTag=\'{#\';    //要替换的对象的标记,smarty默认是{<br>	private $rightTag=\'#}\';<br>	private $currentTemp=\'\';  //用来存储当前正在编译的模板文件名<br>	private $outputHtml;    //用来存放currentTemp的HTML代码<br>	private $varpool=array();  //变量池；模板编译时存放变量   <br><br>	public function __construct($templateDir,$compileDir,$leftTag=null,$rightTag=null){<br>		$this-&gt;templateDir=$templateDir;<br>		$this-&gt;compileDir=$compileDir;<br>		if (!empty($leftTag)) $this-&gt;leftTag=$leftTag;       //传递左右标记的时候，需要做一下非空的判断<br>		if (!empty($rightTag)) $this-&gt;rightTag=$rightTag;<br>	}<br><br>	//assign函数——把模板中需要用到的变量，放到地址池中，并给定标记<br>	public function assign($tag,$var){<br>		$this-&gt;varpool[$tag]=$var;		<br>	}<br><br>	//与上面的assign对应，从地址池中取出变量<br>	public function getVar($tag){<br>		return $this-&gt;varpool[$tag];<br>	}<br><br>	//getSourceTemplate：获取编译的源文件_需要知道文件名，和完整的路径（所以要有拓展名<br>	public function getSourceTemplate($templateName,$ext=\'.html\'){<br>		$this-&gt;currentTemp=$templateName;<br>		$sourceFilename=$this-&gt;templateDir.$this-&gt;currentTemp.$ext;<br>		$this-&gt;outputHtml=file_get_contents($sourceFilename);		<br>	}<br><br>	//compileTemplate:编译方法<br>	public function compileTemplate($templateName=null,$ext=\'.html\'){<br>		$templateName=empty($templateName)? $this-&gt;currentTemp:$templateName;<br>		//核心代码，正则编译<br>		//\\{#\\$(\\w+)#\\}<br>		$pattern=\'/\\{#\\$(\\w+)#\\}/\';<br>		//更加清晰的写法$pattern=\'/\'.preg_quote($this-&gt;leftTag).\' *\\$([a-zA-Z_]\\w*) *\'.preg_quote($this-&gt;rightTag).\'/\';<br>		//核心代码要做的就是找到标记内的东西，然后替换为php可以识别的内容<br>		$this-&gt;outputHtml=preg_replace($pattern, \'&lt;?php echo $this-&gt;getVar(\\\'$1\\\')?&gt;\', $this-&gt;outputHtml);<br>		//注意这里的preg_replace的用法，$1表示匹配的子模式<br><br>		//下面生成目标文件，同样也需要完整的目标路径<br>	$compiledFilename=$this-&gt;compileDir.md5($templateName).$ext;<br>		file_put_contents($compiledFilename,$this-&gt;outputHtml);<br>	}<br><br>	public function display($templateName = null, $ext = \'.html\') {<br>		$templateName = empty($templateName) ? $this-&gt;currentTemp : $templateName;<br>		include_once $this-&gt;compileDir.md5($templateName).$ext;<br>	}<br><br>}</p>\r\n<p>--index.php</p>\r\n<p>&lt;?php<br>/*<br> * 山寨模板引擎测试文件<br> */</p>\r\n<p>//包含文件<br>require_once \'template.class.php\';<br>//获取路径,basedir根目录<br>$baseDir=str_replace(\'\\\\\', \'/\',dirname(__FILE__));<br>$temp=new template($baseDir.\'/source/\', $baseDir.\'/compliled/\');</p>\r\n<p>//变量池<br>$temp-&gt;assign(\'pagetitle\', \'山寨版smarty\');<br>$temp-&gt;assign(\'test\',\'imooc女神\');</p>\r\n<p>//<br>$temp-&gt;getSourceTemplate(\'index\');<br>$temp-&gt;compileTemplate();<br>$temp-&gt;display();</p>\r\n<p> --几个要注意的是</p>\r\n<p>按照属性+方法，流水线一样编译就好</p>\r\n<p>然后，一些服务要开，否则像我一样，还要调试。。。</p>\r\n<p>祝大家好运。</p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\n ', '2016-04-28 20:05:04', '2016-04-28 20:19:43', '0', '0', '0', '1', '75');
INSERT INTO `blog` VALUES ('2976', '周六干点儿啥 ', '网络', '\n<p>　　hi</p>\r\n<p>又到周六，结果这周没有电影去看，没有衣服去买，没有妹子...当我没说</p>\r\n<p>1、正则表达式-完结篇</p>\r\n<p>---工具类开发---</p>\r\n<p> </p>\r\n<p>&lt;?php<br>/*<br> * PHP 正则表达式工具类<br> * 描述：进行正则表达式匹配，有常用的正则表达式以及允许用户自定义正则表达式进行匹配<br> */</p>\r\n<p>class regexTool{<br>	//定义常用正则表达式，并用数组对的方式存储<br>	private $validate=array(<br>			\'require\'   =&gt;  \'/.+/\',<br>			\'email\'     =&gt;  \'/^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/\',<br>			\'url\'       =&gt;  \'/^http(s?):\\/\\/(?:[A-za-z0-9-]+\\.)+[A-za-z]{2,4}(?:[\\/\\?#][\\/=\\?%\\-&amp;~`@[\\]\\\':+!\\.#\\w]*)?$/\',<br>			\'currency\'  =&gt;  \'/^\\d+(\\.\\d+)?$/\',<br>			\'number\'    =&gt;  \'/^\\d+$/\',<br>			\'zip\'       =&gt;  \'/^\\d{6}$/\',<br>			\'integer\'   =&gt;  \'/^[-\\+]?\\d+$/\',<br>			\'double\'    =&gt;  \'/^[-\\+]?\\d+(\\.\\d+)?$/\',<br>			\'english\'   =&gt;  \'/^[A-Za-z]+$/\',<br>			\'qq\'		=&gt;	\'/^\\d{5,11}$/\',<br>			\'mobile\'	=&gt;	\'/^1(3|4|5|7|8)\\d{9}$/\',<br>	);<br>	//定义其他属性<br>	private $returnMatchResult=false;   //返回类型判断<br>	private $fixMode=null;          //修正模式<br>	private $matches=array();    //存放匹配结果<br>	private $isMatch=false;<br><br>	//构造函数，实例化后传入默认的两个参数<br>	public function __construct($returnMatchResult=false,$fixMode=null){<br>		$this-&gt;returnMatchResult=$returnMatchResult;<br>		$this-&gt;fixMode=$fixMode;<br>	}<br><br>	//判断返回结果类型，为匹配结果matches还是匹配成功与否isMatch，并调用返回方法<br>	private function regex($pattern,$subject){<br>		if(array_key_exists(strtolower($pattern), $this-&gt;validate))<br>			$pattern=$this-&gt;validate[$pattern].$this-&gt;fixMode;  //判断后再连接上修正模式作为匹配的正则表达式<br>		$this-&gt;returnMatchResult ?<br>		    preg_match_all($pattern, $subject,$this-&gt;matches):<br>		    $this-&gt;isMatch=preg_match($pattern, $subject)===1;<br>		return $this-&gt;getRegexResult();<br>	}<br><br>	//返回方法<br>	private function getRegexResult(){<br>		if($this-&gt;returnMatchResult){<br>			return $this-&gt;matches;<br>		}else{<br>			return $this-&gt;isMatch;<br>		}<br>	}<br><br>   //允许用户自定义切换返回类型<br>	public function toggleReturnType($bool=null){<br>		if(empty($bool)){<br>			$this-&gt;returnMatchResult=!$this-&gt;returnMatchResult;<br>		}else{<br>			$this-&gt;returnMatchResult=is_bool($bool) ? $bool : (bool)$bool;<br>		}<br>	}<br><br>	//下面则是数据验证方法<br>	public function setFixMode($fixMode) {<br>		$this-&gt;fixMode = $fixMode;<br>	}<br><br>	public function noEmpty($str) {<br>		return $this-&gt;regex(\'require\', $str);<br>	}<br><br>	public function isEmail($email) {<br>		return $this-&gt;regex(\'email\', $email);<br>	}<br><br>	public function isMobile($mobile) {<br>		return $this-&gt;regex(\'mobile\', $mobile);<br>	}<br><br>	public function check($pattern, $subject) {<br>		return $this-&gt;regex($pattern, $subject);<br>	}<br>}</p>\r\n<p>实例化进行验证</p>\r\n<p>&lt;?php<br>/*<br> * PHP 正则表达式验证文件<br> */<br>//包含类定义文件<br>require_once \'regexTool.class.php\';</p>\r\n<p>$regex=new regexTool();<br>$regex-&gt;setFixMode(\'U\');   //设定修正模式为懒惰模式U<br>$r=$regex-&gt;isEmail(\'asdfads@qq.com\');<br>show($r);</p>\r\n<p>//使用之前学过的show函数来进行验证<br>/*<br> * Description:PHP 正则表达式函数<br>*<br>* @name:show<br>* @description:output debug<br>* @param $var:input data<br>* @return void<br>*<br>*/</p>\r\n<p>function show($var=null){<br>	if(empty($var)){<br>		echo \'null\';<br>	}elseif(is_array($var)||is_object($var)){<br>		//array,object<br>		echo \'&lt;pre&gt;\';<br>		print_r($var);<br>		echo \'&lt;/pre&gt;\';<br>	}else{<br>		//string,int,float...<br>		echo $var;<br>	}<br>}</p>\r\n<p>---验证表单---</p>\r\n<p>即使用方法之一</p>\r\n<p>html写文件如下</p>\r\n<p>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=\"&gt;<br>&lt;title&gt;用户注册&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;form action=\"regCheck.php\" method=\"post\"&gt;<br>用户名&lt;INPUT type=\"text\" name=\"username\" id=\"username\" value=\"\" /&gt;&lt;br/&gt;&lt;br/&gt;<br>email&lt;INPUT type=\"text\" name=\"email\" id=\"email\" value=\"\" /&gt;&lt;br/&gt;&lt;br/&gt;<br>手机号&lt;INPUT type=\"text\" name=\"mobile\" id=\"mobile\" value=\"\" /&gt;&lt;br/&gt;&lt;br/&gt;<br>&lt;INPUT type=\"submit\" value=\"注册\" /&gt;<br>&lt;/form&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>相对应的在regCheck.php中改</p>\r\n<p>if(!$regex-&gt;noEmpty($_POST[\'username\'])) exit(\'用户名为空\');</p>\r\n<p>---仿（山寨版）smarty简易模板引擎---</p>\r\n<p>--允许程序猿分前端后端分开开发</p>\r\n<p>--模板引擎工作原理：获取模板源文件，编译模板，输出给用户（也就是联系起前后端，做“接口”一样）</p>\r\n<p>--模式单元：总模式，即$pattern；子模式，即()中的东西，即一个自定义的原子，也成为模式单元</p>\r\n<p>具体应用中，preg_match_all会匹配到两种模式</p>\r\n<p>preg_match_all结果为二维数组，其中$matches[0][0]为总模式</p>\r\n<p>其他为子模式</p>\r\n<p>--</p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p>2、jQuery</p>\r\n<p>---简介---</p>\r\n<div class=\"para\">JQuery是继<a href=\"http://baike.baidu.com/view/1217697.htm\" target=\"_blank\">prototype</a>之后又一个优秀的<a href=\"http://baike.baidu.com/view/16168.htm\" target=\"_blank\">Javascript</a>库。它是轻量级的js库 ，它兼容<a href=\"http://baike.baidu.com/view/1713027.htm\" target=\"_blank\">CSS3</a>，还兼容各种浏览器（<a href=\"http://baike.baidu.com/subview/703/10271308.htm\" target=\"_blank\">IE</a> 6.0+, <a href=\"http://baike.baidu.com/subview/31049/5089479.htm\" target=\"_blank\">FF</a>1.5+, <a href=\"http://baike.baidu.com/subview/110484/5036395.htm\" target=\"_blank\">Safari</a> 2.0+, <a href=\"http://baike.baidu.com/subview/10019/7098372.htm\" target=\"_blank\">Opera</a> 9.0+），jQuery2.0及后续版本将不再支持IE6/7/8浏览器。jQuery使用户能更方便地处理<a href=\"http://baike.baidu.com/view/692.htm\" target=\"_blank\">HTML</a>（<a href=\"http://baike.baidu.com/view/5286041.htm\" target=\"_blank\">标准通用标记语言</a>下的一个应用）、events、实现动画效果，并且方便地为网站提供<a href=\"http://baike.baidu.com/subview/1641/5762264.htm\" target=\"_blank\">AJAX</a>交互。jQuery还有一个比较大的优势是，它的文档说明很全，而且各种应用也说得很详细，同时还有许多成熟的<a href=\"http://baike.baidu.com/view/18979.htm\" target=\"_blank\">插件</a>可供选择。jQuery能够使用户的html页面保持代码和html内容分离，也就是说，不用再在html里面插入一堆js来调用命令了，只需要定义id即可。</div>\r\n<div class=\"para\">jQuery是一个兼容多浏览器的<a href=\"http://baike.baidu.com/view/16168.htm\" target=\"_blank\">javascript</a>库，核心理念是write less,do more(写得更少,做得更多)。jQuery在2006年1月由美国人<a href=\"http://baike.baidu.com/view/3141971.htm\" target=\"_blank\">John Resig</a>在纽约的<a href=\"http://baike.baidu.com/view/1135515.htm\" target=\"_blank\">barcamp</a>发布，吸引了来自世界各地的众多JavaScript高手加入，由Dave Methvin率领团队进行开发。如今，jQuery已经成为最流行的javascript库，在世界前10000个访问最多的网站中，有超过55%在使用jQuery。</div>\r\n<div class=\"para\">jQuery是免费、开源的，使用<a href=\"http://baike.baidu.com/subview/74918/8382747.htm\" target=\"_blank\">MIT</a>许可协议。jQuery的语法设计可以使开发者更加便捷，例如操作<a href=\"http://baike.baidu.com/view/55621.htm\" target=\"_blank\">文档</a>对象、选择<a href=\"http://baike.baidu.com/view/14806.htm\" target=\"_blank\">DOM</a>元素、制作动画效果、事件处理、使用<a href=\"http://baike.baidu.com/view/1641.htm\" target=\"_blank\">Ajax</a>以及其他功能。除此以外，jQuery提供API让开发者编写插件。其模块化的使用方式使开发者可以很轻松的开发出功能强大的静态或动态网页。</div>\r\n<div class=\"para\">jQuery，顾名思义，也就是JavaScript和查询（Query），即是辅助JavaScript开发的库。（摘选自百度百科）</div>\r\n<div class=\"para\">--环境搭建</div>\r\n<div class=\"para\">下载1.9.0稳定版本，保存在本地就好，然后再用javascript的时候包含进就行了</div>\r\n<div class=\"para\">&lt;script src=\"http://libs.baidu.com/jquery/1.9.0/jquery.js\" type=\"text/javascript\"&gt;&lt;/script&gt;</div>\r\n<div class=\"para\">--初体验</div>\r\n<div class=\"para\">jQuery就是js的函数封装，形成库（私以为其更利于对付对象）</div>\r\n<div class=\"para\">相比于原JS，它一般来说更简便</div>\r\n<div class=\"para\">\r\n<p>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>    &lt;head&gt;<br>        &lt;title&gt;#id选择器&lt;/title&gt;<br>        &lt;script src=\"http://libs.baidu.com/jquery/1.9.0/jquery.js\" type=\"text/javascript\"&gt;&lt;/script&gt;<br>    &lt;/head&gt;<br><br>    &lt;body&gt;<br>        &lt;div&gt;div的内容&lt;/div&gt;<br>        &lt;div&gt;Hello world!&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\" div \").html(\"Hello iMooc!\"); //填写相应代码<br>        &lt;/script&gt;<br>    &lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>这里$()表示匹配一定字符内的元素</p>\r\n<p>---基础选择器---</p>\r\n<p>--#id选择器</p>\r\n<p>&lt;div id=\"divtest\"&gt;div的内容&lt;/div&gt;<br>        &lt;div id=\"default\"&gt;&lt;/div&gt;<br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"#default\").html($(\"#divtest\").html());//在id号为“default”的元素中显示id号为“divtest”元素的内容。<br>        &lt;/script&gt;</p>\r\n<p>基本使用方法是$(\"#id\")</p>\r\n<p>--element选择器</p>\r\n<p>根据元素的名称可以查找到该元素，并调用<code class=\"marker\">css()、attr()等</code>方法设置对所取元素的操作。</p>\r\n<p> &lt;button id=\"btntest\"&gt;点我&lt;/button&gt;<br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"button\").attr(\"disabled\",\"true\");<br>        &lt;/script&gt;</p>\r\n<p>--.class选择器</p>\r\n<p>根据类的名称选择元素，其他操作类似</p>\r\n<p> &lt;div class=\"red\"&gt;立正，向我这边看齐&lt;/div&gt;<br>        &lt;div class=\"green\"&gt;我先歇歇脚&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            var $redHTML = $(\".red\").html();<br>            $(\".green\").html($redHTML);<br>        &lt;/script&gt;</p>\r\n<p>--*选择器</p>\r\n<p>选择器中的参数就一个“*”，<a>既没有“</a>#”号，也没有“.”号。 由于该选择器的特殊性，它常与其他元素组合使用，表示获取其他元素中的全部子元素。</p>\r\n<p>实践证明，由于使用*选择器获取的是全部元素，因此，有些浏览器将会比较缓慢，这个选择器也需要谨慎使用。</p>\r\n<p> &lt;form action=\"#\"&gt;<br>        &lt;input id=\"Button1\" type=\"button\" value=\"button\" /&gt;<br>        &lt;input id=\"Text1\" type=\"text\" /&gt;<br>        &lt;input id=\"Radio1\" type=\"radio\" /&gt;<br>        &lt;input id=\"Checkbox1\" type=\"checkbox\" /&gt;<br>        &lt;/form&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"form *\").attr(\"disabled\", \"true\");<br>        &lt;/script&gt;</p>\r\n<p>--sele1,sele2,seleN选择器</p>\r\n<p>有时需要精确的选择任意<strong>多个指定的元素</strong>，类似于从文具盒中挑选出多根自已喜欢的笔，就需要调用sele1,sele2,seleN选择器，它的调用格式如下：</p>\r\n<p><code class=\"marker\">$(“sele1,sele2,seleN”)</code></p>\r\n<p>其中参数sele1、sele2到seleN为有效选择器，每个选择器之间用“，”号隔开，它们可以是之前提及的各种类型选择器，如<code class=\"marker\">$(“#id”)、$(“.class”)、$(“selector”)</code>选择器等。</p>\r\n<p> &lt;div class=\"red\"&gt;选我吧！我是red&lt;/div&gt;<br>        &lt;div class=\"green\"&gt;选我吧！我是green&lt;/div&gt;<br>        &lt;div class=\"blue\"&gt;选我吧！我是blue&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\".red,.green\").html(\"hi,我们的样子很美哦!\");<br>        &lt;/script&gt;</p>\r\n<p>--ance desc选择器</p>\r\n<p>本节开始，我们将介绍层次性选择器。</p>\r\n<p>在实际应用开发中，常常是多个元素嵌套在一起，形成复杂的层次关系，通过层次选择器，可以快速定位某一层次的一个或多个元素，ance desc选择器就是其中之一，它的调用格式如下：</p>\r\n<p><strong><code class=\"marker\">$(\"ance desc\")</code></strong></p>\r\n<p>其中ance desc是使用空格隔开的两个参数。ance参数（ancestor祖先的简写）表示父元素；desc参数（descendant后代的简写）表示后代元素，即包括子元素、孙元素等等。两个参数都可以通过选择器来获取。比如家族姓氏“div”，家族几代人里，都有名字里带“span”的，就可以用这个ance desc选择器把这几个人给定位出来。</p>\r\n<p>&lt;div&gt;码农家族<br>            &lt;p&gt;<br>               &lt;label&gt;&lt;/label&gt;<br>            &lt;/p&gt;<br>            &lt;label&gt;&lt;/label&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"div label\").css(\"background-color\",\"blue\");<br>        &lt;/script&gt;</p>\r\n<p>--parent&gt;child选择器</p>\r\n<p>与上一节介绍的<code class=\"marker\">ance desc</code>选择器相比，<code class=\"marker\">parent &gt; child</code>选择器的范围要小些，它所选择的目标是子集元素，相当于一个家庭中的子辈们，但不包括孙辈，它的调用格式如下：</p>\r\n<p><code class=\"marker\">$(“parent &gt; child”)</code></p>\r\n<p>child参数获取的元素都是parent选择器的子元素，它们之间通过“&gt;”符号来表示一种层次关系。</p>\r\n<p>&lt;div&gt;<br>            码农家族<br>            &lt;p&gt;<br>                &lt;label&gt;&lt;/label&gt;<br>            &lt;/p&gt;<br>            &lt;label&gt;&lt;/label&gt;<br>            &lt;label&gt;&lt;/label&gt;<br>        &lt;/div&gt;<br>        &lt;label&gt;&lt;/label&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"div&gt;label\").css(\"border\", \"solid 5px red\");<br>        &lt;/script&gt;</p>\r\n<p>--prev+next选择器</p>\r\n<p>俗话说“远亲不如近邻”，而通过<code class=\"marker\">prev + next</code>选择器就可以查找与“prev”元素紧邻的下一个“next”元素，格式如下：</p>\r\n<p><code class=\"marker\">$(“prev + next”)</code></p>\r\n<p>其中参数prev为任何有效的选择器，参数“next”为另外一个有效选择器，它们之间的“+”表示一种上下的层次关系，也就是说，“prev”元素最紧邻的下一个元素由“next”选择器返回的并且只返回唯的一个元素。</p>\r\n<p>&lt;div&gt;<br>            码农家族<br>            &lt;label&gt;&lt;/label&gt;<br>            &lt;p&gt;&lt;/p&gt;<br>            &lt;label&gt;&lt;/label&gt;<br>            &lt;label&gt;&lt;/label&gt;<br>        &lt;/div&gt;<br>        &lt;label&gt;&lt;/label&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"p+label\").css(\"background-color\",\"red\");<br>        &lt;/script&gt;</p>\r\n<p>注意，这里的next是要输入下一个要找的分类器标识，不是直接输入next</p>\r\n<p>--prev~siblings选择器</p>\r\n<p>与上一节中介绍的<code class=\"marker\">prev + next</code>层次选择器相同，<code class=\"marker\">prev ~ siblings</code>选择器也是查找prev 元素之后的相邻元素，但前者只获取第一个相邻的元素，而后者则获取prev 元素后面全部相邻的元素，它的调用格式如下：</p>\r\n<p><code class=\"marker\">$(“prev ~ siblings”)</code></p>\r\n<p>其中参数prev与siblings两者之间通过“~”符号形成一种层次相邻的关系，表明siblings选择器获取的元素都是prev元素之后的同辈元素。</p>\r\n<p>&lt;div&gt;<br>            码农家族<br>            &lt;label&gt;&lt;/label&gt;<br>            &lt;p&gt;&lt;/p&gt;<br>            &lt;label&gt;&lt;/label&gt;<br>            &lt;label&gt;&lt;/label&gt;<br>        &lt;/div&gt;<br>        &lt;label&gt;&lt;/label&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"p~label\").css(\"border\", \"solid 1px red\");<br>            $(\"p~label\").html(\"我们都是p先生的粉丝\");<br>        &lt;/script&gt;</p>\r\n<p>---过滤性选择器---</p>\r\n<p>--:first/:last过滤选择器</p>\r\n<p>本章我们介绍过滤选择器，该类型的选择器是根据某过滤规则进行元素的匹配，书写时以“：”号开头,通常用于查找集合元素中的某一位置的单个元素。</p>\r\n<p>在jQuery中，如果想得到一组相同标签元素中的第1个元素该怎样做呢？</p>\r\n<p>在下面的示例代码中你可能注意到我们会使用</p>\r\n<p><code class=\"marker\"> $(“li:first”)</code></p>\r\n<p><strong>注意：</strong>书写时以“：”号开头。</p>\r\n<p> &lt;div&gt;改变最后一行\"苹果\"背景颜色：&lt;/div&gt;<br>        &lt;ol&gt;<br>            &lt;li&gt;葡萄&lt;/li&gt;<br>            &lt;li&gt;香蕉&lt;/li&gt;<br>            &lt;li&gt;橘子&lt;/li&gt;<br>            &lt;li&gt;西瓜&lt;/li&gt;<br>            &lt;li&gt;苹果&lt;/li&gt;<br>        &lt;/ol&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"li:last\").css(\"background-color\", \"red\");<br>        &lt;/script&gt;</p>\r\n<p>--:eq(index)过滤选择器</p>\r\n<p>如果想从一组标签元素数组中，灵活选择任意的一个标签元素，我们可以使用</p>\r\n<p><code class=\"marker\">:eq(index)</code></p>\r\n<p>其中参数index表示索引号（即：一个整数），它从0开始，如果index的值为3，表示选择的是第4个元素</p>\r\n<p> &lt;div&gt;改变中间行\"葡萄\"背景颜色：&lt;/div&gt;<br>        &lt;ol&gt;<br>        &lt;li&gt;橘子&lt;/li&gt;<br>        &lt;li&gt;香蕉&lt;/li&gt;<br>        &lt;li&gt;葡萄&lt;/li&gt;<br>        &lt;li&gt;苹果&lt;/li&gt;<br>        &lt;li&gt;西瓜&lt;/li&gt;<br>        &lt;/ol&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"li:eq(2)\").css(\"background-color\", \"#60F\");<br>        &lt;/script&gt;</p>\r\n<p>--:contains(text)过滤选择器</p>\r\n<p>与上一节介绍的:eq(index)选择器按索引查找元素相比，有时候我们可能希望按照<strong>文本内容</strong>来查找一个或多个元素，那么使用<code class=\"marker\">:contains(text)</code>选择器会更加方便， 它的功能是选择<strong>包含</strong>指定字符串的全部元素，它通常与其他元素结合使用，获取包含“text”字符串内容的全部元素对象。其中参数<code class=\"marker\">text</code>表示页面中的文字。</p>\r\n<p>&lt;div&gt;改变包含\"jQuery\"字符内容的背景色：&lt;/div&gt;<br>        &lt;ol&gt;<br>            &lt;li&gt;强大的\"jQuery\"&lt;/li&gt;<br>            &lt;li&gt;\"javascript\"也很实用&lt;/li&gt;<br>            &lt;li&gt;\"jQuery\"前端必学&lt;/li&gt;<br>            &lt;li&gt;\"java\"是一种开发语言&lt;/li&gt;<br>            &lt;li&gt;前端利器——\"jQuery\"&lt;/li&gt;<br>        &lt;/ol&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"li:contains(\'jQuery\')\").css(\"background\", \"green\");<br>        &lt;/script&gt;</p>\r\n<p>--:has(selector)过滤选择器</p>\r\n<p>除了在上一小节介绍的使用包含的字符串内容过滤元素之外，还可以使用包含的元素名称来过滤，<code class=\"marker\">:has(selector)</code>过滤选择器的功能是获取选择器中包含指定元素名称的全部元素，其中<code class=\"marker\">selector</code>参数就是包含的元素名称，是被包含元素。</p>\r\n<p> &lt;div&gt;改变包含\"label\"元素的背景色：&lt;/div&gt;<br>        &lt;ol&gt;<br>            &lt;li&gt;&lt;p&gt;我是P先生&lt;/p&gt;&lt;/li&gt;<br>            &lt;li&gt;&lt;label&gt;L妹纸就是我&lt;/label&gt;&lt;/li&gt;<br>            &lt;li&gt;&lt;p&gt;我也是P先生&lt;/p&gt;&lt;/li&gt;<br>            &lt;li&gt;&lt;label&gt;我也是L妹纸哦&lt;/label&gt;&lt;/li&gt;<br>            &lt;li&gt;&lt;p&gt;P先生就是我哦&lt;/p&gt;&lt;/li&gt;<br>        &lt;/ol&gt;<br><br>         &lt;script type=\"text/javascript\"&gt;<br>            $(\"li:has(\'label\')\").css(\"background-color\", \"blue\");<br>        &lt;/script&gt;</p>\r\n<p>--:hidden过滤选择器</p>\r\n<p><code class=\"marker\">:hidden</code>过滤选择器的功能是获取全部不可见的元素，这些不可见的元素中包括type属性值为hidden的元素。</p>\r\n<p>&lt;h3&gt;显示隐藏元素的内容&lt;/h3&gt;<br>        &lt;input id=\"hidstr\" type=\"hidden\" value=\"我已隐藏起来\"/&gt;<br>        &lt;div&gt;&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>        var $strHTML = $(\"input:hidden\").val();<br>        $(\"div\").html($strHTML);<br>    &lt;/script&gt;</p>\r\n<p>--:visible过滤选择器</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>与上一节的<code class=\"marker\">:hidden</code>过滤选择器相反，<code class=\"marker\">:visible</code>过滤选择器获取的是全部可见的元素，也就是说，只要不将元素的display属性值设置为“none”，那么，都可以通过该选择器获取。</p>\r\n</div>\r\n</div>\r\n<p>&lt;h3&gt;修改可见“水果”的背景色&lt;/h3&gt;<br>        &lt;ul&gt;<br>            &lt;li style=\"display:none\"&gt;橘子&lt;/li&gt;<br>            &lt;li style=\"display:block\"&gt;香蕉&lt;/li&gt;<br>            &lt;li style=\"display:\"&gt;葡萄&lt;/li&gt;<br>            &lt;li&gt;苹果&lt;/li&gt;<br>            &lt;li style=\"display:none\"&gt;西瓜&lt;/li&gt;<br>        &lt;/ul&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"li:visible\").css(\"background-color\",\"blue\");<br>        &lt;/script&gt;</p>\r\n<p>--</p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n</div>\r\n<p> </p>\n ', '2016-04-28 20:05:04', '2016-04-28 20:19:43', '0', '0', '0', '1', '75');
INSERT INTO `blog` VALUES ('2977', '周一周一周。。一 ', '网络', '\n<p>　　hi</p>\r\n<p>周一是谁设定的。。。、</p>\r\n<p>1、JS</p>\r\n<p>主要是DOM的内容，本来是打算就随便看看，粘贴复制就算了的，但是看看后面还要学习iQuery等内容，还是好好看看吧，DOM这边总有些东西有点蛋疼。。。代码先不上了，待完成这一章的编程练习再说好了，吃饭去</p>\r\n<p>------------------17：19-----------------------</p>\r\n<p> 2、MySQL</p>\r\n<p>---约束---</p>\r\n<p>--目的是为了保证数据的完整性和一致性</p>\r\n<p>--分为表级约束和列级约束</p>\r\n<p>--仅针对某一对象（一列），称为列级约束；若大于1列，就是表级</p>\r\n<p>--五种约束：DEFAULT,NOT NULL,PRIMARY KEY,UNIQUE KEY,FOREIGN KEY</p>\r\n<p>---FOREIGN KEY 外键约束---</p>\r\n<p>--实现一对一或一对多</p>\r\n<p>--使用该约束需要一些条件，比如父表和子表（默认存储引擎都为Inno DB），外键列和参照列（具有相似的数据类型），索引的创立（默认的主键或者自己创建）等</p>\r\n<p>--实现以上要求，可以创建数据表之后，输入SHOW CREATE TABLE table_name;命令查看</p>\r\n<p>--使用外键，如下所示</p>\r\n<p>mysql&gt; CREATE TABLE province(<br>    -&gt; id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,<br>    -&gt; pename VARCHAR(20) NOT NULL);<br>Query OK, 0 rows affected (0.04 sec)</p>\r\n<p>mysql&gt; SHOW CREATE TABLE province;<br>+----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+<br>| Table    | Create Table                                                                                                                                                                |<br>+----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+<br>| province | CREATE TABLE `province` (<br>  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,<br>  `pename` varchar(20) NOT NULL,<br>  PRIMARY KEY (`id`)<br>) ENGINE=InnoDB DEFAULT CHARSET=latin1 |<br>+----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+<br>1 row in set (0.00 sec)</p>\r\n<p>mysql&gt; CREATE TABLE users(<br>    -&gt; id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,<br>    -&gt; username VARCHAR(10) NOT NULL,<br>    -&gt; pid BIGINT,<br>    -&gt; FOREIGN KEY(pid) REFERENCES province (id)<br>    -&gt; );<br>ERROR 1215 (HY000): Cannot add foreign key constraint<br>mysql&gt; CREATE TABLE users(<br>    -&gt; id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,<br>    -&gt; username VARCHAR(10) NOT NULL,<br>    -&gt; pid SMALLINT UNSIGNED,<br>    -&gt; FOREIGN KEY(pid) REFERENCES province (id)<br>    -&gt; );<br>Query OK, 0 rows affected (0.04 sec)</p>\r\n<p>注意，这里体现出1】INNODB的检验；2】数据类型的相似条件；3】FOREIGN KEY的使用方式</p>\r\n<p>另外，区分好子表users，父表province，外键列pid，参照列id</p>\r\n<p>---外键约束的参照操作---</p>\r\n<p>--CASCADE,SET NULL,RESTRICT,NO ACTION</p>\r\n<p>--表示主表做变化后，子表是否变化</p>\r\n<p>--需要注意的是，要想往子表中插入记录，必须先往父表中插入记录，不然你让子表去哪里参考</p>\r\n<p>mysql&gt; INSERT province(pename) VALUES(\'A\');<br>Query OK, 1 row affected (0.01 sec)</p>\r\n<p>mysql&gt; INSERT province(pename) VALUES(\'B\');<br>Query OK, 1 row affected (0.01 sec)</p>\r\n<p>mysql&gt; INSERT province(pename) VALUES(\'C\');<br>Query OK, 1 row affected (0.01 sec)</p>\r\n<p>mysql&gt; INSERT users1(username,pid) VALUES(\'TOM\',2);<br>Query OK, 1 row affected (0.01 sec)</p>\r\n<p>mysql&gt; INSERT users1(username,pid) VALUES(\'JACK\',1);<br>Query OK, 1 row affected (0.01 sec)</p>\r\n<p>mysql&gt; SELECT * FROM users1;<br>+----+----------+------+<br>| id | username | pid  |<br>+----+----------+------+<br>|  1 | TOM      |    2 |<br>|  2 | JACK     |    1 |<br>+----+----------+------+<br>2 rows in set (0.00 sec)</p>\r\n<p>mysql&gt; DELETE FROM province WHERE id=3;<br>Query OK, 1 row affected (0.01 sec)</p>\r\n<p>mysql&gt; SELECT * FROM users1;<br>+----+----------+------+<br>| id | username | pid  |<br>+----+----------+------+<br>|  1 | TOM      |    2 |<br>|  2 | JACK     |    1 |<br>+----+----------+------+<br>2 rows in set (0.00 sec)</p>\r\n<p>mysql&gt; DELETE FROM province WHERE id=2;<br>Query OK, 1 row affected (0.01 sec)</p>\r\n<p>mysql&gt; SELECT * FROM users1;<br>+----+----------+------+<br>| id | username | pid  |<br>+----+----------+------+<br>|  2 | JACK     |    1 |<br>+----+----------+------+<br>1 row in set (0.00 sec)</p>\r\n<p>--CASCADE-父子同步删除或更新</p>\r\n<p>--SET NULL-父删除，则子为NULL；另外，子不能设置为NOT NULL</p>\r\n<p>--RESTRICT-拒绝对父的删除和更新</p>\r\n<p>--NO ACTION-类似上一个</p>\r\n<p>--很多情况，多使用逻辑的外键约束，不适用这种innodb的物理约束</p>\r\n<p>---表级和列级</p>\r\n<p>--列级，在列的声明时或声明后定义，比如FOREIGN　KEY</p>\r\n<p>--表级，用的少，必须在列定义后声明</p>\r\n<p>---修改数据表---</p>\r\n<p>--即列的添加/删除，约束的添加/删除</p>\r\n<p>--添加列</p>\r\n<p>-ALTER TABLE tbl_name ADD [COLUMN] col_name column_definition [FIRST|AFTER col_name]</p>\r\n<p>mysql&gt; ALTER TABLE users1 ADD password VARCHAR(32) NOT NULL AFTER username;<br>Query OK, 0 rows affected (0.08 sec)<br>Records: 0  Duplicates: 0  Warnings: 0</p>\r\n<p>-添加多列：ALTER TABLE tbl_name ADD [COLUMN](col_name column_definition,...)位置无法再选</p>\r\n<p>--删除列</p>\r\n<p>-ADD变为DROP</p>\r\n<p> </p>\n ', '2016-04-28 20:05:04', '2016-04-28 20:19:55', '0', '0', '0', '1', '74');
INSERT INTO `blog` VALUES ('2978', '无聊到周六的教研室 ', '网络', '\n<p>　　hi！</p>\r\n<p>无聊啊，无聊啊。。。。</p>\r\n<p>虽然前两天懈怠了，用日本人中二的方式说一句，今天我会好好努力的！！</p>\r\n<p>--------------------11：58-------------------</p>\r\n<p>1、MySQL</p>\r\n<p>---数据类型之字符型</p>\r\n<p>--CHAR(M)   VARCHAR(M)  TINYTEXT   TEXT    MEDIUMTEXT   LONGTEXT   ENUM()        SET()</p>\r\n<p>    定长            变长                                                                                    枚举（选择） 集合（任意的排列组合）</p>\r\n<p>---创建数据表</p>\r\n<p>--行称为记录，列称为字段</p>\r\n<p>--数据表组成数据库，所以先处理数据库。</p>\r\n<p>USE TEST;</p>\r\n<p>--创建表格:CREATE TABLE[IF NOT EXISTS] table_name(</p>\r\n<p>                 column_name data_type,   //分隔符为逗号，列数一定要准备好，数据类型已讲,最后一个字段不加逗号</p>\r\n<p>                 ... </p>\r\n<p>               )   </p>\r\n<p>--注意数据类型的选择，比如不能出现负值，就UNSIGNED</p>\r\n<p>mysql&gt; CREATE TABLE tb1(<br>    -&gt; username VARCHAR(20),<br>    -&gt; age TINYINT UNSIGNED,<br>    -&gt; salary FLOAT(8,2) UNSIGNED);</p>\r\n<p>---查看数据表</p>\r\n<p>--SHOW TABLES;</p>\r\n<p>--SHOW TABLES FROM mysql；查看所有表，注意这里数据库并不会改变</p>\r\n<p>---查看数据表结构</p>\r\n<p>--SHOW COLUMNS FROM table_name；</p>\r\n<p>---记录（行）的插入与查找</p>\r\n<p>--INSERT [INTO] tbl_name [(col_name,...)] VALUES(val,...);//如果省略掉列名，则对所有的列进行赋值，也就是说，所有的value都要有，比如有4列，赋值3个值就不行</p>\r\n<p>--查看记录,SELECT的简化使用：SELECT expr,... FROM tbl_name;</p>\r\n<p>---空值与非空  NULL&amp;NOT NULL</p>\r\n<p>--判断输入是否为空:对字段的设定</p>\r\n<p>--比如年龄这个字段必须输入，非空，在创建字段时应该如此：age TINYINT UNSIGNED NOT NULL</p>\r\n<p>---自动编号AUTO_INCREMENT&amp;主键约束</p>\r\n<p>--避免记录不重复</p>\r\n<p>--起始值为1，步长为1</p>\r\n<p>--自动编号的字段必须是主键</p>\r\n<p>--每张数据表必须只有一个主键，主键自动是NOT　NULL，主键不允许存在相同的值</p>\r\n<p>mysql&gt; CREATE TABLE tb3(<br>    -&gt; id SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,//这里自动编号和主键在一起~<br>    -&gt; sername VARCHAR(30) NOT NULL);</p>\r\n<p>+---------+----------------------+------+-----+---------+----------------+<br>| Field   | Type                 | Null | Key | Default | Extra          |<br>+---------+----------------------+------+-----+---------+----------------+<br>| id      | smallint(5) unsigned | NO   | PRI | NULL    | auto_increment |<br>| sername | varchar(30)          | NO   |     | NULL    |                |<br>+---------+----------------------+------+-----+---------+----------------+</p>\r\n<p>SHOW COLUMNS FROM tb3;</p>\r\n<p>SELECT * FROM tb3;</p>\r\n<p>---初涉唯一约束UNIQUE KEY</p>\r\n<p>--保证唯一性</p>\r\n<p>--可以为空值，也可以有许多空值NULL，不算做重复</p>\r\n<p>--与主键不同，可以在一个表中有多个唯一约束</p>\r\n<p>--username VARCHAR(20) UNIQUE KEY,</p>\r\n<p>---初涉默认约束DEFAULT</p>\r\n<p>--系统默认</p>\r\n<p>--常出现于ENUM类型中</p>\r\n<p>mysql&gt; CREATE TABLE tb4(<br>    -&gt; id SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,<br>    -&gt; name VARCHAR(20) NOT NULL UNIQUE KEY,<br>    -&gt; gender ENUM(\'1\',\'2\',\'3\') DEFAULT \'3\');</p>\r\n<p>+--------+----------------------+------+-----+---------+----------------+<br>| Field  | Type                 | Null | Key | Default | Extra          |<br>+--------+----------------------+------+-----+---------+----------------+<br>| id     | smallint(5) unsigned | NO   | PRI | NULL    | auto_increment |<br>| name   | varchar(20)          | NO   | UNI | NULL    |                |<br>| gender | enum(\'1\',\'2\',\'3\')    | YES  |     | 3       |                |<br>+--------+----------------------+------+-----+---------+----------------+</p>\r\n<p> </p>\r\n<p>2、Javascript入门完结篇</p>\r\n<p>---window对象问题</p>\r\n<p>--即浏览器窗口，不要误解为windows系统的对象</p>\r\n<p>--window.open,window.alert</p>\r\n<p>--计时器Interval——执行多次，或clearInterval</p>\r\n<p>-setInterval(fucntion,time);</p>\r\n<p>-clearInterval(setInterval_var_name);用于停止延时操作</p>\r\n<p>&lt;!DOCTYPE HTML&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;<br>&lt;title&gt;计时器&lt;/title&gt;<br>&lt;script type=\"text/javascript\"&gt;<br>   function clock(){<br>      var time=new Date();               	  <br>      document.getElementById(\"clock\").value = time;<br>   }<br>     var i=setInterval(clock,100);<br>&lt;/script&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>  &lt;form&gt;<br>    &lt;input type=\"text\" id=\"clock\" size=\"50\"  /&gt;<br>    &lt;input type=\"button\" value=\"Stop\"  onclick=\"clearInterval(i)\"/&gt;<br>  &lt;/form&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>--计时器Timeout</p>\r\n<p>-setTimeout(function_name,time);</p>\r\n<p>-clearTimeout()</p>\r\n<p>&lt;!DOCTYPE HTML&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;<br>&lt;title&gt;计时器&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;script type=\"text/javascript\"&gt;<br>  var num=0;<br>  var i;<br>  function startCount(){<br>    document.getElementById(\'count\').value=num;<br>    num=num+1;<br>    i=setTimeout(\"startCount()\",1000);<br>  }<br>  function stopCount(){<br>  clearTimeout(i);<br>  }<br>&lt;/script&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>  &lt;form&gt;<br>    &lt;input type=\"text\" id=\"count\" /&gt;<br>    &lt;input type=\"button\" value=\"Start\"  onclick=\"startCount()\"/&gt;<br>    &lt;input type=\"button\" value=\"Stop\"   onclick=\"stopCount()\"/&gt;<br>  &lt;/form&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>--window.history_URL 记录器</p>\r\n<p>-window.history.[属性|方法]</p>\r\n<p>-属性有.length——包含URL条数</p>\r\n<p>-方法有.back().forward().go()</p>\r\n<p>-.back()=.go(-1)</p>\r\n<p>&lt;!DOCTYPE HTML&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;/head&gt;<br> &lt;script type=\"text/javascript\"&gt;<br>        function GoBack() {<br>            window.history.go(-1);<br>        }</p>\r\n<p>        function GoForward() {<br>            window.history.forward();<br>        }<br>    &lt;/script&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>    点击下面的锚点链接，添加历史列表项:    <br>    &lt;br /&gt;<br>    &lt;a href=\"#target1\"&gt;第一个锚点&lt;/a&gt;<br>    &lt;a name=\"target1\"&gt;&lt;/a&gt;<br>    &lt;br /&gt;<br>    &lt;a href=\"#target2\"&gt;第二个锚点&lt;/a&gt;<br>    &lt;a name=\"target2\"&gt;&lt;/a&gt;<br>    &lt;br /&gt;&lt;br /&gt;<br>    使用下面按钮，实现返回前或下一个页面:<br>    &lt;form&gt;<br>       &lt;input type=\"button\"  value=\"返回前一个页面\" onclick=\"GoBack();\" /&gt;<br>       &lt;input type=\"button\"  value=\"返回下一个页面\" onclick=\"GoForward();\" /&gt; <br>    &lt;/form&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>--location对象_用于获取或设置窗体的URL，并且可以用于解析URL</p>\r\n<p>-location.[]</p>\r\n<p><span style=\"font-size: 14px; line-height: 1.5;\">-属性比较多：host,hostname,hash,href,protocal,port,pathname(4h3p)</span></p>\r\n<p>-方法：assign(),reload(),replace()</p>\r\n<p>document.write(window.location.href);</p>\r\n<p>--Navigator 对象包含有关浏览器的信息，通常用于检测浏览器与操作系统的版本。</p>\r\n<p>-基本都是属性:appName,appVersion,appCodeName,platform,userAgent</p>\r\n<p>document.write(window.navigator.appName);</p>\r\n<p>--screen对象用于获取用户的屏幕信息。</p>\r\n<p>-属性多是一些height,width</p>\r\n<p>document.write( \"屏幕宽度：\"+window.screen.width+\"&lt;br&gt;\");<br>document.write( \"屏幕高度：\"+window.screen.height);  </p>\r\n<p>---DOM文档对象模型</p>\r\n<p>--文档对象模型DOM（Document Object Model）定义访问和处理HTML文档的标准方法。DOM 将HTML文档呈现为带有元素、属性和文本的树结构（节点树）。</p>\r\n<p>--也就是说，对文档结构直接进行操作</p>\r\n<p>--用法等见下文代码及注释</p>\r\n<p>----------------------------------------</p>\r\n<p>&lt;!DOCTYPE HTML&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;script type=\"text/javascript\"&gt;<br>function getnum(){<br>  var mynode=document.getElementsByName(\"myt\")         ; //document.getElementsByName()返回带有指定名称的节点对象的集合<br>  alert(mynode.length);<br>}<br>&lt;/script&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;input name=\"myt\" type=\"text\" value=\"1\"&gt;<br>&lt;input name=\"myt\" type=\"text\" value=\"2\"&gt;<br>&lt;input name=\"myt\" type=\"text\" value=\"3\"&gt;<br>&lt;input name=\"myt\" type=\"text\" value=\"4\"&gt;<br>&lt;input name=\"myt\" type=\"text\" value=\"5\"&gt;<br>&lt;input name=\"myt\" type=\"text\" value=\"6\"&gt;</p>\r\n<p>&lt;br /&gt;<br>&lt;input type=\"button\" onclick=\"getnum()\" value=\"看看有几项？\" onclick=\"getnum()\"/&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>---------------------------------------------------------------</p>\r\n<p>&lt;!DOCTYPE HTML&gt;<br>&lt;html&gt;  <br>&lt;head&gt;  <br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /&gt;  <br>&lt;title&gt;JavaScript&lt;/title&gt;  <br>&lt;/head&gt;  <br>&lt;body&gt;  <br><br>        &lt;form name=\"Input\"&gt;<br>            &lt;table align=\"center\" width=\"500px\" height=\"50%\" border=\"1\"&gt;<br>                &lt;tr&gt;<br>                    &lt;td align=\"center\" width=\"100px\"&gt;<br>                        学号:<br>                    &lt;/td&gt;<br>                    &lt;td align=\"center\" width=\"300px\"&gt;<br>                        &lt;input type=\"text\" id=userid name=\"user\" onblur=\"validate();\"&gt;<br>                        &lt;div id=usermsg&gt;&lt;/div&gt;<br>                    &lt;/td&gt;<br>                &lt;/tr&gt;<br>                &lt;tr&gt;<br>                    &lt;td align=\"center\" width=\"100px\"&gt;<br>                        姓名:<br>                    &lt;/td&gt;<br>                        &lt;td align=\"center\"&gt;<br>                        &lt;input type=\"text\" name=\"name\"&gt;<br>                    &lt;/td&gt;<br>                &lt;/tr&gt;<br>                &lt;tr&gt;<br>                    &lt;td align=\"center\" width=\"%45\"&gt;<br>                        性别:<br>                    &lt;/td&gt;<br>                    &lt;td align=\"center\"&gt;<br>                        &lt;input type=\"radio\" name=\"sex\" value=\"男\"&gt;<br>                        男<br>                        &lt;input type=\"radio\" name=\"sex\" value=\"女\"&gt;<br>                        女<br>                    &lt;/td&gt;<br>                &lt;/tr&gt;<br>                &lt;tr&gt;<br>                    &lt;td align=\"center\" width=\"30%\"&gt;<br>                        年龄:<br>                    &lt;/td&gt;<br>                    &lt;td align=\"center\" width=\"300px\"&gt;<br>                        &lt;input type=\"text\" name=\"age\"&gt;<br>                    &lt;/td&gt;<br>                &lt;/tr&gt;<br>                &lt;tr&gt;<br>                    &lt;td align=\"center\" width=\"100px\"&gt;<br>                        地址:<br>                    &lt;/td&gt;<br>                    &lt;td align=\"center\" width=\"300px\"&gt;<br>                        &lt;input type=\"text\" name=\"addr\"&gt;<br>                    &lt;/td&gt;<br>                &lt;/tr&gt;</p>\r\n<p>            &lt;/table&gt;<br>        &lt;/form&gt;<br>        &lt;h1 id=\"myHead\" onclick=\"getValue()\"&gt;<br>            看看三种获取节点的方法?<br>        &lt;/h1&gt;<br>        &lt;p&gt;<br>            点击标题弹出它的值。<br>        &lt;/p&gt;<br>        &lt;input type=\"button\" onclick=\"getElements()\"<br>            value=\"看看name为sex的节点有几个?\" /&gt;<br>        &lt;Br&gt;<br>        &lt;input type=\"button\" onclick=\"getTagElements()\"<br>            value=\"看看标签名为input的节点有几个?\" /&gt;<br><br>     &lt;script type=\"text/javascript\"&gt;<br>         function getValue()<br>          {<br>              var myH=document.getElementById(\"myHead\");   //document.getElementById(),document.getElementsByName(),document.getElementsByTagName()</p>\r\n<p>//1. ID 是一个人的身份证号码，是唯一的。所以通过getElementById获取的是指定的一个人。</p>\r\n<p>//2. Name 是他的名字，可以重复。所以通过getElementsByName获取名字相同的人集合。</p>\r\n<p>//3. TagName可看似某类，getElementsByTagName获取相同类的人集合。如获取小孩这类人，getElementsByTagName(\"小孩\")。</p>\r\n<p><img src=\"http://img.mukewang.com/5405263300018bcf05760129.jpg\" alt=\"\"></p>\r\n<p><br>              alert(myH.innerHTML)<br>          }<br>          function getElements()<br>          {<br>            var mys=document.getElementsByName(\"sex\"); <br>              alert(myS.length);<br>          }</p>\r\n<p>          function getTagElements()<br>          {<br>              var myI=document.getElementsByTagName(\'input\');<br>              alert(myI.length);<br>          }<br><br>     &lt;/script&gt;        </p>\r\n<p>    &lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p> </p>\r\n<p> </p>\r\n<p>3、PHP-面向对象实践</p>\r\n<p>---基本实践</p>\r\n<p>--物以类聚，类，你懂的——相同的属性和方法</p>\r\n<p>--具体化描述类，就是对象。类的对象称为类的一个实例</p>\r\n<p>--类的属性和方法都是类的成员</p>\r\n<p> </p>\n ', '2016-04-28 20:05:04', '2016-04-28 20:19:55', '0', '0', '0', '1', '74');
INSERT INTO `blog` VALUES ('2979', '教研室的下午，取快递的一天 ', '网络', '\n<p>hi！</p>\r\n<p>今天在教研室感觉完全没有看论文的状态，不如学点其他的。</p>\r\n<p>1、JS</p>\r\n<p>-JS的对象定义和PHP有所不同，又有相通的地方，学起来有点意思，感觉用好了会很熟练，上手有点难度</p>\r\n<p>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;日期对象 &lt;/title&gt;<br>&lt;script type=\"text/javascript\"&gt;</p>\r\n<p>//日期时间对象的属性<br> var mydate=new Date();<br>  document.write(\"当前时间：\"+mydate+\"&lt;br&gt;\");<br>  mydate.setTime( mydate.getTime()+ 2* 60 * 60 * 1000);<br>  document.write(\"推迟二小时时间：\" + mydate);</p>\r\n<p>//字符串对象的属性</p>\r\n<p>var message=\"I love JavaScript!\";<br>    var mychar= message.toLowerCase()    ;<br>    document.write(\"字符串为：\"+mychar+\"&lt;br&gt;\");</p>\r\n<p>var mystr=\"I love JavaScript!\";<br>  document.write(mystr.charAt(mystr.length-1) );//返回字符串中最后一个字符</p>\r\n<p>document.write(mystr.indexOf(\"o\",mystr.indexOf(\"o\")+1));//定位第二个o出现的位置，没有则返回-1</p>\r\n<p>document.write(mystr.split(\"-\") + \"&lt;br /&gt;\");//对字符串分割输出<br>document.write(mystr.split(\"\")      + \"&lt;br /&gt;\");<br>document.write(mystr.split(\"\",3)                );</p>\r\n<p>document.write(mystr.substring(mystr.indexOf(\"W\")) + \"&lt;br /&gt;\");//提取输出一些字符串<br>document.write(mystr.substring(mystr.indexOf(\"H\"),5)                   );</p>\r\n<p>document.write(mystr.substr(5) + \"&lt;br /&gt;\");<br>document.write(mystr.substr(0,5)                    );</p>\r\n<p>//下面是数学类型的对象</p>\r\n<p>document.write(Math.ceil(3.3) + \"&lt;br /&gt;\")//向上取整.ceil() 注意负数<br>document.write(Math.ceil(-0.1) + \"&lt;br /&gt;\")<br>document.write(Math.ceil(-9.9) + \"&lt;br /&gt;\")<br>document.write(Math.ceil(8.9) + \"&lt;br /&gt;\")</p>\r\n<p>document.write(Math.floor(3.3)+\"&lt;/br&gt;\")  //向下取整<br>document.write(Math.floor(-0.1)+\"&lt;/br&gt;\")<br>document.write(Math.floor(-9.9)+\"&lt;/br&gt;\")<br>document.write(Math.floor(8.9)+\"&lt;/br&gt;\")</p>\r\n<p>document.write(Math.round(3.3)+\"&lt;/br&gt;\")  //四舍五入<br>document.write(Math.round(-0.1)+\"&lt;/br&gt;\")<br>document.write(Math.round(-9.9)+\"&lt;/br&gt;\")<br>document.write(Math.round(8.9)+\"&lt;/br&gt;\")</p>\r\n<p>document.write(Math.round(Math.random()*10))  //随机数random（），随机生成0-1，所以0-100，就是后面*100，类推</p>\r\n<p>//Array数组对象</p>\r\n<p> var myarr1= new Array(\"010\")  //数组链接 .concat()<br>    var myarr2= new Array(\"-\",\"84697581\");<br>    document.write(myarr1.concat(myarr2))</p>\r\n<p>var myarr1= new Array(\"86\",\"010\")  //提取数组内容到一个字符串， .join(“字符串”)<br>    var myarr2= new Array(\"84697581\");<br>   var myarr3= myarr1.concat(myarr2);<br>document.write(myarr3.join(\"-\"))</p>\r\n<p>document.write(myarr1.reverse())  //字符串倒序输出  .reverse()</p>\r\n<p>document.write(myarr1.slice(-3))  //输出一系列元素</p>\r\n<p><br>&lt;/script&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p> </p>\r\n<p>2、PHP</p>\r\n<p>-关于正则表达式</p>\r\n<p>-常用的元字符，如下：</p>\r\n<p>\\ 一般用于转义字符（注意和隔断符/区分）<br>^ 断言目标的开始位置(或在多行模式下是行首)<br>$ 断言目标的结束位置(或在多行模式下是行尾)<br>. 匹配除换行符外的任何字符(默认)<br>[ 开始字符类定义<br>] 结束字符类定义<br>| 开始一个可选分支<br>( 子组的开始标记<br>) 子组的结束标记<br>? 作为量词，表示 0 次或 1 次匹配。位于量词后面用于改变量词的贪婪特性。 (查阅量词)<br>* 量词，0 次或多次匹配<br>+ 量词，1 次或多次匹配<br>{ 自定义量词开始标记<br>} 自定义量词结束标记</p>\r\n<p>元字符具有两种使用场景，一种是可以在任何地方都能使用，另一种是只能在方括号内使用，在方括号内使用的有：</p>\r\n<p>\\ 转义字符<br>^ 仅在作为第一个字符(方括号内)时，表明字符类取反<br>- 标记字符范围</p>\r\n<p>其中^在反括号外面，表示断言目标的开始位置，但在方括号内部则代表字符类取反，方括号内的减号-可以标记字符范围，例如0-9表示0到9之间的所有数字。</p>\r\n<p>&lt;?php<br>//分隔字符串<br>$str = \'sun-moon-star\';<br>$result = explode(\'-\', $str);<br>print_r($result);<br>array(\'sun\',\'moon\',\'star\');</p>\r\n<p>//正则表达式相关内容</p>\r\n<p>$p = \'/BBC/\';  //或者$p=\'/bbc/i\';——正则表达式就是元字符+分隔符（常用~#/）+模式修饰符<br>$str1 = \"BBC是英国的一个电视台\";<br>if (preg_match($p, $str1)) {<br>    echo \'匹配成功\';</p>\r\n<p>//</p>\r\n<p>$pa = \'/[0-9]{3}-[0-9]{8}/\';<br>$str2= \"我的电话是010-12345678\";<br>preg_match($pa, $str2, $match);<br>echo $match[0];</p>\r\n<p>?&gt;</p>\r\n<p>--贪婪模式和懒惰模式</p>\r\n<p>正则表达式中每个元字符匹配一个字符，当使用+之后将会变的贪婪，它将匹配尽可能多的字符，但使用问号?字符时，它将尽可能少的匹配字符，既是懒惰模式。</p>\r\n<p>贪婪模式：在可匹配与可不匹配的时候，优先匹配</p>\r\n<p>懒惰模式：在可匹配与可不匹配的时候，优先不匹配</p>\r\n<p>当我们确切的知道所匹配的字符长度的时候，可以使用{}指定匹配字符数</p>\r\n<p>\\w 字母数字下划线<br>\r\n\\s 空白字符 空格 换行 制表符<br>\r\n\\d 数字范围[0,9]</p>\r\n<p>( ) 捕获性分组，取得的值会放入$match数组，$match[0]始终是匹配的结果，所以无论多少个( )捕获性分组，都是从1开始算，从左往右计数。<br>\r\n[ ]非捕获性分组，匹配的结果不会被存放如$match数组。</p>\r\n<p> </p>\r\n<p>3、正则表达式</p>\r\n<p>--正则表达式是一种自定义的规则，一般可以理解为一种字符串的查询和匹配的工具</p>\r\n<p>--PHP中常用的正则表达式函数以及常用变量名:</p>\r\n<p>$pattern--正则表达式</p>\r\n<p>$subject--匹配的目标数据</p>\r\n<p><span style=\"font-size: 14px; line-height: 1.5;\">--preg_match()和preg_match_all()</span></p>\r\n<p><span style=\"font-size: 14px; line-height: 1.5;\">preg_match($pattern,$subject,[array &amp;$matches])</span></p>\r\n<p><span style=\"font-size: 14px; line-height: 1.5;\">preg_match_all($pattern,$subject,array &amp;$matches)</span></p>\r\n<p><span style=\"font-size: 14px; line-height: 1.5;\">作用：匹配正则和目标，存到$matches</span></p>\r\n<p><span style=\"font-size: 14px; line-height: 1.5;\">返回匹配次数，其中前者只会返回0或1</span></p>\r\n<p><span style=\"font-size: 14px; line-height: 1.5;\">--preg_replace  preg_filter</span></p>\r\n<p><span style=\"font-size: 14px; line-height: 1.5;\">preg_replace($pattern,$replacement,$subject)</span></p>\r\n<p><span style=\"font-size: 14px; line-height: 1.5;\">preg_filter($pattern,$replacement,$subject)</span></p>\r\n<p><span style=\"font-size: 14px; line-height: 1.5;\">一目了然</span></p>\r\n<p>&lt;?php<br>/*<br> * Description:PHP 正则表达式函数<br> * <br> * @name:show<br> * @description:output debug<br> * @param $var:input data<br> * @return void<br> * <br> */</p>\r\n<p>//preg_match,preg_match_all<br>$pattern=\'/[0-9]/\';<br>$subject=\'lkfaj3243lkj34lkj234lkj3\';<br>$m1=$m2=array();</p>\r\n<p>$t1=preg_match($pattern,$subject,$m1);<br>$t2=preg_match_all($pattern,$subject,$m2);</p>\r\n<p>show($m1);<br>echo \'&lt;hr/&gt;\';<br>show($m2);<br>show($t1.\'||\'.$t2);</p>\r\n<p>//preg_replace preg_filter，返回结果基本上一模一样，只有在替换数组时不一样<br>$replacement=\"替换\";</p>\r\n<p>$r1=preg_replace($pattern,$replacement,$subject);<br>$r2=preg_filter($pattern,$replacement,$subject);</p>\r\n<p>show($r1);<br>echo \'&lt;hr/&gt;\';<br>show($r2);</p>\r\n<p><br>function show($var=null){<br>	if(empty($var)){<br>		echo \'null\';<br>	}elseif(is_array($var)||is_object($var)){<br>		//array,object<br>		echo \'&lt;pre&gt;\';<br>		print_r($var);<br>		echo \'&lt;/pre&gt;\';<br>	}else{<br>		//string,int,float...<br>		echo $var;<br>	}<br>}</p>\r\n<p>?&gt;</p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p><span style=\"font-size: 14px; line-height: 1.5;\"> </span></p>\r\n<p> </p>\n ', '2016-04-28 20:05:04', '2016-04-28 20:19:55', '0', '0', '0', '1', '74');
INSERT INTO `blog` VALUES ('2980', '真不知道起什么名字了 ', '网络', '\n<p>　　hi</p>\r\n<p>早上好，难得早上能见到太阳，虽然昨晚睡得不太平，原因都还不知道，可能，是低开高走吧。</p>\r\n<p>昨天刚好完成任务，还不错，继续保持并多一点吧亲~</p>\r\n<p>上班去了</p>\r\n<p>-----------------08：53-------------------</p>\r\n<p>1、JS</p>\r\n<p>-判断类型语句练习</p>\r\n<p>&lt;!DOCTYPE  HTML&gt;<br>&lt;html &gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;函数&lt;/title&gt;<br><br>&lt;script type=\"text/javascript\"&gt;<br><br>//定义函数<br>function bothmax(a,b){<br>    if(a&gt;b){<br>        maxo=a;<br>    }else if(b&gt;a){<br>        maxo=b;<br>    }else{<br>        maxo=\"两个数字相等\";<br>    }<br>    return maxo;<br>}<br><br>//函数体，判断两个整数比较的三种情况<br>re1=bothmax(5,4);<br>re2=bothmax(6,3);<br> <br>//调用函数，实现下面两组数中，返回较大值。<br>  document.write(\" 5 和 4 的较大值是:\"+re1+\"&lt;br&gt;\");<br>  document.write(\" 6 和 3 的较大值是:\"+re2 ); <br>&lt;/script&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>-事件：onclick=\"function_name()\"</p>\r\n<p>类似的还有onmouseover,onmouseout,onblur,onfocus,onselect</p>\r\n<p>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br> &lt;head&gt;<br>  &lt;title&gt; 事件&lt;/title&gt;  <br>  &lt;script type=\"text/javascript\"&gt;<br>   function count(){    <br>        var txt1   = parseInt( document.getElementById(\'txt1\').value);//获取第一个输入框的值<br>        var txt2   = parseInt( document.getElementById(\'txt2\').value);//获取第二个输入框的值<br>        var select = document.getElementById(\'select\').value;//获取选择框的值<br>        var result = \'\';<br>        switch (select)<br>         {<br>            case \'+\':<br>                result = txt1 + txt2;<br>                break;<br>            case \'-\':<br>                result = txt1 - txt2;<br>                break;<br>            case \'*\':<br>                result = txt1 * txt2;<br>                break;<br>            case \'/\':<br>                result = txt1 / txt2;<br>                break;  <br>         }<br>         document.getElementById(\'fruit\').value = result;//设置结果输入框的值 <br>   }<br>  &lt;/script&gt; <br> &lt;/head&gt; <br> &lt;body&gt;<br>   &lt;input type=\'text\' id=\'txt1\' /&gt; <br>   &lt;select id=\'select\'&gt;<br>        &lt;option value=\'+\'&gt;+&lt;/option&gt;<br>        &lt;option value=\"-\"&gt;-&lt;/option&gt;<br>        &lt;option value=\"*\"&gt;*&lt;/option&gt;<br>        &lt;option value=\"/\"&gt;/&lt;/option&gt;<br>   &lt;/select&gt;<br>   &lt;input type=\'text\' id=\'txt2\' /&gt; <br>   &lt;input type=\'button\' value=\' = \' onclick=\"count()\"/&gt; &lt;!--通过 = 按钮来调用创建的函数，得到结果--&gt; <br>   &lt;input type=\'text\' id=\'fruit\' /&gt;   <br> &lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>--------------16：47-----------------</p>\n ', '2016-04-28 20:05:04', '2016-04-28 20:19:55', '0', '0', '0', '1', '74');
INSERT INTO `blog` VALUES ('2981', '难得起得早，难得周六上班 ', '网络', '\n<p>　　hi</p>\r\n<p>今天是周六，由于十一的缘故，竟然要tm的上班。。。</p>\r\n<p>好吧，不说那么多。竟然起得早了反而，吃自己做的早点吧，然后该干嘛干嘛~</p>\r\n<p>----------8：52-----------------------</p>\r\n<p> 早上无聊，自学JS，下午无聊，找导师聊天，解决以后不无聊的问题。</p>\r\n<p>惯例，简单的代码给出</p>\r\n<p>if等语句练习</p>\r\n<p>&lt;!DOCTYPE HTML&gt;<br>&lt;html &gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;流程控制语句&lt;/title&gt;<br>&lt;script type=\"text/javascript\"&gt;</p>\r\n<p> //第一步把之前的数据写成一个数组的形式,定义变量为 infos<br> var infos=[ [\'小A\',\'女\',21,\'大一\'], [\'小B\',\'男\',23,\'大三\'],    [\'小C\',\'男\',24,\'大四\'],  [\'小D\',\'女\',21,\'大一\'],[\'小E\',\'女\',22,\'大四\'],  [\'小F\',\'男\',21,\'大一\'],[\'小G\',\'女\',22,\'大二\'],  [\'小H\',\'女\',20,\'大三\'],[\'小I\',\'女\',20,\'大一\'],  [\'小J\',\'男\',20,\'大三\']]<br><br><br> //第一次筛选，找出都是大一的信息<br><br>   for(var i=0;i&lt;infos.length;i++){</p>\r\n<p>    if(infos[i][3]==\"大一\"&amp;&amp;infos[i][1]==\"女\"){</p>\r\n<p>            document.write(\"打印信息如下\"+infos[i][0]+\"&lt;br/&gt;\");}          </p>\r\n<p> }<br> //第二次筛选，找出都是女生的信息<br><br><br><br>&lt;/script&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>PHP还在学习ZEND的路上，不要急。</p>\r\n<p>对了，早上还看了LAMP环境搭建的介绍，兴致勃勃的搞了下准备，慢慢来吧。</p>\r\n<p>----------------16：41-----------------</p>\n ', '2016-04-28 20:05:04', '2016-04-28 20:19:55', '0', '0', '0', '1', '74');
INSERT INTO `blog` VALUES ('2982', '151008-JS初级完成,PHP入门（变量常量等）-没假放了 ', '网络', '\n<p>hi</p>\r\n<p>今天是10月8号，你懂的，好困好困哒</p>\r\n<p>上午搞定了JS的入门篇，真的是入门篇，基本都是JS做基本的输出、样式变化。惯例给出代码</p>\r\n<p>&lt;!DOCTYPE HTML&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" Content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;javascript&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body{font-size:12px;}<br>#txt{<br>    height:400px;<br>    width:600px;<br>	border:#333 solid 1px;<br>	padding:5px;}<br>p{<br>	line-height:18px;<br>	text-indent:2em;}<br>&lt;/style&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>  &lt;h2 id=\"con\"&gt;JavaScript课程&lt;/H2&gt;<br>  &lt;div id=\"txt\"&gt; <br>     &lt;h5&gt;JavaScript为网页添加动态效果并实现与用户交互的功能。&lt;/h5&gt;<br>        &lt;p&gt;1. JavaScript入门篇，让不懂JS的你，快速了解JS。&lt;/p&gt;<br>        &lt;p&gt;2. JavaScript进阶篇，让你掌握JS的基础语法、函数、数组、事件、内置对象、BOM浏览器、DOM操作。&lt;/p&gt;<br>        &lt;p&gt;3. 学完以上两门基础课后，在深入学习JavaScript的变量作用域、事件、对象、运动、cookie、正则表达式、ajax等课程。&lt;/p&gt;<br>  &lt;/div&gt;<br>  &lt;form&gt;<br>  &lt;!--当点击相应按钮，执行相应操作，为按钮添加相应事件--&gt;<br>    &lt;input type=\"button\" value=\"改变颜色\" onclick=\"colorchange()\" &gt;  <br>    &lt;input type=\"button\" value=\"改变宽高\" onclick=\"sizechange()\"&gt;<br>    &lt;input type=\"button\" value=\"隐藏内容\" onclick=\"noshow()\"&gt;<br>    &lt;input type=\"button\" value=\"显示内容\" onclick=\"onshow()\"&gt;<br>    &lt;input type=\"button\" value=\"取消设置\" onclick=\"rechoice()\"&gt;<br>  &lt;/form&gt;<br>  &lt;script type=\"text/javascript\"&gt;<br>//定义\"改变颜色\"的函数<br>    function colorchange(){<br>        var mychar=document.getElementById(\"txt\");<br>        mychar.style.color=\"red\";<br>        mychar.style.backgroundColor=\"#CCC\";<br>    }</p>\r\n<p>//定义\"改变宽高\"的函数<br>    function sizechange(){<br>        var mychar=document.getElementById(\"txt\");<br>        mychar.style.width=\"10px\";<br>        mychar.style.height=\"20px\";<br>    }</p>\r\n<p>//定义\"隐藏内容\"的函数<br>    function noshow(){<br>        var mychar=document.getElementById(\"txt\");<br>        mychar.style.display=\"none\";<br>    }</p>\r\n<p>//定义\"显示内容\"的函数<br>    function onshow(){<br>        var mychar=document.getElementById(\"txt\");<br>        mychar.style.display=\"block\";<br>    }</p>\r\n<p><br>//定义\"取消设置\"的函数<br>     function rechoice(){<br>       if(confirm(\"确定要取消设置吗?\")){<br>     var mychar = document.getElementById(\"txt\");  <br>	 mychar.style.color=\"#000\";<br>	 mychar.style.backgroundColor=\"#fff\";<br>	 mychar.style.width=\"600px\";<br>	 mychar.style.height=\"400px\";<br>	 mychar.style.display=\"block\";<br>        }<br>    }</p>\r\n<p> </p>\r\n<p>  &lt;/script&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>-----------------10：52----------------------</p>\r\n<p>中午看完了wamp的配置视频，当然我懒得动默认端口，所以东西就不上了。</p>\r\n<p>下午PHP入门挺快，点都十分基础，只说几个点吧</p>\r\n<p>1、$var=0123;  //这里0123是八进制</p>\r\n<p>2、大段文字/字符串的录入</p>\r\n<p>$var=&lt;&lt;&lt;waw</p>\r\n<p>ajksdjflkaj</p>\r\n<p>ajksdfkl</p>\r\n<p>asdfj</p>\r\n<p>waw;</p>\r\n<p>3、常量</p>\r\n<p>define(\"PI\",3.14);  //一般大写，且注意是关键词还是变量名</p>\r\n<p>define($pi,3.14);</p>\r\n<p>以及系统常量</p>\r\n<p>__FILE__,__LINE__,PHP_VERSION,PHP_OS</p>\r\n<p>-------------------16:49--------------------</p>\r\n<p>晚上还是总是想玩。。</p>\r\n<p>好吧，就几点内容的</p>\r\n<p>1、$a=&amp;$b；  //当b的值变动，a的值也变动，原因在于a被赋值了b的内存值</p>\r\n<p>2、==，===（全等，数据类型都要一样），!==，&lt;&gt;等于!=</p>\r\n<p>3、三元运算符</p>\r\n<p>echo ($a===$b)?\"a大\":\"b大\";</p>\r\n<p>今天就这样吧，晚安</p>\n ', '2016-04-28 20:05:04', '2016-04-28 20:19:55', '0', '0', '0', '1', '74');
INSERT INTO `blog` VALUES ('2983', '151003-动起来-Javascript ', '网络', '\n<p>Hi</p>\r\n<p>玩了三天了，下午一会儿还有电影，心快收不回来了。。。不过，竟然无聊到想学习，你敢信？</p>\r\n<p>下个规矩吧，以后每天早上起来在这里写东西，至少也得是个hi，或者以后都以这个为开头好了，算是个个人标志？申请个专利要不要啊~</p>\r\n<p>开始学习咯~</p>\r\n<p>------------------12：51-------------------------------</p>\r\n<p>1、Javascript初级</p>\r\n<p>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br> &lt;head&gt;<br>  &lt;title&gt; new document &lt;/title&gt;  <br>  &lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=gbk\"/&gt;   <br>  &lt;script type=\"text/javascript\"&gt; //写入JS脚本<br>  function openWindow(){            //JS函数</p>\r\n<p>    if(confirm(\"打开吗？\")){            //confirm确认对话框，返回TRUEorFALSE</p>\r\n<p>        var confirmUrl = prompt(\"地址\",\"http：//www.imooc.com/\");   //prompt输入值的对话框</p>\r\n<p>        if(confirmUrl){</p>\r\n<p>            window.open(confirmUrl,\'width=400,height=500,menubar=no,toolbar=no\');    //打开窗口window.open</p>\r\n<p>        }else{alert(\"终止打开！\");}//300字限制真麻烦          //alert警告对话框</p>\r\n<p>    }</p>\r\n<p>    else{alert(\"你居然不想打开！\");}</p>\r\n<p>}<br>  &lt;/script&gt; <br> &lt;/head&gt; <br> &lt;body&gt; <br>      &lt;input type=\"button\" value=\"新窗口打开网站\" onclick=\"openWindow()\" /&gt;    //函数的调用<br> &lt;/body&gt;<br>&lt;/html&gt;</p>\n ', '2016-04-28 20:05:04', '2016-04-28 20:19:55', '0', '0', '0', '1', '74');
INSERT INTO `blog` VALUES ('2984', '150925-周五不干活-HTML(CSS),Javascript ', '网络', '\n<p>不干活就干自己。。</p>\r\n<p>今天所有代码总结为一个如下</p>\r\n<p>&lt;!DOCTYPE HTML&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;JS代码的位置&lt;/title&gt;<br>&lt;script type=\"text/javascript\"&gt;<br>  document.write(\"I love\");<br>&lt;/script&gt;</p>\r\n<p>&lt;style&gt;</p>\r\n<p>p.span{font-family:\"宋体\";</p>\r\n<p>           font-style:italic;</p>\r\n<p>           font-decoration:underline;</p>\r\n<p>           text-indent:2em;</p>\r\n<p>           display:inline-block}<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;script type=\"text/javascript\"&gt;<br> document.write(\"javascript\");<br>&lt;/script&gt;</p>\r\n<p>&lt;P&gt;这是什么&lt;span&gt;鬼&lt;/span&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p> </p>\r\n<p>总结就是</p>\r\n<p>1、CSS</p>\r\n<p>--有权值这一说，类似优先级，但是是数字化，并且可以叠加的，自己查去；</p>\r\n<p>--字体相关的font-size\\style\\family都是对字体本身进行变动的，-decoration是对字体外的变动</p>\r\n<p>--text-indent缩进，大致了解即可</p>\r\n<p>--display是字段等的显示模式，block，inline，inline-block</p>\r\n<p>2、Javascript</p>\r\n<p>--可以写在&lt;head&gt;或&lt;body&gt;中，但按顺序来输出</p>\r\n<p>--------------------17：00----------------------</p>\r\n<p> </p>\n ', '2016-04-28 20:05:04', '2016-04-28 20:16:38', '0', '0', '0', '1', '74');
INSERT INTO `blog` VALUES ('2985', '敲-PHP与MySQL，JSON ', '网络', '\n<p>hi</p>\r\n<p>敲代码~</p>\r\n<p><strong>1、php与mysql</strong></p>\r\n<p><strong>5.4 修改界面</strong></p>\r\n<p>同样是界面和程序。</p>\r\n<p><strong>界面article.modify.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	//读取旧信息<br>	$id = $_GET[\'id\'];<br>	$query = mysqli_query($con,\"select * from article where id=$id\");<br>	$data = mysqli_fetch_assoc($query);<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"213\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;      &lt;a href=\"article.add.php\"&gt;&lt;/a&gt;&lt;/td&gt;<br>    &lt;td width=\"854\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;&lt;form id=\"form1\" name=\"form1\" method=\"post\" action=\"article.modify.handle.php\"&gt;<br>    	&lt;input type=\"hidden\" name=\"id\" value=\"&lt;?php echo $data[\'id\']?&gt;\" /&gt;<br>      &lt;table width=\"590\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\"&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"center\"&gt;修改文章&lt;/td&gt;<br>          &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td width=\"119\"&gt;标题&lt;/td&gt;<br>          &lt;td width=\"437\"&gt;&lt;label for=\"title\"&gt;&lt;/label&gt;<br>            &lt;input type=\"text\" name=\"title\" id=\"title\" value=\"&lt;?php echo $data[\'title\']?&gt;\"/&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;作者&lt;/td&gt;<br>          &lt;td&gt;&lt;input type=\"text\" name=\"author\" id=\"author\"  value=\"&lt;?php echo $data[\'author\']?&gt;\"/&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;简介&lt;/td&gt;<br>          &lt;td&gt;&lt;label for=\"description\"&gt;&lt;/label&gt;<br>            &lt;textarea name=\"description\" id=\"description\" cols=\"60\" rows=\"5\"&gt;&lt;?php echo $data[\'description\']?&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;内容&lt;/td&gt;<br>          &lt;td&gt;&lt;textarea name=\"content\" cols=\"60\" rows=\"20\" id=\"content\"&gt;&lt;?php echo $data[\'content\']?&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"right\"&gt;&lt;input type=\"submit\" name=\"button\" id=\"button\" value=\"提交\" /&gt;&lt;/td&gt;<br>          &lt;/tr&gt;<br>      &lt;/table&gt;<br>    &lt;/form&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>关键点在于php的读取，以及在html中value的php调用。</p>\r\n<p><strong>修改程序article.modify.handle.php</strong></p>\r\n<p>&lt;?php <br>//和数据库有关的，无条件写上这么一句话<br>	require_once(\'../connect.php\');<br><br>	//接受修改后的数据（表单传递）<br>	$id = $_POST[\'id\'];<br>	$title = $_POST[\'title\'];<br>	$author = $_POST[\'author\'];<br>	$description = $_POST[\'description\'];<br>	$content = $_POST[\'content\'];<br>	$dateline =  time();<br><br>	//写sql修改语句，并做成功与否的判断，并跳回修改界面<br>	$updatesql = \"update article set title=\'$title\',author=\'$author\',description=\'$description\',content=\'$content\',dateline=$dateline where id=$id\";<br>	if(mysqli_query($con,$updatesql)){<br>		echo \"&lt;script&gt;alert(\'修改文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'修改文章失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p><strong>5.5 文章删除</strong></p>\r\n<p>先做需求的分析：同上面几个略有区别，<strong>删除文章不需要界面，只需要一个删除按钮来掉要就行了</strong>。所以只有一个文件。而关键的sql语句只有一句</p>\r\n<p><strong>$delsql=\"delete from article where id=$id\";</strong></p>\r\n<p><strong>aritcle.del.handle.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');</p>\r\n<p>//读取id号。不像其他的是有传递值的<br>	$id = $_GET[\'id\'];<br>	$deletesql = \"delete from article where id=$id\";<br>	if(mysql_query($deletesql)){<br>		echo \"&lt;script&gt;alert(\'删除文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'删除文章失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p><strong>5.6 文章管理列表</strong></p>\r\n<p>需求分析：列表显示出所有的文章，然后后面有两个按钮，删除（链接至上一节的删除模块）和修改（链接至之前的模块）</p>\r\n<p>所以，只需要一个文件，显示模块就好</p>\r\n<p><strong>article.manage.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	$sql = \"select * from article order by dateline desc\";<br>	$query  = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row =mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}else{<br>		$data = array();<br>	}</p>\r\n<p>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"156\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;<br>    &lt;td width=\"837\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;&lt;table width=\"743\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>      &lt;tr&gt;<br>        &lt;td colspan=\"3\" align=\"center\" bgcolor=\"#FFFFFF\"&gt;文章管理列表&lt;/td&gt;<br>        &lt;/tr&gt;<br>      &lt;tr&gt;<br>        &lt;td width=\"37\" bgcolor=\"#FFFFFF\"&gt;编号&lt;/td&gt;<br>        &lt;td width=\"572\" bgcolor=\"#FFFFFF\"&gt;标题&lt;/td&gt;<br>        &lt;td width=\"82\" bgcolor=\"#FFFFFF\"&gt;操作&lt;/td&gt;<br>      &lt;/tr&gt;<br>	&lt;?php <br>		if(!empty($data)){<br>			foreach($data as $value){<br>	?&gt;<br>      &lt;tr&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&amp;nbsp;&lt;?php echo $value[\'id\']?&gt;&lt;/td&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&amp;nbsp;&lt;?php echo $value[\'title\']?&gt;&lt;/td&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&lt;a href=\"article.del.handle.php?id=&lt;?php echo $value[\'id\']?&gt;\"&gt;删除&lt;/a&gt; &lt;a href=\"article.modify.php?id=&lt;?php echo $value[\'id\']?&gt;\"&gt;修改&lt;/a&gt;&lt;/td&gt;<br>      &lt;/tr&gt;<br>    &lt;/table&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>5.7 函数总结</strong></p>\r\n<p>mysqli_connect()</p>\r\n<p>mysqli_select_db()</p>\r\n<p>mysqli_query()</p>\r\n<p>mysqli_error()</p>\r\n<p>mysqli_fetch_assoc()</p>\r\n<p>mysqli_num_rows()</p>\r\n<p><strong>六、前台管理界面的开发</strong></p>\r\n<p><strong>6.1 文章列表</strong></p>\r\n<p><strong>article.list.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from article order by dateline desc\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row = mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>	&lt;?php<br>		if(empty($data)){	<br>			echo \"当前没有文章，请管理员在后台添加文章\";<br>		}else{<br>			foreach($data as $value){<br>	?&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;?php echo $value[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $value[\'author\']?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $value[\'description\']?&gt;<br>			&lt;/div&gt;<br>			&lt;div class=\"meta\"&gt;<br>				&lt;p class=\"links\"&gt;&lt;a href=\"article.show.php?id=&lt;?php echo $value[\'id\']?&gt;\" class=\"more\"&gt;查看详细&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;raquo;&amp;nbsp;&amp;nbsp;&lt;/p&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;?php<br>			}<br>		}<br>	?&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"article.search.php\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"key\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.2 文章详情页</strong></p>\r\n<p><strong>article.show.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$id = intval($_GET[\'id\']);<br>	$sql = \"select * from article where id=$id\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		$row = mysqli_fetch_assoc($query);<br>	}else{<br>		echo \"这篇文章不存在\";<br>		exit;<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"#\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"#\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"#\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;!--文章标题放置到这里--&gt;&lt;?php echo $row[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $row[\'author\'];?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;!--文章内容放置到这里--&gt;<br>				&lt;?php echo $row[\'content\']?&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.3 检索</strong></p>\r\n<p>article.search.php</p>\r\n<p>这里的查询的是根据题目来查询。</p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$key = $_GET[\'key\'];<br>	$sql = \"select * from article where title like \'%$key%\' order by dateline desc\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row = mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>	&lt;?php<br>		if(empty($data)){	<br>			echo \"当前没有文章，请管理员在后台添加文章\";<br>		}else{<br>			foreach($data as $value){<br>	?&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;?php echo $value[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $value[\'author\']?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $value[\'description\']?&gt;<br>			&lt;/div&gt;<br>			&lt;div class=\"meta\"&gt;<br>				&lt;p class=\"links\"&gt;&lt;a href=\"article.show.php?id=&lt;?php echo $value[\'id\']?&gt;\" class=\"more\"&gt;查看详细&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;raquo;&amp;nbsp;&amp;nbsp;&lt;/p&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;?php<br>			}<br>		}<br>	?&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.4 关于我们和联系我们</strong></p>\r\n<p><strong>about.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from  introduce\";<br>	$query = mysqli_query($con,$sql);<br>	//if($query&amp;&amp;mysqli_num_rows($query)){<br>		$about = \"啦啦啦\";<br>	//}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br><br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;关于我们&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $about?&gt;<br>			&lt;/div&gt;<br><br>		&lt;/div&gt;<br><br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>contact.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from  introduce\";<br>	$query = mysqli_query($con,$sql);<br>	//$arr=mysqli_fetch_array($query, MYSQL_ASSOC);<br>	//if($query&amp;&amp;mysqli_num_rows($query)){<br>		$contact = \"asdfadf\";<br>	//}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br><br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;联系我们&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $contact?&gt;<br>			&lt;/div&gt;<br><br>		&lt;/div&gt;<br><br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;</p>\r\n<p>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p> ------------------------------------------</p>\r\n<p><strong>2、JSON基础</strong></p>\r\n<p><strong>1.2 JSON的使用</strong></p>\r\n<p>--<strong>JSON与serialize</strong>数据格式的异同和使用</p>\r\n<p>相同点：把其他数据类型转换为一个可以传输的字符串；都是结构性数据；</p>\r\n<p>不同点：s序列化之后，保存数据原有类型——适用于存储带有加密方式的数据串；JSON更简洁——适合数据量大，不要求数据类型保存的情况</p>\r\n<p>举个栗子</p>\r\n<p>&lt;?php<br>//输出模块<br>function createHtmlTag($tag=\"\"){<br>	echo \"&lt;h1&gt;$tag&lt;/h1&gt;&lt;br/&gt;\";<br>}<br>createHtmlTag(\"Hello!\");<br>createHtmlTag(\"JSON和serialize的对比\");</p>\r\n<p>//测试用数组<br>$member=array(\"username\",\"age\");<br>var_dump($member);</p>\r\n<p><br>$jsonObj=json_encode($member);</p>\r\n<p>$serializeObj=serialize($member);</p>\r\n<p>createHtmlTag($jsonObj);<br>createHtmlTag($serializeObj);</p>\r\n<p>结果</p>\r\n<h1>Hello!</h1>\r\n<p> </p>\r\n<h1>JSON和serialize的对比</h1>\r\n<p> </p>\r\n<pre class=\"xdebug-var-dump\"><strong>array</strong> <em>(size=2)</em>\r\n  0 <span style=\"color: #888a85;\">=&gt;</span> </pre>\r\n<p><small>string</small></p>\r\n<pre class=\"xdebug-var-dump\"> <span style=\"color: #cc0000;\">\'username\'</span> <em>(length=8)</em>\r\n  1 <span style=\"color: #888a85;\">=&gt;</span> </pre>\r\n<p><small>string</small></p>\r\n<pre class=\"xdebug-var-dump\"> <span style=\"color: #cc0000;\">\'age\'</span> <em>(length=3)</em>\r\n</pre>\r\n<h1>[\"username\",\"age\"]</h1>\r\n<p> </p>\r\n<h1>a:2:{i:0;s:8:\"username\";i:1;s:3:\"age\";}</h1>\r\n<p><strong>--常用JSON函数</strong></p>\r\n<p>json_encode()——JSON加密</p>\r\n<p>json_decode()——解密</p>\r\n<p><strong>1.3 JSON实例讲解</strong></p>\r\n<p> </p>\n ', '2016-04-28 20:05:04', '2016-04-28 20:19:08', '0', '0', '0', '1', '86');
INSERT INTO `blog` VALUES ('2986', 'high三个晚上这样好么-JSON&PHP ', '网络', '\n<p>　　hi</p>\r\n<p>昨晚上吃火锅去了，对，你没猜错，我就是在成都</p>\r\n<p>今晚有师兄请客，明天有基友请吃火锅，本来该忙忙哒的这一周要连续high三个晚上么（单身研究生狗就是这么容易满足）。所以只好不务正业写写写了（写不动了。。。）</p>\r\n<p>1、JSON</p>\r\n<p>-----简介-----</p>\r\n<p>Javascript Object Notation，一种轻量级的数据交换格式</p>\r\n<p>---</p>\r\n<p>基本语法：四个基本规则</p>\r\n<p>并列的数据之间用逗号分隔；映射用冒号表示；并列数据的集合（数组）用[]表示；映射的集合（对象）用{}表示</p>\r\n<p>比如：北京市的面积为16800平方公里，常住人口1600万人；上海市的面积为6400平方公里，常住人口1800万</p>\r\n<p>用JSON格式表示就是：</p>\r\n<p>[</p>\r\n<p>{\"城市\":\"北京\",\"面积\":16800,\"人口\":1600},</p>\r\n<p>{\"城市\":\"上海\",\"面积\":6400,\"人口\":1800}</p>\r\n<p>]</p>\r\n<p>---</p>\r\n<p>优点：格式简单，易于读写和传输；支持多种语言</p>\r\n<p>缺点：字符集必须是Unicode；语法过于严谨</p>\r\n<p>2、PHP&amp;MySQL</p>\r\n<p>-----php内置mysql函数（二）-----</p>\r\n<p>----四个fetch函数_取结果</p>\r\n<p>---</p>\r\n<p> $query=mysqli_query($con, \'select * from test\');</p>\r\n<p>print_r(mysqli_fetch_row($query));</p>\r\n<p>第一个fetch，mysql_fetch_row()，只返回第一行的数据；<strong>注意，实际上它每一次读取一行，row by row</strong>，所以可以这么全都出来：</p>\r\n<p>$query=mysqli_query($con, \'select * from test\');<br>while($row=mysqli_fetch_row($query)){<br>	print_r($row);<br>}</p>\r\n<p>而且，如果调用的次数大于行数，将不会输出超过行数的数据，会返回null</p>\r\n<p><em>Array ( [0] =&gt; 1 [1] =&gt; Tom ) Array ( [0] =&gt; 2 [1] =&gt; Tom ) Array ( [0] =&gt; 3 [1] =&gt; Tom ) Array ( [0] =&gt; 4 [1] =&gt; Tom ) Array ( [0] =&gt; 5 [1] =&gt; ???? ) Array ( [0] =&gt; 6 [1] =&gt; Tom ) Array ( [0] =&gt; 7 [1] =&gt; ???? )<br></em></p>\r\n<p> 可以看到返回结果是索引数组</p>\r\n<p>---</p>\r\n<p>mysql_fetch_array()</p>\r\n<p>$arr=mysqli_fetch_array($query);<br>print_r($arr);</p>\r\n<p>用法类似，结果：</p>\r\n<p>Array ( [0] =&gt; 1 [id] =&gt; 1 [1] =&gt; Tom [name] =&gt; Tom )</p>\r\n<p>对比数据库数据</p>\r\n<p>mysql&gt; SELECT * FROM TEST;<br>+----+------+<br>| id | name |<br>+----+------+<br>|  1 | Tom  |<br>|  2 | Tom  |<br>|  3 | Tom  |<br>|  4 | Tom  |<br>|  5 | ???? |<br>|  6 | Tom  |<br>|  7 | ???? |<br>+----+------+</p>\r\n<p>所以，row是取一条数据产生一个索引数组；array默认取一条数据产生一个索引数组和一个关联数组</p>\r\n<p>简单的说，array可以利用键名了，相当方便：</p>\r\n<p><strong>echo $arr[\'name\'];</strong></p>\r\n<p>但是array的速度要慢一点</p>\r\n<p>同时，array还有可选的第二参数，可以选择输出那个/些数组</p>\r\n<p>$arr=mysqli_fetch_array($query,MYSQL_ASSOC);<br>print_r($arr);<br>echo $arr[\'name\'];</p>\r\n<p>得到</p>\r\n<p>Array ( [id] =&gt; 1 [name] =&gt; Tom ) Tom</p>\r\n<p>MYSQL_ASSOC,MYSQL_NUM,MYSQL_BOTH就这么三个参数</p>\r\n<p>---</p>\r\n<p>mysql_fetch_assoc()</p>\r\n<p>基本上就是上一节的东西，输出都一样</p>\r\n<p>---</p>\r\n<p>mysql_fetch_object()</p>\r\n<p>返回的是一个对象</p>\r\n<p>$obj=mysqli_fetch_object($query);<br>echo $obj-&gt;name;</p>\r\n<p>echo \"&lt;br/&gt;\";</p>\r\n<p>print_r($obj);</p>\r\n<p>结果</p>\r\n<p>Tom<br>stdClass Object\r\n(\r\n    [id] =&gt; 1\r\n    [name] =&gt; Tom\r\n) </p>\r\n<p>同row命令类似，也可以一行一行的输出</p>\r\n<p> </p>\n ', '2016-04-28 20:05:05', '2016-04-28 20:19:11', '0', '0', '0', '1', '86');
INSERT INTO `blog` VALUES ('2987', '（转）linux下vi命令大全 ', '网络', '\n<h1 class=\"postTitle\"><span style=\"font-size: 14px; line-height: 1.5;\">http://www.cnblogs.com/88999660/articles/1581524.html </span></h1>\r\n<div class=\"postBody\">\r\n<div id=\"cnblogs_post_body\">\r\n<p>进入vi的命令 <br>vi filename :打开或新建文件，并将光标置于第一行首 <br>vi +n filename ：打开文件，并将光标置于第n行首 <br>vi + filename ：打开文件，并将光标置于最后一行首 <br>vi +/pattern filename：打开文件，并将光标置于第一个与pattern匹配的串处 <br>vi -r filename ：在上次正用vi编辑时发生系统崩溃，恢复filename <br>vi filename....filename ：打开多个文件，依次进行编辑 <br><br>移动光标类命令<br>h ：光标左移一个字符 <br>l ：光标右移一个字符 <br>space：光标右移一个字符 <br>Backspace：光标左移一个字符 <br>k或Ctrl+p：光标上移一行 <br>j或Ctrl+n ：光标下移一行 <br>Enter ：光标下移一行 <br>w或W ：光标右移一个字至字首 <br>b或B ：光标左移一个字至字首 <br>e或E ：光标右移一个字至字尾 <br>) ：光标移至句尾 <br>( ：光标移至句首 <br>}：光标移至段落开头 <br>{：光标移至段落结尾 <br>nG：光标移至第n行首 <br>n+：光标下移n行 <br>n-：光标上移n行 <br>n$：光标移至第n行尾 <br>H ：光标移至屏幕顶行 <br>M ：光标移至屏幕中间行 <br>L ：光标移至屏幕最后行 <br>0：（注意是数字零）光标移至当前行首 <br>$：光标移至当前行尾 <br><br>屏幕翻滚类命令 <br>Ctrl+u：向文件首翻半屏 <br>Ctrl+d：向文件尾翻半屏 <br>Ctrl+f：向文件尾翻一屏 <br>Ctrl＋b；向文件首翻一屏 <br>nz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。 <br><br>插入文本类命令 <br>i ：在光标前 <br>I ：在当前行首 <br>a：光标后 <br>A：在当前行尾 <br>o：在当前行之下新开一行 <br>O：在当前行之上新开一行 <br>r：替换当前字符 <br>R：替换当前字符及其后的字符，直至按ESC键 <br>s：从当前光标位置处开始，以输入的文本替代指定数目的字符 <br>S：删除指定数目的行，并以所输入文本代替之 <br>ncw或nCW：修改指定数目的字 <br>nCC：修改指定数目的行 <br><br>删除命令 <br>ndw或ndW：删除光标处开始及其后的n-1个字 <br>do：删至行首 <br>d$：删至行尾 <br>ndd：删除当前行及其后n-1行 <br>x或X：删除一个字符，x删除光标后的，而X删除光标前的 <br>Ctrl+u：删除输入方式下所输入的文本 <br><br>搜索及替换命令 <br>/pattern：从光标开始处向文件尾搜索pattern <br>?pattern：从光标开始处向文件首搜索pattern <br>n：在同一方向重复上一次搜索命令 <br>N：在反方向上重复上一次搜索命令 <br>：s/p1/p2/g：将当前行中所有p1均用p2替代 <br>：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代 <br>：g/p1/s//p2/g：将文件中所有p1均用p2替换 <br><br>选项设置 <br>all：列出所有选项设置情况 <br>term：设置终端类型 <br>ignorance：在搜索中忽略大小写 <br>list：显示制表位(Ctrl+I)和行尾标志（$) <br>number：显示行号 <br>report：显示由面向行的命令修改过的数目 <br>terse：显示简短的警告信息 <br>warn：在转到别的文件时若没保存当前文件则显示NO write信息 <br>nomagic：允许在搜索模式中，使用前面不带“\\”的特殊字符 <br>nowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始 <br>mesg：允许vi显示其他用户用write写到自己终端上的信息 <br><br>最后行方式命令 <br>：n1,n2 co n3：将n1行到n2行之间的内容拷贝到第n3行下 <br>：n1,n2 m n3：将n1行到n2行之间的内容移至到第n3行下 <br>：n1,n2 d ：将n1行到n2行之间的内容删除 <br>：w ：保存当前文件 <br>：e filename：打开文件filename进行编辑 <br>：x：保存当前文件并退出 <br>：q：退出vi <br>：q!：不保存文件并退出vi <br>：!command：执行shell命令command <br>：n1,n2 w!command：将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入 <br>：r!command：将命令command的输出结果放到当前行 <br><br>寄存器操作 <br>\"?nyy：将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字 <br>\"?nyw：将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字 <br>\"?nyl：将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字 <br>\"?p：取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字 <br>ndd：将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。<br><br>VI的使用<br>--------------------------------------------------------------------------------<br><br>一、插入文本 <br>┌──┬────────────┐ <br>│命令│描述　　　　　　　　　　│ <br>├──┼────────────┤ <br>│i 　│在当前字符前插入文本　　│ <br>├──┼────────────┤ <br>│I 　│在行首插入文本 　　　 　│ <br>├──┼────────────┤ <br>│a 　│在当前字符后添加文本　　│ <br>├──┼────────────┤ <br>│A 　│在行末添加文本　　　　　│ <br>├──┼────────────┤ <br>│o 　│在当前行后面插入一空行　│ <br>├──┼────────────┤ <br>│O 　│在当前行前面插入一空行　│ <br>├──┼────────────┤ <br>│R 　│以改写方式输入文本　　　│ <br>└──┴────────────┘ <br>二、移动光标 <br>┌─────┬───────────┐ <br>│命令　　　│描述　　　　　　　　　│ <br>├─────┼───────────┤ <br>│j或下箭头 │向下移动一行　　　　　│ <br>├─────┼───────────┤ <br>│k或上箭头 │向上移动一行　　　　　│ <br>├─────┼───────────┤ <br>│h或左箭头 │左移一个字符　　　　　│ <br>├─────┼───────────┤ <br>│l或右箭头 │右移一个字符　　　　　│ <br>├─────┼───────────┤ <br>│w 　　　　│右移一个词　　　　　　│ <br>├─────┼───────────┤ <br>│W 　　　　│右移一个以空格分隔的词│ <br>├─────┼───────────┤ <br>│b 　　　　│左移一个词　　　　　　│ <br>├─────┼───────────┤ <br>│B 　　　　│左移一个以空格分隔的词│ <br>├─────┼───────────┤ <br>│0 　　　　│移到行首　　　　　　　│ <br>│Ctrl-F　　│向前翻页　　　　　　　│ <br>├─────┼───────────┤ <br>│Ctrl-B　　│向后翻页　　　　　　　│ <br>├─────┼───────────┤ <br>│nG　　　　│到第n行 　　　　　　　│ <br>├─────┼───────────┤ <br>│G 　　　　│到最后一行　　　　　　│ <br>└─────┴───────────┘ <br>三、替换文本 <br>┌─────┬──────┐ <br>│命令　　　│描述　　　　│ <br>├─────┼──────┤ <br>│$ 　　　　│到行尾　　　│ <br>├─────┼──────┤ <br>│( 　　　　│到句子的开头│ <br>├─────┼──────┤ <br>│) 　　　　│到句子的末尾│ <br>├─────┼──────┤ <br>│{　 　　　│到段落的开头│ <br>├─────┼──────┤ <br>│}　　 　　│到段落的末尾│ <br>└─────┴──────┘ <br><br>四、删除文本 <br>┌───┬───────────┐ <br>│命令　│描述 　　　　　　 　　│ <br>├───┼───────────┤ <br>│r 　　│替换一个字符 　　　　 │ <br>├───┼───────────┤ <br>│c 　　│修改文本直到按下Esc健 │ <br>├───┼───────────┤ <br>│cw　　│修改下一个词 　　　 　│ <br>├───┼───────────┤ <br>│cnw　 │修改接下来的n个词 　　│ <br>└───┴───────────┘ <br>五、文本编辑 <br>┌──┬──────────────────────┐ <br>│命寺│描述　　　　　　　　　　　　　　　　　　　　│ <br>├──┼──────────────────────┤ <br>│yy　│将一行文本移到缺省缓冲区中 　　　　 　　　　│ <br>├──┼──────────────────────┤ <br>│yn　│将下一个词移到缺省缓冲区中 　　 　　　　　　│ <br>├──┼──────────────────────┤ <br>│ynw │将后面的n个词移到缺省缓冲区中　　　　 　　　│ <br>├──┼──────────────────────┤ <br>│p 　│如果缺省缓冲区中包含一行文本，则在当前　　　│ <br>│　　│行后面插入一个空行井将缺省缓冲区中的声　　　│ <br>│　　│容粘贴到这一行中；如果缺省缓冲区中包含　　　│ <br>│　　│多个词，把这些词粘贴到光标的右边．　　　　　│ <br>├──┼──────────────────────┤ <br>│P 　│如果缺省缓冲区中包含一行文本，则正当前 　 　│ <br>│ 　 │行前面插入一个空行井将缺省缓冲区中的内 　 　│ <br>│　　│容粘贴到这一行中；如果缺省缓冲区中包含 　　 │ <br>│ 　 │多个词，把这些词粘贴到光标的左边 　 　<br><br>　　│ <br>└──┴──────────────────────┘ <br>六、保存退出 <br>┌───────────┬───────────────┐ <br>│命令　　　　　　　　　│描述　　　　　　　　　　　　　│ <br>├───────────┼───────────────┤ <br>│zz　　　　　　　　　　│保存并退出　　　　　　　　　　│ <br>├───────────┼───────────────┤ <br>│:w filename　　　　 　│写入文件　　　　　　　　　 　 │ <br>├───────────┼───────────────┤ <br>│:W　　　　　　　　　　│写入文件　　　　　　　　　　　│ <br>├───────────┼───────────────┤ <br>│:x　　　　　　　　　　│保存(如果当前文件修改过)并退出│ <br>├───────────┼───────────────┤ <br>│:q!　　　　　　　　　 │不保存文件，直接退出　　 　　 │ <br>├───────────┼───────────────┤ <br>│:q　　　　　　　　　　│退出vi　　　　　　　　　　　　│ <br><br>VI常用技巧<br><br>VI命令可以说是Unix/Linux世界里最常用的编辑文件的命令了，但是因为它的命令集众多，很多人都不习惯使用它，其实您只需要掌握基本命令，然后加以灵活运用，就会发现它的优势，并会逐渐喜欢使用这种方法。本文旨在介绍VI的一些最常用命令和高级应用技巧。 <br><br>一、基本命令介绍 <br><br>---- 1．光标命令 <br><br>k、j、h、l——上、下、左、右光标移动命令。虽然您可以在Linux中使用键盘右边的4个光标键，但是记住这4个命令还是非常有用的。这4个键正是右手在键盘上放置的基本位置。 <br>nG——跳转命令。n为行数，该命令立即使光标跳到指定行。 <br>Ctrl+G——光标所在位置的行数和列数报告。 <br>w、b——使光标向前或向后跳过一个单词。 <br>---- 2．编辑命令 <br>i、a、r——在光标的前、后以及所在处插入字符命令(i=insert、a=append、r=replace)。 <br>cw、dw——改变(置换)/删除光标所在处的单词的命令 (c=change、d=delete)。 <br>x、d$、dd——删除一个字符、删除光标所在处到行尾的所有字符以及删除整行的命令。 <br>---- 3．查找命令 <br>---- /string、?string——从光标所在处向后或向前查找相应的字符串的命令。 <br>---- 4．拷贝复制命令 <br>---- yy、p——拷贝一行到剪贴板或取出剪贴板中内容的命令。 <br><br>二、常见问题及应用技巧 <br><br>---- 1．在一个新文件中读/etc/passwd中的内容，取出用户名部分。 <br>---- vi file <br>---- :r /etc/passwd 在打开的文件file中光标所在处读入/etc/passwd <br>---- :%s/:.*//g 删除/etc/passwd中用户名后面的从冒号开始直到行尾的所有部分。 <br>---- 您也可以在指定的行号后读入文件内容，例如使用命令“:3r /etc/passwd”从新文件的第3行开始读入 /etc/passwd的所有内容。 <br>---- 我们还可以使用以下方法删掉文件中所有的空行及以#开始的注释行。 <br>---- #cat squid.conf.default | grep -v ^$ | grep -v ^# <br><br>---- 2．在打开一个文件编辑后才知道登录的用户对该文件没有写的权限，不能存盘，需要将所做修改存入临时文件。 <br>---- vi file <br>---- :w /tmp/1 保存所做的所有修改，也可以将其中的某一部分修改保存到临时文件，例如仅仅把第20～59行之间的内容存盘成文件/tmp/1，我们可以键入如下命令。 <br>---- vi file <br>---- :20,59w /tmp/1 <br><br>---- 3．用VI编辑一个文件，但需要删除大段的内容。 <br>---- 首先利用编辑命令“vi file”打开文件，然后将光标移到需要删除的行处按Ctrl+G显示行号，再到结尾处再按Ctrl+G，显示文件结尾的行号。 <br>---- :23,1045d 假定2次得到的行号为23和1045，则把这期间的内容全删除，也可以在要删除的开始行和结束行中用ma、mb命令标记，然后利用“:a,bd”命令删除。 <br><br>---- 4．在整个文件的各行或某几行的行首或行尾加一些字符串。 <br>---- vi file <br>---- :3,$s/^/some string / 在文件的第一行至最后一行的行首插入“some string”。 <br>---- :%s/$/some string/g 在整个文件每一行的行尾添加“some string”。 <br>---- :%s/string1/string2/g 在整个文件中替换“string1”成“string2”。 <br>---- :3,7s/string1/string2/ 仅替换文件中的第3行到第7行中的“string1”成“string2”。 <br>---- 注意: 其中s为substitute，%表示所有行，g表示global。 <br><br>---- 5．同时编辑2个文件，拷贝一个文件中的文本并粘贴到另一个文件中。 <br>---- vi file1 file2 <br>---- yy 在文件1的光标处拷贝所在行 <br>---- :n 切换到文件2 (n=next) <br>---- p 在文件2的光标所在处粘贴所拷贝的行 <br>---- :n 切换回文件1 <br><br>---- 6．替换文件中的路径。 <br>---- 使用命令“:%s#/usr/bin#/bin#g”可以把文件中所有路径/usr/bin换成/bin。也可以使用命令“:%s//usr/bin//bin/g”实现，其中“”是转义字符，表明其后的“/”字符是具有实际意义的字符，不是分隔符。</p>\r\n\r\n</div>\r\n\r\n</div>\r\n<p>进入vi的命令 <br>vi filename :打开或新建文件，并将光标置于第一行首 <br>vi +n filename ：打开文件，并将光标置于第n行首 <br>vi + filename ：打开文件，并将光标置于最后一行首 <br>vi +/pattern filename：打开文件，并将光标置于第一个与pattern匹配的串处 <br>vi -r filename ：在上次正用vi编辑时发生系统崩溃，恢复filename <br>vi filename....filename ：打开多个文件，依次进行编辑 <br><br>移动光标类命令<br>h ：光标左移一个字符 <br>l ：光标右移一个字符 <br>space：光标右移一个字符 <br>Backspace：光标左移一个字符 <br>k或Ctrl+p：光标上移一行 <br>j或Ctrl+n ：光标下移一行 <br>Enter ：光标下移一行 <br>w或W ：光标右移一个字至字首 <br>b或B ：光标左移一个字至字首 <br>e或E ：光标右移一个字至字尾 <br>) ：光标移至句尾 <br>( ：光标移至句首 <br>}：光标移至段落开头 <br>{：光标移至段落结尾 <br>nG：光标移至第n行首 <br>n+：光标下移n行 <br>n-：光标上移n行 <br>n$：光标移至第n行尾 <br>H ：光标移至屏幕顶行 <br>M ：光标移至屏幕中间行 <br>L ：光标移至屏幕最后行 <br>0：（注意是数字零）光标移至当前行首 <br>$：光标移至当前行尾 <br><br>屏幕翻滚类命令 <br>Ctrl+u：向文件首翻半屏 <br>Ctrl+d：向文件尾翻半屏 <br>Ctrl+f：向文件尾翻一屏 <br>Ctrl＋b；向文件首翻一屏 <br>nz：将第n行滚至屏幕顶部，不指定n时将当前行滚至屏幕顶部。 <br><br>插入文本类命令 <br>i ：在光标前 <br>I ：在当前行首 <br>a：光标后 <br>A：在当前行尾 <br>o：在当前行之下新开一行 <br>O：在当前行之上新开一行 <br>r：替换当前字符 <br>R：替换当前字符及其后的字符，直至按ESC键 <br>s：从当前光标位置处开始，以输入的文本替代指定数目的字符 <br>S：删除指定数目的行，并以所输入文本代替之 <br>ncw或nCW：修改指定数目的字 <br>nCC：修改指定数目的行 <br><br>删除命令 <br>ndw或ndW：删除光标处开始及其后的n-1个字 <br>do：删至行首 <br>d$：删至行尾 <br>ndd：删除当前行及其后n-1行 <br>x或X：删除一个字符，x删除光标后的，而X删除光标前的 <br>Ctrl+u：删除输入方式下所输入的文本 <br><br>搜索及替换命令 <br>/pattern：从光标开始处向文件尾搜索pattern <br>?pattern：从光标开始处向文件首搜索pattern <br>n：在同一方向重复上一次搜索命令 <br>N：在反方向上重复上一次搜索命令 <br>：s/p1/p2/g：将当前行中所有p1均用p2替代 <br>：n1,n2s/p1/p2/g：将第n1至n2行中所有p1均用p2替代 <br>：g/p1/s//p2/g：将文件中所有p1均用p2替换 <br><br>选项设置 <br>all：列出所有选项设置情况 <br>term：设置终端类型 <br>ignorance：在搜索中忽略大小写 <br>list：显示制表位(Ctrl+I)和行尾标志（$) <br>number：显示行号 <br>report：显示由面向行的命令修改过的数目 <br>terse：显示简短的警告信息 <br>warn：在转到别的文件时若没保存当前文件则显示NO write信息 <br>nomagic：允许在搜索模式中，使用前面不带“\\”的特殊字符 <br>nowrapscan：禁止vi在搜索到达文件两端时，又从另一端开始 <br>mesg：允许vi显示其他用户用write写到自己终端上的信息 <br><br>最后行方式命令 <br>：n1,n2 co n3：将n1行到n2行之间的内容拷贝到第n3行下 <br>：n1,n2 m n3：将n1行到n2行之间的内容移至到第n3行下 <br>：n1,n2 d ：将n1行到n2行之间的内容删除 <br>：w ：保存当前文件 <br>：e filename：打开文件filename进行编辑 <br>：x：保存当前文件并退出 <br>：q：退出vi <br>：q!：不保存文件并退出vi <br>：!command：执行shell命令command <br>：n1,n2 w!command：将文件中n1行至n2行的内容作为command的输入并执行之，若不指定n1，n2，则表示将整个文件内容作为command的输入 <br>：r!command：将命令command的输出结果放到当前行 <br><br>寄存器操作 <br>\"?nyy：将当前行及其下n行的内容保存到寄存器？中，其中?为一个字母，n为一个数字 <br>\"?nyw：将当前行及其下n个字保存到寄存器？中，其中?为一个字母，n为一个数字 <br>\"?nyl：将当前行及其下n个字符保存到寄存器？中，其中?为一个字母，n为一个数字 <br>\"?p：取出寄存器？中的内容并将其放到光标位置处。这里？可以是一个字母，也可以是一个数字 <br>ndd：将当前行及其下共n行文本删除，并将所删内容放到1号删除寄存器中。<br><br>VI的使用<br>--------------------------------------------------------------------------------<br><br>一、插入文本 <br>┌──┬────────────┐ <br>│命令│描述　　　　　　　　　　│ <br>├──┼────────────┤ <br>│i 　│在当前字符前插入文本　　│ <br>├──┼────────────┤ <br>│I 　│在行首插入文本 　　　 　│ <br>├──┼────────────┤ <br>│a 　│在当前字符后添加文本　　│ <br>├──┼────────────┤ <br>│A 　│在行末添加文本　　　　　│ <br>├──┼────────────┤ <br>│o 　│在当前行后面插入一空行　│ <br>├──┼────────────┤ <br>│O 　│在当前行前面插入一空行　│ <br>├──┼────────────┤ <br>│R 　│以改写方式输入文本　　　│ <br>└──┴────────────┘ <br>二、移动光标 <br>┌─────┬───────────┐ <br>│命令　　　│描述　　　　　　　　　│ <br>├─────┼───────────┤ <br>│j或下箭头 │向下移动一行　　　　　│ <br>├─────┼───────────┤ <br>│k或上箭头 │向上移动一行　　　　　│ <br>├─────┼───────────┤ <br>│h或左箭头 │左移一个字符　　　　　│ <br>├─────┼───────────┤ <br>│l或右箭头 │右移一个字符　　　　　│ <br>├─────┼───────────┤ <br>│w 　　　　│右移一个词　　　　　　│ <br>├─────┼───────────┤ <br>│W 　　　　│右移一个以空格分隔的词│ <br>├─────┼───────────┤ <br>│b 　　　　│左移一个词　　　　　　│ <br>├─────┼───────────┤ <br>│B 　　　　│左移一个以空格分隔的词│ <br>├─────┼───────────┤ <br>│0 　　　　│移到行首　　　　　　　│ <br>│Ctrl-F　　│向前翻页　　　　　　　│ <br>├─────┼───────────┤ <br>│Ctrl-B　　│向后翻页　　　　　　　│ <br>├─────┼───────────┤ <br>│nG　　　　│到第n行 　　　　　　　│ <br>├─────┼───────────┤ <br>│G 　　　　│到最后一行　　　　　　│ <br>└─────┴───────────┘ <br>三、替换文本 <br>┌─────┬──────┐ <br>│命令　　　│描述　　　　│ <br>├─────┼──────┤ <br>│$ 　　　　│到行尾　　　│ <br>├─────┼──────┤ <br>│( 　　　　│到句子的开头│ <br>├─────┼──────┤ <br>│) 　　　　│到句子的末尾│ <br>├─────┼──────┤ <br>│{　 　　　│到段落的开头│ <br>├─────┼──────┤ <br>│}　　 　　│到段落的末尾│ <br>└─────┴──────┘ <br><br>四、删除文本 <br>┌───┬───────────┐ <br>│命令　│描述 　　　　　　 　　│ <br>├───┼───────────┤ <br>│r 　　│替换一个字符 　　　　 │ <br>├───┼───────────┤ <br>│c 　　│修改文本直到按下Esc健 │ <br>├───┼───────────┤ <br>│cw　　│修改下一个词 　　　 　│ <br>├───┼───────────┤ <br>│cnw　 │修改接下来的n个词 　　│ <br>└───┴───────────┘ <br>五、文本编辑 <br>┌──┬──────────────────────┐ <br>│命寺│描述　　　　　　　　　　　　　　　　　　　　│ <br>├──┼──────────────────────┤ <br>│yy　│将一行文本移到缺省缓冲区中 　　　　 　　　　│ <br>├──┼──────────────────────┤ <br>│yn　│将下一个词移到缺省缓冲区中 　　 　　　　　　│ <br>├──┼──────────────────────┤ <br>│ynw │将后面的n个词移到缺省缓冲区中　　　　 　　　│ <br>├──┼──────────────────────┤ <br>│p 　│如果缺省缓冲区中包含一行文本，则在当前　　　│ <br>│　　│行后面插入一个空行井将缺省缓冲区中的声　　　│ <br>│　　│容粘贴到这一行中；如果缺省缓冲区中包含　　　│ <br>│　　│多个词，把这些词粘贴到光标的右边．　　　　　│ <br>├──┼──────────────────────┤ <br>│P 　│如果缺省缓冲区中包含一行文本，则正当前 　 　│ <br>│ 　 │行前面插入一个空行井将缺省缓冲区中的内 　 　│ <br>│　　│容粘贴到这一行中；如果缺省缓冲区中包含 　　 │ <br>│ 　 │多个词，把这些词粘贴到光标的左边 　 　<br><br>　　│ <br>└──┴──────────────────────┘ <br>六、保存退出 <br>┌───────────┬───────────────┐ <br>│命令　　　　　　　　　│描述　　　　　　　　　　　　　│ <br>├───────────┼───────────────┤ <br>│zz　　　　　　　　　　│保存并退出　　　　　　　　　　│ <br>├───────────┼───────────────┤ <br>│:w filename　　　　 　│写入文件　　　　　　　　　 　 │ <br>├───────────┼───────────────┤ <br>│:W　　　　　　　　　　│写入文件　　　　　　　　　　　│ <br>├───────────┼───────────────┤ <br>│:x　　　　　　　　　　│保存(如果当前文件修改过)并退出│ <br>├───────────┼───────────────┤ <br>│:q!　　　　　　　　　 │不保存文件，直接退出　　 　　 │ <br>├───────────┼───────────────┤ <br>│:q　　　　　　　　　　│退出vi　　　　　　　　　　　　│ <br><br>VI常用技巧<br><br>VI命令可以说是Unix/Linux世界里最常用的编辑文件的命令了，但是因为它的命令集众多，很多人都不习惯使用它，其实您只需要掌握基本命令，然后加以灵活运用，就会发现它的优势，并会逐渐喜欢使用这种方法。本文旨在介绍VI的一些最常用命令和高级应用技巧。 <br><br>一、基本命令介绍 <br><br>---- 1．光标命令 <br><br>k、j、h、l——上、下、左、右光标移动命令。虽然您可以在Linux中使用键盘右边的4个光标键，但是记住这4个命令还是非常有用的。这4个键正是右手在键盘上放置的基本位置。 <br>nG——跳转命令。n为行数，该命令立即使光标跳到指定行。 <br>Ctrl+G——光标所在位置的行数和列数报告。 <br>w、b——使光标向前或向后跳过一个单词。 <br>---- 2．编辑命令 <br>i、a、r——在光标的前、后以及所在处插入字符命令(i=insert、a=append、r=replace)。 <br>cw、dw——改变(置换)/删除光标所在处的单词的命令 (c=change、d=delete)。 <br>x、d$、dd——删除一个字符、删除光标所在处到行尾的所有字符以及删除整行的命令。 <br>---- 3．查找命令 <br>---- /string、?string——从光标所在处向后或向前查找相应的字符串的命令。 <br>---- 4．拷贝复制命令 <br>---- yy、p——拷贝一行到剪贴板或取出剪贴板中内容的命令。 <br><br>二、常见问题及应用技巧 <br><br>---- 1．在一个新文件中读/etc/passwd中的内容，取出用户名部分。 <br>---- vi file <br>---- :r /etc/passwd 在打开的文件file中光标所在处读入/etc/passwd <br>---- :%s/:.*//g 删除/etc/passwd中用户名后面的从冒号开始直到行尾的所有部分。 <br>---- 您也可以在指定的行号后读入文件内容，例如使用命令“:3r /etc/passwd”从新文件的第3行开始读入 /etc/passwd的所有内容。 <br>---- 我们还可以使用以下方法删掉文件中所有的空行及以#开始的注释行。 <br>---- #cat squid.conf.default | grep -v ^$ | grep -v ^# <br><br>---- 2．在打开一个文件编辑后才知道登录的用户对该文件没有写的权限，不能存盘，需要将所做修改存入临时文件。 <br>---- vi file <br>---- :w /tmp/1 保存所做的所有修改，也可以将其中的某一部分修改保存到临时文件，例如仅仅把第20～59行之间的内容存盘成文件/tmp/1，我们可以键入如下命令。 <br>---- vi file <br>---- :20,59w /tmp/1 <br><br>---- 3．用VI编辑一个文件，但需要删除大段的内容。 <br>---- 首先利用编辑命令“vi file”打开文件，然后将光标移到需要删除的行处按Ctrl+G显示行号，再到结尾处再按Ctrl+G，显示文件结尾的行号。 <br>---- :23,1045d 假定2次得到的行号为23和1045，则把这期间的内容全删除，也可以在要删除的开始行和结束行中用ma、mb命令标记，然后利用“:a,bd”命令删除。 <br><br>---- 4．在整个文件的各行或某几行的行首或行尾加一些字符串。 <br>---- vi file <br>---- :3,$s/^/some string / 在文件的第一行至最后一行的行首插入“some string”。 <br>---- :%s/$/some string/g 在整个文件每一行的行尾添加“some string”。 <br>---- :%s/string1/string2/g 在整个文件中替换“string1”成“string2”。 <br>---- :3,7s/string1/string2/ 仅替换文件中的第3行到第7行中的“string1”成“string2”。 <br>---- 注意: 其中s为substitute，%表示所有行，g表示global。 <br><br>---- 5．同时编辑2个文件，拷贝一个文件中的文本并粘贴到另一个文件中。 <br>---- vi file1 file2 <br>---- yy 在文件1的光标处拷贝所在行 <br>---- :n 切换到文件2 (n=next) <br>---- p 在文件2的光标所在处粘贴所拷贝的行 <br>---- :n 切换回文件1 <br><br>---- 6．替换文件中的路径。 <br>---- 使用命令“:%s#/usr/bin#/bin#g”可以把文件中所有路径/usr/bin换成/bin。也可以使用命令“:%s//usr/bin//bin/g”实现，其中“”是转义字符，表明其后的“/”字符是具有实际意义的字符，不是分隔符。</p>\r\n\r\n ', '2016-04-28 20:05:05', '2016-04-28 20:20:04', '0', '0', '0', '1', '83');
INSERT INTO `blog` VALUES ('2988', '不就是抽个血吗，至于么-jQuery，Linux完结篇 ', '网络', '\n<p>　　hi</p>\r\n<p>趁着周一去抽血化验，真开心。。。下午报告才出来，不过早上来了就开始各种晕菜，叫错名字，说错话。。。。。至于么。。</p>\r\n<p> 还有在教研室的30天就可以肥家了，凯森凯森。今天不想干活（哪天想干过我就问问），学学jquery吧。</p>\r\n<p><strong>1、jQuery</strong></p>\r\n<p><strong>十、UI型插件</strong></p>\r\n<p><strong>10.1 拖曳插件——draggable</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>拖曳插件draggable的功能是拖动被绑定的元素，当这个jQuery UI插件与元素绑定后，可以通过调用<code class=\"marker\">draggable()</code>方法，实现各种拖曳元素的效果，调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector). draggable({options})</strong></code></p>\r\n<p>options参数为方法调用时的配置对象，根据该对象可以设置各种拖曳效果，如“containment”属性指定拖曳区域，“axis”属性设置拖曳时的坐标方向。</p>\r\n<p> &lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div id=\"x\" class=\"drag\"&gt;沿x轴拖拽&lt;/div&gt;<br>            &lt;div id=\"y\" class=\"drag\"&gt;沿y轴拖拽&lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#x\").draggable({axis:\"x\"});<br>                $(\"#y\").draggable({axis:\"y\"});<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>10.2 放置插件——droppable</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>除使用draggable插件拖曳任意元素外，还可以调用droppable UI插件将拖曳后的任意元素放置在指定区域中，类似购物车效果，调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector).droppable({options})</strong></code></p>\r\n<p>selector参数为接收拖曳元素，options为方法的配置对象，在对象中，drop函数表示当被接收的拖曳元素完全进入接收元素的容器时，触发该函数的调用。</p>\r\n<p> &lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"box\"&gt;<br>                &lt;div class=\"title\"&gt;产品区&lt;/div&gt;<br>                &lt;div class=\"drag\"&gt;&lt;div&gt;苹果&lt;/div&gt;&lt;/div&gt;<br>            &lt;/div&gt;<br>            &lt;div class=\"box\"&gt;<br>                &lt;div class=\"title\"&gt;回收站&lt;/div&gt;<br>                &lt;div class=\"cart\"&gt;&lt;div id=\"tip\"&gt;还没有产品&lt;/div&gt;&lt;/div&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\".drag\").draggable();<br>                $(\".cart\").droppable({<br>                    drop: function () {<br>                                sum--;<br>                        $(\".cart\").removeClass(\"focus\");<br>                        $(\"#tip\").html(\"还没有产品\");<br>                        $(\".title span\").html(sum);   <br>                    }<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>10.3 拖曳排序插件——sortable</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>拖曳排序插件的功能是将序列元素（例如&lt;option&gt;、&lt;li&gt;）按任意位置进行拖曳从而形成一个新的元素序列，实现拖曳排序的功能，它的调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).sortable({options});</strong></code></p>\r\n<p>selector参数为进行拖曳排序的元素，options为调用方法时的配置对象</p>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;我最喜欢的运动&lt;/span&gt;<br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;ul&gt;<br>                    &lt;li&gt;1)足球&lt;/li&gt;<br>                    &lt;li&gt;2)散步&lt;/li&gt;<br>                    &lt;li&gt;3)篮球&lt;/li&gt;<br>                    &lt;li&gt;4)乒乓球&lt;/li&gt;<br>                    &lt;li&gt;5)骑自行车&lt;/li&gt;<br>                &lt;/ul&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"ul\").sortable({<br>                    delay:2,<br>                    opacity:0.4<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>10.4 面板折叠插件——accordion</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>面板折叠插件可以实现页面中指定区域类似“手风琴”的折叠效果，即点击标题时展开内容，再点另一标题时，关闭已展开的内容，调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector).accordion({options});</strong></code></p>\r\n<p>其中，参数selector为整个面板元素，options参数为方法对应的配置对象。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p> &lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div id=\"accordion\"&gt;<br>                &lt;h3&gt;<br>                    &lt;a href=\"#\"&gt;白富美&lt;/a&gt;&lt;/h3&gt;<br>                &lt;p&gt;咱们结婚吧!&lt;/p&gt;<br>                &lt;h3&gt;<br>                    &lt;a href=\"#\"&gt;土豪族&lt;/a&gt;&lt;/h3&gt;<br>                &lt;p&gt;咱们交个朋友吧!&lt;/p&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#accordion\").accordion();<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>10.5 选项卡插件——tabs</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>使用选项卡插件可以将&lt;ul&gt;中的&lt;li&gt;选项定义为选项标题，在标题中，再使用&lt;a&gt;元素的“href”属性设置选项标题对应的内容，它的调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector).tabs({options});</strong></code></p>\r\n<p>selector参数为选项卡整体外围元素，该元素包含选项卡标题与内容，options参数为<code class=\"marker\">tabs()</code>方法的配置对象，通过该对象还能以ajax方式加载选项卡的内容。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div id=\"tabs\"&gt;<br>                &lt;ul&gt;<br>                    &lt;li&gt;&lt;a href=\"#tabs-1\"&gt;最爱吃的水果&lt;/a&gt;&lt;/li&gt;<br>                    &lt;li&gt;&lt;a href=\"#tabs-2\"&gt;最喜欢的运动&lt;/a&gt;&lt;/li&gt;<br>                &lt;/ul&gt;<br>                &lt;div id=\"tabs-1\"&gt;<br>                    &lt;p&gt;橘子&lt;/p&gt;<br>                    &lt;p&gt;香蕉&lt;/p&gt;<br>                    &lt;p&gt;葡萄&lt;/p&gt;<br>                    &lt;p&gt;苹果&lt;/p&gt;<br>                    &lt;p&gt;西瓜&lt;/p&gt;<br>                &lt;/div&gt;<br>                &lt;div id=\"tabs-2\"&gt;<br>                    &lt;p&gt;足球&lt;/p&gt;<br>                    &lt;p&gt;散步&lt;/p&gt;<br>                    &lt;p&gt;篮球&lt;/p&gt;<br>                    &lt;p&gt;乒乓球&lt;/p&gt;<br>                    &lt;p&gt;骑自行车&lt;/p&gt;<br>                &lt;/div&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>               $(\"#tabs\").tabs ({<br>                    //设置各选项卡在切换时的动画效果<br>                    fx: { opacity: \"toggle\", height: \"toggle\" },<br>                    event: \"mousemove\" //通过移动鼠标事件切换选项卡<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>10.6 对话框插件——dialog</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>对话框插件可以用动画的效果弹出多种类型的对话框，实现JavaScript代码中<code class=\"marker\">alert()</code>和<code class=\"marker\">confirm()</code>函数的功能，它的调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).dialog({options});</strong></code></p>\r\n<p>selector参数为显示弹出对话框的元素，通常为&lt;div&gt;，options参数为方法的配置对象，在对象中可以设置对话框类型、“确定”、“取消”按钮执行的代码等。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p> &lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;span id=\"spnName\" class=\"fl\"&gt;张三&lt;/span&gt;<br>                &lt;input id=\"btnDelete\" type=\"button\" value=\"删除\"  class=\"fr\"/&gt;<br>            &lt;/div&gt;<br>            &lt;div id=\'dialog-modal\'&gt;&lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#btnDelete\").bind(\"click\", function () { //询问按钮事件<br>                    if ($(\"#spnName\").html() != null) { //如果对象不为空<br>                        sys_Confirm(\"您真的要删除该条记录吗？\");<br>                        return false;<br>                    }<br>                });<br>            });<br>            function sys_Confirm(content) { //弹出询问信息窗口<br>                $(\"#btnDelete\").dialog({<br>                    height: 140,<br>                    modal: true,<br>                    title: \'系统提示\',<br>                    hide: \'slide\',<br>                    buttons: {<br>                        \'确定\': function () {<br>                            $(\"#spnName\").remove();<br>                            $(this).dialog(\"close\");<br>                        },<br>                        \'取消\': function () {<br>                            $(this).dialog(\"close\");<br>                        }<br>                    },<br>                    open: function (event, ui) {<br>                        $(this).html(\"\");<br>                        $(this).append(\"&lt;p&gt;\" + content + \"&lt;/p&gt;\");<br>                    }<br>                });<br>            }<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>10.7 菜单工具插件——menu</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>菜单工具插件可以通过&lt;ul&gt;创建多级内联或弹出式菜单，支持通过键盘方向键控制菜单滑动，允许为菜单的各个选项添加图标，调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector).menu({options});</strong></code></p>\r\n<p>selector参数为菜单列表中最外层&lt;ul&gt;元素，options为<code class=\"marker\">menu()</code>方法的配置对象。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p> &lt;body&gt;<br>        &lt;ul id=\"menu\"&gt;<br>            &lt;li&gt;&lt;a href=\"#\"&gt;小明一中&lt;/a&gt;<br>                &lt;ul&gt;<br>                    &lt;li&gt;&lt;a href=\"#\"&gt;高中部&lt;/a&gt;<br>                        &lt;ul&gt;<br>                            &lt;li&gt;&lt;a href=\"#\"&gt;高一(1)班&lt;/a&gt;&lt;/li&gt;<br>                            &lt;li&gt;&lt;a href=\"#\"&gt;高一(2)班&lt;/a&gt;&lt;/li&gt;<br>                            &lt;li&gt;&lt;a href=\"#\"&gt;高一(3)班&lt;/a&gt;<br>                                &lt;ul&gt;<br>                                    &lt;li&gt;&lt;a href=\"#\"&gt;小胡&lt;/a&gt;&lt;/li&gt;<br>                                    &lt;li&gt;&lt;a href=\"#\"&gt;小李&lt;/a&gt;&lt;/li&gt;<br>                                    &lt;li&gt;&lt;a href=\"#\"&gt;小陈&lt;/a&gt;&lt;/li&gt;<br>                                &lt;/ul&gt;<br>                            &lt;/li&gt;<br>                        &lt;/ul&gt;<br>                    &lt;/li&gt;<br>                    &lt;li&gt;&lt;a href=\"#\"&gt;初中部&lt;/a&gt;<br>                        &lt;ul&gt;<br>                            &lt;li&gt;&lt;a href=\"#\"&gt;初一(1)班&lt;/a&gt;&lt;/li&gt;<br>                            &lt;li&gt;&lt;a href=\"#\"&gt;初一(2)班&lt;/a&gt;&lt;/li&gt;<br>                            &lt;li&gt;&lt;a href=\"#\"&gt;初一(3)班&lt;/a&gt;&lt;/li&gt;<br>                        &lt;/ul&gt;<br>                    &lt;/li&gt;<br>                    &lt;li&gt;&lt;a href=\"#\"&gt;教研部&lt;/a&gt;&lt;/li&gt;<br>                &lt;/ul&gt;<br>            &lt;/li&gt;<br>            &lt;li class=\"ui-state-disabled\"&gt;&lt;a href=\"#\"&gt;大明二中&lt;/a&gt;&lt;/li&gt;<br>        &lt;/ul&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#menu\").menu();<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>10.8 微调按钮插件——spinner</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>微调按钮插件不仅能在文本框中直接输入数值，还可以通过点击输入框右侧的上下按钮修改输入框的值，还支持键盘的上下方向键改变输入值，调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector).spinner({options});</strong></code></p>\r\n<p>selector参数为文本输入框元素，可选项options参数为<code class=\"marker\">spinner()</code>方法的配置对象，在该对象中，可以设置输入的最大、最小值，获取改变值和设置对应事件。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                选择颜色值&lt;/div&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;span id=\"spnColor\" class=\"input fl\"&gt;<br>                    &lt;input /&gt;<br>                &lt;/span&gt;<br>                &lt;span id=\"spnPrev\" class=\"prev fr\"&gt;&lt;/span&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                //定义变量<br>                var intR = 0, intG = 0, intB = 0, strColor;<br>                $(\"input\").spinner({<br>                    //初始化插件<br>                    max: 10,<br>                    min: 0,<br>                    //设置微调按钮递增/递减事件<br>                    spin: function (event, ui) {<br>                        if (ui.value == 8)<br>                            spnPrev.style.backgroundColor = \"red\";<br>                        else<br>                            spnPrev.style.backgroundColor = \"green\";<br>                    },<br>                    //设置微调按钮值改变事件<br>                    change: function (event, ui) {<br>                        var intTmp = $(this).spinner(\"value\");<br>                        if (intTmp &lt; 0) $(this).spinner(\"value\", 0);<br>                        if (intTmp &gt; 10) $(this).spinner(\"value\", 10);<br>                        if (intTmp == 8)<br>                            spnPrev.style.backgroundColor = \"red\";<br>                        else<br>                            spnPrev.style.backgroundColor = \"green\";<br>                    }<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>10.9 工具提示插件——tooltip</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>工具提示插件可以定制元素的提示外观，提示内容支持变量、Ajax远程获取，还可以自定义提示内容显示的位置，它的调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$(selector).tooltip({options});</strong></code></p>\r\n<p>其中selector为需要显示提示信息的元素，可选项参数options为<code class=\"marker\">tooltip()</code>方法的配置对象，在该对象中，可以设置提示信息的弹出、隐藏时的效果和所在位置。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                工具提示插件&lt;/div&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;div&gt;<br>                    &lt;label for=\"name\"&gt;<br>                        姓名&lt;/label&gt;<br>                    &lt;input id=\"name\" name=\"name\" title=\"我是土豪，欢迎与我做朋友\" /&gt;<br>                &lt;/div&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#name\").tooltip({<br>                    show: {<br>                        effect: \"slideDown\",<br>                        delay: 350<br>                    },<br>                    hide: {<br>                        effect: \"explode\",<br>                        delay: 350<br>                    },<br>                    position: {<br>                        my: \"left top\",<br>                        at: \"left bottom\"<br>                    }<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>十一、工具类函数</strong></p>\r\n<p><strong>11.1 获取浏览器的名称与版本信息</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>在jQuery中，通过<code class=\"marker\">$.browser</code>对象可以获取浏览器的名称和版本信息，如<code class=\"marker\">$.browser.chrome</code>为true，表示当前为Chrome浏览器，<code class=\"marker\">$.browser.mozilla</code>为true，表示当前为火狐浏览器，还可以通过<code class=\"marker\">$.browser.version</code>方式获取浏览器版本信息。</p>\r\n<p> &lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;获取浏览器名称和版本号&lt;/span&gt; <br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;&lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                var strTmp = \"您的浏览器名称是：\";<br>                if ($.browser.chrome) { //谷歌浏览器<br>                    strTmp += \"Chrome\";<br>                }<br>                if ($.browser.mozilla) { //火狐相关浏览器<br>                    strTmp += \"Mozilla FireFox\";<br>                }<br>                strTmp += \"&lt;br /&gt;&lt;br /&gt; 版本号是：\" //获取版本号<br>                       +$.browser.version;<br>                $(\".content\").html(strTmp);<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>很简单的一点，但是，要注意，jQuery的方法，一般是$()，函数常常是$.(?)</p>\r\n<p><strong>11.2 检测浏览器是否属于W3C盒子模型</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>浏览器的盒子模型分为两类，一类为标准的w3c盒子模型，另一类为IE盒子模型，两者区别为在Width和Height这两个属性值中是否包含padding和border的值，w3c盒子模型不包含，IE盒子模型则包含，而在jQuery 中，可以通过<code class=\"marker\">$.support.boxModel</code>对象返回的值，检测浏览器是否属于标准的w3c盒子模型。</p>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;检测是否是盒子模型&lt;/span&gt; <br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;&lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                var strTmp = \"您打开的页面是：\";<br>                if ($.support.boxModel) { //是W3C盒子模型<br>                    strTmp += \"W3C盒子模型\";<br>                }<br>                else { //是IE盒子模型<br>                    strTmp += \"IE盒子模型\";<br>                }<br>                $(\".content\").html(strTmp);<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>11.3 检测对象是否为空</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>在jQuery中，可以调用名为<code class=\"marker\">$.isEmptyObject</code>的工具函数，检测一个对象的内容是否为空，如果为空，则该函数返回true，否则，返回false值，调用格式如下：</p>\r\n<p><code class=\"marker\"><strong>$.isEmptyObject(obj);</strong></code></p>\r\n<p>其中，参数obj表示需要检测的对象名称。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;检测对象是否为空&lt;/span&gt; <br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;&lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                var obj = { \"姓名\": \"土豪一族\" };<br>                var strTmp = \"您定义了一个：\";<br>                if ($.isEmptyObject(obj)) { //检测是否为空<br>                    strTmp += \"空对象\";<br>                }<br>                else {<br>                    strTmp += \"非空对象\";<br>                }<br>                $(\".content\").html(strTmp);<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>11.4 检测对象是否为原始对象</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>调用名为<code class=\"marker\">$.isPlainObject</code>的工具函数，能检测对象是否为通过<code class=\"marker\">{}</code>或<code class=\"marker\">new Object()</code>关键字创建的原始对象，如果是，返回true，否则，返回false值，调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$.isPlainObject (obj);</strong></code></p>\r\n<p>其中，参数obj表示需要检测的对象名称。</p>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;检测对象是否为原始对象&lt;/span&gt; <br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;&lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                var obj = \"null\";<br>                var strTmp = \"您定义了一个：\";<br>                if ($.isPlainObject(obj)) { //检测是否为原始对象<br>                    strTmp += \"原始对象\";<br>                }<br>                else {<br>                    strTmp += \"非原始对象\";<br>                }<br>                $(\".content\").html(strTmp);<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>11.5 检测两个节点的包含关系</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>调用名为<code class=\"marker\">$.contains</code>的工具函数，能检测在一个DOM节点中是否包含另外一个DOM节点，如果包含，返回true，否则，返回false值，调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$.contains (container, contained);</strong></code></p>\r\n<p>参数container表示一个DOM对象节点元素，用于包含其他节点的容器，contained是另一个DOM对象节点元素，用于被其他容器所包含。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;检测两个节点的包含关系&lt;/span&gt; <br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;&lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                var node_a = document.body.firstChild;<br>                var node_b = document.body;<br>                var strTmp = \"对象node_a\";<br>                if ($.contains(node_a,node_b)) { //检测是否包含节点<br>                    strTmp += \" 包含 \";<br>                }<br>                else {<br>                    strTmp += \" 不包含 \";<br>                }<br>                strTmp += \"对象node_b\";<br>                $(\".content\").html(strTmp);<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>11.6 字符串操作函数</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>调用名为<code class=\"marker\">$.trim</code>的工具函数，能删除字符串中左右两边的空格符，但该函数不能删除字符串中间的空格，调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$.trim (str);</strong></code></p>\r\n<p>参数str表示需要删除左右两边空格符的字符串。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;字符串操作函数&lt;/span&gt; <br>                &lt;span class=\"fr\"&gt;<br>                    &lt;input id=\"btnShow\" name=\"btnShow\" type=\"button\" value=\"计算\" /&gt;<br>                &lt;/span&gt;<br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;input id=\"txtName\" name=\"txtName\" type=\"text\" /&gt;<br>                &lt;div class=\"tip\"&gt;&lt;/div&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"#btnShow\").bind(\"click\", function () {<br>                    $(\".tip\").html(\"\");<br>                    var strTmp = \"内容：\";<br>                    var strOld = $(\"#txtName\").val();<br>                    var strNew =$.trim(strOld);<br>                    strTmp += strOld;<br>                    strTmp += \"&lt;br/&gt;&lt;br&gt;除掉空格符前的长度：\"<br>                    strTmp += strOld.length;<br>                    strTmp += \"&lt;br/&gt;&lt;br&gt;除掉空格符后的长度：\"<br>                    strTmp += strNew.length;<br>                    $(\".tip\").show().append(strTmp);<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>11.7 URL操作函数</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>调用名为<code class=\"marker\">$. param</code>的工具函数，能使对象或数组按照<code class=\"marker\">key/value</code>格式进行序列化编码，该编码后的值常用于向服务端发送URL请求，调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$.</strong> <strong>param (obj);</strong></code></p>\r\n<p>参数obj表示需要进行序列化的对象，该对象也可以是一个数组，整个函数返回一个经过序列化编码后的字符串。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;URL操作函数&lt;/span&gt; <br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;div class=\"tip\"&gt;&lt;/div&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                //基本信息对象<br>                var objInfo = new Object();<br>                objInfo.name = \"白富美\";<br>                objInfo.sex = 1;<br>                //序列化对象<br>                var objNewInfo =$.param(objInfo.name);<br>                //显示序列化后的对象<br>                var strTmp = \"&lt;b&gt;对象 白富美 序列化后&lt;/b&gt;：&lt;br/&gt;&lt;br/&gt;\";<br>                strTmp += objNewInfo;<br>                //显示在页面中<br>                $(\".tip\").show().append(strTmp);<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>11.8 使用$.extend()扩展工具函数</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>调用名为<code class=\"marker\">$. extend</code>的工具函数，可以对原有的工具函数进行扩展，自定义类级别的jQuery插件，调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$.</strong> <strong>extend ({options});</strong></code></p>\r\n<p>参数options表示自定义插件的函数内容。</p>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;自定义工具函数求两值中最小值&lt;/span&gt; <br>                &lt;span class=\"fr\"&gt;<br>                    &lt;input id=\"btnShow\" name=\"btnShow\" type=\"button\" value=\"计算\" /&gt;<br>                &lt;/span&gt;<br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;div class=\"tip\"&gt;&lt;/div&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            /*------------------------------------------------------------/<br>            功能：返回两个数中最小值<br>            参数：数字p1,p2<br>            返回：最小值的一个数<br>            示例：$.MinNum(1,2);<br>            /------------------------------------------------------------*/<br>            (function ($) {<br>                $.extend({<br>                    \"MinNum\": function (p1, p2) {<br>                        return (p1 &gt; p2) ? p2 : p1;<br>                    }<br>                });<br>            })(jQuery);<br>            $(function () {<br>                $(\"#btnShow\").bind(\"click\", function () {<br>                    $(\".tip\").html(\"\");<br>                    var strTmp = \"17与18中最小的数是：\";<br>                    strTmp +=$.MinNum(17, 18);<br>                    //显示在页面中<br>                    $(\".tip\").show().append(strTmp);<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p><strong>11.9 使用$.extend()扩展Object对象</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>除使用<code class=\"marker\">$.extend</code>扩展工具函数外，还可以扩展原有的<code class=\"marker\">Object</code>对象，在扩展对象时，两个对象将进行合并，当存在相同属性名时，后者将覆盖前者，调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$.</strong> <strong>extend (obj1,obj2,…objN);</strong></code></p>\r\n<p>参数obj1至objN表示需要合并的各个原有对象。</p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;div id=\"divtest\"&gt;<br>            &lt;div class=\"title\"&gt;<br>                &lt;span class=\"fl\"&gt;合并原有对象&lt;/span&gt; <br>            &lt;/div&gt;<br>            &lt;div class=\"content\"&gt;<br>                &lt;div class=\"tip\"&gt;&lt;/div&gt;<br>            &lt;/div&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                var objInfo = { name: \"\" };<br>                var objMess = { name: \"白富美,\", title: \"欢迎与我联系！\" };<br>                var objNewInfo =$.extend(objInfo,objMess);<br>                var strTmp = \"&lt;b&gt;对象 白富美 合并后&lt;/b&gt;：&lt;br/&gt;&lt;br/&gt;\";<br>                strTmp += objNewInfo.name + objInfo.title;<br>                //显示在页面中<br>                $(\".tip\").show().append(strTmp);<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p> </p>\r\n<p><strong> 十二、在线聊天室实践</strong></p>\r\n<p><strong>12.1 基本功能介绍</strong></p>\r\n<p>登陆后才能进入（基本信息的显示）；</p>\r\n<p>动态显示交流后的内容；</p>\r\n<p>文字和表情的沟通实现（表情也是字符代号编码）</p>\r\n<p>技术重点：ajax的无刷新技术展示数据</p>\r\n<p><strong>12.2 实现效果</strong></p>\r\n<p>利用jq中的ajax函数实现登陆，登陆时，显示登陆中，正确或失败，有相应的动作；</p>\r\n<p>聊天室就是聊天内容区域，输入区域，人员显示区域</p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p>---------------------------------------------------</p>\r\n<p>2、Linux完结篇</p>\r\n<p><strong>九、shell基础</strong></p>\r\n<p><strong>9.1shell概述</strong></p>\r\n<p>--含义</p>\r\n<p>就是其英文单词的意思——壳</p>\r\n<p>是一个命令行解释器！——翻译依赖的是ASCII码，依赖它把命令翻译为二进制的，让内核能够解析命令。</p>\r\n<p>也就是：用户写命令《--》shell解释翻译《--》内核</p>\r\n<p>换言之，<strong>就是我们操作的界面。</strong></p>\r\n<p>但是，在linux特殊的在于，<strong>shell还是一个功能强大的编程语言，易编写，易调试，灵活性较强。</strong></p>\r\n<p>是解释执行的脚本语言，在shell中可以直接调用linux命令。</p>\r\n<p>--分类</p>\r\n<p>当前一般两类：Bourne shell（linux用的就是其下的Bash）和C shell（Unix中的，与c语言相似）</p>\r\n<p>绝大多数的命令是通用的（包括linux和unix），根本原因在于都用shell，版本有差别而已。</p>\r\n<p>[root@andy ~]# echo $SHELL<br>/bin/bash</p>\r\n<p>这个命令可以看到当前的shell</p>\r\n<p>--linux支持的</p>\r\n<p>vi /etc/shells</p>\r\n<p>打开一个文件</p>\r\n<p>/bin/sh<br>/bin/bash<br>/sbin/nologin<br>/bin/dash<br>/bin/tcsh<br>/bin/csh</p>\r\n<p>这些都支持</p>\r\n<p><strong>9.2 脚本执行方式</strong></p>\r\n<p><strong>--echo命令</strong></p>\r\n<p>就是打印嘛。</p>\r\n<p>但和php中不太一样的是，要输出换行的\\n时候需要这样</p>\r\n<p>[root@andy ~]# <strong>echo -e \"aldkjf\\nadsf\"</strong><br>aldkjf<br>adsf</p>\r\n<p>需要加选项-e。</p>\r\n<p>linux本机中是无法支持中文字符，远程工具是可以的</p>\r\n<p>[root@andy ~]# <strong>echo -e \"\\e[1;31m嫁人就要嫁凤姐\\e[0m\"</strong><br>嫁人就要嫁凤姐</p>\r\n<p>上个例子：<strong>\\e[1;31m是开启颜色显示，\\e[0m结束</strong></p>\r\n<p>31是红色，一直到40好像是，自己试试吧</p>\r\n<p><strong>--脚本</strong></p>\r\n<p>vi hello.sh</p>\r\n<p><strong>#!/bin/bash</strong><br>#The first program</p>\r\n<p>echo -e \"\\e[1;34m 天下掉下个林妹妹 \\e[0m\"</p>\r\n<p>要先写入bash的那句话，尽量避免报错。</p>\r\n<p>然后#后面的一般都是注释</p>\r\n<p>shell的好处就是可以直接输出</p>\r\n<p>但，暂时还不能运行——</p>\r\n<p><strong>--执行</strong></p>\r\n<p><strong>赋予权限，直接运行——chmod 755 hello.sh, ./hello.sh</strong></p>\r\n<p><strong>或者，bash命令，bash hello.sh</strong></p>\r\n<p>应该说，最好还是用赋予权限然后（绝对路径）运行</p>\r\n<p><strong>9.3bash的基本功能</strong></p>\r\n<p><strong>9.3.1 命令别名与快捷键</strong></p>\r\n<p><strong>--</strong></p>\r\n<p><strong>命令别名==人的小名/外号</strong></p>\r\n<p>[root@andy ~]# <strong>alias</strong><br>alias cp=\'cp -i\'<br>alias l.=\'ls -d .* --color=auto\'<br>alias ll=\'ls -l --color=auto\'<br>alias ls=\'ls --color=auto\'<br>alias mv=\'mv -i\'<br>alias rm=\'rm -i\'<br>alias which=\'alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde\'</p>\r\n<p>alias命令，可以查看别名。所以，我们设定别名也是上面的格式：alias cp=\'cp -i\'</p>\r\n<p><strong>alias 别名=‘原命令’</strong></p>\r\n<p><strong>重启的话会失效，要想一直有效，要写入对应的环境变量配置文件</strong></p>\r\n<p><strong>vi ~/.bashrc</strong></p>\r\n<p>[root@andy ~]# vi /root/.bashrc</p>\r\n<p># .bashrc</p>\r\n<p># User specific aliases and functions</p>\r\n<p>alias rm=\'rm -i\'<br>alias cp=\'cp -i\'<br>alias mv=\'mv -i\'</p>\r\n<p># Source global definitions<br>if [ -f /etc/bashrc ]; then<br>        . /etc/bashrc<br>fi<br>~</p>\r\n<p>写入alias vi=\'vim\'即可</p>\r\n<p><strong>unalias 别名，就是删除别名。同样，命令行的是临时删除</strong></p>\r\n<p>另外，命令的执行顺序，<strong>别名是优先级别第二高的</strong> </p>\r\n<p>路径+命令》别名》bash命令》目录中查到的第一条命令</p>\r\n<p>即，别名比原名级别高，或者，避免重叠/重复，除非你的目的就是这个</p>\r\n<p><strong>--快捷键</strong></p>\r\n<p><strong>ctrl+c 强制终止</strong></p>\r\n<p><strong>     +l 清屏</strong></p>\r\n<p>     +a 移到命令行首（home）</p>\r\n<p>     +u 删除命令到行首</p>\r\n<p>     +e 跳到行尾（end）</p>\r\n<p>     +z 把命令放入后台（没有终止命令，少用）</p>\r\n<p>     +r 在历史命令中搜索</p>\r\n<p><strong>9.3.2 历史命令</strong></p>\r\n<p><strong>上下箭头调用就好。</strong></p>\r\n<p><strong>[root@andy ~]# history</strong></p>\r\n<p>该命令会显示所有你/当前用户输入过的所有历史命令。所有的历史命令是保存在.bash_history文件中的</p>\r\n<p>history -c 清空历史命令。一般来说，最好不要清空历史命令——查错，以及防贼</p>\r\n<p>history !n 重复执行第n条命令</p>\r\n<p>history !! 重复执行上一条命令</p>\r\n<p><strong>history !字符串 调用最后一个以该字符串开头的命令（常用）</strong></p>\r\n<p><strong>9.3.3 输出重定向</strong></p>\r\n<p><strong>--标准输入输出</strong></p>\r\n<p><strong>键盘</strong>——/dev/stdin <strong>文件描述符为0</strong></p>\r\n<p><strong>显示器</strong>——/dev/sdtout <strong>文件描述符为1</strong></p>\r\n<p><strong>显示器</strong>——/dev/sdterr <strong>文件描述符为2，类型是标准错误输出</strong></p>\r\n<p>背就背文件描述符就好了</p>\r\n<p><strong>--输出重定向</strong></p>\r\n<p><strong>就是把原本应该标准输出的方向重新定向到文件（拐个弯）。</strong></p>\r\n<p>用处就是自动的记录等，<strong>有实际的用处，也常用。</strong></p>\r\n<p>比如</p>\r\n<p><strong>[root@andy ~]# ifconfig &gt; test.log</strong><br>[root@andy ~]# cat test.log<br>eth0      Link encap:Ethernet  HWaddr 00:0C:29:61:EB:6B  <br>          inet addr:192.168.23.50  Bcast:192.168.23.255  Mask:255.255.255.0<br>          inet6 addr: fe80::20c:29ff:fe61:eb6b/64 Scope:Link<br>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1<br>          RX packets:11069 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:3521 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:1000 <br>          RX bytes:798686 (779.9 KiB)  TX bytes:447837 (437.3 KiB)<br>          Interrupt:19 Base address:0x2000 </p>\r\n<p>lo        Link encap:Local Loopback  <br>          inet addr:127.0.0.1  Mask:255.0.0.0<br>          inet6 addr: ::1/128 Scope:Host<br>          UP LOOPBACK RUNNING  MTU:65536  Metric:1<br>          RX packets:20 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:20 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:0 <br>          RX bytes:1532 (1.4 KiB)  TX bytes:1532 (1.4 KiB)</p>\r\n<p>命令的执行，可能会是定时用户来做的。</p>\r\n<p>[root@andy ~]# ls &gt; test.log<br>[root@andy ~]# cat test.log<br>anaconda-ks.cfg<br>cangls<br>hello.sh<br>install.log<br>install.log.syslog<br>japan<br>test.log</p>\r\n<p><strong>单个&gt;，会覆盖结果；双&gt;&gt;是追加</strong></p>\r\n<p><strong>[root@andy ~]# ifconfig &gt;&gt; test.log</strong><br>[root@andy ~]# cat test.log<br>anaconda-ks.cfg<br>cangls<br>hello.sh<br>install.log<br>install.log.syslog<br>japan<br>test.log<br>eth0      Link encap:Ethernet  HWaddr 00:0C:29:61:EB:6B  <br>          inet addr:192.168.23.50  Bcast:192.168.23.255  Mask:255.255.255.0<br>          inet6 addr: fe80::20c:29ff:fe61:eb6b/64 Scope:Link<br>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1<br>          RX packets:11238 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:3586 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:1000 <br>          RX bytes:811445 (792.4 KiB)  TX bytes:455539 (444.8 KiB)<br>          Interrupt:19 Base address:0x2000 </p>\r\n<p>lo        Link encap:Local Loopback  <br>          inet addr:127.0.0.1  Mask:255.0.0.0<br>          inet6 addr: ::1/128 Scope:Host<br>          UP LOOPBACK RUNNING  MTU:65536  Metric:1<br>          RX packets:20 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:20 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:0 <br>          RX bytes:1532 (1.4 KiB)  TX bytes:1532 (1.4 KiB)</p>\r\n<p><strong>如果希望同时保存报错信息（犯2信息）</strong></p>\r\n<p><strong>dateads 2&gt;&gt;test.log</strong></p>\r\n<p><strong>另外注意，追加是有空格，错误输出是没有空格的2&gt;&gt;test.log</strong></p>\r\n<p> </p>\r\n<p>但是，最有用的是正确和错误都要</p>\r\n<p><strong>命令 &gt;&gt; 文件 2&gt;&amp;1   </strong></p>\r\n<p><strong>命令 &amp;&gt;&gt; 文件  ——写到同一个文件</strong></p>\r\n<p>[root@andy ~]# <br>[root@andy ~]# ifconfig &gt;&gt; test2.log 2&gt;&amp;1<br>[root@andy ~]# cat test2.log<br>eth0      Link encap:Ethernet  HWaddr 00:0C:29:61:EB:6B  <br>          inet addr:192.168.23.50  Bcast:192.168.23.255  Mask:255.255.255.0<br>          inet6 addr: fe80::20c:29ff:fe61:eb6b/64 Scope:Link<br>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1<br>          RX packets:11444 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:3638 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:1000 <br>          RX bytes:825629 (806.2 KiB)  TX bytes:461351 (450.5 KiB)<br>          Interrupt:19 Base address:0x2000 </p>\r\n<p>lo        Link encap:Local Loopback  <br>          inet addr:127.0.0.1  Mask:255.0.0.0<br>          inet6 addr: ::1/128 Scope:Host<br>          UP LOOPBACK RUNNING  MTU:65536  Metric:1<br>          RX packets:20 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:20 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:0 <br>          RX bytes:1532 (1.4 KiB)  TX bytes:1532 (1.4 KiB)</p>\r\n<p>[root@andy ~]# ifconfig2 &gt;&gt; test2.log 2&gt;&amp;1<br>[root@andy ~]# cat test2.log<br>eth0      Link encap:Ethernet  HWaddr 00:0C:29:61:EB:6B  <br>          inet addr:192.168.23.50  Bcast:192.168.23.255  Mask:255.255.255.0<br>          inet6 addr: fe80::20c:29ff:fe61:eb6b/64 Scope:Link<br>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1<br>          RX packets:11444 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:3638 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:1000 <br>          RX bytes:825629 (806.2 KiB)  TX bytes:461351 (450.5 KiB)<br>          Interrupt:19 Base address:0x2000 </p>\r\n<p>lo        Link encap:Local Loopback  <br>          inet addr:127.0.0.1  Mask:255.0.0.0<br>          inet6 addr: ::1/128 Scope:Host<br>          UP LOOPBACK RUNNING  MTU:65536  Metric:1<br>          RX packets:20 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:20 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:0 <br>          RX bytes:1532 (1.4 KiB)  TX bytes:1532 (1.4 KiB)</p>\r\n<p>-bash: ifconfig2: command not found</p>\r\n<p><strong> 命令&gt;&gt;文件1 2&gt;&gt;文件2  ——分开保存</strong></p>\r\n<p> 这三个操作是这一块需要记下来的！</p>\r\n<p><strong>--输入重定向</strong></p>\r\n<p> wc命令</p>\r\n<p>[root@andy ~]# wc<br>sadklfjkla<br>asdlkfjl<br>asdf^[[3~asdlfj<br>asdf<br>      4       4      40</p>\r\n<p>统计了你输入的字符长度。</p>\r\n<p> 很少用，大概了解下</p>\r\n<p>命令&lt;文件</p>\r\n<p>命令&lt;&lt;文件</p>\r\n<p><strong>9.3.4 管道符</strong></p>\r\n<p><strong> --多命令顺序执行</strong></p>\r\n<p><strong>; 命令1;命令2 多个命令无逻辑关系按顺序执行</strong></p>\r\n<p><strong>&amp;&amp; 逻辑与，其他一样——1成功，2才执行</strong></p>\r\n<p><strong>||   或——1或2只执行一个</strong></p>\r\n<p>[root@andy ~]# ls ; ifconfig<br>anaconda-ks.cfg  cangls  hello.sh  install.log  install.log.syslog  japan  test2.log  test3.log  test.log<br>eth0      Link encap:Ethernet  HWaddr 00:0C:29:61:EB:6B  <br>          inet addr:192.168.23.50  Bcast:192.168.23.255  Mask:255.255.255.0<br>          inet6 addr: fe80::20c:29ff:fe61:eb6b/64 Scope:Link<br>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1<br>          RX packets:12241 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:3901 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:1000 <br>          RX bytes:884175 (863.4 KiB)  TX bytes:489889 (478.4 KiB)<br>          Interrupt:19 Base address:0x2000 </p>\r\n<p>lo        Link encap:Local Loopback  <br>          inet addr:127.0.0.1  Mask:255.0.0.0<br>          inet6 addr: ::1/128 Scope:Host<br>          UP LOOPBACK RUNNING  MTU:65536  Metric:1<br>          RX packets:20 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:20 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:0 <br>          RX bytes:1532 (1.4 KiB)  TX bytes:1532 (1.4 KiB)</p>\r\n<p>[root@andy ~]# ls &amp;&amp; ifconfig<br>anaconda-ks.cfg  cangls  hello.sh  install.log  install.log.syslog  japan  test2.log  test3.log  test.log<br>eth0      Link encap:Ethernet  HWaddr 00:0C:29:61:EB:6B  <br>          inet addr:192.168.23.50  Bcast:192.168.23.255  Mask:255.255.255.0<br>          inet6 addr: fe80::20c:29ff:fe61:eb6b/64 Scope:Link<br>          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1<br>          RX packets:12289 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:3926 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:1000 <br>          RX bytes:887929 (867.1 KiB)  TX bytes:493627 (482.0 KiB)<br>          Interrupt:19 Base address:0x2000 </p>\r\n<p>lo        Link encap:Local Loopback  <br>          inet addr:127.0.0.1  Mask:255.0.0.0<br>          inet6 addr: ::1/128 Scope:Host<br>          UP LOOPBACK RUNNING  MTU:65536  Metric:1<br>          RX packets:20 errors:0 dropped:0 overruns:0 frame:0<br>          TX packets:20 errors:0 dropped:0 overruns:0 carrier:0<br>          collisions:0 txqueuelen:0 <br>          RX bytes:1532 (1.4 KiB)  TX bytes:1532 (1.4 KiB)</p>\r\n<p>[root@andy ~]# ls || config<br>anaconda-ks.cfg  cangls  hello.sh  install.log  install.log.syslog  japan  test2.log  test3.log  test.log</p>\r\n<p>当然，;可以顺序执行很多命令</p>\r\n<p>[root@andy ~]# ls ; ifconfig ; cd ;history</p>\r\n<p>再看第二个</p>\r\n<p>[root@andy ~]# ls &amp;&amp; echo \"yes\"<br>anaconda-ks.cfg  cangls  hello.sh  install.log  install.log.syslog  japan  test2.log  test3.log  test.log<br>yes</p>\r\n<p>适用于具有（简单）逻辑关系的情况，比如LAMP安装</p>\r\n<p><strong>简单的实现判断命令是否正确</strong></p>\r\n<p><strong>[root@andy ~]# ls &amp;&amp; echo yes || echo</strong> no<br>anaconda-ks.cfg  cangls  hello.sh  install.log  install.log.syslog  japan  test2.log  test3.log  test.log<br>yes</p>\r\n<p><strong>--管道符</strong></p>\r\n<p><strong>|</strong></p>\r\n<p>也是多命令顺序执行。<strong>区别在于，命令一的正确输出作为命令2的操作对象</strong></p>\r\n<p>[root@andy ~]# ls -l /etc | more</p>\r\n<p>所以，相应来说，管道符的命令要更加严格一点</p>\r\n<p>[root@andy ~]# netstat -an | grep ESTABLISHED | wc -l<br>1</p>\r\n<p>这个是以后常用的服务器的命令</p>\r\n<p><strong>9.3.5 通配符</strong></p>\r\n<p>--</p>\r\n<p>可以匹配其他字符的符号</p>\r\n<p><strong>? * [] [a-z] [^0-9]</strong></p>\r\n<p>真的就类似正则表达式中的东西。</p>\r\n<p>用法</p>\r\n<p><strong>[root@andy ~]# ls ja*</strong><br><strong>anaconda-ks.cfg  cangls  juls</strong><br><strong>[root@andy ~]# ls japan</strong><br><strong>anaconda-ks.cfg  cangls  juls</strong></p>\r\n<p><strong>主要用来匹配文件名或者目录的东西；要匹配文件中的内容，就真的用正则表达式了</strong></p>\r\n<p>--特殊</p>\r\n<p>$变量，取变量的值</p>\r\n<p>‘’ 单引号中所有的特殊符号（$`反引号）都没有意义；“”，特殊字符中的\\ ` $有含义</p>\r\n<p>$()，用来引用系统命令，和反引号一样，但推荐使用这个</p>\r\n<p>[root@andy ~]# aa=$(ls)<br>[root@andy ~]# $aa<br>-bash: anaconda-ks.cfg: command not found<br>[root@andy ~]# echo $aa<br>anaconda-ks.cfg cangls hello.sh install.log install.log.syslog japan test2.log test3.log test.log<br>[root@andy ~]# echo \'$aa\'<br>$aa<br>[root@andy ~]# echo \"$aa\"<br>anaconda-ks.cfg<br>cangls<br>hello.sh<br>install.log<br>install.log.syslog<br>japan<br>test2.log<br>test3.log<br>test.log<br><br></p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\r\n\r\n\r\n</div>\n ', '2016-04-28 20:05:05', '2016-04-28 20:20:04', '0', '0', '0', '1', '83');
INSERT INTO `blog` VALUES ('2989', '还是不想改报告，伊阿忆啊哟-Linux基础继续 ', '网络', '\n<p>　　hi</p>\r\n<p>虽然今天是最最美好的周六（前不着工作日后不着工作日），但老子还要来改报告，但额就是不想改，你拿我有啥办法啊。。。</p>\r\n<p>争取完结Linux基础</p>\r\n<p><strong>一、Linux常用命令（三）</strong></p>\r\n<p><strong>4、帮助命令</strong></p>\r\n<p><strong>4.1 帮助命令man</strong></p>\r\n<p><strong>man 命令</strong></p>\r\n<p>--例子</p>\r\n<p>man ls</p>\r\n<p>LS(1) User Commands LS(1)</p>\r\n<p>NAME<br>       ls - list directory contents</p>\r\n<p>SYNOPSIS<br>       ls [OPTION]... [FILE]...</p>\r\n<p>DESCRIPTION<br>       List  information about the FILEs (the current directory by default).  Sort entries alphabetically if none of<br>       -cftuvSUX nor --sort.</p>\r\n<p>       Mandatory arguments to long options are mandatory for short options too.</p>\r\n<p>       -a, --all<br>              do not ignore entries starting with .</p>\r\n<p>       -A, --almost-all<br>              do not list implied . and ..</p>\r\n<p>       --author<br>              with -l, print the author of each file</p>\r\n<p>       -b, --escape<br>              print octal escapes for nongraphic characters</p>\r\n<p>       --block-size=SIZE<br>              use SIZE-byte blocks.  See SIZE format below</p>\r\n<p>       -B, --ignore-backups<br>:</p>\r\n<p>学点英文，这些东西看起来都是没问题的。</p>\r\n<p>在命令行输入/+想看的，比如/-g就可以跳转，同时n键是下一个符合的查找。</p>\r\n<p>q退出。</p>\r\n<p>--</p>\r\n<p>man是官方的帮助手段。</p>\r\n<p>man man可以查看man的用法</p>\r\n<p>MANUAL SECTIONS<br>       The standard sections of the manual include:</p>\r\n<p>       1      User Commands</p>\r\n<p>       2      System Calls</p>\r\n<p>       3      C Library Functions</p>\r\n<p>       4      Devices and Special Files</p>\r\n<p>       5      File Formats and Conventions</p>\r\n<p>       6      Games et. Al.</p>\r\n<p>       7      Miscellanea</p>\r\n<p>       8      System Administration tools and Deamons</p>\r\n<p>这里有man的级别，比如刚才的ls，就是ls(1).</p>\r\n<p>查看命令的man等级，<strong>man -f 命令</strong></p>\r\n<p><strong>man 数字（级别） 命令</strong></p>\r\n<p>[root@localhost ~]# man -f ls<br>ls                   (1)  - list directory contents<br>ls                   (1p)  - list directory contents</p>\r\n<p>[root@localhost ~]# man -f passwd<br>passwd               (1)  - update user\'s authentication tokens<br>passwd               (5)  - password file<br>passwd [sslpasswd]   (1ssl)  - compute password hashes<br>[root@localhost ~]# man 5 passwd</p>\r\n<p>用whereis再来一次</p>\r\n<p>[root@localhost ~]# whereis passwd<br>passwd: /usr/bin/passwd /etc/passwd /usr/share/man/man5/passwd.5.gz /usr/share/man/man1/passwd.1.gz</p>\r\n<p>也可以看到。</p>\r\n<p>再用whatis试一下</p>\r\n<p>[root@localhost ~]# whatis ls<br>ls                   (1)  - list directory contents<br>ls                   (1p)  - list directory contents<br>[root@localhost ~]# whatis passwd<br>passwd               (1)  - update user\'s authentication tokens<br>passwd               (5)  - password file<br>passwd [sslpasswd]   (1ssl)  - compute password hashes</p>\r\n<p>再举个栗子</p>\r\n<p>[root@localhost ~]# whereis ifconfig<br>ifconfig: /sbin/ifconfig /usr/share/man/man8/ifconfig.8.gz<br>[root@localhost ~]# whatis ifconfig<br>ifconfig             (8)  - configure a network interface<br>[root@localhost ~]# man 8 ifconfig</p>\r\n<p><strong>可以看到ifconfig的等级是8——看一下等级说明，也就是只能是root用户使用的命令，同时看到ifconfig命令在sbin目录下，也就是验证了sbin目录下都是只能root用户使用的命令</strong></p>\r\n<p>--</p>\r\n<p>查看与命令相关的帮助</p>\r\n<p><strong>man -k 命令 或者 apropos 命令</strong></p>\r\n<p>[root@localhost ~]# apropos passwd<br>chpasswd             (8)  - update passwords in batch mode<br>fgetpwent_r [getpwent_r] (3)  - get passwd file entry reentrantly<br>getpwent_r           (3)  - get passwd file entry reentrantly<br>gpasswd              (1)  - administer /etc/group and /etc/gshadow<br>kpasswd              (1)  - change a user\'s Kerberos password<br>lpasswd              (1)  - Change group or user password<br>lppasswd             (1)  - add, change, or delete digest passwords<br>pam_localuser        (8)  - require users to be listed in /etc/passwd<br>pam_passwdqc         (8)  - Password quality-control PAM module<br>passwd               (1)  - update user\'s authentication tokens<br>passwd2des [xcrypt]  (3)  - RFS password encryption<br>passwd               (5)  - password file<br>passwd [sslpasswd]   (1ssl)  - compute password hashes<br>saslpasswd2          (8)  - set a user\'s sasl password<br>smbpasswd            (5)  - The Samba encrypted password file<br>smbpasswd            (8)  - change a users SMB password<br>userpasswd           (1)  - A graphical tool to allow users to change their passwords<br>ypchfn [yppasswd]    (1)  - change your password in the NIS database<br>ypchsh [yppasswd]    (1)  - change your password in the NIS database<br>yppasswd             (1)  - change your password in the NIS database</p>\r\n<p><strong>4.2 其他帮助命令</strong></p>\r\n<p>--选项帮助</p>\r\n<p><strong>help 命令</strong></p>\r\n<p><strong>命令 --help ，可以查看命令的所有选项</strong></p>\r\n<p>[root@localhost ~]# ls --help<br>--shell</p>\r\n<p>内部（内核）命令帮助</p>\r\n<p><strong>凡是whereis，有命令的执行位置（文件），就是外部命令</strong>，比如</p>\r\n<p>[root@localhost ~]# whereis ls<br>ls: /bin/ls /usr/share/man/man1/ls.1.gz /usr/share/man/man1p/ls.1p.gz</p>\r\n<p>[root@localhost ~]# whereis cd<br>cd: /usr/share/man/man1/cd.1.gz /usr/share/man/man1p/cd.1p.gz</p>\r\n<p>对比以上两个就能很好理解。</p>\r\n<p><strong>对于外部命令，用man；对于内部命令，用help。</strong></p>\r\n<p>--详细命令帮助info</p>\r\n<p>但是，太过于详细了。。。不太实用，操作不方便。</p>\r\n<p>它会把所用的帮助文档调出来，然后找到你要查询的命令。</p>\r\n<p>4.3 总结</p>\r\n<p>man ls</p>\r\n<p>ls --help</p>\r\n<p>whereis cd</p>\r\n<p>help cd</p>\r\n<p> </p>\r\n<p><strong>5、压缩命令</strong></p>\r\n<p>5.1 格式</p>\r\n<p>这里提到<strong>5种linux常用的压缩格式.zip .gz .bz2 .tar.gz .tar.bz2</strong></p>\r\n<p><strong>5.2 .zip格式</strong></p>\r\n<p><strong>这个格式可以windows和linux的通用</strong></p>\r\n<p>--命令格式</p>\r\n<p><strong>zip 压缩名.zip 源文件</strong></p>\r\n<p>注意，<strong>写压缩名一定要添加所谓的后缀</strong>——虽然不加也可以，但是通用的做法就是加上后缀，方便你我</p>\r\n<p>举个栗子</p>\r\n<p>[root@localhost ~]# ll<br>总用量 48<br>-rw-------. 1 root root  1272 9月  24 21:31 anaconda-ks.cfg<br>-rw-r--r--. 1 root root 26420 9月  24 21:31 install.log<br>-rw-r--r--. 1 root root  7572 9月  24 21:29 install.log.syslog<br>drwxr-xr-x. 2 root root  4096 11月 25 07:20 japan<br>[root@localhost ~]# zip sex_text.zip japan<br>  adding: japan/ (stored 0%)<br>[root@localhost ~]# ll<br>总用量 52<br>-rw-------. 1 root root  1272 9月  24 21:31 anaconda-ks.cfg<br>-rw-r--r--. 1 root root 26420 9月  24 21:31 install.log<br>-rw-r--r--. 1 root root  7572 9月  24 21:29 install.log.syslog<br>drwxr-xr-x. 2 root root  4096 11月 25 07:20 japan<br>-rw-r--r--. 1 root root   162 11月 25 07:20 sex_text.zip</p>\r\n<p>压缩了一个空文件japan，然后显示出来，会发现压缩文件更大一点</p>\r\n<p><strong>--压缩目录</strong></p>\r\n<p><strong>zip -r 名字 源文件</strong></p>\r\n<p>[root@localhost ~]# mkdir japan2<br>[root@localhost ~]# touch japan2/cangls<br>[root@localhost ~]# touch japan2/longls<br>[root@localhost ~]# touch japan2/boduols<br>[root@localhost ~]# zip -r jp.zip japan2<br>  adding: japan2/ (stored 0%)<br>  adding: japan2/longls (stored 0%)<br>  adding: japan2/cangls (stored 0%)<br>  adding: japan2/boduols (stored 0%)<br>[root@localhost ~]# ls<br>anaconda-ks.cfg  install.log  install.log.syslog  japan  japan2  jp.zip  sex_text.zip</p>\r\n<p>你懂的。</p>\r\n<p><strong>--解压缩</strong></p>\r\n<p><strong>unzip 压缩文件</strong></p>\r\n<p>[root@localhost ~]# ls<br>anaconda-ks.cfg  install.log  install.log.syslog  japan  japan2  jp.zip  sex_text.zip<br>[root@localhost ~]# rm -rf japan<br>[root@localhost ~]# rm -rf japan2<br>[root@localhost ~]# ls<br>anaconda-ks.cfg  install.log  install.log.syslog  jp.zip  sex_text.zip<br>[root@localhost ~]# unzip jp.zip<br>Archive:  jp.zip<br>   creating: japan2/<br> extracting: japan2/longls           <br> extracting: japan2/cangls           <br> extracting: japan2/boduols          <br>[root@localhost ~]# unzip sex_text.zip<br>Archive:  sex_text.zip<br>   creating: japan/<br>[root@localhost ~]# ls<br>anaconda-ks.cfg  install.log  install.log.syslog  japan  japan2  jp.zip  sex_text.zip</p>\r\n<p><strong>5.3 .gz格式</strong></p>\r\n<p>是可以实现在windows中解压缩的</p>\r\n<p>--压缩</p>\r\n<p><strong>gzip 源文件</strong></p>\r\n<p>压缩完，直接生成一个.gz文件，然后源文件被删除，当然可以保存下来源文件。</p>\r\n<p>压缩目录：gzip -r </p>\r\n<p>[root@localhost ~]# gzip japan2<br>gzip: japan2 is a directory -- ignored<br>[root@localhost ~]# ls<br>anaconda-ks.cfg  install.log  install.log.syslog  japan  japan2<br>[root@localhost ~]# gzip -r japan<br>[root@localhost ~]# ls<br>anaconda-ks.cfg  install.log  install.log.syslog  japan  japan2</p>\r\n<p><strong>会发现没变化，实际上gzip压缩目录的命令，是对目录下的子文件都进行压缩。所以很麻烦。。。</strong></p>\r\n<p>--解压缩</p>\r\n<p><strong>gzip -d 压缩文件</strong></p>\r\n<p><strong>gunzip 压缩文件</strong></p>\r\n<p><strong>5.4 .bz2格式</strong></p>\r\n<p><strong>不能压缩目录</strong></p>\r\n<p>--压缩</p>\r\n<p>bzip2 源文件</p>\r\n<p>同样不保留源文件</p>\r\n<p>--解压缩</p>\r\n<p>bzip2 -d 压缩文件</p>\r\n<p>bunzip2 压缩文件</p>\r\n<p><strong>-k 保留源文件</strong></p>\r\n<p><strong>5.5 打包命令tar&amp;.tar.bz2&amp;tar.gz</strong></p>\r\n<p>--</p>\r\n<p>tar -cvf 打包文件名 源文件</p>\r\n<p>-c 打包；-v 显示过程；-f 指定打包名</p>\r\n<p>举个栗子</p>\r\n<p>[root@localhost ~]# tar -cvf japan.tar japan<br>japan/<br>japan/japan.tar</p>\r\n<p>然后再用相关的压缩命令即可</p>\r\n<p>[root@localhost ~]# bzip2 japan.tar<br>[root@localhost ~]# ls<br>anaconda-ks.cfg  install.log  install.log.syslog  japan  japan2  japan.tar.bz2</p>\r\n<p>总结一下就是先打包后压缩——完美解决无法压缩目录的问题——但是麻烦（一会儿说）</p>\r\n<p>--解压缩</p>\r\n<p>同样以栗子来说</p>\r\n<p>[root@localhost ~]# bunzip2 japan.tar.bz2<br>[root@localhost ~]# ls<br>anaconda-ks.cfg  install.log  install.log.syslog  japan  japan2  japan.tar<br>[root@localhost ~]# tar -xvf japan.tar<br>japan/<br>japan/japan.tar</p>\r\n<p><strong>解压缩-》解打包——tar -xvf tar文件</strong></p>\r\n<p>--直接实现</p>\r\n<p><strong>tar -zcvf 压缩文件.tar.gz 源文件</strong></p>\r\n<p><strong>tar -jcvf 压缩文件.tar.bz2 源文件</strong></p>\r\n<p>[root@localhost ~]# rm -f japan.tar<br>[root@localhost ~]# ls<br>anaconda-ks.cfg  install.log  install.log.syslog  japan  japan2<br>[root@localhost ~]# tar -zcvf jp.tar.gz japan<br>japan/<br>japan/japan.tar<br>[root@localhost ~]# tar -jcvf jp.tar.gz japan<br>japan/<br>japan/japan.tar<br>[root@localhost ~]# ls<br>anaconda-ks.cfg  install.log  install.log.syslog  japan  japan2  jp.tar.gz<br>[root@localhost ~]# tar -jcvf jp.tar.bz2 japan<br>japan/<br>japan/japan.tar<br>[root@localhost ~]# ls<br>anaconda-ks.cfg  install.log  install.log.syslog  japan  japan2  jp.tar.bz2  jp.tar.gz</p>\r\n<p>--</p>\r\n<p>解压缩的时候还可以<strong>选择解压缩位置</strong></p>\r\n<p>[root@localhost ~]# tar -jxvf jp.tar.bz2 -C /tmp/<br>japan/<br>japan/japan.tar</p>\r\n<p>注意位置选项书写的位置</p>\r\n<p>--高级压缩</p>\r\n<p><strong>tar -jcvf /tmp/jp.tar.bz2 japan japan2</strong></p>\r\n<p>这里把压缩文件存到指定目录，而且压缩的是两个目录的文件</p>\r\n<p>5.6 总结</p>\r\n<p><strong>最常用的是最后两个.tar.gz和.tar.bz2</strong></p>\r\n<p> </p>\r\n<p><strong>6、关机与重启（服务器）</strong></p>\r\n<p><strong>6.1 shutdown</strong></p>\r\n<p><strong>shutdown [] 时间</strong></p>\r\n<p><strong>-c 取消</strong></p>\r\n<p><strong>-h 关机</strong></p>\r\n<p><strong>-r 重启</strong></p>\r\n<p>举个栗子</p>\r\n<p>[root@localhost ~]# date<br>2015年 11月 25日 星期三 08:37:52 CST<br>[root@localhost ~]# shutdown -r 12:20</p>\r\n<p>Broadcast message from root@localhost.localdomain<br>	(/dev/pts/0) at 8:38 ...</p>\r\n<p>The system is going down for reboot in 222 minutes!<br>shuit^H^H^H^H^H^H^H^H^H^Cshutdown: Shutdown cancelled<br>[root@localhost ~]# shutdown -r 12:20 &amp;<br>[1] 25959<br>[root@localhost ~]# <br>Broadcast message from root@localhost.localdomain<br>	(/dev/pts/0) at 8:39 ...</p>\r\n<p>The system is going down for reboot in 221 minutes!</p>\r\n<p><strong>这个例子是说：显示当前时间，然后设定关机时间，然后ctrl+c退出，然后同样的命令加&amp;，让这条命令不影响以后的使用，两次enter回来</strong></p>\r\n<p><strong>注意，虚拟机的时间是不确定的</strong></p>\r\n<p>[root@localhost ~]# shutdown -c<br>shutdown: Shutdown cancelled<br>[1]+  Done                    shutdown -r 12:20</p>\r\n<p>然后shutdown -c 取消上一个关机的命令</p>\r\n<p><strong>标准的关机命令是shutdown -r now</strong></p>\r\n<p><strong>注意，一般不要关机，而是用-r重启比较好——服务器在远端</strong></p>\r\n<p>而且，鉴于该命令的安全和日期保存等，<strong>一般关机重启都是用shutdown命令</strong></p>\r\n<p>6.2 其他关机命令</p>\r\n<p>halt，poweroff，init 0</p>\r\n<p>不是很安全，一般不要用</p>\r\n<p>6.3 其他重启命令</p>\r\n<p>reboot 可以用</p>\r\n<p>init 6</p>\r\n<p><strong>6.4 退出登录命令</strong></p>\r\n<p><strong>logout</strong></p>\r\n<p>使用完远程工具，最好不要直接关闭——不然用户会卡住，造成不必要的问题</p>\r\n<p>这里的logout就是注销</p>\r\n<p> </p>\r\n<p><strong>7、其他常用命令</strong></p>\r\n<p><strong>7.1 挂载命令</strong></p>\r\n<p><strong>简单的理解就是分配盘符</strong></p>\r\n<p><strong>7.1.1 查询与自动挂载</strong></p>\r\n<p>--</p>\r\n<p>mount</p>\r\n<p>[root@localhost ~]# mount<br>/dev/sda5 on / type ext4 (rw)<br>proc on /proc type proc (rw)<br>sysfs on /sys type sysfs (rw)<br>devpts on /dev/pts type devpts (rw,gid=5,mode=620)<br>tmpfs on /dev/shm type tmpfs (rw,rootcontext=\"system_u:object_r:tmpfs_t:s0\")<br>/dev/sda1 on /boot type ext4 (rw)<br>/dev/sda2 on /home type ext4 (rw)<br>none on /proc/sys/fs/binfmt_misc type binfmt_misc (rw)</p>\r\n<p>很简单，就是目录+类型+权限。就看懂根分区，home和boot就行了。</p>\r\n<p>-- </p>\r\n<p>mount -a 实现自动挂载，依据是/etc/fstab这个文件的配置</p>\r\n<p>用vi命令看一下</p>\r\n<p><br>#<br># /etc/fstab<br># Created by anaconda on Thu Sep 24 21:12:39 2015<br>#<br># Accessible filesystems, by reference, are maintained under \'/dev/disk\'<br># See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info<br>#<br>UUID=81a087d8-5e03-442d-a138-a0a5b16a0e4c /                       ext4    defaults        1 1<br>UUID=e27af68c-c4a8-4982-b81e-7c1ca4ef5eaa /boot                   ext4    defaults        1 2<br>UUID=04f853b6-845f-459f-a858-1f84d6a98ce7 /home                   ext4    defaults        1 2<br>UUID=8315579c-295e-4254-9c27-1c30894b4544 swap                    swap    defaults        0 0<br>tmpfs                   /dev/shm                tmpfs   defaults        0 0<br>devpts                  /dev/pts                devpts  gid=5,mode=620  0 0<br>sysfs                   /sys                    sysfs   defaults        0 0<br>proc                    /proc                   proc    defaults        0 0<br>大概看看就行，暂时不要动。</p>\r\n<p>假设想自动挂载U盘，不建议，因为系统每次都要自动挂载，如果没有找到设备，就会系统崩溃。</p>\r\n<p><strong>7.1.2 挂载命令格式</strong></p>\r\n<p><strong>mount [-t 文件系统] [-o 特殊选项] 设备 文件名 挂载点</strong></p>\r\n<p>文件系统-ext4，没写的话，<strong>默认为iso9660</strong></p>\r\n<p>特殊选项比较多，但每一个都有默认值</p>\r\n<p>[root@localhost ~]# cd /home<br>[root@localhost home]# vi hello.sh<br>[root@localhost home]# chmod 755 hello.sh<br>[root@localhost home]# ll<br>总用量 20<br>-rwxr-xr-x. 1 root root    36 11月 25 09:19 hello.sh<br>drwx------. 2 root root 16384 9月  24 21:09 lost+found<br>[root@localhost home]# ./hello.sh <br>hello cangls!!!<br>[root@localhost home]# hello.<br>-bash: hello.: command not found<br>[root@localhost home]# /home/hello.sh<br>hello cangls!!!</p>\r\n<p>可以拿这个文件去做权限等的实验</p>\r\n<p><strong>7.1.3 挂载光盘</strong></p>\r\n<p>第一步：在虚拟机中放一个iso镜像，相当于放个光盘先。<strong>记得在虚拟机中的已连接打勾</strong>。</p>\r\n<p><strong>第二步：建立挂载点（盘符）</strong></p>\r\n<p><strong>任何空目录就可以作为盘符</strong></p>\r\n<p>[root@localhost home]# ls /<br>bin   cgroup  etc   lib         media  mnt  opt   root  selinux  sys  usr<br>boot  dev     home  lost+found  misc   net  proc  sbin  srv      tmp  var</p>\r\n<p>这里的mnt常作为U盘光盘等的挂载点。</p>\r\n<p><strong>[root@localhost ~]# mkdir /mnt/cdrom</strong></p>\r\n<p><strong>第三步：执行挂载命令</strong></p>\r\n<p>[root@localhost ~]# mount -t iso9660 /dev/sr0 /mnt/cdrom<br>mount: block device /dev/sr0 is write-protected, mounting read-only</p>\r\n<p>这样其实就ok了</p>\r\n<p>--读取</p>\r\n<p>[root@localhost ~]# cd /mnt/cdrom<br>[root@localhost cdrom]# ls<br>AUTHORS  ChangeLog  COPYING  isolinux  user_guide.html  user_guide.tex</p>\r\n<p><strong>7.1.4 卸载命令</strong></p>\r\n<p>用于弹出光盘</p>\r\n<p><strong>umount 设备名或者挂载点</strong></p>\r\n<p>[root@localhost cdrom]# umount /mnt/cdrom/<br>umount: /mnt/cdrom: device is busy.<br>        (In some cases useful info about processes that use<br>         the device is found by lsof(8) or fuser(1))</p>\r\n<p>发现设备正忙。。。因为当前用户就在当前目录下。。。。。。。</p>\r\n<p><strong>[root@localhost cdrom]# cd</strong><br><strong>[root@localhost ~]# umount /mnt/cdrom/</strong></p>\r\n<p><strong>注意，卸载命令是必须有的。</strong></p>\r\n<p>7.1.5 U盘的挂载</p>\r\n<p><strong>光盘的设备是一直都在/dev的，sr0</strong></p>\r\n<p>[root@localhost ~]# ls /dev/<br>agpgart          dvd        loop1    net                 ram13   scd0      systty  tty21  tty36  tty50  tty8     vcs6<br>autofs           dvdrw      loop2    network_latency     ram14   sda       tty     tty22  tty37  tty51  tty9     vcsa<br>block            fb         loop3    network_throughput  ram15   sda1      tty0    tty23  tty38  tty52  ttyS0    vcsa1<br>bsg              fb0        loop4    null                ram2    sda2      tty1    tty24  tty39  tty53  ttyS1    vcsa2<br>btrfs-control    fd         loop5    nvram               ram3    sda3      tty10   tty25  tty4   tty54  ttyS2    vcsa3<br>bus              full       loop6    oldmem              ram4    sda4      tty11   tty26  tty40  tty55  ttyS3    vcsa4<br>cdrom            fuse       loop7    parport0            ram5    sda5      tty12   tty27  tty41  tty56  urandom  vcsa5<br>cdrw             hidraw0    lp0      port                ram6    sg0       tty13   tty28  tty42  tty57  usbmon0  vcsa6<br>char             hidraw1    lp1      ppp                 ram7    sg1       tty14   tty29  tty43  tty58  usbmon1  vga_arbiter<br>console          hpet       lp2      ptmx                ram8    shm       tty15   tty3   tty44  tty59  usbmon2  zero<br>core             hugepages  lp3      pts                 ram9    snapshot  tty16   tty30  tty45  tty6   vcs<br>cpu              hvc0       MAKEDEV  ram0                random  snd       tty17   tty31  tty46  tty60  vcs1<br>cpu_dma_latency  input      mapper   ram1                raw     sr0       tty18   tty32  tty47  tty61  vcs2<br>crash            kmsg       mcelog   ram10               root    stderr    tty19   tty33  tty48  tty62  vcs3<br>disk             log        mem      ram11               rtc     stdin     tty2    tty34  tty49  tty63  vcs4<br>dmmidi           loop0      midi     ram12               rtc0    stdout    tty20   tty35  tty5   tty7   vcs5</p>\r\n<p><strong>U盘则是看成是一个硬盘。插入后，被认为是新的一块硬盘。要查看一下</strong></p>\r\n<p>[root@localhost ~]# <strong>fdisk -l</strong></p>\r\n<p>Disk /dev/sda: 10.7 GB, 10737418240 bytes<br>255 heads, 63 sectors/track, 1305 cylinders<br>Units = cylinders of 16065 * 512 = 8225280 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br>Disk identifier: 0x000018cb</p>\r\n<p>   Device Boot      Start         End      Blocks   Id  System<br>/dev/sda1   *           1          26      204800   83  Linux<br>Partition 1 does not end on cylinder boundary.<br>/dev/sda2              26         281     2048000   83  Linux<br>Partition 2 does not end on cylinder boundary.<br>/dev/sda3             281         409     1024000   82  Linux swap / Solaris<br>Partition 3 does not end on cylinder boundary.<br>/dev/sda4             409        1306     7207936    5  Extended<br>/dev/sda5             409        1306     7206912   83  Linux</p>\r\n<p>fdisk -l 看一下已经识别的硬盘。</p>\r\n<p>一般来说，U盘是sdb1</p>\r\n<p>挂载</p>\r\n<p><strong>mount -t vfat /dev/sdb1 /mnt/usb/</strong></p>\r\n<p><strong>注意，vfat类型就是fat32，linux系统默认不支持ntfs。所以，移动硬盘和ntfs的U盘是无法直接挂载的。好在大多数U盘是fat32的文件系统。</strong></p>\r\n<p>解决办法是安装驱动——NTFS 3G，但是只能是只读的。想写，只能修改内核。</p>\r\n<p>实际上，都直接网络传输了。</p>\r\n<p>7.2 用户登录查看命令</p>\r\n<p>--w</p>\r\n<p>查看用户的登录信息</p>\r\n<p>[root@localhost ~]# w<br> 10:04:45 up  1:10,  1 user,  load average: 0.00, 0.00, 0.00<br>USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT<br>root     pts/0    192.168.2.111    08:59    0.00s  0.56s  0.21s w</p>\r\n<p>分别是系统时间，使用的时间，已登录用户，三次时间点的平均负载。</p>\r\n<p>然后是，用户名，登录地点（/0是远程），</p>\r\n<p>--who</p>\r\n<p>[root@localhost ~]# who<br>root     pts/0        2015-11-25 08:59 (192.168.2.111)</p>\r\n<p>不用解释了吧，只是w要多看一点负载</p>\r\n<p>--last</p>\r\n<p>[root@localhost ~]# who<br>root     pts/0        2015-11-25 08:59 (192.168.2.111)<br>[root@localhost ~]# last<br>root     pts/0        192.168.2.111    Wed Nov 25 08:59   still logged in   <br>root     pts/0        192.168.2.111    Wed Nov 25 08:55 - 08:59  (00:03)    <br>reboot   system boot  2.6.32-504.el6.i Wed Nov 25 08:54 - 10:11  (01:16)    <br>root     pts/0        192.168.2.111    Wed Nov 25 06:26 - down   (02:26)    <br>root     pts/0        192.168.1.101    Wed Nov 25 06:09 - 06:22  (00:13)    <br>root     tty4                          Wed Nov 25 06:02 - down   (02:51)    <br>root     tty1                          Wed Nov 25 05:09 - down   (03:44)    <br>reboot   system boot  2.6.32-504.el6.i Wed Nov 25 05:05 - 08:53  (03:48)    <br>root     pts/0        192.168.0.235    Wed Nov 25 05:00 - down   (00:03)    <br>root     tty1                          Wed Nov 25 04:43 - down   (00:20)    <br>reboot   system boot  2.6.32-504.el6.i Wed Nov 25 04:42 - 05:04  (00:21)    <br>root     tty1                          Thu Sep 24 22:24 - down   (00:01)    <br>reboot   system boot  2.6.32-504.el6.i Thu Sep 24 22:24 - 22:26  (00:02)    </p>\r\n<p>wtmp begins Thu Sep 24 22:24:03 2015</p>\r\n<p>查看过去的登录用户信息</p>\r\n<p>--lastlog</p>\r\n<p>[root@localhost ~]# lastlog<br>用户名           端口     来自             最后登陆时间<br>root             pts/0    192.168.2.111    三 11月 25 08:59:28 +0800 2015<br>bin                                        **从未登录过**<br>daemon                                     **从未登录过**<br>adm                                        **从未登录过**<br>lp                                         **从未登录过**<br>sync                                       **从未登录过**<br>shutdown                                   **从未登录过**<br>halt                                       **从未登录过**<br>mail                                       **从未登录过**<br>uucp                                       **从未登录过**<br>operator                                   **从未登录过**<br>games                                      **从未登录过**<br>gopher                                     **从未登录过**<br>ftp                                        **从未登录过**<br>nobody                                     **从未登录过**<br>dbus                                       **从未登录过**<br>vcsa                                       **从未登录过**<br>rpc                                        **从未登录过**<br>haldaemon                                  **从未登录过**<br>ntp                                        **从未登录过**<br>saslauth                                   **从未登录过**<br>postfix                                    **从未登录过**<br>abrt                                       **从未登录过**<br>rpcuser                                    **从未登录过**<br>nfsnobody                                  **从未登录过**<br>sshd                                       **从未登录过**<br>tcpdump                                    **从未登录过**<br>oprofile                                   **从未登录过**</p>\r\n<p>列出所有用户，并显示他们的状态</p>\r\n<p>---------------------------------------------</p>\r\n<p>果然没睡好是不行的，回去休息了。明天还要改报告和综述，不知道有没机会学习了。bye</p>\n ', '2016-04-28 20:05:05', '2016-04-28 20:20:04', '0', '0', '0', '1', '83');
INSERT INTO `blog` VALUES ('2990', '原来今天是感恩节-Linux基础继续&MySQL和PHP ', '网络', '\n<p>　　hi</p>\r\n<p>原来今天是感恩节。虽然一直没有过这个节日的习惯，但仅仅是听到感恩的消息，都能想到一幅幅画面。愿大家安好！</p>\r\n<p>下午开题会议还是有所收获，悄悄的，就变向那个不喜欢自己的人了。</p>\r\n<p>一、Linux基础（二）</p>\r\n<p>-----Linux常用命令（二）-----</p>\r\n<p>3、文件搜索命令</p>\r\n<p><strong>3.1 文件搜索命令locate</strong></p>\r\n<p>--优点：</p>\r\n<p>搜索速度快<strong>（在学习中，要把眼光放远、放大一点，设想数据量很大的情况或是规模很大的问题的情况）</strong></p>\r\n<p>locate 文件名</p>\r\n<p>--工作原理：</p>\r\n<p>在后台数据库按文件名搜索</p>\r\n<p>所以，新创建的文件往往搜索不到（缺点）</p>\r\n<p>解决办法：等（1天）；<strong>updatedb命令更新数据库</strong></p>\r\n<p>--缺点：</p>\r\n<p>只能按照文件名搜索（功能弱）——理解就是，<strong>牺牲功能提升速度</strong></p>\r\n<p>--搜索/更新配置：</p>\r\n<p>vi /etc/updatedb.conf</p>\r\n<p>得到</p>\r\n<p>PRUNE_BIND_MOUNTS = \"yes\"<br>PRUNEFS = \"9p afs anon_inodefs auto autofs bdev binfmt_misc cgroup cifs coda configfs cpuset debugfs devpts ecryptfs exofs fuse fusectl gfs gfs2 hugetlbfs inotifyfs iso9660 jffs2 lustre mqueue ncpfs nfs nfs4 nfsd pipefs proc ramfs rootfs rpc_pipefs securityfs selinuxfs sfs sockfs sysfs tmpfs ubifs udf usbfs\"<br>PRUNENAMES = \".git .hg .svn\"<br>PRUNEPATHS = \"/afs /media /net /sfs /tmp /udev /var/cache/ccache /var/spool/cups /var/spool/squid /var/tmp\"</p>\r\n<p>第一行就是说，是否执行下列的更新规则</p>\r\n<p>后面是不搜索这些文件夹/文件</p>\r\n<p>所以有时候有些目录中的内容搜索不到的——比如常用的/tmp</p>\r\n<p><strong>3.2 命令搜索命令whereis和which</strong></p>\r\n<p>3.2.1 whereis</p>\r\n<p>--基本</p>\r\n<p>[root@andy ~]# whereis ls<br>ls: /bin/ls /usr/share/man/man1p/ls.1p.gz /usr/share/man/man1/ls.1.gz</p>\r\n<p>能搜索到命令的目录以及其帮助文档的目录<strong>（所以命令所在位置where is ，同时要牢记，linux中一切皆文件）</strong></p>\r\n<p>--选项</p>\r\n<p>-b 只查找可执行文件</p>\r\n<p>-m 只查找帮助文件</p>\r\n<p>[root@andy ~]# whereis -b mkdir <br>mkdir: /bin/mkdir</p>\r\n<p>3.2.2 which</p>\r\n<p>--基本</p>\r\n<p>[root@andy ~]# which ls<br>alias ls=\'ls --color=auto\'<br>	/bin/ls</p>\r\n<p>还会查到别名（如果有的话）。</p>\r\n<p>这里ls会自动显示不同的颜色</p>\r\n<p>[root@andy ~]# which pwd<br>/bin/pwd</p>\r\n<p>没有别名就还是这样，但没有帮助文档</p>\r\n<p>3.2.3 其他说明</p>\r\n<p>--找不到的命令</p>\r\n<p>[root@andy ~]# which cd<br>/usr/bin/which: no cd in (/usr/lib/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin)<br>[root@andy ~]# where cd<br>-bash: where: command not found</p>\r\n<p>有些类型是找不到的，原因是shell自带的（以后学）</p>\r\n<p>--path环境变量</p>\r\n<p>环境设定的基本路径，比如上述(/usr/lib/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin)</p>\r\n<p><strong>它使我们可以不用绝对路径来输入命令——windows也是这样的</strong></p>\r\n<p>还是那句话，都是文件</p>\r\n<p>path环境变量的定义：系统搜索命令的路径</p>\r\n<p>自己写的程序，要么命令都写绝对路径，要么放在这些path路径中</p>\r\n<p><strong>3.3 find命令</strong></p>\r\n<p>最强大的搜索命令——这里只学习基本的、常用的用法</p>\r\n<p>--基本</p>\r\n<p>find [搜索范围] [搜索条件] 文件名</p>\r\n<p>[root@andy ~]# find / -name install.log<br>/root/install.log</p>\r\n<p>会发现速度很慢——范围太大</p>\r\n<p>而且真实情况会更加复杂，有可能速度更慢，压力更大</p>\r\n<p><strong>——尽量缩小范围！</strong></p>\r\n<p>而且，如果打算进行模糊匹配，比如install.log.syslog。这个命令是查不到的，<strong>要进行通配符匹配，通配符是完全匹配</strong></p>\r\n<p>--通配符</p>\r\n<p>* 匹配任意内容</p>\r\n<p>[root@andy ~]# find /root -name \"install.log*\"<br>/root/install.log.syslog<br>/root/install.log</p>\r\n<p>? 匹配任意一个字符</p>\r\n<p>[] 匹配中括号中的任意一个字符</p>\r\n<p>[root@andy ~]# find /root -name \"*[asdf]?\"<br>/root/anaconda-ks.cfg<br>/root/.viminfo<br>/root/japan<br>/root/japan/anaconda-ks.cfg</p>\r\n<p><strong>要注意，find是完全匹配，要小心</strong></p>\r\n<p>--搜索条件</p>\r\n<p>-</p>\r\n<p>find /root -name  install.log  按照文件名搜索</p>\r\n<p>find /root -inname install.log   不区分大小写</p>\r\n<p>-</p>\r\n<p>find /root -user install.log  按照所有者搜索（不常用）</p>\r\n<p><strong>find /root -nouser 搜索所有没有所有者的文件（常用）——这种文件很多是垃圾文件，但是有两种情况除外——内核创建的（sys中）；外来文件（比如U盘）</strong></p>\r\n<p>-</p>\r\n<p>find /var/log -mtime +10  查找10天前修改的文件——atime 文件访问时间，mtime 修改文件时间，ctime 改变文件属性；+10 10天前修改的文件，-10 10天内，10 10天当天<strong>（注意没有10天后，哈哈）——常用于日志的删除/筛选中的（默认按天）</strong></p>\r\n<p>-</p>\r\n<p>find . -size 25k 在当前目录下搜索25k大小的文件——+25或-25也可以</p>\r\n<p>[root@andy ~]# <strong>find . -size 25k</strong><br>[root@andy ~]# ll<br>总用量 48<br>-rw-------. 2 root root  1273 11月 26 05:32 anaconda-ks.cfg<br>-rw-r--r--. 1 root root     0 11月 26 06:05 cangls<br>-rw-r--r--. 1 root root 26420 11月 25 03:55 install.log<br>-rw-r--r--. 1 root root  7572 11月 25 03:52 install.log.syslog<br>drwxr-xr-x. 3 root root  4096 11月 26 05:43 japan<br>[root@andy ~]# find . -size +25k<br>./install.log<br>[root@andy ~]# find . -size -25k<br>.<br>./.tcshrc<br>./anaconda-ks.cfg<br>./cangls<br>./install.log.syslog<br>./.bash_profile<br>./.bash_logout<br>./.bash_history<br>./.bashrc<br>./.viminfo<br>./.cshrc<br>./japan<br>./japan/anaconda-ks.cfg<br>./japan/cangls<br>[root@andy ~]# find . -size -25m<br>find: 无效的 -size 类型“m”<br>[root@andy ~]# find . -size -25M<br>.<br>./.tcshrc<br>./anaconda-ks.cfg<br>./cangls<br>./install.log.syslog<br>./.bash_profile<br>./.bash_logout<br>./.bash_history<br>./install.log<br>./.bashrc<br>./.viminfo<br>./.cshrc<br>./japan<br>./japan/anaconda-ks.cfg<br>./japan/cangls<br>[root@andy ~]# </p>\r\n<p><strong>注意Mb是大写的M，kb是小写的k</strong></p>\r\n<p>-</p>\r\n<p>find . -inum 213123 在当前目录按照i节点搜索213123的文件——常常搭配ls -i使用</p>\r\n<p>-复杂操作</p>\r\n<p><strong>find /etc -size +20k -a -size -50k 这里的-a是与，-o是或</strong></p>\r\n<p>[root@andy ~]# find /etc -size +20k -a -size -50k<br>/etc/selinux/targeted/modules/active/modules/unprivuser.pp<br>/etc/selinux/targeted/modules/active/modules/xguest.pp<br>/etc/selinux/targeted/modules/active/modules/virt.pp<br>/etc/selinux/targeted/modules/active/modules/postfix.pp<br>/etc/selinux/targeted/modules/active/modules/unconfineduser.pp<br>/etc/selinux/targeted/modules/active/modules/nagios.pp<br>/etc/selinux/targeted/modules/active/modules/cups.pp<br>/etc/selinux/targeted/modules/active/modules/rhcs.pp<br>/etc/selinux/targeted/modules/active/modules/apache.pp<br>/etc/selinux/targeted/modules/active/modules/staff.pp<br>/etc/selinux/targeted/modules/active/modules/samba.pp<br>/etc/mime.types<br>/etc/sysconfig/network-scripts/network-functions-ipv6<br>/etc/postfix/main.cf<br>/etc/ld.so.cache<br>/etc/libreport/events/report_RHTSupportAttach.xml<br>/etc/libreport/events/report_RHTSupport.xml<br>/etc/makedev.d/01linux-2.6.x<br>/etc/sound/events/gnome-2.soundlist</p>\r\n<p>-</p>\r\n<p>find /etc -size +20k -a -size -50k -exec ls -lh {} \\;</p>\r\n<p>[root@andy ~]#<strong> find /etc -size +20k -a -size -50k -exec ls -lh {} \\;</strong><br>-rw-------. 1 root root 37K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/unprivuser.pp<br>-rw-------. 1 root root 26K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/xguest.pp<br>-rw-------. 1 root root 24K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/virt.pp<br>-rw-------. 1 root root 31K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/postfix.pp<br>-rw-------. 1 root root 29K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/unconfineduser.pp<br>-rw-------. 1 root root 21K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/nagios.pp<br>-rw-------. 1 root root 21K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/cups.pp<br>-rw-------. 1 root root 26K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/rhcs.pp<br>-rw-------. 1 root root 27K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/apache.pp<br>-rw-------. 1 root root 42K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/staff.pp<br>-rw-------. 1 root root 24K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/samba.pp<br>-rw-r--r--. 1 root root 43K 9月  23 2011 /etc/mime.types<br>-rw-r--r--. 1 root root 30K 7月  22 2014 /etc/sysconfig/network-scripts/network-functions-ipv6<br>-rw-r--r--. 1 root root 27K 2月  20 2014 /etc/postfix/main.cf<br>-rw-r--r--. 1 root root 40K 11月 25 03:52 /etc/ld.so.cache<br>-rw-r--r--. 1 root root 23K 10月 16 2014 /etc/libreport/events/report_RHTSupportAttach.xml<br>-rw-r--r--. 1 root root 22K 10月 16 2014 /etc/libreport/events/report_RHTSupport.xml<br>-rw-r--r--. 1 root root 28K 11月 11 2010 /etc/makedev.d/01linux-2.6.x<br>-rw-r--r--. 1 root root 27K 11月 12 2010 /etc/sound/events/gnome-2.soundlist</p>\r\n<p>这里是用-exec加入第二条命令，执行前面的结果，而且必须加{} /;</p>\r\n<p>------总结</p>\r\n<p>就是find很强大，功能很多，灵活多变；同时带来了，使用复杂，速度不好定</p>\r\n<p><strong>3.4 grep命令</strong></p>\r\n<p>--基本</p>\r\n<p>搜索字符串：grep [选项] 字符串 文件名</p>\r\n<p>[root@andy ~]# grep \"size\" anaconda-ks.cfg<br>#part /boot --fstype=ext4 --size=200<br>#part swap --size=4000<br>#part /home --fstype=ext4 --size=2000<br>#part / --fstype=ext4 --grow --size=200</p>\r\n<p><strong>注意，搜索到的不是符合字符串的文件，而是文件中相应的字符串——与find区分</strong></p>\r\n<p>--选项</p>\r\n<p>-v 取反，即不包含字符串的</p>\r\n<p>-i 不区分大小写 </p>\r\n<p>--与find</p>\r\n<p>find：找文件+完全匹配+使用通配符匹配</p>\r\n<p>grep：找字符串+包含匹配+使用正则表达式匹配</p>\r\n<p>-------------------------------------------------------------------</p>\r\n<p><strong>二、PHP与MySQL</strong></p>\r\n<p>-----文章发布系统实践（一）-----</p>\r\n<p>理解php操作mysql的方法，熟悉掌握php的mysql函数</p>\r\n<p><strong>1、需求分析</strong></p>\r\n<p>1.1 后台管理系统</p>\r\n<p>管理-列表</p>\r\n<p>发布，修改，删除-程序</p>\r\n<p>1.2 前台展示系统</p>\r\n<p>文章列表，文章内容页</p>\r\n<p>1.3 数据库设计</p>\r\n<p>一个表即可，用于存放文章</p>\r\n<p>（我不想画表格，直接写数据库命令好了，但愿以后的我看得懂）</p>\r\n<p>CREATE TABLE article(</p>\r\n<p>id INT(11) PRIMARY KEY AUTO_INCREMENT,</p>\r\n<p>title CHAR(100) NOT NULL,</p>\r\n<p>author CHAR(50) NOT NULL,</p>\r\n<p>description VARCHAR(255) NOT NULL,</p>\r\n<p>content TEXT NOT NULL,</p>\r\n<p>dateline INT(11) NOT NULL DEFAULT 0</p>\r\n<p>);</p>\r\n<p>1.4 项目规划</p>\r\n<p>项目需要什么文件</p>\r\n<p><strong style=\"line-height: 1.5;\">2、后台管理系统</strong></p>\r\n<p><strong>2.1 创建配置文件和初始化文件</strong></p>\r\n<p> </p>\r\n<p> </p>\r\n<p>中午开会，没有睡午觉。。。早点回去看书睡觉了</p>\n ', '2016-04-28 20:05:05', '2016-04-28 20:21:04', '0', '0', '0', '1', '83');
INSERT INTO `blog` VALUES ('2991', '买错的电影票，含着泪也得看-LAMP搭建&Linux基础 ', '网络', '\n<p>　hi</p>\r\n<p>没说过，上周五室友过生请客，在龙湖里吃嗨了喝爽了，回去的路上侃侃而谈。说好的这周一起去看年内最后的大片，火星救援的，谁知道老子眼神不好，买错了电影的时间。。。把周六的约定提前到了今儿个下午，madan，送都送不出去，只有敲班去看了</p>\r\n<p><strong>1、LAMP</strong></p>\r\n<p>-----搭建LAMP环境（二）-----</p>\r\n<p>----给PHP添加常用拓展</p>\r\n<p>gd以及curl，命令去网上找好了，这个太长了</p>\r\n<p>liang@liang-andy:~$ sudo apt-get install php5-gd curl libcurl3-dev php5-curl<br>时间也有点长</p>\r\n<p>验证的话，要先重启apache2服务，然后去上次说的那个探针文件中看，也就是看看phpinfo中有米有</p>\r\n<p>----filezilla</p>\r\n<p>ssh工具，管理服务器文件</p>\r\n<p>-----LAMP环境配置优化（一）-----</p>\r\n<p>----LAMP环境文件概述</p>\r\n<p>常识</p>\r\n<p>/etc--Ubuntu系统配置文件目录，一般通过apt-get命令安装的软件的配置文件都在这里</p>\r\n<p>LAMP也在这里</p>\r\n<p>/etc/apache2</p>\r\n<p>/etc/mysql</p>\r\n<p>/etc/php5</p>\r\n<p>----环境文件详解</p>\r\n<p>---</p>\r\n<p>先打开apache2文件列表</p>\r\n<p>liang@liang-andy:~$ cd /etc/apache2<br>liang@liang-andy:/etc/apache2$ ll<br>总用量 96<br>drwxr-xr-x   8 root root  4096 11月 23 19:08 ./<br>drwxr-xr-x 134 root root 12288 11月 25 12:37 ../<br>-rw-r--r--   1 root root  7115  1月  7  2014 apache2.conf<br>drwxr-xr-x   2 root root  4096 11月 23 19:08 conf-available/<br>drwxr-xr-x   2 root root  4096 11月 23 19:08 conf-enabled/<br>-rw-r--r--   1 root root  1782  1月  3  2014 envvars<br>-rw-r--r--   1 root root 31063  1月  3  2014 magic<br>drwxr-xr-x   2 root root 12288 11月 23 19:21 mods-available/<br>drwxr-xr-x   2 root root  4096 11月 23 19:21 mods-enabled/<br>-rw-r--r--   1 root root   320  1月  7  2014 ports.conf<br>drwxr-xr-x   2 root root  4096 11月 23 19:08 sites-available/<br>drwxr-xr-x   2 root root  4096 11月 23 19:08 sites-enabled/<br><br></p>\r\n<p><strong>apache2中有apache.conf，算是配置文件的总入口，可以include很多其他的配置文件——配置起来更灵活，而且总文件不是很大</strong></p>\r\n<p>核心配置：<strong>mods-*** apache模块;sites-*** 虚拟主机</strong></p>\r\n<p>***可以用avaliable（可用的）和enabled（已启用的）（具体看上面的命令最后那一列）</p>\r\n<p>enabled与avaliable之间用ln -s命令进行软连接。等于说，模块本身就像是灯，然后命令是开关</p>\r\n<p>---</p>\r\n<p>mysql和php</p>\r\n<p>核心分别是my.cnf以及php.ini</p>\r\n<p>以后详述</p>\r\n<p> </p>\r\n<p><strong>2、Linux基础</strong></p>\r\n<p>环境为虚拟机VM中的centOS6以及ssh工具xshell5</p>\r\n<p><strong>快捷键，ctrl+l</strong></p>\r\n<p>-----Linux常用命令（一）-----</p>\r\n<p>我们需要掌握的大概6、70个，以后一共用到的可能会有200个</p>\r\n<p>[root@andy ~]#</p>\r\n<p>用户@主机名 ~当前所在位置（文件夹）#超级用户提示符 $普通用户提示符</p>\r\n<p><strong>注意，linux中的用户不是admin；默认的主机名是localhost；~表示/root，简称家 </strong></p>\r\n<p>[root@andy ~]# cd /root 地址是不变的</p>\r\n<p>普通用户的家目录是二级地址</p>\r\n<p> ----命令格式</p>\r\n<p>命令 [选项] [参数]</p>\r\n<p>注意，个别命令不遵守这样的格式；多个选项可以写在一起，比如-au；有简化选项和完整选项，比如-a和-all</p>\r\n<p><strong>---ls：查询目录中文件</strong></p>\r\n<p>ls [] [文件和目录]</p>\r\n<p>-a all 显示所有文件，包括隐藏文件</p>\r\n<p>-l long 显示详细信息，也称为长格式</p>\r\n<p>-d direct 目录属性</p>\r\n<p>-h human 显示人能看懂的大小</p>\r\n<p>-i innode</p>\r\n<p>[root@andy ~]# ls -al<br>总用量 80<br>dr-xr-x---.  2 root root  4096 11月 25 05:06 .<br>dr-xr-xr-x. 24 root root  4096 11月 26 03:41 ..<br>-rw-------.  1 root root  1272 11月 25 03:55 anaconda-ks.cfg<br>-rw-------.  1 root root   183 11月 25 05:06 .bash_history<br>-rw-r--r--.  1 root root    18 5月  20 2009 .bash_logout<br>-rw-r--r--.  1 root root   176 5月  20 2009 .bash_profile<br>-rw-r--r--.  1 root root   176 9月  23 2004 .bashrc<br>-rw-r--r--.  1 root root   100 9月  23 2004 .cshrc<br>-rw-r--r--.  1 root root 26420 11月 25 03:55 install.log<br>-rw-r--r--.  1 root root  7572 11月 25 03:52 install.log.syslog<br>-rw-r--r--.  1 root root   129 12月  4 2004 .tcshrc<br>-rw-------.  1 root root   768 11月 25 04:20 .viminfo</p>\r\n<p><strong>--ll命令，就是ls -l</strong></p>\r\n<p><strong>--关于长格式</strong></p>\r\n<p>--第一列，权限</p>\r\n<p>-rw-r--r-- 是指权限；默认是10位。</p>\r\n<p>-表示文件类型（-文件 d目录 |软链接文件）——总共有7种，其他用的少，先不管，是系统特殊文件，一般用户不用管，想看的话</p>\r\n<p>[root@andy ~]# ls -l /dev/</p>\r\n<p>后面9位，每3个是一组，分别代表文件的u所有者，g所属组，o其他人三个身份（该文件与三者的权限规定）</p>\r\n<p>（Linux用户组是有相同权限的用户集）</p>\r\n<p>r读，w写，x执行（基本权限就这么三个）</p>\r\n<p>比如rw- u对它具有读写权限</p>\r\n<p>--点儿“.”</p>\r\n<p>代表ACL权限</p>\r\n<p>--数字1</p>\r\n<p>引用计数</p>\r\n<p>--root root</p>\r\n<p>所有者和所属组</p>\r\n<p>--数字</p>\r\n<p>文件大小，单位是字节，用-h选项</p>\r\n<p>[root@andy ~]# ls -lh<br>总用量 44K<br>-rw-------. 1 root root 1.3K 11月 25 03:55 anaconda-ks.cfg<br>-rw-r--r--. 1 root root  26K 11月 25 03:55 install.log<br>-rw-r--r--. 1 root root 7.4K 11月 25 03:52 install.log.syslog</p>\r\n<p>--日期</p>\r\n<p>最后一次修改时间</p>\r\n<p>--最后、</p>\r\n<p>文件名</p>\r\n<p>文件名以“.”开头的是隐藏文件</p>\r\n<p>-- -d</p>\r\n<p>看目录本身的权限</p>\r\n<p>-- -i</p>\r\n<p>显示i节点，id号</p>\r\n<p><strong>----文件处理命令</strong></p>\r\n<p>建立目录，建立文件啊</p>\r\n<p><strong>---目录处理命令&amp;文件处理命令</strong></p>\r\n<p>目录也是文件，先明确下再。</p>\r\n<p>--建立目录：mkdir</p>\r\n<p>make directory</p>\r\n<p><strong>mkdir -p [目录名]</strong></p>\r\n<p>-p 递归创建，意思就是如果要创建多级目录，要递归创建</p>\r\n<p>[root@andy ~]# mkdir -p japan/cangls</p>\r\n<p>---切换所在目录：cd</p>\r\n<p>cd [目录]</p>\r\n<p>很简单，即可以切很多级，也可以切一级，不输入目录，就直接回家目录</p>\r\n<p>-简化操作</p>\r\n<p><strong>cd 或 cd ~ 回家（~本来就代表家目录）</strong></p>\r\n<p><strong>cd .. 返回上一级目录</strong></p>\r\n<p><strong>cd - 进入上一次目录</strong></p>\r\n<p><strong>cd . 进入当前目录</strong></p>\r\n<p>[root@andy ~]# <br>[root@andy ~]# cd /etc<br>[root@andy etc]# cd sysconfig<br>[root@andy sysconfig]# cd..<br>-bash: cd..: command not found<br>[root@andy sysconfig]# cd ..<br>[root@andy etc]# cd -<br>/etc/sysconfig<br>[root@andy sysconfig]# cd ~<br>[root@andy ~]# </p>\r\n<p>--</p>\r\n<p><strong>相对路径和绝对路径</strong></p>\r\n<p>[root@andy ~]# cd ../usr/local/src<br>[root@andy src]# cd ../usr/local/src<br>-bash: cd: ../usr/local/src: 没有那个文件或目录<br>[root@andy src]# cd /usr/local/src<br>[root@andy src]# cd /usr/local/src<br>[root@andy src]# </p>\r\n<p>相对路径，就是相对当前位置来cd</p>\r\n<p>绝对路径，就是从根目录开始找，麻烦但可靠，适合初学者</p>\r\n<p><strong>--关于tab键</strong></p>\r\n<p><strong>补全命令和目录，按键两次，判断正确</strong></p>\r\n<p>--查询所在目录位置：pwd</p>\r\n<p>直接用</p>\r\n<p>--删除空目录：rmdir</p>\r\n<p>remove empty directory</p>\r\n<p>rmdir [目录]</p>\r\n<p>[root@andy ~]# rmdir bols<br>[root@andy ~]# rmdir japan<br>rmdir: 删除 \"japan\" 失败: 目录非空</p>\r\n<p>所以不好用，知道就好</p>\r\n<p>--删除文件或目录：rm</p>\r\n<p>remove</p>\r\n<p>[root@andy ~]# rm japan<br>rm: 无法删除\"japan\": 是一个目录<br>[root@andy ~]# rm -r japan<br>rm：是否进入目录\"japan\"? y<br>rm：是否删除目录 \"japan/cangls\"？y^Hn^H^H^H<br>rm：是否删除目录 \"japan\"？n<br>[root@andy ~]# rm -rf japan<br>[root@andy ~]# ls -l<br>总用量 44<br>-rw-------. 1 root root  1272 11月 25 03:55 anaconda-ks.cfg<br>-rw-r--r--. 1 root root 26420 11月 25 03:55 install.log<br>-rw-r--r--. 1 root root  7572 11月 25 03:52 install.log.syslog<br>[root@andy ~]# </p>\r\n<p><strong>rm -rf [目录]</strong></p>\r\n<p>如果直接用-rf删除，就没有提问，直接删除了，所以小心使用，甚至有可能把整个系统删除</p>\r\n<p>-r 删除目录</p>\r\n<p>-f 强制</p>\r\n<p>--复制：cp</p>\r\n<p>copy</p>\r\n<p>-r 复制目录</p>\r\n<p>-p -d</p>\r\n<p>-a 相当于-rpd</p>\r\n<p><strong>所以用cp就，cp -a</strong>，确保复制的都一样，时间啊什么的</p>\r\n<p>--剪切或改名：mv</p>\r\n<p>move</p>\r\n<p>注意，剪切不加选项</p>\r\n<p><strong>--常见目录作用</strong></p>\r\n<p>[root@andy ~]# cd /<br>[root@andy /]# ls<br>bin  boot  cgroup  dev  etc  home  lib  lost+found  media  misc  mnt  net  opt  proc  root  sbin  selinux  srv  sys  tmp  usr  var</p>\r\n<p>先切换到根目录/</p>\r\n<p>这些都是一级目录</p>\r\n<p>bin和sbin，以及usr下的bin和sbin下的都是保存系统命令</p>\r\n<p>/boot 启动目录，保存用户的启动数据</p>\r\n<p>/dev 特殊文件保存目录，不要乱动</p>\r\n<p><strong>/etc 系统的默认的配置文件，以后会经常动的</strong></p>\r\n<p><strong>/home 普通用户的家目录，  /root 超级用户的家目录</strong></p>\r\n<p>/lib 函数库仓库</p>\r\n<p><strong>misc media mnt 空目录，用于挂载，外接其他设备的，自己设定用</strong></p>\r\n<p>proc sys 不能直接操作，是内存的盘符</p>\r\n<p><strong>/tmp 临时目录</strong></p>\r\n<p><strong>/usr 系统资源目录</strong></p>\r\n<p>/var 保存系统可变文档目录</p>\r\n<p><strong>总之，在家目录和/tmp下随便放东西</strong></p>\r\n<p><strong><span style=\"line-height: 1.5;\">---链接命令：</span></strong>ln</p>\r\n<p>link</p>\r\n<p>ln -s [源文件] [目标文件] </p>\r\n<p>-s soft 软链接</p>\r\n<p><strong>注意一点：创建链接的根本目的，就是相当于平时的快捷方式</strong></p>\r\n<p><strong>--硬链接</strong></p>\r\n<p><strong>基本上可以理解为，同一个文件的不同的接入点/名字（想象为同一个教室的前后门）</strong></p>\r\n<p><strong>具有同样的i节点和存储block块；删除其中一个，还是可以用</strong></p>\r\n<p><strong>缺点在于，不能跨分区，不能针对目录</strong></p>\r\n<p>[root@andy ~]# ln /root/anaconda-ks.cfg /tmp/ana.hard<br>[root@andy ~]# ll<br>总用量 48<br>-rw-------. 2 root root  1272 11月 25 03:55 anaconda-ks.cfg<br>-rw-r--r--. 1 root root 26420 11月 25 03:55 install.log<br>-rw-r--r--. 1 root root  7572 11月 25 03:52 install.log.syslog<br>drwxr-xr-x. 3 root root  4096 11月 26 04:55 japan<br>[root@andy ~]# ll /tmp<br>总用量 92<br>-rw-------. 1 root root  1272 11月 26 04:55 ana<br>-rw-------. 2 root root  1272 11月 25 03:55 ana.hard<br>drwxr-xr-x. 3 root root  4096 11月 26 04:56 japan<br>-rw-------. 1 root root 81920 11月 26 04:40 whatis.2kxNR9<br>-rw-------. 1 root root     0 11月 25 03:32 yum.log</p>\r\n<p>基本上是看不出来的，除了引用计数+1了；不过可以看i节点号</p>\r\n<p>[root@andy ~]# ls -li<br>总用量 48<br>135177 -rw-------. 2 root root  1273 11月 26 05:32 anaconda-ks.cfg<br>130564 -rw-r--r--. 1 root root 26420 11月 25 03:55 install.log<br>130565 -rw-r--r--. 1 root root  7572 11月 25 03:52 install.log.syslog<br>135180 drwxr-xr-x. 3 root root  4096 11月 26 04:55 japan<br>[root@andy ~]# ls -li /tmp<br>总用量 92<br>550003 -rw-------. 1 root root  1272 11月 26 04:55 ana<br>135177 -rw-------. 2 root root  1273 11月 26 05:32 ana.hard<br>550005 drwxr-xr-x. 3 root root  4096 11月 26 04:56 japan<br>550004 -rw-------. 1 root root 81920 11月 26 04:40 whatis.2kxNR9<br>522243 -rw-------. 1 root root     0 11月 25 03:32 yum.log<br>如果删除了某一个文件，引用计数会变回1</p>\r\n<p>但，不推荐创建硬链接：限制多；比较隐蔽，仅i节点——推荐用软~</p>\r\n<p><strong>--软链接</strong></p>\r\n<p>相当于windows的快捷方式</p>\r\n<p>拥有自己的i节点和block块，但是数据块中只保存源文件的文件名和i节点号，没有实际的文件数据<strong>（类似存储的是个藏宝图）</strong></p>\r\n<p>软链接的权限都是lrwxrwxrwx</p>\r\n<p>删除源文件，软链接失效（都说是快捷方式了）</p>\r\n<p><strong>修改某一个，另一个也会变</strong></p>\r\n<p>[root@andy ~]# cp -a anaconda-ks.cfg /root/japan<br>[root@andy ~]# ln -s /root/japan/anaconda-ks.cfg /tmp/an.soft<br>[root@andy ~]# ll<br>总用量 48<br>-rw-------. 2 root root  1273 11月 26 05:32 anaconda-ks.cfg<br>-rw-r--r--. 1 root root 26420 11月 25 03:55 install.log<br>-rw-r--r--. 1 root root  7572 11月 25 03:52 install.log.syslog<br>drwxr-xr-x. 3 root root  4096 11月 26 05:43 japan<br>[root@andy ~]# ll /tmp<br>总用量 92<br>-rw-------. 1 root root  1272 11月 26 04:55 ana<br>-rw-------. 2 root root  1273 11月 26 05:32 ana.hard<br>lrwxrwxrwx. 1 root root    27 11月 26 05:44 an.soft -&gt; /root/japan/anaconda-ks.cfg<br>drwxr-xr-x. 3 root root  4096 11月 26 04:56 japan<br>-rw-------. 1 root root 81920 11月 26 04:40 whatis.2kxNR9<br>-rw-------. 1 root root     0 11月 25 03:32 yum.log<br>[root@andy ~]# ll -i /tmp<br>总用量 92<br>550003 -rw-------. 1 root root  1272 11月 26 04:55 ana<br>135177 -rw-------. 2 root root  1273 11月 26 05:32 ana.hard<br>533111 lrwxrwxrwx. 1 root root    27 11月 26 05:44 an.soft -&gt; /root/japan/anaconda-ks.cfg<br>550005 drwxr-xr-x. 3 root root  4096 11月 26 04:56 japan<br>550004 -rw-------. 1 root root 81920 11月 26 04:40 whatis.2kxNR9<br>522243 -rw-------. 1 root root     0 11月 25 03:32 yum.log<br>[root@andy ~]# ll -i<br>总用量 48<br>135177 -rw-------. 2 root root  1273 11月 26 05:32 anaconda-ks.cfg<br>130564 -rw-r--r--. 1 root root 26420 11月 25 03:55 install.log<br>130565 -rw-r--r--. 1 root root  7572 11月 25 03:52 install.log.syslog<br>135180 drwxr-xr-x. 3 root root  4096 11月 26 05:43 japan</p>\r\n<p>注意几点，i节点，权限，文件名</p>\r\n<p><strong>另外，软链接中，源文件一定要写绝对路径，否则可能会报错</strong></p>\r\n<p> </p>\r\n<p>我自己写的例子少，大家多练习</p>\r\n<p>明天见</p>\r\n<p> </p>\n ', '2016-04-28 20:05:05', '2016-04-28 20:21:04', '0', '0', '0', '1', '83');
INSERT INTO `blog` VALUES ('2992', '中午游泳很海皮-linux&php ', '网络', '\n<p>　hi</p>\r\n<p>中午又去游泳了，其实本来打算是昨天去的，谁知天公不作美，周一都下雨。今天其实也一样的，有点小雨，不过游得到泳，比什么都好</p>\r\n<p>1、PHP&amp;MySQL</p>\r\n<p>-----PHP内置MySQL函数学习（三）-----</p>\r\n<p>准备工作</p>\r\n<p>&lt;?php<br>$con=mysqli_connect(\'localhost\',\'root\',\'\',\'info\');<br>if($con){<br>	echo \"连接成功\";<br>}else{<br>		echo \"shit\";<br>	}<br>//mysql_close($con);<br>if(mysqli_select_db($con, \'info\')){<br>	echo \"数据库选择成功\";<br>}else{<br>		echo \"shit2\";<br>	}<br>/*	</p>\r\n<p>----mysql_num_rows()</p>\r\n<p>获取结果集的行数</p>\r\n<p>$query=mysqli_query($con, \'select * from test\');//产生结果集</p>\r\n<p>echo mysqli_num_rows($query);</p>\r\n<p>用法简单粗暴，但用途还是比较灵活的，判断/输出</p>\r\n<p>----mysql-result</p>\r\n<p>返回结果集中一个字段的值</p>\r\n<p>mysqli似乎没有，补一部分</p>\r\n<p>---php中的PDO，mysql，mysqli</p>\r\n<p>PHP-MySQL 是 PHP 操作 MySQL 资料库最原始的 Extension ，PHP-MySQLi 的 i 代表 Improvement ，提更了相对进阶的功能，就 Extension 而言，本身也增加了安全性。而 PDO (PHP Data Object) 则是提供了一个 Abstraction Layer 来操作资料库</p>\r\n<p>具体的区别也讲不出，直接去搜了看看就好了</p>\r\n<p>----mysqli_affected_rows($con)</p>\r\n<p>受影响的行数</p>\r\n<p>一般做判断，比如，当插入的为一样的，显示为0；感觉，类似mysql的反馈</p>\r\n<p>明天开始小实践以下</p>\r\n<p>2、Linux </p>\r\n<p>虚拟机装东西还是麻烦。</p>\r\n<p>xshell终于弄好了，果然server界面的centos不是那么好整的，还好有贵人</p>\r\n<p>进入centos6后，输入用户名和密码，开始搞网络连接问题</p>\r\n<p>原网址忘了，自己写一点吧</p>\r\n<p>---</p>\r\n<p>vim /etc/sysconfig/network-scripts/ifcfg-eth0</p>\r\n<p>输入i进入编写模式</p>\r\n<p>把htcp还是什么的改成none，onboot项改成yes</p>\r\n<p>然后在下面输入IPADDR=192.168.0.10</p>\r\n<p>NETMASK=255.255.255.0</p>\r\n<p>GATEWAY=192.168.0.2</p>\r\n<p>这里的几个地址，都是我自己的网络的地址，查询方式是windows界面win+r，输入cmd，输入ipconfig/all</p>\r\n<p>找到对应的地址，如果是无线网络，就找无线网卡的，如果是有线就找有线的，总之就是要对应;如果换了网络，相应的配置也要变</p>\r\n<p>如果查到的地址是192.168.0.1</p>\r\n<p>那么在linux中输入就变为</p>\r\n<p> 192.168.0.a a不为1就行</p>\r\n<p>后面的网关是192.168.0.b b不等于1，不等于a</p>\r\n<p>然后回到虚拟机中的linux，按下esc，输入:wq，保存退出文件编写</p>\r\n<p>输入service network restart，重启网络服务</p>\r\n<p>然后到刚才的windows下的cmd窗口，输入ping 192.168.0.10（这是我自己设置的，你输入你自己的值好不好）</p>\r\n<p>如果成功，就是网络连接ok了</p>\r\n<p>至于xshell的设置，很简单</p>\r\n<p>新建连接，主机的位置输入192.168.0.10，然后记得去存储上用户名和密码，连接测试就行了</p>\r\n<p> </p>\r\n<p> </p>\r\n<p>搞定了xshell的心事，爽爽爽！不想写其他的了，linux玩起来啊～～～</p>\n ', '2016-04-28 20:05:05', '2016-04-28 20:21:08', '0', '0', '0', '1', '83');
INSERT INTO `blog` VALUES ('2993', '再不写，我怕就再也不写了-LAMP基础 ', '网络', '\n<p><span style=\"font-size: 14px; color: #000000;\">　　hi</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">经历了4天大餐的洗礼，整个人都思密达了。。。昨天的懒，是没有原因的懒，总之就是该提笔了亲</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">1、Ubuntu下的LAMP配置</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">-----Ubuntu基础知识-----</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">----管理员权限</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">出于安全，Ubuntu不推荐使用root账户远程登录-强制使用其他普通账户</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">由于普通账户没有超级管理员权限，默认情况下又不能使用root账户登录（远程等），所以需要用到这么两条命令</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">su（Switch User）切换到超级管理员</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">sudo（Switch User and DO)以超级管理员身份执行</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">两者是有本质区别的-前者是“老大”（root）出马，必须用root密码，直到exit才退出;后者是“小弟”请求老大给予准许，并且是临时的权限，密码只用普通的就行</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">----预备知识</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">liang@liang-andy:～             $</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">用户名@主机名：当期目录 用户类型标记</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">其中，$表示普通用户，#表示超级管理员</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">---</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">liang@liang-andy:~$ pwd</span><br><span style=\"font-size: 14px; color: #000000;\">/home/liang</span><br><span style=\"font-size: 14px; color: #000000;\">～表示现在正处于当前用户的个人文件夹中，pwd命令可以给出实际目录</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">---</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">下面演示这两个命令：修改root密码</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">liang@liang-andy:~$ sudo passwd root </span><br><span style=\"font-size: 14px; color: #000000;\">[sudo] password for liang: </span><br><span style=\"font-size: 14px; color: #000000;\">输入新的 UNIX 密码： </span><br><span style=\"font-size: 14px; color: #000000;\">重新输入新的 UNIX 密码： </span><br><span style=\"font-size: 14px; color: #000000;\">passwd：已成功更新密码</span><br><span style=\"font-size: 14px; color: #000000;\">liang@liang-andy:~$ </span><br><span style=\"font-size: 14px; color: #000000;\">然后是su</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">liang@liang-andy:~$ su</span><br><span style=\"font-size: 14px; color: #000000;\">密码： </span><br><span style=\"font-size: 14px; color: #000000;\">root@liang-andy:/home/liang# </span><br><span style=\"font-size: 14px; color: #000000;\">注意看目录路径已经变了，还有就是#</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">----apt-get软件安装工具</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">主要作用就是获取软件列表apt-get update和软件安装apt-get install</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">----其他必要命令学习</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">http://itlab.idcquan.com/linux/special/linuxcom/</span></p>\r\n<p><span style=\"font-size: 14px; color: #000000;\">---</span></p>\r\n<p><span style=\"color: #000000; font-size: 14px;\">名称 : ls <br>　　<br>　　使用权限 : 所有使用者 <br>　　<br>　　使用方式 : ls [-alrtAFR] [name...] <br>　　<br>　　说明 : 显示指定工作目录下之内容（列出目前工作目录所含之档案及子目录)。 <br>　　<br>　　参数 :  <br>　　<br>　　-a 显示所有档案及目录 (ls内定将档案名或目录名称开头为\".\"的视为隐藏档，不会列出) <br>　　-l 除档案名称外，亦将档案型态、权限、拥有者、档案大小等资讯详细列出 <br>　　-r 将档案以相反次序显示(原定依英文字母次序) <br>　　-t 将档案依建立时间之先后次序列出 <br>　　-A 同 -a ，但不列出 \".\" (目前目录) 及 \"..\" (父目录)  <br>　　-F 在列出的档案名称后加一符号；例如可执行档则加 \"*\", 目录则加 \"/\"  <br>　　-R 若目录下有档案，则以下之档案亦皆依序列出  <br>　　<br>　　范例： <br>　　列出目前工作目录下所有名称是 s 开头的档案，愈新的排愈后面 : <br>　　 ls -ltr s*  <br>　　  <br>　　将 /bin 目录以下所有目录及档案详细资料列出 : <br>　　 ls -lR /bin  <br>　　  <br>　　列出目前工作目录下所有档案及目录；目录于名称后加 \"/\", 可执行档于名称后加 \"*\" : <br>　　 ls -AF  </span></p>\r\n<p><span style=\"color: #000000; font-size: 14px;\">---</span></p>\r\n<p><span style=\"color: #000000; font-size: 14px;\">ll会列出该文件下的所有文件信息，包括隐藏的文件，而ls -l只列出显式文件，说明这两个命令还是不等同的！</span></p>\r\n<p><span style=\"color: #000000; font-size: 14px;\">---</span></p>\r\n<p><span style=\"color: #000000; font-size: 14px;\">　　指令名称 : ln <br>　　<br>　　使用权限 : 所有使用者 <br>　　<br>　　使用方式 : ln [options] source dist，其中 option 的格式为 : <br>　　<br>　　[-bdfinsvF] [-S backup-suffix] [-V {numbered,existing,simple}] <br>　　[--help] [--version] [--] <br>　\r\n　说明 : Linux/Unix 档案系统中，有所谓的连结(link)，我们可以将其视为档案的别名，而连结又可分为两种 : 硬连结(hard \r\nlink)与软连结(symbolic \r\nlink)，硬连结的意思是一个档案可以有多个名称，而软连结的方式则是产生一个特殊的档案，该档案的内容是指向另一个档案的位置。硬连结是存在同一个档\r\n案系统中，而软连结却可以跨越不同的档案系统。 <br>　　ln source dist 是产生一个连结(dist)到 source，至于使用硬连结或软链结则由参数决定。 <br>　　<br>　　不论是硬连结或软链结都不会将原本的档案复制一份，只会占用非常少量的磁碟空间。 <br>　　<br>　　参数 : <br>　　<br>　\r\n　-f : 链结时先将与 dist 同档名的档案删除-d : 允许系统管理者硬链结自己的目录-i : 在删除与 dist \r\n同档名的档案时先进行询问-n : 在进行软连结时，将 dist 视为一般的档案-s : 进行软链结(symbolic link)-v : \r\n在连结之前显示其档名-b : 将在链结时会被覆写或删除的档案进行备份-S SUFFIX : 将备份的档案都加上 SUFFIX 的字尾-V \r\nMETHOD : 指定备份的方式--help : 显示辅助说明--version : 显示版本 <br>　　范例 : <br>　　将档案 yy 产生一个 symbolic link : zz <br>　　 ln -s yy zz  <br>　　  <br>　　将档案 yy 产生一个 hard link : zz <br>　　 ln yy xx  </span></p>\r\n<p><span style=\"color: #000000; font-size: 14px;\">---</span></p>\r\n<p><span style=\"color: #000000; font-size: 14px;\">　　名称 : cd <br>　　<br>　　使用权限 : 所有使用者 <br>　　<br>　　使用方式 : cd [dirName] <br>　　<br>　　说明 : 变换工作目录至 dirName。 其中 dirName 表示法可为绝对路径或相对路径。若目录名称省略，则变换至使用者的 home directory (也就是刚 login 时所在的目录)。 <br>　　<br>　　另外，\"~\" 也表示为 home directory 的意思，\".\" 则是表示目前所在的目录，\"..\" 则表示目前目录位置的上一层目录。 <br>　　<br>　　范例 : 跳到 /usr/bin/ : <br>　　 cd /usr/bin  <br>　　  <br>　　跳到自己的 home directory : <br>　　 cd ~  <br>　　  <br>　　跳到目前目录的上上两层 : <br>　　 cd ../..  <br>　　<br>　　 cd - 返回进入当前目录前所在目录 </span></p>\r\n<p> </p>\r\n<p> </p>\r\n<p><span style=\"color: #000000; font-size: 14px;\">名称：cp<br>　　<br>　　使用权限：所有使用者 <br>　　<br>　　使用方式： <br>　　<br>　　cp [options] source dest <br>　　cp [options] source... directory <br>　　<br>　　说明：将一个档案拷贝至另一档案，或将数个档案拷贝至另一目录。 (copy)<br>　　<br>　　参数：  <br>　　<br>　　-a 尽可能将档案状态、权限等资料都照原状予以复制。 <br>　　-r 若 source 中含有目录名，则将目录下之档案亦皆依序拷贝至目的地。 <br>　　-f 若目的地已经有相同档名的档案存在，则在复制前先予以删除再行复制。 <br>　　范例： <br>　　将档案 aaa 复制(已存在)，并命名为 bbb :  <br>　　 cp aaa bbb  </span></p>\r\n<p><span style=\"color: #000000; font-size: 14px;\">       也就是 sudo cp document_A document_B<br>　　  <br>　　将所有的C语言程序拷贝至 Finished 子目录中 : <br>　　 cp *.c Finished</span></p>\r\n<p><span style=\"color: #000000; font-size: 14px;\">---</span></p>\r\n<p><span style=\"color: #000000; font-size: 14px;\">　　名称：mv <br>　　<br>　　使用权限：所有使用者 <br>　　<br>　　使用方式： <br>　　<br>　　mv [options] source dest <br>　　mv [options] source... directory <br>　　说明：将一个档案移至另一档案，或将数个档案移至另一目录。 <br>　　参数：-i 若目的地已有同名档案，则先询问是否覆盖旧档。 <br>　　<br>　　范例： <br>　　<br>　　将档案 aaa 更名为 bbb : <br>　　 mv aaa bbb  <br>　　  <br>　　将所有的C语言程序移至 Finished 子目录中 : <br>　　 mv -i *.c  </span></p>\r\n<p><span style=\"color: #000000; font-size: 14px;\">---</span></p>\r\n<p><span style=\"color: #000000; font-size: 14px;\">　　名称：rm <br>　　<br>　　使用权限：所有使用者 <br>　　<br>　　使用方式：rm [options] name... <br>　　<br>　　说明：删除档案及目录。 <br>　　<br>　　参数： <br>　　<br>　　-i 删除前逐一询问确认。 <br>　　-f 即使原档案属性设为唯读，亦直接删除，无需逐一确认。 <br>　　-r 将目录及以下之档案亦逐一删除。 <br>　　范例： <br>　　删除所有C语言程序档；删除前逐一询问确认 : <br>　　 rm -i *.c  <br>　　  <br>　　将 Finished 子目录及子目录中所有档案删除 : <br>　　 rm -r Finished  </span></p>\r\n<p><span style=\"color: #000000; font-size: 14px;\">---</span></p>\r\n<p><span style=\"color: #000000; font-size: 14px;\">　　名称： mkdir <br>　　<br>　　使用权限：于目前目录有适当权限的所有使用者 <br>　　<br>　　使用方式：mkdir [-p] dirName <br>　　<br>　　说明：建立名称为 dirName 之子目录。 <br>　　<br>　　参数：-p 确保目录名称存在，不存在的就建一个。 <br>　　<br>　　范例： <br>　　<br>　　在工作目录下，建立一个名为 AAA 的子目录 : <br>　　 mkdir AAA     <br>　　  <br>　　在工作目录下的 BBB 目录中，建立一个名为 Test 的子目录。若 BBB 目录原本不存在，则建立一个。（注：本例若不加 -p，且原本 BBB目录不存在，则产生错误。） <br>　　 mkdir -p BBB/Test  </span></p>\r\n<p><span style=\"color: #000000; font-size: 14px;\">---</span></p>\r\n<p><span style=\"color: #000000; font-size: 14px;\">　　名称：rmdir <br>　　<br>　　使用权限：于目前目录有适当权限的所有使用者 <br>　　<br>　　使用方式： rmdir [-p] dirName <br>　　<br>　　说明： 删除空的目录。 <br>　　<br>　　参数： -p 是当子目录被删除后使它也成为空目录的话，则顺便一并删除。 <br>　　<br>　　范例：  <br>　　<br>　　将工作目录下，名为 AAA 的子目录删除 : <br>　　 rmdir AAA  <br>　　  <br>　　在工作目录下的 BBB 目录中，删除名为 Test 的子目录。若 Test 删除后，BBB 目录成为空目录，则 BBB 亦予删除。 <br>　　 rmdir -p BBB/Test  </span></p>\r\n<p><span style=\"color: #000000; font-size: 14px;\">---</span></p>\r\n<div id=\"cnblogs_post_body\">\r\n<div><span style=\"font-size: 14px; color: #000000;\">chmod----改变一个或多个文件的存取模式(mode)</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">chmod [options] mode files</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">只能文件属主或特权用户才能使用该功能来改变文件存取模式。mode可以是数字形式或以who opcode permission形式表示。who是可选的，默认是a(所有用户)。只能选择一个opcode(操作码)。可指定多个mode，以逗号分开。</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">options：</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">-c，--changes</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">只输出被改变文件的信息</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">-f，--silent，--quiet</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">当chmod不能改变文件模式时，不通知文件的用户</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">--help</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">输出帮助信息。</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">-R，--recursive</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">可递归遍历子目录，把修改应到目录下所有文件和子目录</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">--reference=filename</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">参照filename的权限来设置权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">-v，--verbose</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">无论修改是否成功，输出每个文件的信息</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">--version</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">输出版本信息。</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">who</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">u</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">用户</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">g</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">组</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">o</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">其它</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">a</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">所有用户(默认)</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">opcode</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">+</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">增加权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">-</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">删除权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">=</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">重新分配权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">permission</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">r</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">读</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">w</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">写</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">x</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">执行</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">s</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">设置用户(或组)的ID号</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">t</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">设置粘着位(sticky bit)，防止文件或目录被非属主删除</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">u</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">用户的当前权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">g</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">组的当前权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">o</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">其他用户的当前权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">作为选择，我们多数用三位八进制数字的形式来表示权限，第一位指定属主的权限，第二位指定组权限，第三位指定其他用户的权限，每位通过4(读)、2(写)、1(执行)三种数值的和来确定权限。如6(4+2)代表有读写权，7(4+2+1)有读、写和执行的权限。</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">还可设置第四位，它位于三位权限序列的前面，第四位数字取值是4，2，1，代表意思如下：</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">4，执行时设置用户ID，用于授权给基于文件属主的进程，而不是给创建此进程的用户。</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">2，执行时设置用户组ID，用于授权给基于文件所在组的进程，而不是基于创建此进程的用户。</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">1，设置粘着位。</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">实例：</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">$ chmod u+x file                　　　   给file的属主增加执行权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">$ chmod 751 file                　　　   给file的属主分配读、写、执行(7)的权限，给file的所在组分配读、执行(5)的权限，给其他用户分配执行(1)的权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">$ chmod u=rwx,g=rx,o=x file      上例的另一种形式</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">$ chmod =r file                 　　　　为所有用户分配读权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">$ chmod 444 file              　　　　 同上例</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">$ chmod a-wx,a+r   file   　　 　   同上例</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">$ chmod -R u+r directory       　   递归地给directory目录下所有文件和子目录的属主分配读的权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">$ chmod 4755                          　　设置用ID，给属主分配读、写和执行权限，给组和其他用户分配读、执行的权限。</span></div>\r\n\r\n\r\n\r\n</div>\r\n<p>-----搭建LAMP环境-----</p>\r\n<p>----用apt-get安装Apache MySQL PHP </p>\r\n<p>apt-get有个特性，就是安装东西会把相关的一些东西一起装</p>\r\n<p>---</p>\r\n<p>liang@liang-andy:~$ sudo apt-get install apache2</p>\r\n<p>安装apache，然后输入密码（普通用户）以及y，输入以下命令，表示安装成功<br>liang@liang-andy:~$ apache2 -v<br>Server version: Apache/2.4.7 (Ubuntu)<br>Server built:   Oct 14 2015 14:18:49<br>然后输入ifconfig得到ip地址</p>\r\n<p>（我这里是）192.168.1.100得到It works页面验证成功<br>---</p>\r\n<p>安装PHP </p>\r\n<p>liang@liang-andy:~$ sudo apt-get install php5<br>liang@liang-andy:~$ php5 -v<br>PHP 5.5.9-1ubuntu4.14 (cli) (built: Oct 28 2015 01:32:13) <br>Copyright (c) 1997-2014 The PHP Group<br>Zend Engine v2.5.0, Copyright (c) 1998-2014 Zend Technologies<br>    with Zend OPcache v7.0.3, Copyright (c) 1999-2014, by Zend Technologies<br>然后加载/检查php5.load这个php实现对apache2操作的模块（先不管为什么，先这么干就行）<br>liang@liang-andy:~$ cat /etc/apache2/mods-enabled/php5.load<br>LoadModule php5_module /usr/lib/apache2/modules/libphp5.so<br>---</p>\r\n<p>安装MySQL </p>\r\n<p>liang@liang-andy:~$ sudo apt-get install mysql-server<br>这个不需要验证版本，但同样要检查php操作mysql的模块</p>\r\n<p>liang@liang-andy:~$ cat /etc/php5/mods-available/mysql.ini<br>cat: /etc/php5/conf.d/mysql.ini: 没有那个文件或目录</p>\r\n<p>注意，这里我用的Ubuntu是14ls的版本，12的cat目录是不一样的/etc/php5/conf.d/mysql.ini</p>\r\n<p>这里，由于php默认不安装mysql的拓展，所以需要手动安装</p>\r\n<p>liang@liang-andy:~$ sudo apt-get install php5-mysql<br>liang@liang-andy:~$ cat /etc/php5/mods-available/mysql.ini<br>; configuration for php MySQL module<br>; priority=20<br>extension=mysql.so<br>这样就可以了，然后重启mysql以及apache2</p>\r\n<p>liang@liang-andy:~$ sudo service mysql restart<br>liang@liang-andy:~$ sudo service apache2 restart<br>---</p>\r\n<p>一次性安装：上面是分过程，下面一条给出一次性安装</p>\r\n<p>sudo apt-get install apache2 php5 mysql-server php5-mysql</p>\r\n<p>----创建phpinfo探针</p>\r\n<p>先装vim</p>\r\n<p>sudo apt-get install vim</p>\r\n<p>再切换到php的www文件夹，用cd命令</p>\r\n<p>cd /var/www/html（14.4版本）</p>\r\n<p>然后在这里创建一个php文件</p>\r\n<p>sudo vim info.php</p>\r\n<p>写php代码</p>\r\n<p>&lt;?php<br>echo mysql_connect(\'localhost\',\'root\',\'hanhan123\') ? \'Hoho\' : \'WTF\';<br><br>phpinfo();<br>然后esc键，输入:wq保存退出</p>\r\n<p>http://192.168.1.100/info.php 浏览器输入验证结果</p>\r\n<p> </p>\r\n<p> </p>\r\n<p>Linux原来如此但疼，不写了，明天见</p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p><span style=\"font-size: 14px; color: #000000;\"> </span></p>\r\n<div><span style=\"font-size: 14px; color: #000000;\">chmod----改变一个或多个文件的存取模式(mode)</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">chmod [options] mode files</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">只能文件属主或特权用户才能使用该功能来改变文件存取模式。mode可以是数字形式或以who opcode permission形式表示。who是可选的，默认是a(所有用户)。只能选择一个opcode(操作码)。可指定多个mode，以逗号分开。</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">options：</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">-c，--changes</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">只输出被改变文件的信息</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">-f，--silent，--quiet</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">当chmod不能改变文件模式时，不通知文件的用户</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">--help</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">输出帮助信息。</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">-R，--recursive</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">可递归遍历子目录，把修改应到目录下所有文件和子目录</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">--reference=filename</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">参照filename的权限来设置权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">-v，--verbose</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">无论修改是否成功，输出每个文件的信息</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">--version</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">输出版本信息。</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">who</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">u</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">用户</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">g</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">组</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">o</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">其它</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">a</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">所有用户(默认)</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">opcode</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">+</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">增加权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">-</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">删除权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">=</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">重新分配权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">permission</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">r</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">读</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">w</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">写</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">x</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">执行</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">s</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">设置用户(或组)的ID号</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">t</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">设置粘着位(sticky bit)，防止文件或目录被非属主删除</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">u</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">用户的当前权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">g</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">组的当前权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">o</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">其他用户的当前权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">作为选择，我们多数用三位八进制数字的形式来表示权限，第一位指定属主的权限，第二位指定组权限，第三位指定其他用户的权限，每位通过4(读)、2(写)、1(执行)三种数值的和来确定权限。如6(4+2)代表有读写权，7(4+2+1)有读、写和执行的权限。</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">还可设置第四位，它位于三位权限序列的前面，第四位数字取值是4，2，1，代表意思如下：</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">4，执行时设置用户ID，用于授权给基于文件属主的进程，而不是给创建此进程的用户。</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">2，执行时设置用户组ID，用于授权给基于文件所在组的进程，而不是基于创建此进程的用户。</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">1，设置粘着位。</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">实例：</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\"> </span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">$ chmod u+x file                　　　   给file的属主增加执行权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">$ chmod 751 file                　　　   给file的属主分配读、写、执行(7)的权限，给file的所在组分配读、执行(5)的权限，给其他用户分配执行(1)的权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">$ chmod u=rwx,g=rx,o=x file      上例的另一种形式</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">$ chmod =r file                 　　　　为所有用户分配读权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">$ chmod 444 file              　　　　 同上例</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">$ chmod a-wx,a+r   file   　　 　   同上例</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">$ chmod -R u+r directory       　   递归地给directory目录下所有文件和子目录的属主分配读的权限</span></div>\r\n<div><span style=\"font-size: 14px; color: #000000;\">$ chmod 4755                          　　设置用ID，给属主分配读、写和执行权限，给组和其他用户分配读、执行的权限。</span></div>\r\n\r\n\r\n\r\n ', '2016-04-28 20:05:05', '2016-04-28 20:21:08', '0', '0', '0', '1', '83');
INSERT INTO `blog` VALUES ('2994', '150923-碎觉要-PHP,Linux ', '网络', '\n<p>今天懒懒的，还是每天都懒懒的。</p>\r\n<p>早上下午都没有更。还好还有晚上更的想法和行动。</p>\r\n<p>总结如下</p>\r\n<p>1、PHP</p>\r\n<p>--wamp的一点配置问题，把根文件改为自己所要的文件夹。改动Apache的配置文件以及更改wamp的配置文件</p>\r\n<p>2、Linux</p>\r\n<p>--分区问题</p>\r\n<p>--主分区最多有4个，主分区和拓展分区一共最多4个，拓展分区下可以有多个逻辑分区，可以参考集合的逻辑</p>\r\n<p>--格式化就干两件事，把磁盘分块+建表（查询，记录数据位置）</p>\r\n<p>--在Linux中，分区的流程为——格式化-&gt;起名-&gt;“盘符”-&gt;使用</p>\r\n<p>--再次注意，Linux中所有东西都是文件形式</p>\r\n<p>--硬盘起名中，比如     /        dev      / sd              a                  1</p>\r\n<p>                          根目录  1级目录   SATA硬盘名 第一个硬盘  第一个分区</p>\r\n<p>  写作/dev/sda1。注意，最后数字1-4是主分区，&gt;=5才是逻辑分区，也就是说，即使主分区和拓展分区数目不到4个，有逻辑分区也要从5开始</p>\r\n<p>--这里的“盘符”也就是挂载点。因为Linux中是以目录来命名分区的。</p>\r\n<p>--必须分区：/  根目录或根分区</p>\r\n<p>                /swap 交换分区或“虚拟分区”，推荐位2g以上</p>\r\n<p>  推荐分区：/boot 启动分区，200MB</p>\r\n<p> </p>\r\n<p>今天就这么着吧，保持学习的状态最重要。看书碎觉去了。。</p>\n ', '2016-04-28 20:05:05', '2016-04-28 20:22:01', '0', '0', '0', '1', '83');
INSERT INTO `blog` VALUES ('2995', '150922-写写博客监督下不自觉的自己-PPT,Linux,HTML ', '网络', '\n<p>开始学PHP的日子里，总是懒散的有一天没一天的。无意间听闻写博客来展示代码（现在还远远做不到哇），来监督个人每天的学习进度，鉴于自己还是爱写一点文字，但愿可以坚持下去。</p>\r\n<p>凡是都喜欢有个计划，骨子里的理科性，我喜欢早上就有人来拍一巴掌屁股，动动。so，早上起来写写，5分钟，再去上班，实在不行就手机上写。晚上呢，回来再修改下，哦了~</p>\r\n<p>------------------------------早上9：31------------------------------------------</p>\r\n<p>感觉还是状态好一点，不知道是教研室的氛围还是博客真的好用。</p>\r\n<p>中午学了点乱七八糟的东西，晚上说。下午在教研室搞定了今天的任务后，没事干，看完了PPT“说服力”的第一部分，真的很不错。主要是思路，作为工具的干货，有所得：比如文本框的对齐，图片的边缘柔化，最酷炫的图片顶点编辑~~</p>\r\n<p>晚上会不会萎？</p>\r\n<p>-------------------------------下午17：08------------------------------------------</p>\r\n<p>晚上真的萎了。。。好吧，好歹比昨天好，这是底线！！！！</p>\r\n<p>中午做了点事，带上其他所有，总结如下。</p>\r\n<p>1、PPT说服力第一章，定位与标题</p>\r\n<p>-形状顶点编辑，图片柔化等</p>\r\n<p>2、Linux简介</p>\r\n<p>--跟着课程学习CentOS，基本类似RedHat</p>\r\n<p>--开源软件是使用、研究、散步/改变的自由，请保持和延续下去</p>\r\n<p>--字符界面的使用是为了资源占用的减少以及更加稳定的系统</p>\r\n<p>--严格区分大小写</p>\r\n<p>--windows程序不能直接运行在Linux</p>\r\n<p>--重要原则！！！！！一切内容皆文件，用户，硬件全都是文件——应进一步在实践中加深理解</p>\r\n<p>--文件无拓展名，一般靠权限区分文件类型；但有特别的约定俗成的文件名——软件包.rpm——脚本.sh——配置文件.conf——网页文件.html.php——压缩文件.gz .bz2 .tgz .tar.bz2</p>\r\n<p>3、HTML基础-继续是标签的认识，代码如下</p>\r\n<p>&lt;html&gt;</p>\r\n<p>&lt;head&gt;</p>\r\n<p>&lt;title&gt;150922&lt;/title&gt;</p>\r\n<p>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;</p>\r\n<p>&lt;img src=\"shit.gif\" alt=\"OMG.jpg\" title=\"Beauty\"&gt;你好&lt;/img&gt;</p>\r\n<p>&lt;form method=\"post\" action=\"save.php\"&gt;</p>\r\n<p> &lt;label&gt;姓名:&lt;/label&gt;<br>    &lt;input type=\"text\" name=\"what\"/&gt;&lt;br&gt;<br>    &lt;label&gt;密码:&lt;/label&gt;<br>    &lt;input type=\"password\" name=\"what\"/&gt;&lt;br&gt;<br>    &lt;label&gt;性别:&lt;/label&gt;<br>    &lt;label&gt;女&lt;/label&gt;<br>    &lt;input type=\"radio\" value=\"female\" name=\"gender\"/&gt;<br>    &lt;label&gt;男&lt;/label&gt;<br>    &lt;input type=\"radio\" value=\"male\" name=\"gender\"/&gt;&lt;br&gt;<br>    &lt;label&gt;年龄&lt;/label&gt;<br>    &lt;textarea rows=\"1\" cols=\"10\"&gt;请输入年龄&lt;/textarea&gt;&lt;br&gt;<br>    &lt;label&gt;请选择职业&lt;/label&gt;<br>    &lt;select&gt;<br>      &lt;option value=\"stu\"&gt;学生&lt;/option&gt;<br>      &lt;option value=\"gov\"&gt;公务员&lt;/option&gt;<br>      &lt;option value=\"it\"&gt;IT从业者&lt;/option&gt;<br>      &lt;option value=\"others\"&gt;其他&lt;/option&gt;<br>    &lt;/select&gt;&lt;br&gt;<br>    &lt;input type=\"submit\"/&gt;</p>\r\n<p>    &lt;input type=\"reset\"/&gt;</p>\r\n<p>  &lt;/body&gt;</p>\r\n<p>&lt;/html&gt;</p>\r\n<p>基本上就是很基本的直接用html来进行引导用户的输入行为。注意：type=\"radio\"中name的值应该一样；&lt;&gt;内的数据不是显示数据，但是是给服务器等处理做准备的。</p>\r\n<p> </p>\r\n<p>总而言之，有收获的一天，继续吧，还有很大成长空间。</p>\r\n<p>--------------------------------------------------23：19----------------------------------------------------------------</p>\n ', '2016-04-28 20:05:05', '2016-04-28 20:22:01', '0', '0', '0', '1', '83');
INSERT INTO `blog` VALUES ('2996', '敲-PHP与MySQL，JSON ', '网络', '\n<p>hi</p>\r\n<p>敲代码~</p>\r\n<p><strong>1、php与mysql</strong></p>\r\n<p><strong>5.4 修改界面</strong></p>\r\n<p>同样是界面和程序。</p>\r\n<p><strong>界面article.modify.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	//读取旧信息<br>	$id = $_GET[\'id\'];<br>	$query = mysqli_query($con,\"select * from article where id=$id\");<br>	$data = mysqli_fetch_assoc($query);<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"213\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;      &lt;a href=\"article.add.php\"&gt;&lt;/a&gt;&lt;/td&gt;<br>    &lt;td width=\"854\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;&lt;form id=\"form1\" name=\"form1\" method=\"post\" action=\"article.modify.handle.php\"&gt;<br>    	&lt;input type=\"hidden\" name=\"id\" value=\"&lt;?php echo $data[\'id\']?&gt;\" /&gt;<br>      &lt;table width=\"590\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\"&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"center\"&gt;修改文章&lt;/td&gt;<br>          &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td width=\"119\"&gt;标题&lt;/td&gt;<br>          &lt;td width=\"437\"&gt;&lt;label for=\"title\"&gt;&lt;/label&gt;<br>            &lt;input type=\"text\" name=\"title\" id=\"title\" value=\"&lt;?php echo $data[\'title\']?&gt;\"/&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;作者&lt;/td&gt;<br>          &lt;td&gt;&lt;input type=\"text\" name=\"author\" id=\"author\"  value=\"&lt;?php echo $data[\'author\']?&gt;\"/&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;简介&lt;/td&gt;<br>          &lt;td&gt;&lt;label for=\"description\"&gt;&lt;/label&gt;<br>            &lt;textarea name=\"description\" id=\"description\" cols=\"60\" rows=\"5\"&gt;&lt;?php echo $data[\'description\']?&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;内容&lt;/td&gt;<br>          &lt;td&gt;&lt;textarea name=\"content\" cols=\"60\" rows=\"20\" id=\"content\"&gt;&lt;?php echo $data[\'content\']?&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"right\"&gt;&lt;input type=\"submit\" name=\"button\" id=\"button\" value=\"提交\" /&gt;&lt;/td&gt;<br>          &lt;/tr&gt;<br>      &lt;/table&gt;<br>    &lt;/form&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>关键点在于php的读取，以及在html中value的php调用。</p>\r\n<p><strong>修改程序article.modify.handle.php</strong></p>\r\n<p>&lt;?php <br>//和数据库有关的，无条件写上这么一句话<br>	require_once(\'../connect.php\');<br><br>	//接受修改后的数据（表单传递）<br>	$id = $_POST[\'id\'];<br>	$title = $_POST[\'title\'];<br>	$author = $_POST[\'author\'];<br>	$description = $_POST[\'description\'];<br>	$content = $_POST[\'content\'];<br>	$dateline =  time();<br><br>	//写sql修改语句，并做成功与否的判断，并跳回修改界面<br>	$updatesql = \"update article set title=\'$title\',author=\'$author\',description=\'$description\',content=\'$content\',dateline=$dateline where id=$id\";<br>	if(mysqli_query($con,$updatesql)){<br>		echo \"&lt;script&gt;alert(\'修改文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'修改文章失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p><strong>5.5 文章删除</strong></p>\r\n<p>先做需求的分析：同上面几个略有区别，<strong>删除文章不需要界面，只需要一个删除按钮来掉要就行了</strong>。所以只有一个文件。而关键的sql语句只有一句</p>\r\n<p><strong>$delsql=\"delete from article where id=$id\";</strong></p>\r\n<p><strong>aritcle.del.handle.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');</p>\r\n<p>//读取id号。不像其他的是有传递值的<br>	$id = $_GET[\'id\'];<br>	$deletesql = \"delete from article where id=$id\";<br>	if(mysql_query($deletesql)){<br>		echo \"&lt;script&gt;alert(\'删除文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'删除文章失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p><strong>5.6 文章管理列表</strong></p>\r\n<p>需求分析：列表显示出所有的文章，然后后面有两个按钮，删除（链接至上一节的删除模块）和修改（链接至之前的模块）</p>\r\n<p>所以，只需要一个文件，显示模块就好</p>\r\n<p><strong>article.manage.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	$sql = \"select * from article order by dateline desc\";<br>	$query  = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row =mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}else{<br>		$data = array();<br>	}</p>\r\n<p>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"156\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;<br>    &lt;td width=\"837\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;&lt;table width=\"743\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>      &lt;tr&gt;<br>        &lt;td colspan=\"3\" align=\"center\" bgcolor=\"#FFFFFF\"&gt;文章管理列表&lt;/td&gt;<br>        &lt;/tr&gt;<br>      &lt;tr&gt;<br>        &lt;td width=\"37\" bgcolor=\"#FFFFFF\"&gt;编号&lt;/td&gt;<br>        &lt;td width=\"572\" bgcolor=\"#FFFFFF\"&gt;标题&lt;/td&gt;<br>        &lt;td width=\"82\" bgcolor=\"#FFFFFF\"&gt;操作&lt;/td&gt;<br>      &lt;/tr&gt;<br>	&lt;?php <br>		if(!empty($data)){<br>			foreach($data as $value){<br>	?&gt;<br>      &lt;tr&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&amp;nbsp;&lt;?php echo $value[\'id\']?&gt;&lt;/td&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&amp;nbsp;&lt;?php echo $value[\'title\']?&gt;&lt;/td&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&lt;a href=\"article.del.handle.php?id=&lt;?php echo $value[\'id\']?&gt;\"&gt;删除&lt;/a&gt; &lt;a href=\"article.modify.php?id=&lt;?php echo $value[\'id\']?&gt;\"&gt;修改&lt;/a&gt;&lt;/td&gt;<br>      &lt;/tr&gt;<br>    &lt;/table&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>5.7 函数总结</strong></p>\r\n<p>mysqli_connect()</p>\r\n<p>mysqli_select_db()</p>\r\n<p>mysqli_query()</p>\r\n<p>mysqli_error()</p>\r\n<p>mysqli_fetch_assoc()</p>\r\n<p>mysqli_num_rows()</p>\r\n<p><strong>六、前台管理界面的开发</strong></p>\r\n<p><strong>6.1 文章列表</strong></p>\r\n<p><strong>article.list.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from article order by dateline desc\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row = mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>	&lt;?php<br>		if(empty($data)){	<br>			echo \"当前没有文章，请管理员在后台添加文章\";<br>		}else{<br>			foreach($data as $value){<br>	?&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;?php echo $value[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $value[\'author\']?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $value[\'description\']?&gt;<br>			&lt;/div&gt;<br>			&lt;div class=\"meta\"&gt;<br>				&lt;p class=\"links\"&gt;&lt;a href=\"article.show.php?id=&lt;?php echo $value[\'id\']?&gt;\" class=\"more\"&gt;查看详细&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;raquo;&amp;nbsp;&amp;nbsp;&lt;/p&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;?php<br>			}<br>		}<br>	?&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"article.search.php\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"key\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.2 文章详情页</strong></p>\r\n<p><strong>article.show.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$id = intval($_GET[\'id\']);<br>	$sql = \"select * from article where id=$id\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		$row = mysqli_fetch_assoc($query);<br>	}else{<br>		echo \"这篇文章不存在\";<br>		exit;<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"#\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"#\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"#\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;!--文章标题放置到这里--&gt;&lt;?php echo $row[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $row[\'author\'];?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;!--文章内容放置到这里--&gt;<br>				&lt;?php echo $row[\'content\']?&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.3 检索</strong></p>\r\n<p>article.search.php</p>\r\n<p>这里的查询的是根据题目来查询。</p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$key = $_GET[\'key\'];<br>	$sql = \"select * from article where title like \'%$key%\' order by dateline desc\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row = mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>	&lt;?php<br>		if(empty($data)){	<br>			echo \"当前没有文章，请管理员在后台添加文章\";<br>		}else{<br>			foreach($data as $value){<br>	?&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;?php echo $value[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $value[\'author\']?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $value[\'description\']?&gt;<br>			&lt;/div&gt;<br>			&lt;div class=\"meta\"&gt;<br>				&lt;p class=\"links\"&gt;&lt;a href=\"article.show.php?id=&lt;?php echo $value[\'id\']?&gt;\" class=\"more\"&gt;查看详细&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;raquo;&amp;nbsp;&amp;nbsp;&lt;/p&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;?php<br>			}<br>		}<br>	?&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.4 关于我们和联系我们</strong></p>\r\n<p><strong>about.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from  introduce\";<br>	$query = mysqli_query($con,$sql);<br>	//if($query&amp;&amp;mysqli_num_rows($query)){<br>		$about = \"啦啦啦\";<br>	//}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br><br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;关于我们&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $about?&gt;<br>			&lt;/div&gt;<br><br>		&lt;/div&gt;<br><br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>contact.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from  introduce\";<br>	$query = mysqli_query($con,$sql);<br>	//$arr=mysqli_fetch_array($query, MYSQL_ASSOC);<br>	//if($query&amp;&amp;mysqli_num_rows($query)){<br>		$contact = \"asdfadf\";<br>	//}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br><br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;联系我们&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $contact?&gt;<br>			&lt;/div&gt;<br><br>		&lt;/div&gt;<br><br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;</p>\r\n<p>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p> ------------------------------------------</p>\r\n<p><strong>2、JSON基础</strong></p>\r\n<p><strong>1.2 JSON的使用</strong></p>\r\n<p>--<strong>JSON与serialize</strong>数据格式的异同和使用</p>\r\n<p>相同点：把其他数据类型转换为一个可以传输的字符串；都是结构性数据；</p>\r\n<p>不同点：s序列化之后，保存数据原有类型——适用于存储带有加密方式的数据串；JSON更简洁——适合数据量大，不要求数据类型保存的情况</p>\r\n<p>举个栗子</p>\r\n<p>&lt;?php<br>//输出模块<br>function createHtmlTag($tag=\"\"){<br>	echo \"&lt;h1&gt;$tag&lt;/h1&gt;&lt;br/&gt;\";<br>}<br>createHtmlTag(\"Hello!\");<br>createHtmlTag(\"JSON和serialize的对比\");</p>\r\n<p>//测试用数组<br>$member=array(\"username\",\"age\");<br>var_dump($member);</p>\r\n<p><br>$jsonObj=json_encode($member);</p>\r\n<p>$serializeObj=serialize($member);</p>\r\n<p>createHtmlTag($jsonObj);<br>createHtmlTag($serializeObj);</p>\r\n<p>结果</p>\r\n<h1>Hello!</h1>\r\n<p> </p>\r\n<h1>JSON和serialize的对比</h1>\r\n<p> </p>\r\n<pre class=\"xdebug-var-dump\"><strong>array</strong> <em>(size=2)</em>\r\n  0 <span style=\"color: #888a85;\">=&gt;</span> </pre>\r\n<p><small>string</small></p>\r\n<pre class=\"xdebug-var-dump\"> <span style=\"color: #cc0000;\">\'username\'</span> <em>(length=8)</em>\r\n  1 <span style=\"color: #888a85;\">=&gt;</span> </pre>\r\n<p><small>string</small></p>\r\n<pre class=\"xdebug-var-dump\"> <span style=\"color: #cc0000;\">\'age\'</span> <em>(length=3)</em>\r\n</pre>\r\n<h1>[\"username\",\"age\"]</h1>\r\n<p> </p>\r\n<h1>a:2:{i:0;s:8:\"username\";i:1;s:3:\"age\";}</h1>\r\n<p><strong>--常用JSON函数</strong></p>\r\n<p>json_encode()——JSON加密</p>\r\n<p>json_decode()——解密</p>\r\n<p><strong>1.3 JSON实例讲解</strong></p>\r\n<p> </p>\n ', '2016-04-28 20:05:05', '2016-04-28 20:22:01', '0', '0', '0', '1', '84');
INSERT INTO `blog` VALUES ('2997', '挤点时间写博客-php&MySQL实践 ', '网络', '\n<p>　　hi</p>\r\n<p>晚上要吃火锅的嘛，挤点时间写点东西吧，别被老板发现哦</p>\r\n<p>1、PHP与MySQL</p>\r\n<p><strong>五、文章发布系统之后台</strong></p>\r\n<p><strong>5.2 创建配置文件和初始化文件</strong></p>\r\n<p>为了统一配置以及管理方便，还有就是减少代码的冗余。</p>\r\n<p>分别为config.php和connect.php</p>\r\n<p><strong>config.php</strong></p>\r\n<p>&lt;?php<br>/*<br> * 配置文件<br> */<br>//配置数据库的相关信息<br>//由于是常量，直接用define<br>define(\'HOST\', \'127.0.0.1\');<br>define(\'USERNAME\', \'root\');<br>define(\'PASSWORD\', \'\');</p>\r\n<p> </p>\r\n<p><strong>connect.php</strong></p>\r\n<p>&lt;?php<br>/*<br> * 链接到数据库的文件<br> * 主要是链接到数据库服务器，然后选择数据库。<br> * 特殊的是设置字符集。<br> * 然后希望对每个操作进行判断<br> */</p>\r\n<p> </p>\r\n<p>//包含配置文件<br>require_once \'config.php\';</p>\r\n<p>//连库<br>if(!$con=mysqli_connect(HOST,USERNAME,PASSWORD)){<br>	echo mysqli_error($con);<br>}</p>\r\n<p>//选库<br>if(mysqli_select_db($con, \'info\')){<br>	echo mysqli_error($con);<br>}</p>\r\n<p>//字符集<br>if(mysqli_query($con,\'set names utf8\')){<br>	echo mysqli_error($con);<br>}</p>\r\n<p>完成后测试一下链接文件就ok了。这里的mysqli和mysql都可以，只要格式正确就行。</p>\r\n<p><strong>5.3 发布文章</strong></p>\r\n<p><strong>文章发布界面article.add.php</strong></p>\r\n<p>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"156\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;      &lt;a href=\"article.add.php\"&gt;&lt;/a&gt;&lt;/td&gt;<br>    &lt;td width=\"837\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;<br>    &lt;form id=\"form1\" name=\"form1\" method=\"post\" action=\"article.add.handle.php\"&gt;<br>      &lt;table width=\"779\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\"&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"center\"&gt;发布文章&lt;/td&gt;<br>          &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td width=\"119\"&gt;标题&lt;/td&gt;<br>          &lt;td width=\"625\"&gt;&lt;label for=\"title\"&gt;&lt;/label&gt;<br>            &lt;input type=\"text\" name=\"title\" id=\"title\" /&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;作者&lt;/td&gt;<br>          &lt;td&gt;&lt;input type=\"text\" name=\"author\" id=\"author\" /&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;简介&lt;/td&gt;<br>          &lt;td&gt;&lt;label for=\"description\"&gt;&lt;/label&gt;<br>            &lt;textarea name=\"description\" id=\"description\" cols=\"60\" rows=\"5\"&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;内容&lt;/td&gt;<br>          &lt;td&gt;&lt;textarea name=\"content\" cols=\"60\" rows=\"15\" id=\"content\"&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"right\"&gt;&lt;input type=\"submit\" name=\"button\" id=\"button\" value=\"提交\" /&gt;&lt;/td&gt;<br>          &lt;/tr&gt;<br>      &lt;/table&gt;<br>    &lt;/form&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>不是很漂亮就是了，学习嘛</p>\r\n<p> </p>\r\n<p>文章发布处理程序article.add.handle.php</p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	//把传递过来的信息入库,在入库之前对所有的信息进行校验。<br>	if(!(isset($_POST[\'title\'])&amp;&amp;(!empty($_POST[\'title\'])))){<br>		echo \"&lt;script&gt;alert(\'标题不能为空\');window.location.href=\'article.add.php\';&lt;/script&gt;\";<br>	}<br>	$title = $_POST[\'title\'];<br>	$author = $_POST[\'author\'];<br>	$description = $_POST[\'description\'];<br>	$content = $_POST[\'content\'];<br>	$dateline =  time();<br>	$insertsql = \"insert into article(title, author, description, content, dateline) values(\'$title\', \'$author\', \'$description\', \'$content\', $dateline)\";<br>	if(mysqli_query($con,$insertsql)){<br>		echo \"&lt;script&gt;alert(\'发布文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'发布失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p>注意两者的功能和连接，就是add页面把东西传给handle处理</p>\r\n<p> ------------------------</p>\r\n<p>由于我遇到了前所未见的乱码问题。。。跪着解决中。。。。望大家不吝赐教（wamp环境，mysql，zend，浏览器都已经设置为utf8，apache配置文件中添加了AddDefaultCharset UTF-8，问题依然存在，我晕啊。。。。）</p>\n ', '2016-04-28 20:05:05', '2016-04-28 20:22:07', '0', '0', '0', '1', '84');
INSERT INTO `blog` VALUES ('2998', '突然发现这周有点忙。。着玩-PHP进阶 ', '网络', '\n<p>　　hi</p>\r\n<p>周二才，不过我突然意识到这周有点忙着玩的感觉，还是很期待的——今天下午去市里，晚上回来看电影，明晚聚餐吃火锅，后天下午拍短片，晚上可能要打球，周五，嗯，就到周五了。虽然这样下去连怎么写（bian）周报都不知道，但还是来做这个的好。</p>\r\n<p><strong>1、PHP进阶完结篇</strong></p>\r\n<p><strong>十一、数据库操作</strong></p>\r\n<p><strong>11.1 PHP支持哪些数据库</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP通过安装相应的扩展来实现数据库操作，现代应用程序的设计离不开数据库的应用，当前主流的数据库有MsSQL，MySQL，Sybase，Db2，Oracle，PostgreSQL，Access等，这些数据库PHP都能够安装扩展来支持，一般情况下常说的LAMP架构指的是：Linux、Apache、Mysql、PHP，因此Mysql数据库在PHP中的应用非常广泛，我们会在本章中简单的了解Mysql的操作方法。</p>\r\n</div>\r\n</div>\r\n<p><strong>11.2 数据库扩展</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP中一个数据库可能有一个或者多个扩展，其中既有官方的，也有第三方提供的。像Mysql常用的扩展有原生的mysql库，也可以使用增强版的mysqli扩展，还可以使用PDO进行连接与操作。</p>\r\n<p>不同的扩展提供基本相近的操作方法，不同的是可能具备一些新特性，以及操作性能可能会有所不同。</p>\r\n<p>mysql扩展进行数据库连接的方法：</p>\r\n<pre class=\"code\">$link = mysql_connect(\'mysql_host\', \'mysql_user\', \'mysql_password\');</pre>\r\n<p>mysqli扩展：</p>\r\n<pre class=\"code\">$link = mysqli_connect(\'mysql_host\', \'mysql_user\', \'mysql_password\');</pre>\r\n<p>PDO扩展</p>\r\n<pre class=\"code\">$dsn = \'mysql:dbname=testdb;host=127.0.0.1\';\r\n$user = \'dbuser\';\r\n$password = \'dbpass\';\r\n$dbh = new PDO($dsn, $user, $password);</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>$link = mysql_connect(\'127.0.0.1\', \'code1\', \'\') or die(\'数据库连接失败\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>$result = mysql_query(\'select * from user limit 1\');<br>$row = mysql_fetch_assoc($result);<br>print_r($row);</p>\r\n<p><strong>11.3 连接MySQL数据库</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP要对数据库进行操作，首先要做的是与数据库建立连接，通常我们使用mysql_connect函数进行数据库连接，该函数需要指定数据库的地址，用户名及密码。</p>\r\n<pre class=\"code\">$host = \'localhost\';\r\n$user = \'code1\';\r\n$pass = \'\';\r\n$link = mysql_connect($host, $user, $pass);</pre>\r\n<p>PHP连接数据库的方式类似于直接在命令行下通过进行连接，类似：<code class=\"marker\">mysql -hlocalhost -ucode1 -p</code>，当连接成功以后，我们需要选择一个操作的数据库，通过mysql_select_db函数来选择数据库。</p>\r\n<pre class=\"code\">mysql_select_db(\'code1\');</pre>\r\n<p>通常我们会先设置一下当前连接使用的字符编码，一般的我们会使用utf8编码。</p>\r\n<pre class=\"code\">mysql_query(\"set names \'utf8\'\");</pre>\r\n<p>通过上面的步骤，我们就与数据库建立了连接，可以进行数据操作了。</p>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>$host = \'127.0.0.1\';<br>$user = \'code1\';<br>$pass = \'\';<br>//在这里编写数据库连接代码<br>mysql_connect($host,$user,$pass);<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");</p>\r\n<p><strong> 11.4 执行MySQL查询</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>在数据库建立连接以后就可以进行查询，采用mysql_query加sql语句的形式向数据库发送查询指令。</p>\r\n<pre class=\"code\">$res = mysql_query(\'select * from user limit 1\');</pre>\r\n<p>对于查询类的语句会返回一个资源句柄（resource），可以通过该资源获取查询结果集中的数据。</p>\r\n<pre class=\"code\">$row = mysql_fetch_array($res);\r\nvar_dump($row);</pre>\r\n<p>默认的，PHP使用最近的数据库连接执行查询，但如果存在多个连接的情况，则可以通过参数指令从那个连接中进行查询。</p>\r\n<pre class=\"code\">$link1 = mysql_connect(\'127.0.0.1\', \'code1\', \'\');\r\n$link2 = mysql_connect(\'127.0.0.1\', \'code1\', \'\', true); //开启一个新的连接\r\n$res = mysql_query(\'select * from user limit 1\', $link1); //从第一个连接中查询数据</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//在这里进行数据查询<br>$arr=mysql_query(\"select * from user limit 1\");<br>$row=mysql_fetch_row($arr);<br>print_r($row);<br>echo $row[0];</p>\r\n<p>11.5 插入新数据到MySQL中</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>当我们了解了如何使用mysql_query进行数据查询以后，那么类似的，插入数据其实也是通过执行一个sql语句来实现，例如：</p>\r\n<pre class=\"code\">$sql = \"insert into user(name, age, class) values(\'李四\', 18, \'高三一班\')\";\r\nmysql_query($sql); //执行插入语句</pre>\r\n<p>通常数据都是存储在变量或者数组中，因此sql语句需要先进行字符串拼接得到。</p>\r\n<pre class=\"code\">$name = \'李四\';\r\n$age = 18;\r\n$class = \'高三一班\';\r\n$sql = \"insert into user(name, age, class) values(\'$name\', \'$age\', \'$class\')\";\r\nmysql_query($sql); //执行插入语句</pre>\r\n<p>在mysql中，执行插入语句以后，可以得到自增的主键id,通过PHP的mysql_insert_id函数可以获取该id。</p>\r\n<pre class=\"code\">$uid = mysql_insert_id();</pre>\r\n<p>这个id的作用非常大，通常可以用来判断是否插入成功，或者作为关联ID进行其他的数据操作。</p>\r\n</div>\r\n</div>\r\n<p><strong>11.6 取得数据查询结果</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>通过前面的章节，我们发现PHP操作数据库跟MySql客户端上操作极为相似，先进行连接，然后执行sql语句，再然后获取我们想要的结果集。</p>\r\n<p>PHP有多个函数可以获取数据集中的一行数据，最常用的是mysql_fetch_array，可以通过设定参数来更改行数据的下标，默认的会包含数字索引的下标以及字段名的关联索引下标。</p>\r\n<pre class=\"code\">$sql = \"select * from user limit 1\";\r\n$result = mysql_query($sql);\r\n$row = mysql_fetch_array($result);</pre>\r\n<p>可以通过设定参数MYSQL_NUM只获取数字索引数组，等同于mysql_fetch_row函数，如果设定参数为MYSQL_ASSOC则只获取关联索引数组，等同于mysql_fetch_assoc函数。</p>\r\n<pre class=\"code\">$row = mysql_fetch_row($result);\r\n$row = mysql_fetch_array($result, MYSQL_NUM); //这两个方法获取的数据是一样的</pre>\r\n<pre class=\"code\">$row = mysql_fetch_assoc($result);\r\n$row = mysql_fetch_array($result, MYSQL_ASSOC);</pre>\r\n<p>如果要获取数据集中的所有数据，我们通过循环来遍历整个结果集。</p>\r\n<pre class=\"code\">$data = array();\r\nwhile ($row = mysql_fetch_array($result)) {\r\n    $data[] = $row;\r\n}</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//数据预处理 防止查询不到数据<br>mysql_query(\"insert into user(name, age, class) values(\'王二\', 19, \'高三五班\')\");<br>//进行数据查询<br>$sql = \"select * from user limit 1\";<br>$result = mysql_query($sql);</p>\r\n<p>//在这里获取一行数据<br>$row=mysql_fetch_assoc($result);</p>\r\n<p>echo \'&lt;pre&gt;\';<br>print_r($row);<br>echo \'&lt;/pre&gt;\';</p>\r\n<p><strong>11.7 查询分页数据</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>上一节中，我们了解到通过循环可以获取一个查询的所有数据，在实际应用中，我们并不希望一次性获取数据表中的所有数据，那样性能会非常的低，因此会使用翻页功能，每页仅显示10条或者20条数据。</p>\r\n<p>通过mysql的limit可以很容易的实现分页，limit m,n表示从m行后取n行数据，在PHP中我们需要构造m与n来实现获取某一页的所有数据。</p>\r\n<p>假定当前页为$page，每页显示$n条数据，那么m为当前页前面所有的数据，既$m = ($page-1) * $n，在知道了翻页原理以后，那么我们很容易通过构造SQL语句在PHP中实现数据翻页。</p>\r\n<pre class=\"code\">$page = 2;\r\n$n = 2;\r\n$m = ($page - 1) * $n;\r\n$sql = \"select * from user limit $m, $n\";\r\n$result = mysql_query($sql);\r\n//循环获取当前页的数据\r\n$data = array();\r\nwhile ($row = mysql_fetch_assoc($result)) {\r\n    $data[] = $row;\r\n}\r\n</pre>\r\n<p>在上面的例子中，我们使用了$m与$n变量来表示偏移量与每页数据条数，但我们推荐使用更有意义的变量名来表示，比如$pagesize, $start, $offset等，这样更容易理解，有助于团队协作开发。</p>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//预设翻页参数<br>$page = 2;<br>$pagesize = 2;<br>//在这里构建分页查询<br>$start=($page-1)*$pagesize;</p>\r\n<p>$sql=\"SELECT * FROM user LIMIT $start,$pagesize\";</p>\r\n<p>//获取翻页数据<br>$result = mysql_query($sql);<br>$data = array();<br>while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {<br>    $data[] = $row;<br>}<br>echo \'&lt;pre&gt;\';<br>print_r($data);<br>echo \'&lt;/pre&gt;\';</p>\r\n<p>11.8 更新与删除数据</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>数据的更新与删除相对比较简单，只需要构建好相应的sql语句，然后调用mysql_query执行就能完成相应的更新与删除操作。</p>\r\n<pre class=\"code\">$sql = \"update user set name = \'曹操\' where id=2 limit 1\";\r\nif (mysql_query($sql)) {\r\n    echo \'更新成功\';\r\n}</pre>\r\n<p>同样的删除可以使用类似以下的代码：</p>\r\n<pre class=\"code\">$sql = \"delete from user where id=2 limit 1\";\r\nif (mysql_query($sql)) {\r\n    echo \'删除成功\';\r\n}</pre>\r\n<p>对于删除与更新操作，可以通过mysql_affected_rows函数来获取更新过的数据行数，如果数据没有变化，则结果为0。</p>\r\n<pre class=\"code\">$sql = \"update user set name = \'曹操\' where id=2 limit 1\";\r\nif (mysql_query($sql)) {\r\n    echo mysql_affected_rows();\r\n}</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//预设数据以便进行更新操作<br>mysql_query(\"insert into user(name, age, class) values(\'王二\', 19, \'高三五班\')\");<br>$id = mysql_insert_id();<br>//在这里更新id为$id的行的名字为李白<br>$sql=\"update user set name=\'李白\' where id=$id limit 1\";<br>mysql_query($sql);<br>//输出更新数据条数<br>echo \'数据更新行数：\'.mysql_affected_rows();<br>mysql_query(\"delete from user where id=\'$id\'\");</p>\r\n<p><strong>11.9 关闭MySQL连接</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>当数据库操作完成以后，可以使用mysql_close关闭数据库连接，默认的，当PHP执行完毕以后，会自动的关闭数据库连接。</p>\r\n<pre class=\"code\">mysql_close();</pre>\r\n<p>虽然PHP会自动关闭数据库连接，一般情况下已经满足需求，但是在对性能要求比较高的情况下，可以在进行完数据库操作之后尽快关闭数据库连接，以节省资源，提高性能。</p>\r\n<p>在存在多个数据库连接的情况下，可以设定连接资源参数来关闭指定的数据库连接。</p>\r\n<pre class=\"code\">$link = mysql_connect($host, $user, $pass);\r\nmysql_close($link);</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>$con=mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//在这里关闭数据库连接</p>\r\n<p>mysql_close($con);</p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n\r\n</div>\r\n\r\n</div>\n ', '2016-04-28 20:05:05', '2016-04-28 20:22:07', '0', '0', '0', '1', '84');
INSERT INTO `blog` VALUES ('2999', '原来今天是感恩节-Linux基础继续&MySQL和PHP ', '网络', '\n<p>　　hi</p>\r\n<p>原来今天是感恩节。虽然一直没有过这个节日的习惯，但仅仅是听到感恩的消息，都能想到一幅幅画面。愿大家安好！</p>\r\n<p>下午开题会议还是有所收获，悄悄的，就变向那个不喜欢自己的人了。</p>\r\n<p>一、Linux基础（二）</p>\r\n<p>-----Linux常用命令（二）-----</p>\r\n<p>3、文件搜索命令</p>\r\n<p><strong>3.1 文件搜索命令locate</strong></p>\r\n<p>--优点：</p>\r\n<p>搜索速度快<strong>（在学习中，要把眼光放远、放大一点，设想数据量很大的情况或是规模很大的问题的情况）</strong></p>\r\n<p>locate 文件名</p>\r\n<p>--工作原理：</p>\r\n<p>在后台数据库按文件名搜索</p>\r\n<p>所以，新创建的文件往往搜索不到（缺点）</p>\r\n<p>解决办法：等（1天）；<strong>updatedb命令更新数据库</strong></p>\r\n<p>--缺点：</p>\r\n<p>只能按照文件名搜索（功能弱）——理解就是，<strong>牺牲功能提升速度</strong></p>\r\n<p>--搜索/更新配置：</p>\r\n<p>vi /etc/updatedb.conf</p>\r\n<p>得到</p>\r\n<p>PRUNE_BIND_MOUNTS = \"yes\"<br>PRUNEFS = \"9p afs anon_inodefs auto autofs bdev binfmt_misc cgroup cifs coda configfs cpuset debugfs devpts ecryptfs exofs fuse fusectl gfs gfs2 hugetlbfs inotifyfs iso9660 jffs2 lustre mqueue ncpfs nfs nfs4 nfsd pipefs proc ramfs rootfs rpc_pipefs securityfs selinuxfs sfs sockfs sysfs tmpfs ubifs udf usbfs\"<br>PRUNENAMES = \".git .hg .svn\"<br>PRUNEPATHS = \"/afs /media /net /sfs /tmp /udev /var/cache/ccache /var/spool/cups /var/spool/squid /var/tmp\"</p>\r\n<p>第一行就是说，是否执行下列的更新规则</p>\r\n<p>后面是不搜索这些文件夹/文件</p>\r\n<p>所以有时候有些目录中的内容搜索不到的——比如常用的/tmp</p>\r\n<p><strong>3.2 命令搜索命令whereis和which</strong></p>\r\n<p>3.2.1 whereis</p>\r\n<p>--基本</p>\r\n<p>[root@andy ~]# whereis ls<br>ls: /bin/ls /usr/share/man/man1p/ls.1p.gz /usr/share/man/man1/ls.1.gz</p>\r\n<p>能搜索到命令的目录以及其帮助文档的目录<strong>（所以命令所在位置where is ，同时要牢记，linux中一切皆文件）</strong></p>\r\n<p>--选项</p>\r\n<p>-b 只查找可执行文件</p>\r\n<p>-m 只查找帮助文件</p>\r\n<p>[root@andy ~]# whereis -b mkdir <br>mkdir: /bin/mkdir</p>\r\n<p>3.2.2 which</p>\r\n<p>--基本</p>\r\n<p>[root@andy ~]# which ls<br>alias ls=\'ls --color=auto\'<br>	/bin/ls</p>\r\n<p>还会查到别名（如果有的话）。</p>\r\n<p>这里ls会自动显示不同的颜色</p>\r\n<p>[root@andy ~]# which pwd<br>/bin/pwd</p>\r\n<p>没有别名就还是这样，但没有帮助文档</p>\r\n<p>3.2.3 其他说明</p>\r\n<p>--找不到的命令</p>\r\n<p>[root@andy ~]# which cd<br>/usr/bin/which: no cd in (/usr/lib/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin)<br>[root@andy ~]# where cd<br>-bash: where: command not found</p>\r\n<p>有些类型是找不到的，原因是shell自带的（以后学）</p>\r\n<p>--path环境变量</p>\r\n<p>环境设定的基本路径，比如上述(/usr/lib/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin)</p>\r\n<p><strong>它使我们可以不用绝对路径来输入命令——windows也是这样的</strong></p>\r\n<p>还是那句话，都是文件</p>\r\n<p>path环境变量的定义：系统搜索命令的路径</p>\r\n<p>自己写的程序，要么命令都写绝对路径，要么放在这些path路径中</p>\r\n<p><strong>3.3 find命令</strong></p>\r\n<p>最强大的搜索命令——这里只学习基本的、常用的用法</p>\r\n<p>--基本</p>\r\n<p>find [搜索范围] [搜索条件] 文件名</p>\r\n<p>[root@andy ~]# find / -name install.log<br>/root/install.log</p>\r\n<p>会发现速度很慢——范围太大</p>\r\n<p>而且真实情况会更加复杂，有可能速度更慢，压力更大</p>\r\n<p><strong>——尽量缩小范围！</strong></p>\r\n<p>而且，如果打算进行模糊匹配，比如install.log.syslog。这个命令是查不到的，<strong>要进行通配符匹配，通配符是完全匹配</strong></p>\r\n<p>--通配符</p>\r\n<p>* 匹配任意内容</p>\r\n<p>[root@andy ~]# find /root -name \"install.log*\"<br>/root/install.log.syslog<br>/root/install.log</p>\r\n<p>? 匹配任意一个字符</p>\r\n<p>[] 匹配中括号中的任意一个字符</p>\r\n<p>[root@andy ~]# find /root -name \"*[asdf]?\"<br>/root/anaconda-ks.cfg<br>/root/.viminfo<br>/root/japan<br>/root/japan/anaconda-ks.cfg</p>\r\n<p><strong>要注意，find是完全匹配，要小心</strong></p>\r\n<p>--搜索条件</p>\r\n<p>-</p>\r\n<p>find /root -name  install.log  按照文件名搜索</p>\r\n<p>find /root -inname install.log   不区分大小写</p>\r\n<p>-</p>\r\n<p>find /root -user install.log  按照所有者搜索（不常用）</p>\r\n<p><strong>find /root -nouser 搜索所有没有所有者的文件（常用）——这种文件很多是垃圾文件，但是有两种情况除外——内核创建的（sys中）；外来文件（比如U盘）</strong></p>\r\n<p>-</p>\r\n<p>find /var/log -mtime +10  查找10天前修改的文件——atime 文件访问时间，mtime 修改文件时间，ctime 改变文件属性；+10 10天前修改的文件，-10 10天内，10 10天当天<strong>（注意没有10天后，哈哈）——常用于日志的删除/筛选中的（默认按天）</strong></p>\r\n<p>-</p>\r\n<p>find . -size 25k 在当前目录下搜索25k大小的文件——+25或-25也可以</p>\r\n<p>[root@andy ~]# <strong>find . -size 25k</strong><br>[root@andy ~]# ll<br>总用量 48<br>-rw-------. 2 root root  1273 11月 26 05:32 anaconda-ks.cfg<br>-rw-r--r--. 1 root root     0 11月 26 06:05 cangls<br>-rw-r--r--. 1 root root 26420 11月 25 03:55 install.log<br>-rw-r--r--. 1 root root  7572 11月 25 03:52 install.log.syslog<br>drwxr-xr-x. 3 root root  4096 11月 26 05:43 japan<br>[root@andy ~]# find . -size +25k<br>./install.log<br>[root@andy ~]# find . -size -25k<br>.<br>./.tcshrc<br>./anaconda-ks.cfg<br>./cangls<br>./install.log.syslog<br>./.bash_profile<br>./.bash_logout<br>./.bash_history<br>./.bashrc<br>./.viminfo<br>./.cshrc<br>./japan<br>./japan/anaconda-ks.cfg<br>./japan/cangls<br>[root@andy ~]# find . -size -25m<br>find: 无效的 -size 类型“m”<br>[root@andy ~]# find . -size -25M<br>.<br>./.tcshrc<br>./anaconda-ks.cfg<br>./cangls<br>./install.log.syslog<br>./.bash_profile<br>./.bash_logout<br>./.bash_history<br>./install.log<br>./.bashrc<br>./.viminfo<br>./.cshrc<br>./japan<br>./japan/anaconda-ks.cfg<br>./japan/cangls<br>[root@andy ~]# </p>\r\n<p><strong>注意Mb是大写的M，kb是小写的k</strong></p>\r\n<p>-</p>\r\n<p>find . -inum 213123 在当前目录按照i节点搜索213123的文件——常常搭配ls -i使用</p>\r\n<p>-复杂操作</p>\r\n<p><strong>find /etc -size +20k -a -size -50k 这里的-a是与，-o是或</strong></p>\r\n<p>[root@andy ~]# find /etc -size +20k -a -size -50k<br>/etc/selinux/targeted/modules/active/modules/unprivuser.pp<br>/etc/selinux/targeted/modules/active/modules/xguest.pp<br>/etc/selinux/targeted/modules/active/modules/virt.pp<br>/etc/selinux/targeted/modules/active/modules/postfix.pp<br>/etc/selinux/targeted/modules/active/modules/unconfineduser.pp<br>/etc/selinux/targeted/modules/active/modules/nagios.pp<br>/etc/selinux/targeted/modules/active/modules/cups.pp<br>/etc/selinux/targeted/modules/active/modules/rhcs.pp<br>/etc/selinux/targeted/modules/active/modules/apache.pp<br>/etc/selinux/targeted/modules/active/modules/staff.pp<br>/etc/selinux/targeted/modules/active/modules/samba.pp<br>/etc/mime.types<br>/etc/sysconfig/network-scripts/network-functions-ipv6<br>/etc/postfix/main.cf<br>/etc/ld.so.cache<br>/etc/libreport/events/report_RHTSupportAttach.xml<br>/etc/libreport/events/report_RHTSupport.xml<br>/etc/makedev.d/01linux-2.6.x<br>/etc/sound/events/gnome-2.soundlist</p>\r\n<p>-</p>\r\n<p>find /etc -size +20k -a -size -50k -exec ls -lh {} \\;</p>\r\n<p>[root@andy ~]#<strong> find /etc -size +20k -a -size -50k -exec ls -lh {} \\;</strong><br>-rw-------. 1 root root 37K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/unprivuser.pp<br>-rw-------. 1 root root 26K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/xguest.pp<br>-rw-------. 1 root root 24K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/virt.pp<br>-rw-------. 1 root root 31K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/postfix.pp<br>-rw-------. 1 root root 29K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/unconfineduser.pp<br>-rw-------. 1 root root 21K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/nagios.pp<br>-rw-------. 1 root root 21K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/cups.pp<br>-rw-------. 1 root root 26K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/rhcs.pp<br>-rw-------. 1 root root 27K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/apache.pp<br>-rw-------. 1 root root 42K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/staff.pp<br>-rw-------. 1 root root 24K 11月 25 03:46 /etc/selinux/targeted/modules/active/modules/samba.pp<br>-rw-r--r--. 1 root root 43K 9月  23 2011 /etc/mime.types<br>-rw-r--r--. 1 root root 30K 7月  22 2014 /etc/sysconfig/network-scripts/network-functions-ipv6<br>-rw-r--r--. 1 root root 27K 2月  20 2014 /etc/postfix/main.cf<br>-rw-r--r--. 1 root root 40K 11月 25 03:52 /etc/ld.so.cache<br>-rw-r--r--. 1 root root 23K 10月 16 2014 /etc/libreport/events/report_RHTSupportAttach.xml<br>-rw-r--r--. 1 root root 22K 10月 16 2014 /etc/libreport/events/report_RHTSupport.xml<br>-rw-r--r--. 1 root root 28K 11月 11 2010 /etc/makedev.d/01linux-2.6.x<br>-rw-r--r--. 1 root root 27K 11月 12 2010 /etc/sound/events/gnome-2.soundlist</p>\r\n<p>这里是用-exec加入第二条命令，执行前面的结果，而且必须加{} /;</p>\r\n<p>------总结</p>\r\n<p>就是find很强大，功能很多，灵活多变；同时带来了，使用复杂，速度不好定</p>\r\n<p><strong>3.4 grep命令</strong></p>\r\n<p>--基本</p>\r\n<p>搜索字符串：grep [选项] 字符串 文件名</p>\r\n<p>[root@andy ~]# grep \"size\" anaconda-ks.cfg<br>#part /boot --fstype=ext4 --size=200<br>#part swap --size=4000<br>#part /home --fstype=ext4 --size=2000<br>#part / --fstype=ext4 --grow --size=200</p>\r\n<p><strong>注意，搜索到的不是符合字符串的文件，而是文件中相应的字符串——与find区分</strong></p>\r\n<p>--选项</p>\r\n<p>-v 取反，即不包含字符串的</p>\r\n<p>-i 不区分大小写 </p>\r\n<p>--与find</p>\r\n<p>find：找文件+完全匹配+使用通配符匹配</p>\r\n<p>grep：找字符串+包含匹配+使用正则表达式匹配</p>\r\n<p>-------------------------------------------------------------------</p>\r\n<p><strong>二、PHP与MySQL</strong></p>\r\n<p>-----文章发布系统实践（一）-----</p>\r\n<p>理解php操作mysql的方法，熟悉掌握php的mysql函数</p>\r\n<p><strong>1、需求分析</strong></p>\r\n<p>1.1 后台管理系统</p>\r\n<p>管理-列表</p>\r\n<p>发布，修改，删除-程序</p>\r\n<p>1.2 前台展示系统</p>\r\n<p>文章列表，文章内容页</p>\r\n<p>1.3 数据库设计</p>\r\n<p>一个表即可，用于存放文章</p>\r\n<p>（我不想画表格，直接写数据库命令好了，但愿以后的我看得懂）</p>\r\n<p>CREATE TABLE article(</p>\r\n<p>id INT(11) PRIMARY KEY AUTO_INCREMENT,</p>\r\n<p>title CHAR(100) NOT NULL,</p>\r\n<p>author CHAR(50) NOT NULL,</p>\r\n<p>description VARCHAR(255) NOT NULL,</p>\r\n<p>content TEXT NOT NULL,</p>\r\n<p>dateline INT(11) NOT NULL DEFAULT 0</p>\r\n<p>);</p>\r\n<p>1.4 项目规划</p>\r\n<p>项目需要什么文件</p>\r\n<p><strong style=\"line-height: 1.5;\">2、后台管理系统</strong></p>\r\n<p><strong>2.1 创建配置文件和初始化文件</strong></p>\r\n<p> </p>\r\n<p> </p>\r\n<p>中午开会，没有睡午觉。。。早点回去看书睡觉了</p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:24:12', '0', '0', '0', '1', '84');
INSERT INTO `blog` VALUES ('3000', '中午游泳很海皮-linux&php ', '网络', '\n<p>　hi</p>\r\n<p>中午又去游泳了，其实本来打算是昨天去的，谁知天公不作美，周一都下雨。今天其实也一样的，有点小雨，不过游得到泳，比什么都好</p>\r\n<p>1、PHP&amp;MySQL</p>\r\n<p>-----PHP内置MySQL函数学习（三）-----</p>\r\n<p>准备工作</p>\r\n<p>&lt;?php<br>$con=mysqli_connect(\'localhost\',\'root\',\'\',\'info\');<br>if($con){<br>	echo \"连接成功\";<br>}else{<br>		echo \"shit\";<br>	}<br>//mysql_close($con);<br>if(mysqli_select_db($con, \'info\')){<br>	echo \"数据库选择成功\";<br>}else{<br>		echo \"shit2\";<br>	}<br>/*	</p>\r\n<p>----mysql_num_rows()</p>\r\n<p>获取结果集的行数</p>\r\n<p>$query=mysqli_query($con, \'select * from test\');//产生结果集</p>\r\n<p>echo mysqli_num_rows($query);</p>\r\n<p>用法简单粗暴，但用途还是比较灵活的，判断/输出</p>\r\n<p>----mysql-result</p>\r\n<p>返回结果集中一个字段的值</p>\r\n<p>mysqli似乎没有，补一部分</p>\r\n<p>---php中的PDO，mysql，mysqli</p>\r\n<p>PHP-MySQL 是 PHP 操作 MySQL 资料库最原始的 Extension ，PHP-MySQLi 的 i 代表 Improvement ，提更了相对进阶的功能，就 Extension 而言，本身也增加了安全性。而 PDO (PHP Data Object) 则是提供了一个 Abstraction Layer 来操作资料库</p>\r\n<p>具体的区别也讲不出，直接去搜了看看就好了</p>\r\n<p>----mysqli_affected_rows($con)</p>\r\n<p>受影响的行数</p>\r\n<p>一般做判断，比如，当插入的为一样的，显示为0；感觉，类似mysql的反馈</p>\r\n<p>明天开始小实践以下</p>\r\n<p>2、Linux </p>\r\n<p>虚拟机装东西还是麻烦。</p>\r\n<p>xshell终于弄好了，果然server界面的centos不是那么好整的，还好有贵人</p>\r\n<p>进入centos6后，输入用户名和密码，开始搞网络连接问题</p>\r\n<p>原网址忘了，自己写一点吧</p>\r\n<p>---</p>\r\n<p>vim /etc/sysconfig/network-scripts/ifcfg-eth0</p>\r\n<p>输入i进入编写模式</p>\r\n<p>把htcp还是什么的改成none，onboot项改成yes</p>\r\n<p>然后在下面输入IPADDR=192.168.0.10</p>\r\n<p>NETMASK=255.255.255.0</p>\r\n<p>GATEWAY=192.168.0.2</p>\r\n<p>这里的几个地址，都是我自己的网络的地址，查询方式是windows界面win+r，输入cmd，输入ipconfig/all</p>\r\n<p>找到对应的地址，如果是无线网络，就找无线网卡的，如果是有线就找有线的，总之就是要对应;如果换了网络，相应的配置也要变</p>\r\n<p>如果查到的地址是192.168.0.1</p>\r\n<p>那么在linux中输入就变为</p>\r\n<p> 192.168.0.a a不为1就行</p>\r\n<p>后面的网关是192.168.0.b b不等于1，不等于a</p>\r\n<p>然后回到虚拟机中的linux，按下esc，输入:wq，保存退出文件编写</p>\r\n<p>输入service network restart，重启网络服务</p>\r\n<p>然后到刚才的windows下的cmd窗口，输入ping 192.168.0.10（这是我自己设置的，你输入你自己的值好不好）</p>\r\n<p>如果成功，就是网络连接ok了</p>\r\n<p>至于xshell的设置，很简单</p>\r\n<p>新建连接，主机的位置输入192.168.0.10，然后记得去存储上用户名和密码，连接测试就行了</p>\r\n<p> </p>\r\n<p> </p>\r\n<p>搞定了xshell的心事，爽爽爽！不想写其他的了，linux玩起来啊～～～</p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:24:12', '0', '0', '0', '1', '84');
INSERT INTO `blog` VALUES ('3001', '有评论就是我最大的动力~MySQL基础篇完结（存储引擎和图形化管理工具） ', '网络', '\n<p>　　hi</p>\r\n<p>今天登上来，发现竟然有了3个评论~~加油吧！</p>\r\n<p>这周的计划其实远远没有达到，然后下周还有一大堆事情。。。那么。。。周末好好玩吧~</p>\r\n<p>今天试图完结MySQL的基础篇知识，小白变为大白？</p>\r\n<p><strong>1、MySQL</strong></p>\r\n<p><strong>-----存储引擎（入门）-----</strong></p>\r\n<p><strong>----简介</strong></p>\r\n<p> </p>\r\n<p><strong>---直观的例子</strong></p>\r\n<p>mysql&gt; SHOW CREATE TABLE test;<br>+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+<br>| Table | Create Table                                                                                                                                                                                  |<br>+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+<br>| test  | CREATE TABLE `test` (<br>  `id` tinyint(3) unsigned NOT NULL AUTO_INCREMENT,<br>  `username` varchar(20) DEFAULT NULL,<br>  PRIMARY KEY (`id`)<br>) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=latin1 |<br>+-------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+<br>1 row in set (0.04 sec)</p>\r\n<p>这里的ENGINE=InnoDB就是一个/种存储引擎</p>\r\n<p>---</p>\r\n<p>MySQL可以将数据以不同的技术存储在文件/内存中，这种技术就是存储引擎（也就是说，存储引擎就是一种技术，一种存储技术）</p>\r\n<p>各种引擎功能不一样，源于存储机制、索引技巧、锁定水平的不同</p>\r\n<p>又称为表类型</p>\r\n<p>---</p>\r\n<p>MySQL支持的主要有</p>\r\n<p>MyISAM，InnoDB，Memory，CSV，Archive</p>\r\n<p><strong>----知识点-并发处理</strong></p>\r\n<p>当多个连接对记录进行修改时保证数据的一致性和完整性</p>\r\n<p>比如处理多个用户对同一条记录的请求————常用的为共享锁（读锁）（多个用户可以读取同一个资源，读取过程中数据不会发生任何变化），排它锁（写锁）（在任何时候只能有一个用户写入资源，进行写锁时会阻塞其他读锁或写锁操作）</p>\r\n<p>加锁，要注意只针对最正确的对象（对象不能太大太小）——表锁（是一种开销最小的锁策略），行锁（开销最大）</p>\r\n<p><strong>----知识点-事务处理</strong></p>\r\n<p>用于保证数据库的完整性</p>\r\n<p>满足：ACID（原子性，一致性，隔离性，持久性）</p>\r\n<p><strong>----知识点-外键</strong></p>\r\n<p>保证数据一致性的策略（在之前讲各种键的那里讲过的）</p>\r\n<p><strong>----知识点-索引</strong></p>\r\n<p>对数据表中一列或多列的值进行排序的一种结构（类似目录的功能）</p>\r\n<p>实现快速的查询</p>\r\n<p><strong>----各种引擎的特点</strong></p>\r\n<p>MyISAM：256TB，支持索引，表锁，支持数据压缩——适用于事务不多的情况</p>\r\n<p>InnoDB：64TB，支持事务安全（这是常选用该引擎的原因），支持索引，行锁，支持外键（同样只有该引擎支持这一项）——高大上</p>\r\n<p>Memory：有存储限制（由内存大小决定），支持索引，表锁</p>\r\n<p>Archive：无存储限制，支持索引，表锁，支持数据压缩</p>\r\n<p>索引的类型还有不同，再说。</p>\r\n<p>其他的：CSV不支持索引，Blackhole用作数据复制的中继（类似阅后即焚）</p>\r\n<p>用的最多的是前两个。</p>\r\n<p><strong>----设置存储引擎</strong></p>\r\n<p>---my.ini修改</p>\r\n<p>default-storage-engine=...</p>\r\n<p>---CREATE TABLE table(</p>\r\n<p>...</p>\r\n<p>举例子如下</p>\r\n<p>mysql&gt; CREATE TABLE tp1(<br>    -&gt; s1 VARCHAR(20)<br>    -&gt; )ENGINE=MyISAM;<br>Query OK, 0 rows affected (0.10 sec)</p>\r\n<p>mysql&gt; SHOW CREATE TABLE tp1;<br>+-------+---------------------------------------------------------------------------------------------+<br>| Table | Create Table                                                                                |<br>+-------+---------------------------------------------------------------------------------------------+<br>| tp1   | CREATE TABLE `tp1` (<br>  `s1` varchar(20) DEFAULT NULL<br>) ENGINE=MyISAM DEFAULT CHARSET=latin1 |<br>+-------+---------------------------------------------------------------------------------------------+<br>1 row in set (0.00 sec)</p>\r\n<p>mysql&gt; ALTER TABLE tp1 ENGINE=InnoDB;<br>Query OK, 0 rows affected (0.35 sec)<br>Records: 0  Duplicates: 0  Warnings: 0</p>\r\n<p>mysql&gt; SHOW CREATE TABLE tp1;<br>+-------+---------------------------------------------------------------------------------------------+<br>| Table | Create Table                                                                                |<br>+-------+---------------------------------------------------------------------------------------------+<br>| tp1   | CREATE TABLE `tp1` (<br>  `s1` varchar(20) DEFAULT NULL<br>) ENGINE=InnoDB DEFAULT CHARSET=latin1 |<br>+-------+---------------------------------------------------------------------------------------------+<br>1 row in set (0.00 sec)</p>\r\n<p><strong>-----图形化管理工具-----</strong></p>\r\n<p><strong>----PHPMyAdmin</strong></p>\r\n<p>由于我的是wamp集成环境，可以直接登陆到phpmyadmin</p>\r\n<p>正常的是要到phpmyadmin官网下载对应自己用的php版本的</p>\r\n<p>下载安装好也是要到网页端进行操作的，毕竟是放在服务器端的东西</p>\r\n<p>能够可视化的进行数据库、数据表、数据的操作，感觉上，不是很习惯，个人还是喜欢用命令的方式。不过可视化的方便查找错误什么的吧，还需要再去体会理解</p>\r\n<p>----Navicat</p>\r\n<p>有中文版客户端的</p>\r\n<p>----MySQL Workbench</p>\r\n<p>官网提供的客户端</p>\r\n<p>不打算具体说，网上查得到，而且多摸摸就会了</p>\r\n<p><strong> 2、AJAX</strong></p>\r\n<p><strong>-----简介-----</strong></p>\r\n<p><strong>中文名：异步的Javascript和XML（异步请求，局部刷新）</strong></p>\r\n<p>是一种无需重新加载整个网页而可以更新部分页面的<strong>技术</strong></p>\r\n<p>改变了web的格局</p>\r\n<p>预备知识：CSS，HTML，JS</p>\r\n<p><strong>----同步和异步</strong></p>\r\n<p>同步：（原来的技术）客户端请求后服务器响应处理后返回处理结果，整个过程中客户端一直在等待——同步指的是，客户端和服务器端同步进行处理</p>\r\n<p>异步：（举个例子，填写注册信息的时候，填了邮箱，然后输入框右侧很快给出一个绿色的对号）客户端有变化的时候，（似乎）立即发送请求到处理器端，然后处理器端处理后返回结果，这个过程中，客户端仍在进行其他操作<strong>——客户端、服务器端的异步操作</strong></p>\r\n<p>技术区别：在于缺少XMLHttpRequest这个对象——用于后台和服务器进行数据的交换</p>\r\n<p>过程简介：HTML&amp;CSS来实现页面，表达信息+XHR进行数据的异步交换+JavaScript操作DOM实现动态局部刷新</p>\r\n<p><strong>----XMLHttpRequest（XHR）对象创建</strong></p>\r\n<p>实例化XHR：var request=new XMLHttpRequest();</p>\r\n<p>除了IE6及以前版本的浏览器都支持XHR</p>\r\n<p><strong>----HTTP请求</strong></p>\r\n<p>http是计算机通过网络进行通信的规则/协议，是一种无状态（不保留状态/无记忆）的协议</p>\r\n<p>http请求的步骤：建立TCP连接-》浏览器“喊向”服务器-》服务器应答-》服务器回答-》关闭连接</p>\r\n<p>请求和响应有各自的格式，详细可以查《计算机网络》或者类似书籍，大概知道有GET/POST啊什么的就可以暂时继续</p>\r\n<p>注意：GET是用URL传递数据，是全部可见的（明文），而且有字符数限制，优点是简单、安全且可以保存为书签等</p>\r\n<p>响应后在浏览器有状态码要适当了解：主要看首位——1xx，信息类，表示正在处理；2xx，成功；3xx，重定向，表示请求不成功，需要客户进一步动作；4xx，客户端错误，表示客户端提交的请求有错误，比如404 NOT FOUND，意味着请求中所引用的文档不存在；5xx，服务器错误————有助于web程序的调试，背一下</p>\r\n<p> </p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:24:12', '0', '0', '0', '1', '84');
INSERT INTO `blog` VALUES ('3002', '基本开题的感觉是了-MySQL继续继续（自定义函数&存储过程） ', '网络', '\n<p>　　hi</p>\r\n<p>感觉论文开题基本确定了，凯森</p>\r\n<p>1、MySQL</p>\r\n<p>-----自定义函数-----</p>\r\n<p>----基本</p>\r\n<p>两个必要条件：参数和返回值（两者没有必然联系，参数不一定有，返回一定有）</p>\r\n<p>函数体：合法的SQL语句；以及简单的SELECT或INSERT语句；如果为复合结构则使用BEGIN...END语句</p>\r\n<p>----不带参数的自定义函数</p>\r\n<p>把当前时刻转换为中文显示，效果如下</p>\r\n<p>mysql&gt; SET NAMES gbk;<br>Query OK, 0 rows affected (0.05 sec)</p>\r\n<p>mysql&gt; SELECT DATE_FORMAT(NOW(),\'%Y年%m月%d日 %h点:%I分:%s秒\');<br>+--------------------------------------------------+<br>| DATE_FORMAT(NOW(),\'%Y年%m月%d日 %h点:%I分:%s秒\') |<br>+--------------------------------------------------+<br>| 2015年11月11日 07点:07分:39秒                    |<br>+--------------------------------------------------+<br>1 row in set (0.00 sec)</p>\r\n<p>把这个功能写成函数f1()</p>\r\n<p>mysql&gt; CREATE FUNCTION f1() RETURNS VARCHAR(30)<br>    -&gt; RETURN DATE_FORMAT(NOW(),\'%y年%m月%d日 %h点:%I分:%s秒\');<br>Query OK, 0 rows affected (0.05 sec)</p>\r\n<p>调用</p>\r\n<p>mysql&gt; SELECT f1();</p>\r\n<p>----带有参数的函数</p>\r\n<p>mysql&gt; CREATE FUNCTION f2(num1 SMALLINT UNSIGNED,num2 SMALLINT UNSIGNED)<br>    -&gt; RETURNS FLOAT(10,2) UNSIGNED<br>    -&gt; RETURN (num1+num2);<br>Query OK, 0 rows affected (0.00 sec)</p>\r\n<p>mysql&gt; SELECT f2(32,33);<br>+-----------+<br>| f2(32,33) |<br>+-----------+<br>|     65.00 |<br>+-----------+<br>1 row in set (0.03 sec)</p>\r\n<p>我就不解释了，都看的懂</p>\r\n<p>----具有复合结构体的函数</p>\r\n<p>复合结构的函数往往意味着有多条语句要实现。比如往以下数据库中，创建函数实现插入参数作为新的username，返回最后插入字段的id</p>\r\n<p>mysql&gt; DESC test;<br>+----------+---------------------+------+-----+---------+----------------+<br>| Field    | Type                | Null | Key | Default | Extra          |<br>+----------+---------------------+------+-----+---------+----------------+<br>| id       | tinyint(3) unsigned | NO   | PRI | NULL    | auto_increment |<br>| username | varchar(20)         | YES  |     | NULL    |                |<br>+----------+---------------------+------+-----+---------+----------------+</p>\r\n<p>mysql&gt; SELECT * FROM test;<br>+----+----------+<br>| id | username |<br>+----+----------+<br>|  1 | 111      |<br>|  2 | JOHN     |<br>+----+----------+</p>\r\n<p>实现的时候会发现，如果直接写，会有两句话是要打分号的，不合适，改！</p>\r\n<p>mysql&gt; DELIMITER //</p>\r\n<p>把结束符号改为//</p>\r\n<p>实际函数就是</p>\r\n<p>mysql&gt; CREATE FUNCTION adduser(username VARCHAR(20))<br>    -&gt; RETURNS INT UNSIGNED<br>    -&gt; BEGIN<br>    -&gt; INSERT test(username) VALUES(username);<br>    -&gt; RETURN LAST_INSERT_ID();<br>    -&gt; END<br>    -&gt; //</p>\r\n<p>调用检查</p>\r\n<p>mysql&gt; SELECT adduser(\'Rose\')//<br>+-----------------+<br>| adduser(\'Rose\') |<br>+-----------------+<br>|               3 |<br>+-----------------+</p>\r\n<p>当然这时候可以改回来定界符</p>\r\n<p>mysql&gt; DELIMITER ;<br>mysql&gt; SELECT adduser(\'Rose2\');<br>+------------------+<br>| adduser(\'Rose2\') |<br>+------------------+<br>|                4 |<br>+------------------+</p>\r\n<p>----最后一点说明</p>\r\n<p>一般不会用到自定义函数，很少用，用好自带函数就好</p>\r\n<p>-----MySQL存储过程-----</p>\r\n<p> ----简介</p>\r\n<p>一般的目的是提高MySQL的效率，去掉或者缩减其自身的存储过程</p>\r\n<p>存储过程的定义是：它是SQL语句和控制语句的预编译集合，以一个名称存储并作为一个单元处理（实际理解就是说把一系列，当然也可以是某一个，操作合并/封装为一个操作；又由于这是在MySQL中的，数据库一般的操作成为存储，所以称为存储过程）</p>\r\n<p>采用存储过程后，只有在第一次进行语法检查和编译，以后用户再调用就省去这两步，效率提高</p>\r\n<p>---</p>\r\n<p>优点：增强SQL语句的功能和灵活性；较快的执行速度（如上）；减少网络流量（即缩减命令的长度）；</p>\r\n<p>----结构解析/创建</p>\r\n<p>类似创建自定义函数，参数处不太一样</p>\r\n<p>---参数</p>\r\n<p>给参数可以赋值类型IN OUT INOUT</p>\r\n<p>IN表示该参数的值必须在调用存储过程时指定，且不能返回</p>\r\n<p>OUT表示~~~可以被存储过程改变，且可以返回</p>\r\n<p>INOUT表示~~~在调用时指定，且可以被改变和返回</p>\r\n<p>---结构体</p>\r\n<p>类似函数体</p>\r\n<p>可以是任意的SQL语句构成</p>\r\n<p>复合结构也得用BEGIN...END</p>\r\n<p>可以声明，循环等</p>\r\n<p>----不带参数的存储过程</p>\r\n<p>mysql&gt; CREATE PROCEDURE sp1() SELECT VERSION();<br>Query OK, 0 rows affected (0.00 sec)</p>\r\n<p>mysql&gt; SELECT sp1();<br>ERROR 1305 (42000): FUNCTION test.sp1 does not exist<br>mysql&gt; CALL sp1();<br>+-----------+<br>| VERSION() |<br>+-----------+<br>| 5.6.17    |<br>+-----------+</p>\r\n<p>存储过程的调用时CALL，且有两种调用方法-带或者不带括号</p>\r\n<p>----带有IN类型参数的存储过程</p>\r\n<p>删除记录的存储过程，通过id来删除</p>\r\n<p>mysql&gt; DELIMITER //<br>mysql&gt; CREATE PROCEDURE removeUserById(IN id INT UNSIGNED)<br>    -&gt; BEGIN<br>    -&gt; DELETE FROM test WHERE id=id;<br>    -&gt; END<br>    -&gt; //<br>Query OK, 0 rows affected (0.04 sec)</p>\r\n<p>mysql&gt; DELIMITER ;</p>\r\n<p>注意这里的id=id，前者是表中的id，后者是传递的参数，是可以这么写的（？）</p>\r\n<p>还有要注意这里的习惯，DELIMITER开头结尾+BEGIN...END语句的写法</p>\r\n<p>调用</p>\r\n<p>mysql&gt; CALL removeUserById(3);</p>\r\n<p>Query OK, 4 rows affected (0.05 sec)</p>\r\n<p>注意，有参数的过程，不能省略小括号</p>\r\n<p>这里，数据中所有记录都被删除。所以一般<strong>过程的参数不要和数据表中字段名相同！</strong></p>\r\n<p>这里的修改只能是删除过程再重建个正确的。DROP PROCEDURE REMOVEUSERBYID;</p>\r\n<p>----带有IN和OUT参数</p>\r\n<p>过程定义为：删除某id的记录，返回剩余记录数量</p>\r\n<p>和写正则表达式等的流程差不多，先考虑需求：两个操作，返回一个值，传递进一个值，所以两个参数，一个IN，一个OUT</p>\r\n<p>mysql&gt; DELIMITER //<br>mysql&gt; CREATE PROCEDURE REMOVEIDRETURNLENGTH(IN p_id INT UNSIGNED,OUT usernums INT UNSIGNED)<br>    -&gt; BEGIN<br>    -&gt; DELETE FROM test WHERE id=p_id;<br>    -&gt; SELECT count(id) FROM test INTO usernums;<br>    -&gt; END<br>    -&gt; //<br>Query OK, 0 rows affected (0.02 sec)</p>\r\n<p>mysql&gt; DELIMITER ;</p>\r\n<p>调用</p>\r\n<p>mysql&gt; CALL REMOVEIDRETURNLENGTH(3,@NUMS);<br>Query OK, 1 row affected (0.03 sec)</p>\r\n<p>mysql&gt; SELECT @NUMS;<br>+-------+<br>| @NUMS |<br>+-------+<br>|     4 |<br>+-------+<br>1 row in set (0.00 sec)</p>\r\n<p>这里的@nums是变量</p>\r\n<p>mysql&gt; SET @QQ=2;<br>Query OK, 0 rows affected (0.00 sec)</p>\r\n<p>这种变量称为用户变量，仅对当前用户有效，带有@符号</p>\r\n<p>----带有多个OUT参数的过程</p>\r\n<p>比如一个拥有很多字段的数据表</p>\r\n<p>实现过程：删除某个id的字段，返回被删除的用户，以及返回剩余的用户</p>\r\n<p>DELIMITER //</p>\r\n<p>CREATE PROCEDURE removereturn2(IN p_age SMALLINT UNSIGNED,OUT remove_user SMALLINT UNSIGNED,OUT usercount SMALLINT UNSIGNED)</p>\r\n<p>BEGIN</p>\r\n<p>DELETE FROM test WHERE age=p_age;</p>\r\n<p>SELECT ROW_COUNT() INTO REMOVE_USER;</p>\r\n<p>SELECT COUNT(ID) FROM test INTO USERCOUNT;</p>\r\n<p>END</p>\r\n<p>//</p>\r\n<p>DELIMITER ;</p>\r\n<p>其中，ROW_COUNT是个自带函数</p>\r\n<p>CALL REMOVERETURN2(20,@A,@B);</p>\r\n<p>SELECT @A,@B;</p>\r\n<p>需要注意的是，由于过程的创建后不能修改，第一次创建尽量不要错，要不就不要怕麻烦</p>\r\n<p>----存储过程和自定义函数的区别</p>\r\n<p>存储过程功能复杂一些，常用于对表的操作；函数一般不用做对表的操作</p>\r\n<p>~~~~可以返回多个值；函数一般返回一个值</p>\r\n<p>~~~~一般独立的来执行；函数可以作为其他SQL语句的组成部分来出现</p>\r\n<p>~~~~常用，来封装复杂过程；函数很少用</p>\r\n<p>2、PHP与MySQL</p>\r\n<p>明天开始学习PHP中常用的MySQL函数（？）</p>\r\n<p> </p>\r\n<p>bye</p>\r\n<p> </p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:25:27', '0', '0', '0', '1', '84');
INSERT INTO `blog` VALUES ('3003', '贤者时间太久了么？--MySQL继续玩 ', '网络', '\n<p>hi</p>\r\n<p>给自己放了大概三天的假，没有一点点防备，没有一点点准备，无意的</p>\r\n<p>是不是贤者时间过不去了我不知道啊。。。继续看东西吧</p>\r\n<p>1、MySQL</p>\r\n<p>-----运算符和函数-----</p>\r\n<p>字符函数，数值运算符，比较运算等</p>\r\n<p>----字符函数</p>\r\n<p>---</p>\r\n<p>CONCAT()--字符连接</p>\r\n<p>CONCAT_WS()--使用指定的分隔符进行字符连接</p>\r\n<p>mysql&gt; SELECT CONCAT(\'imooc\',\'-\',\'MySQL\');<br>+-----------------------------+<br>| CONCAT(\'imooc\',\'-\',\'MySQL\') |<br>+-----------------------------+<br>| imooc-MySQL                 |<br>+-----------------------------+</p>\r\n<p>mysql&gt; USE TEST;<br>Database changed<br>mysql&gt; SELECT * FROM TEST;<br>+----+----------+<br>| id | username |<br>+----+----------+<br>|  1 | Tom      |<br>|  2 | Ben      |<br>+----+----------+<br>2 rows in set (0.02 sec)</p>\r\n<p>mysql&gt; SELECT CONCAT(id,username) AS fullname FROM test;<br>+----------+<br>| fullname |<br>+----------+<br>| 1Tom     |<br>| 2Ben     |<br>+----------+</p>\r\n<p>以上是CONCAT()的实例，而CONCAT_WS()如下</p>\r\n<p>mysql&gt; SELECT CONCAT_WS(\'-\',id,username) FROM test;<br>+----------------------------+<br>| CONCAT_WS(\'-\',id,username) |<br>+----------------------------+<br>| 1-Tom                      |<br>| 2-Ben                      |<br>+----------------------------+</p>\r\n<p>CONCAT_WS()需要至少三个参数，第一个是分隔符，后面才是需要连接的东西</p>\r\n<p>---</p>\r\n<p>FORMAT()，数字格式化</p>\r\n<p>mysql&gt; SELECT FORMAT(234234.23423,2);<br>+------------------------+<br>| FORMAT(234234.23423,2) |<br>+------------------------+<br>| 234,234.23             |<br>+------------------------+</p>\r\n<p>就是标准化，当然是外国人那一套</p>\r\n<p>---</p>\r\n<p>LOWER()&amp;UPPER()，大小写变换</p>\r\n<p>---</p>\r\n<p>LEFT()&amp;RIGHT()，获取左右侧字符</p>\r\n<p>需要两位参数,从哪个字段取，从第几位开始的左右侧</p>\r\n<p>mysql&gt; SELECT UPPER(LEFT(\'andy\',1));<br>+-----------------------+<br>| UPPER(LEFT(\'andy\',1)) |<br>+-----------------------+<br>| A                     |<br>+-----------------------+</p>\r\n<p>---</p>\r\n<p>LENGTH()，获取字符串长度。注意，空格也要算在内</p>\r\n<p>---</p>\r\n<p>LTRIM(),RTRIM(),TRIM()，删除前/后/前后的空格</p>\r\n<p>TRIM还能删除其他字符</p>\r\n<p>mysql&gt; SELECT TRIM(LEADING \'!\' FROM \'!!!ANDY!!\');<br>+------------------------------------+<br>| TRIM(LEADING \'!\' FROM \'!!!ANDY!!\') |<br>+------------------------------------+<br>| ANDY!!                             |<br>+------------------------------------+<br>1 row in set (0.00 sec)</p>\r\n<p>mysql&gt; SELECT TRIM(BOTH \'!\' FROM \'!!!ANDY!!\');<br>+---------------------------------+<br>| TRIM(BOTH \'!\' FROM \'!!!ANDY!!\') |<br>+---------------------------------+<br>| ANDY                            |<br>+---------------------------------+<br>1 row in set (0.00 sec)</p>\r\n<p>mysql&gt; SELECT TRIM(TRAILING \'!\' FROM \'!!!ANDY!!\');<br>+-------------------------------------+<br>| TRIM(TRAILING \'!\' FROM \'!!!ANDY!!\') |<br>+-------------------------------------+<br>| !!!ANDY                             |<br>+-------------------------------------+<br>1 row in set (0.00 sec)</p>\r\n<p>---</p>\r\n<p>REPLACE()</p>\r\n<p>mysql&gt; SELECT REPLACE(\'!!ANDY!SDL!!\',\'!\',\'\');<br>+--------------------------------+<br>| REPLACE(\'!!ANDY!SDL!!\',\'!\',\'\') |<br>+--------------------------------+<br>| ANDYSDL                        |<br>+--------------------------------+<br>1 row in set (0.00 sec)</p>\r\n<p>mysql&gt; SELECT REPLACE(\'!!ANDY!SDL!!\',\'!\',\'LALAL\');<br>+-------------------------------------+<br>| REPLACE(\'!!ANDY!SDL!!\',\'!\',\'LALAL\') |<br>+-------------------------------------+<br>| LALALLALALANDYLALALSDLLALALLALAL    |<br>+-------------------------------------+<br>1 row in set (0.00 sec)</p>\r\n<p>可以看到，替换是比较灵活的</p>\r\n<p>---</p>\r\n<p>SUBSTRING()</p>\r\n<p>mysql&gt; SELECT SUBSTRING(\'MYSQL\',\'1\',\'2\');<br>+----------------------------+<br>| SUBSTRING(\'MYSQL\',\'1\',\'2\') |<br>+----------------------------+<br>| MY                         |<br>+----------------------------+<br>1 row in set (0.00 sec)</p>\r\n<p>注意mysql是从1开始，不是从0开始数数</p>\r\n<p>---</p>\r\n<p>做匹配</p>\r\n<p>mysql&gt; SELECT \'mysql\' LIKE \'M%\';<br>+-------------------+<br>| \'mysql\' LIKE \'M%\' |<br>+-------------------+<br>|                 1 |<br>+-------------------+<br>1 row in set (0.00 sec)</p>\r\n<p>mysql&gt; SELECT * FROM test WHERE username LIKE \'%m%\';<br>+----+----------+<br>| id | username |<br>+----+----------+<br>|  1 | Tom      |<br>+----+----------+</p>\r\n<p>这里，%代表任意，类似window中的*</p>\r\n<p>_代表任意一个字符</p>\r\n<p>----数值运算符以及函数</p>\r\n<p>几个很通用的函数简单的介绍下</p>\r\n<p>CEIL()-向上取整---------FLOOR()-向下取整</p>\r\n<p>DIV()-整数除法，也就是结果只有整数</p>\r\n<p>MOD()-取余数</p>\r\n<p>POWER()-幂运算</p>\r\n<p>ROUND()-四舍五入</p>\r\n<p>TRUNCATE()-数字截取（不再四舍五入）</p>\r\n<p>不是两位参数，就是一位参数，大家自己试试哈</p>\r\n<p>----比较运算符与函数</p>\r\n<p>---</p>\r\n<p>[NOT] BETWEEN...AND...</p>\r\n<p>mysql&gt; SELECT 123 BETWEEN 2 AND 123123;<br>+--------------------------+<br>| 123 BETWEEN 2 AND 123123 |<br>+--------------------------+<br>|                        1 |<br>+--------------------------+</p>\r\n<p>---</p>\r\n<p>[NOT] IN()，给定几个区间来做判断</p>\r\n<p>mysql&gt; SELECT 123 IN(123,23,12);<br>+-------------------+<br>| 123 IN(123,23,12) |<br>+-------------------+<br>|                 1 |<br>+-------------------+<br>1 row in set (0.00 sec)</p>\r\n<p>mysql&gt;  SELECT 123 IN(120,23,12);<br>+-------------------+<br>| 123 IN(120,23,12) |<br>+-------------------+<br>|                 0 |<br>+-------------------+</p>\r\n<p>---</p>\r\n<p>IS [NOT] NULL,判断是空么</p>\r\n<p>mysql&gt; SELECT 0 IS NULL;<br>+-----------+<br>| 0 IS NULL |<br>+-----------+<br>|         0 |<br>+-----------+</p>\r\n<p>常用在检查是否为空</p>\r\n<p>mysql&gt; SELECT * FROM test WHERE username IS NULL;<br>Empty set (0.00 sec)</p>\r\n<p>----日期时间函数</p>\r\n<p>---</p>\r\n<p>NOW()，返回当时的日期和时间</p>\r\n<p>CURDATE(),CURTIME()</p>\r\n<p>---</p>\r\n<p>DATE_ADD()，当前日期的变化</p>\r\n<p>mysql&gt; SELECT DATE_ADD(\'2012-2-23\', INTERVAL 234 DAY);<br>+-----------------------------------------+<br>| DATE_ADD(\'2012-2-23\', INTERVAL 234 DAY) |<br>+-----------------------------------------+<br>| 2012-10-14                              |<br>+-----------------------------------------+<br>1 row in set (0.00 sec)</p>\r\n<p>mysql&gt; SELECT DATE_ADD(\'2012-2-23\', INTERVAL -234 DAY);<br>+------------------------------------------+<br>| DATE_ADD(\'2012-2-23\', INTERVAL -234 DAY) |<br>+------------------------------------------+<br>| 2011-07-04                               |<br>+------------------------------------------+<br>1 row in set (0.00 sec)</p>\r\n<p>---</p>\r\n<p>DATEDIFF()，得到两个日期间的差值</p>\r\n<p>mysql&gt; SELECT DATEDIFF(\'2304-2-2\',\'1234-3-22\');<br>+----------------------------------+<br>| DATEDIFF(\'2304-2-2\',\'1234-3-22\') |<br>+----------------------------------+<br>|                           390760 |<br>+----------------------------------+<br>1 row in set (0.02 sec)</p>\r\n<p>---</p>\r\n<p>DATE_FORMAT()，日期的格式化，日期的格式是可以选的，也就是说日期的格式转换</p>\r\n<p>mysql&gt; SELECT DATE_FORMAT(\'2013-2-22\',\'%m/%d/%y\');<br>+-------------------------------------+<br>| DATE_FORMAT(\'2013-2-22\',\'%m/%d/%y\') |<br>+-------------------------------------+<br>| 02/22/13                            |<br>+-------------------------------------+<br>1 row in set (0.00 sec)</p>\r\n<p>----信息函数</p>\r\n<p>USER(),VERSION(),DATEBASE(),CONNECTION_ID(),LAST_INSERT_ID()</p>\r\n<p>----聚合函数</p>\r\n<p>只有一个返回值是他们的特点</p>\r\n<p>AVG(),COUNT(),MAX(),MIN(),SUM()</p>\r\n<p>直接调用可能会有错误，一般是针对数据表的字段进行的操作</p>\r\n<p>mysql&gt; SELECT AVG(id) FROM test;<br>+---------+<br>| AVG(id) |<br>+---------+<br>|  1.5000 |<br>+---------+</p>\r\n<p>----加密函数</p>\r\n<p>MD5(),PASSWORD()</p>\r\n<p>mysql&gt; SELECT MD5(\'HELLOWORLD\');<br>+----------------------------------+<br>| MD5(\'HELLOWORLD\')                |<br>+----------------------------------+<br>| e81e26d88d62aba9ab55b632f25f117d |<br>+----------------------------------+<br>1 row in set (0.00 sec)</p>\r\n<p>mysql&gt; SELECT PASSWORD(\'HELLOWORLD\');<br>+-------------------------------------------+<br>| PASSWORD(\'HELLOWORLD\')                    |<br>+-------------------------------------------+<br>| *3456E7782A7F539BC823C715DB60231B0C7DE847 |<br>+-------------------------------------------+<br>1 row in set (0.00 sec)</p>\r\n<p>一般而言，网页的编程用的都是MD5，password仅仅用于修改当前用户的密码</p>\r\n<p>----</p>\r\n<p>注重自带函数的熟悉、了解，灵活的调用和嵌套运用</p>\r\n<p> </p>\r\n<p> </p>\r\n<p>今天烦躁，不想看。。。回去看电影了</p>\r\n<p> </p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:25:27', '0', '0', '0', '1', '84');
INSERT INTO `blog` VALUES ('3004', '又是周六了-MySQL特训 ', '网络', '\n<p>　　hi</p>\r\n<p>又是周六，又是磨蹭个一上午~午饭后开始吧</p>\r\n<p>1、MySQL</p>\r\n<p>-----子查询与连接（三）-----</p>\r\n<p>----使用INSERT...SELECT插入记录</p>\r\n<p>--数据库内容的英文版本</p>\r\n<p>由于我的WAMP中的MYSQL控制台显示中文无力，在更改过程中心力交瘁，遂改变战术，把数据改为了全英文的，现分享出来</p>\r\n<p>-- 创建数据表</p>\r\n<p> CREATE TABLE IF NOT EXISTS goods(<br>    goods_id    SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,<br>    goods_name  VARCHAR(150) NOT NULL,<br>    goods_cate  VARCHAR(40)  NOT NULL,<br>    brand_name  VARCHAR(40)  NOT NULL,<br>    goods_price DECIMAL(15,3) UNSIGNED NOT NULL DEFAULT 0,<br>    is_show     BOOLEAN NOT NULL DEFAULT 1,<br>    is_saleoff  BOOLEAN NOT NULL DEFAULT 0<br>  );</p>\r\n<p> -- 写入记录</p>\r\n<p> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'R510VC 15.6Inches Laptop\',\'Laptop\',\'ASUS\',\'3399\',DEFAULT,DEFAULT);<br><br> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'Y400N 14.0Inches Laptop\',\'Laptop\',\'Lenovo\',\'4899\',DEFAULT,DEFAULT);<br><br> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'G150TH 15.6Inches Gamebook\',\'Gamebook\',\'ThunderGod\',\'8499\',DEFAULT,DEFAULT);<br><br> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'X550CC 15.6Inches Laptop\',\'Laptop\',\'ASUS\',\'2799\',DEFAULT,DEFAULT);<br><br> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'X240(20ALA0EYCD) 12.5InchesUltrabook\',\'Ultrabook\',\'Lenovo\',\'4999\',DEFAULT,DEFAULT);<br><br> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'U330P 13.3Inches Ultrabook\',\'Ultrabook\',\'Lenovo\',\'4299\',DEFAULT,DEFAULT);<br><br> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'SVP13226SCB 13.3Inches Touch Ultrabook\',\'Ultrabook\',\'Sony\',\'7999\',DEFAULT,DEFAULT);<br><br> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'iPad mini MD531CH/A 7.9Inches Tablet\',\'Tablet\',\'Apple\',\'1998\',DEFAULT,DEFAULT);<br><br> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'iPad Air MD788CH/A 9.7Inches Tablet （16G WiFi Vision）\',\'Tablet\',\'Apple\',\'3388\',DEFAULT,DEFAULT);<br><br> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\' iPad mini ME279CH/A with Retina screen 7.9InchesTablet （16G WiFi Vision）\',\'Tablet\',\'Apple\',\'2788\',DEFAULT,DEFAULT);<br><br> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'IdeaCentre C340 20Inches All-in-one \',\'Desktop\',\'Lenovo\',\'3499\',DEFAULT,DEFAULT);<br><br> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'Vostro 3800-R1206 desktop\',\'Desktop\',\'Dell\',\'2899\',DEFAULT,DEFAULT);<br><br> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'iMac ME086CH/A 21.5Inches All-in-one\',\'Desktop\',\'Apple\',\'9188\',DEFAULT,DEFAULT);<br><br> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'AT7-7414LP Desktop （i5-3450 4G 500G 2GIndependent graphics card DVD Keyboard&amp;Mouse Linux ）\',\'Desktop\',\'Acer\',\'3699\',DEFAULT,DEFAULT);<br><br> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'Z220SFF F4F06PAWork station\',\'server/Work station\',\'HP\',\'4288\',DEFAULT,DEFAULT);<br><br> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'PowerEdge T110 IIserver\',\'server/Work station\',\'Dell\',\'5388\',DEFAULT,DEFAULT);<br><br> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'Mac Pro MD878CH/A Professional Desktop\',\'server/Work station\',\'Apple\',\'28888\',DEFAULT,DEFAULT);<br><br> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\' HMZ-T3W Headset Display Device\',\'Laptop accessory\',\'Sony\',\'6999\',DEFAULT,DEFAULT);</p>\r\n<p> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'Business Backpage\',\'Laptopaccessory\',\'Sony\',\'99\',DEFAULT,DEFAULT);</p>\r\n<p> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'X3250 M4 server 2583i14\',\'server/Work station\',\'IBM\',\'6888\',DEFAULT,DEFAULT);<br><br> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'Xuanlong Laptop Radiator\',\'Laptop accessory\',\'Windgod\',\'\',DEFAULT,DEFAULT);</p>\r\n<p> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\' HMZ-T3W Headset Display Device\',\'Laptop accessory\',\'Sony\',\'6999\',DEFAULT,DEFAULT);</p>\r\n<p> INSERT goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'Business Backpage\',\'Laptop accessory\',\'Sony\',\'99\',DEFAULT,DEFAULT);</p>\r\n<p>---INSERT...SELECT</p>\r\n<p>INSERT [INTO] tbl_name [(col_name)] SELECT</p>\r\n<p>使用的时候就这样，创建一个新的表</p>\r\n<p>CREATE TABLE IF NOT EXISTS cates(</p>\r\n<p>cate_id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,</p>\r\n<p>cate_name VARCHAR(40) NOT NULL</p>\r\n<p>);</p>\r\n<p>然后把原数据表中的东西有选择性的插入进来</p>\r\n<p>INSERT INTO CATES(CATE_NAME) SELECT GOODS_CATE FROM GOODS GROUP BY GOODS_CATE;</p>\r\n<p>如果需要根据目录表cates，来更新我们的参数表——多表更新</p>\r\n<p>----多表更新</p>\r\n<p>--多步</p>\r\n<p>UPDATE table_ref SET col_name=... ...</p>\r\n<p>其中，ref是表的参照关系</p>\r\n<p>这里有连接关系，INNER JOIN LEFT JOIN 等</p>\r\n<p>最简单的是INNER，内连接</p>\r\n<p>mysql&gt; UPDATE GOODS INNER JOIN CATES ON GOODS_CATE=CATE_NAME<br>    -&gt; SET GOODS_CATE=CATE_ID;</p>\r\n<p>（请原谅我不想打小写的了。。）</p>\r\n<p>解释一下：更新goods这张表，内连接cates这张表，在什么条件呢——goods_cate=cate_name，设定的值是什么呢，是cates这张表中的cate_id</p>\r\n<p>mysql&gt; SELECT * FROM GOODS\\G; 验证一下</p>\r\n<p>--一步</p>\r\n<p>CREATE...SELECT...</p>\r\n<p>即创建表的同时写入连接的数据</p>\r\n<p>这里的例子是：对品牌做连接更新</p>\r\n<p>mysql&gt; SELECT BRAND_NAME FROM GOODS GROUP BY BRAND_NAME;</p>\r\n<p>mysql&gt; CREATE TABLE IF NOT EXISTS brands(<br>    -&gt; brand_id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,<br>    -&gt; brand_name VARCHAR(40) NOT NULL<br>    -&gt; )<br>    -&gt; SELECT BRAND_NAME FROM GOODS GROUP BY BRAND_NAME;</p>\r\n<p>就可以省去INSERT的操作了</p>\r\n<p>但是这时候更新要出错</p>\r\n<p>mysql&gt; UPDATE GOODS INNER JOIN BRANDS ON BRAND_NAME=BRAND_NAME<br>    -&gt; SET BRAND_NAME=BRAND_ID;<br>ERROR 1052 (23000): Champ: \'BRAND_NAME\' dans field list est ambigu</p>\r\n<p>因为名字一样，要改字段，或者起别名AS</p>\r\n<p>mysql&gt; UPDATE GOODS AS G INNER JOIN BRANDS AS B ON G.BRAND_NAME=B.BRAND_NAME<br>    -&gt; SET G.BRAND_NAME=BRAND_ID;</p>\r\n<p>虽然实现了外表的更新，但是，比如说goods_cate的类型还是varchar，而我们其实希望主表中，它是int类型的。这时候由于需要修改字段名以及数据类型，用ALTER CHANGE</p>\r\n<p>mysql&gt; ALTER TABLE GOODS<br>    -&gt; CHANGE GOODS_CATE CATE_ID SMALLINT UNSIGNED NOT NULL,<br>    -&gt; CHANGE BRAND_NAME BRAND_ID SMALLINT UNSIGNED NOT NULL;</p>\r\n<p>这种外键称为事实外键，比foreign key的物理外键还要多</p>\r\n<p>----连接</p>\r\n<p>由于我们实现了多表的存储，但是由于显示等需求，要求多个表联动，需要用到连接</p>\r\n<p>数据表参照ref：tbl_name [[AS] alias] | table_subquery [AS] alias</p>\r\n<p>---INNER JOIN</p>\r\n<p>使用ON来设定连接条件，WHERE一般做进一步的筛选</p>\r\n<p>内连接，仅显示符合连接条件的记录</p>\r\n<p> SELECT GOODS_ID,GOODS_NAME,CATE_NAME FROM GOODS INNER JOIN CATES ON GOODS.CATE_ID=CATES.CATE_ID;</p>\r\n<p>翻译一下：选取goods表中的goods_id,goods_name,cate_name字段，但是显示的时候，需要内连接cates表（因为我们不想显示的是类型的数字表示），条件是当两者的cate_id字段相等；这里由于cate_id没有给别名，所以写成表名.cate_id</p>\r\n<p>会发现，这个内连接的显示，只显示了on条件的结果</p>\r\n<p>---外连接</p>\r\n<p>外连接又分为左外和右外</p>\r\n<p>LEFT JOIN显示左表的全部记录和右表符合链接条件的记录，例子如下</p>\r\n<p>+----------+--------------------------------------------------------------------------------------------+---------------------+<br>| GOODS_ID | GOODS_NAME                                                                                 | CATE_NAME           |<br>+----------+--------------------------------------------------------------------------------------------+---------------------+<br>|        1 | R510VC 15.6Inches Laptop                                                                   | Laptop              |<br>|        2 | Y400N 14.0Inches Laptop                                                                    | Laptop              |<br>|        3 | G150TH 15.6Inches Gamebook                                                                 | Gamebook            |<br>|        4 | X550CC 15.6Inches Laptop                                                                   | Laptop              |<br>|        5 | X240(20ALA0EYCD) 12.5InchesUltrabook                                                       | Ultrabook           |<br>|        6 | U330P 13.3Inches Ultrabook                                                                 | Ultrabook           |<br>|        7 | SVP13226SCB 13.3Inches Touch Ultrabook                                                     | Ultrabook           |<br>|        8 | iPad mini MD531CH/A 7.9Inches Tablet                                                       | Tablet              |<br>|        9 | iPad Air MD788CH/A 9.7Inches Tablet ?16G WiFi Vision?                                      | Tablet              |<br>|       10 |  iPad mini ME279CH/A with Retina screen 7.9InchesTablet ?16G WiFi Vision?                  | Tablet              |<br>|       11 | IdeaCentre C340 20Inches All-in-one                                                        | Desktop             |<br>|       12 | Vostro 3800-R1206 desktop                                                                  | Desktop             |<br>|       13 | iMac ME086CH/A 21.5Inches All-in-one                                                       | Desktop             |<br>|       14 | AT7-7414LP Desktop ?i5-3450 4G 500G 2GIndependent graphics card DVD Keyboard&amp;Mouse Linux ? | Desktop             |<br>|       15 | Z220SFF F4F06PAWork station                                                                | server/Work station |<br>|       16 | PowerEdge T110 IIserver                                                                    | server/Work station |<br>|       17 | Mac Pro MD878CH/A Professional Desktop                                                     | server/Work station |<br>|       18 |  HMZ-T3W Headset Display Device                                                            | Laptop accessory    |<br>|       19 | Business Backpage                                                                          | Laptop accessory    |<br>|       20 | X3250 M4 server 2583i14                                                                    | server/Work station |<br>|       21 | Xuanlong Laptop Radiator                                                                   | Laptop accessory    |<br>|       22 |  HMZ-T3W Headset Display Device                                                            | Laptop accessory    |<br>|       23 | Business Backpage                                                                          | Laptop accessory    |<br>+----------+--------------------------------------------------------------------------------------------+---------------------+<br>23 rows in set (0.00 sec)</p>\r\n<p>mysql&gt; SELECT GOODS_ID,GOODS_NAME,CATE_NAME FROM GOODS LEFT JOIN CATES ON GOODS.CATE_ID=CATES.CATE_ID;<br>+----------+--------------------------------------------------------------------------------------------+---------------------+<br>| GOODS_ID | GOODS_NAME                                                                                 | CATE_NAME           |<br>+----------+--------------------------------------------------------------------------------------------+---------------------+<br>|        1 | R510VC 15.6Inches Laptop                                                                   | Laptop              |<br>|        2 | Y400N 14.0Inches Laptop                                                                    | Laptop              |<br>|        3 | G150TH 15.6Inches Gamebook                                                                 | Gamebook            |<br>|        4 | X550CC 15.6Inches Laptop                                                                   | Laptop              |<br>|        5 | X240(20ALA0EYCD) 12.5InchesUltrabook                                                       | Ultrabook           |<br>|        6 | U330P 13.3Inches Ultrabook                                                                 | Ultrabook           |<br>|        7 | SVP13226SCB 13.3Inches Touch Ultrabook                                                     | Ultrabook           |<br>|        8 | iPad mini MD531CH/A 7.9Inches Tablet                                                       | Tablet              |<br>|        9 | iPad Air MD788CH/A 9.7Inches Tablet ?16G WiFi Vision?                                      | Tablet              |<br>|       10 |  iPad mini ME279CH/A with Retina screen 7.9InchesTablet ?16G WiFi Vision?                  | Tablet              |<br>|       11 | IdeaCentre C340 20Inches All-in-one                                                        | Desktop             |<br>|       12 | Vostro 3800-R1206 desktop                                                                  | Desktop             |<br>|       13 | iMac ME086CH/A 21.5Inches All-in-one                                                       | Desktop             |<br>|       14 | AT7-7414LP Desktop ?i5-3450 4G 500G 2GIndependent graphics card DVD Keyboard&amp;Mouse Linux ? | Desktop             |<br>|       15 | Z220SFF F4F06PAWork station                                                                | server/Work station |<br>|       16 | PowerEdge T110 IIserver                                                                    | server/Work station |<br>|       17 | Mac Pro MD878CH/A Professional Desktop                                                     | server/Work station |<br>|       18 |  HMZ-T3W Headset Display Device                                                            | Laptop accessory    |<br>|       19 | Business Backpage                                                                          | Laptop accessory    |<br>|       20 | X3250 M4 server 2583i14                                                                    | server/Work station |<br>|       21 | Xuanlong Laptop Radiator                                                                   | Laptop accessory    |<br>|       22 |  HMZ-T3W Headset Display Device                                                            | Laptop accessory    |<br>|       23 | Business Backpage                                                                          | Laptop accessory    |<br>|       24 |  LaserJet Pro P1606dn Black&amp;White blazer printer                                           | NULL                |<br>+----------+--------------------------------------------------------------------------------------------+---------------------+<br>24 rows in set (0.00 sec)</p>\r\n<p> 注意最后一个记录的类名是null</p>\r\n<p>RIGHT JOIN是这样的</p>\r\n<p>mysql&gt; SELECT GOODS_ID,GOODS_NAME,CATE_NAME FROM GOODS RIGHT JOIN CATES ON GOODS.CATE_ID=CATES.CATE_ID;<br>+----------+--------------------------------------------------------------------------------------------+---------------------+<br>| GOODS_ID | GOODS_NAME                                                                                 | CATE_NAME           |<br>+----------+--------------------------------------------------------------------------------------------+---------------------+<br>|        1 | R510VC 15.6Inches Laptop                                                                   | Laptop              |<br>|        2 | Y400N 14.0Inches Laptop                                                                    | Laptop              |<br>|        3 | G150TH 15.6Inches Gamebook                                                                 | Gamebook            |<br>|        4 | X550CC 15.6Inches Laptop                                                                   | Laptop              |<br>|        5 | X240(20ALA0EYCD) 12.5InchesUltrabook                                                       | Ultrabook           |<br>|        6 | U330P 13.3Inches Ultrabook                                                                 | Ultrabook           |<br>|        7 | SVP13226SCB 13.3Inches Touch Ultrabook                                                     | Ultrabook           |<br>|        8 | iPad mini MD531CH/A 7.9Inches Tablet                                                       | Tablet              |<br>|        9 | iPad Air MD788CH/A 9.7Inches Tablet ?16G WiFi Vision?                                      | Tablet              |<br>|       10 |  iPad mini ME279CH/A with Retina screen 7.9InchesTablet ?16G WiFi Vision?                  | Tablet              |<br>|       11 | IdeaCentre C340 20Inches All-in-one                                                        | Desktop             |<br>|       12 | Vostro 3800-R1206 desktop                                                                  | Desktop             |<br>|       13 | iMac ME086CH/A 21.5Inches All-in-one                                                       | Desktop             |<br>|       14 | AT7-7414LP Desktop ?i5-3450 4G 500G 2GIndependent graphics card DVD Keyboard&amp;Mouse Linux ? | Desktop             |<br>|       15 | Z220SFF F4F06PAWork station                                                                | server/Work station |<br>|       16 | PowerEdge T110 IIserver                                                                    | server/Work station |<br>|       17 | Mac Pro MD878CH/A Professional Desktop                                                     | server/Work station |<br>|       18 |  HMZ-T3W Headset Display Device                                                            | Laptop accessory    |<br>|       19 | Business Backpage                                                                          | Laptop accessory    |<br>|       20 | X3250 M4 server 2583i14                                                                    | server/Work station |<br>|       21 | Xuanlong Laptop Radiator                                                                   | Laptop accessory    |<br>|       22 |  HMZ-T3W Headset Display Device                                                            | Laptop accessory    |<br>|       23 | Business Backpage                                                                          | Laptop accessory    |<br>|     NULL | NULL                                                                                       | Adaptor             |<br>|     NULL | NULL                                                                                       | Exchanger           |<br>|     NULL | NULL                                                                                       | Netcard             |<br>+----------+--------------------------------------------------------------------------------------------+---------------------+<br>26 rows in set (0.00 sec)</p>\r\n<p>----多表连接</p>\r\n<p>mysql&gt; SELECT GOODS_ID,GOODS_NAME,CATE_NAME,BRAND_NAME,GOODS_PRICE FROM GOODS AS G<br>    -&gt; INNER JOIN CATES AS C ON G.CATE_ID=C.CATE_ID<br>    -&gt; INNER JOIN BRANDS AS B ON G.BRAND_ID=B.BRAND_ID;</p>\r\n<p>每连接一个表就需要一个JOIN，注意起别名给数据表！</p>\r\n<p>此时的显示虽然跟一开始一样，但实现不同，意义大不一样</p>\r\n<p>----无限级分类表设计</p>\r\n<p>一般实际中会出现无限级数据表，不断往下分</p>\r\n<p>举个例子</p>\r\n<p> CREATE TABLE goods_types(<br>     type_id   SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,<br>     type_name VARCHAR(20) NOT NULL,<br>     parent_id SMALLINT UNSIGNED NOT NULL DEFAULT 0<br>  ); </p>\r\n<p> INSERT goods_types(type_name,parent_id) VALUES(\'Home Electronics\',DEFAULT);<br>  INSERT goods_types(type_name,parent_id) VALUES(\'PC、Office\',DEFAULT);<br>  INSERT goods_types(type_name,parent_id) VALUES(\'Appliances\',1);<br>  INSERT goods_types(type_name,parent_id) VALUES(\'Life Appliances\',1);<br>  INSERT goods_types(type_name,parent_id) VALUES(\'Tablet TV\',3);<br>  INSERT goods_types(type_name,parent_id) VALUES(\'Air Conditioner\',3);<br>  INSERT goods_types(type_name,parent_id) VALUES(\'Electrical Fan\',4);<br>  INSERT goods_types(type_name,parent_id) VALUES(\'Water Dispenser\',4);<br>  INSERT goods_types(type_name,parent_id) VALUES(\'Complete Machine\',2);<br>  INSERT goods_types(type_name,parent_id) VALUES(\'Accessory\',2);<br>  INSERT goods_types(type_name,parent_id) VALUES(\'Laptop\',9);<br>  INSERT goods_types(type_name,parent_id) VALUES(\'Ultrabook\',9);<br>  INSERT goods_types(type_name,parent_id) VALUES(\'Gamebook\',9);<br>  INSERT goods_types(type_name,parent_id) VALUES(\'CPU\',10);<br>  INSERT goods_types(type_name,parent_id) VALUES(\'Host Computer\',10);</p>\r\n<p>mysql&gt; SELECT * FROM GOODS_TYPES;<br>+---------+------------------+-----------+<br>| type_id | type_name        | parent_id |<br>+---------+------------------+-----------+<br>|       1 | Home Electronics |         0 |<br>|       2 | PC?Office        |         0 |<br>|       3 | Appliances       |         1 |<br>|       4 | Life Appliances  |         1 |<br>|       5 | Tablet TV        |         3 |<br>|       6 | Air Conditioner  |         3 |<br>|       7 | Electrical Fan   |         4 |<br>|       8 | Water Dispenser  |         4 |<br>|       9 | Complete Machine |         2 |<br>|      10 | Accessory        |         2 |<br>|      11 | Laptop           |         9 |<br>|      12 | Ultrabook        |         9 |<br>|      13 | Gamebook         |         9 |<br>|      14 | CPU              |        10 |<br>|      15 | Host Computer    |        10 |<br>+---------+------------------+-----------+</p>\r\n<p>注意parent_id，是指改节点的级别，比如0，表示home electronics没有父节点，是个顶级节点</p>\r\n<p>查找的实现，是通过自身连接来完成的</p>\r\n<p>---自身连接</p>\r\n<p>举个例子，显示所有类别的父类是什么</p>\r\n<p>这里，自身的连接，可以想象右边有一张一模一样的表（左边也可以，有些东西稍微变一下就行）</p>\r\n<p>mysql&gt; SELECT S.TYPE_ID,S.TYPE_NAME,P.TYPE_NAME FROM GOODS_TYPES AS S LEFT JOIN GOODS_TYPES AS P<br>    -&gt; ON S.PARENT_ID=P.TYPE_ID;<br>+---------+------------------+------------------+<br>| TYPE_ID | TYPE_NAME        | TYPE_NAME        |<br>+---------+------------------+------------------+<br>|       1 | Home Electronics | NULL             |<br>|       2 | PC?Office        | NULL             |<br>|       3 | Appliances       | Home Electronics |<br>|       4 | Life Appliances  | Home Electronics |<br>|       5 | Tablet TV        | Appliances       |<br>|       6 | Air Conditioner  | Appliances       |<br>|       7 | Electrical Fan   | Life Appliances  |<br>|       8 | Water Dispenser  | Life Appliances  |<br>|       9 | Complete Machine | PC?Office        |<br>|      10 | Accessory        | PC?Office        |<br>|      11 | Laptop           | Complete Machine |<br>|      12 | Ultrabook        | Complete Machine |<br>|      13 | Gamebook         | Complete Machine |<br>|      14 | CPU              | Accessory        |<br>|      15 | Host Computer    | Accessory        |<br>+---------+------------------+------------------+</p>\r\n<p>翻译一下，就是，可以先从条件说起，当子表s中的parent_id=父表中的type_id时，选取子表的type_id,type_name,以及父表的type_name显示，这里的别名可以在语句的末尾处显示</p>\r\n<p>要把这个逻辑关系先说说/想想清楚，再翻译为sql语句</p>\r\n<p>反过来，查找所有类别的子类</p>\r\n<p>先考虑逻辑关系：当父表的type_id=子表的parent_id时，取 P.TYPE_ID,P.TYPE_NAME,S.TYPE_NAME ——再写出语句</p>\r\n<p>mysql&gt; SELECT P.TYPE_ID,P.TYPE_NAME,S.TYPE_NAME FROM GOODS_TYPES AS P LEFT JOIN GOODS_TYPES AS S<br>    -&gt; ON P.TYPE_ID=S.PARENT_ID;<br>+---------+------------------+------------------+<br>| TYPE_ID | TYPE_NAME        | TYPE_NAME        |<br>+---------+------------------+------------------+<br>|       1 | Home Electronics | Appliances       |<br>|       1 | Home Electronics | Life Appliances  |<br>|       3 | Appliances       | Tablet TV        |<br>|       3 | Appliances       | Air Conditioner  |<br>|       4 | Life Appliances  | Electrical Fan   |<br>|       4 | Life Appliances  | Water Dispenser  |<br>|       2 | PC?Office        | Complete Machine |<br>|       2 | PC?Office        | Accessory        |<br>|       9 | Complete Machine | Laptop           |<br>|       9 | Complete Machine | Ultrabook        |<br>|       9 | Complete Machine | Gamebook         |<br>|      10 | Accessory        | CPU              |<br>|      10 | Accessory        | Host Computer    |<br>|       5 | Tablet TV        | NULL             |<br>|       6 | Air Conditioner  | NULL             |<br>|       7 | Electrical Fan   | NULL             |<br>|       8 | Water Dispenser  | NULL             |<br>|      11 | Laptop           | NULL             |<br>|      12 | Ultrabook        | NULL             |<br>|      13 | Gamebook         | NULL             |<br>|      14 | CPU              | NULL             |<br>|      15 | Host Computer    | NULL             |<br>+---------+------------------+------------------+</p>\r\n<p>再复杂一点，且留给你们自己翻译</p>\r\n<p>mysql&gt; SELECT P.TYPE_ID,P.TYPE_NAME,COUNT(S.TYPE_NAME) CHILD_COUNT FROM GOODS_TYPES AS P LEFT JOIN GOODS_TYPES AS S<br>    -&gt; ON P.TYPE_ID=S.PARENT_ID GROUP BY P.TYPE_NAME ORDER BY P.TYPE_ID;<br>+---------+------------------+-------------+<br>| TYPE_ID | TYPE_NAME        | CHILD_COUNT |<br>+---------+------------------+-------------+<br>|       1 | Home Electronics |           2 |<br>|       2 | PC?Office        |           2 |<br>|       3 | Appliances       |           2 |<br>|       4 | Life Appliances  |           2 |<br>|       5 | Tablet TV        |           0 |<br>|       6 | Air Conditioner  |           0 |<br>|       7 | Electrical Fan   |           0 |<br>|       8 | Water Dispenser  |           0 |<br>|       9 | Complete Machine |           3 |<br>|      10 | Accessory        |           2 |<br>|      11 | Laptop           |           0 |<br>|      12 | Ultrabook        |           0 |<br>|      13 | Gamebook         |           0 |<br>|      14 | CPU              |           0 |<br>|      15 | Host Computer    |           0 |<br>+---------+------------------+-------------+</p>\r\n<p>----多表删除</p>\r\n<p>基本思路也是通过一张表模拟多张表的操作</p>\r\n<p>懒了，直接复制看吧，需要了再去做</p>\r\n<p>-- INSERT ... SELECT实现复制</p>\r\n<p>INSERT goods(goods_name,cate_id,brand_id) SELECT goods_name,cate_id,brand_id FROM goods WHERE goods_id IN (19,20);</p>\r\n<p>-- 查找重复记录</p>\r\n<p>SELECT goods_id,goods_name FROM goods GROUP BY goods_name HAVING count(goods_name) &gt;= 2;</p>\r\n<p>-- 删除重复记录</p>\r\n<p>DELETE t1 FROM goods AS t1 LEFT JOIN (SELECT goods_id,goods_name FROM goods GROUP BY goods_name HAVING count(goods_name) &gt;= 2 ) AS t2 ON t1.goods_name = t2.goods_name WHERE t1.goods_id &gt; t2.goods_id;</p>\r\n<p> </p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:25:27', '0', '0', '0', '1', '84');
INSERT INTO `blog` VALUES ('3005', '今天有事-MySQL ', '网络', '\n<p>　　hi</p>\r\n<p>今天有事，一会儿要去耍，能学多少是多少吧</p>\r\n<p>1、MySQL</p>\r\n<p>-----子查询与连接（二）-----</p>\r\n<p>----子查询</p>\r\n<p>子查询，是指出现在其他SQL语句内的SELECT子句</p>\r\n<p>注意：子查询指嵌套在查询内部，且必须始终出现在圆括号内；可以包含多个关键字或条件；外层查询可以是SELECT,INSERT,UPDATE,SET或DO</p>\r\n<p>子查询的返回，可以是标量、一行、一列或者是一个子查询</p>\r\n<p>可以分为三类：使用比较运算符的=，&gt;=等;NOT IN ；EXIST</p>\r\n<p>----使用比较运算符实现子查询</p>\r\n<p>--</p>\r\n<p>mysql&gt; SELECT goods_id,goods_name,goods_price FROM tdb_goods WHERE goods_price&gt;=5391.30;</p>\r\n<p>这里的数字可以不用管，就是之前获取的一个平均值。</p>\r\n<p>所以要是想直接得到这个平均值参与的结果，用子查询这样写</p>\r\n<p>mysql&gt; SELECT goods_id,goods_name,goods_price FROM tdb_goods WHERE goods_price&gt;=(SELECT ROUND(AVG(goods_price),2) FROM tdb_goods);</p>\r\n<p>这里可以看到，子查询在小括号中，用到了&gt;=</p>\r\n<p>--</p>\r\n<p>当子查询返回多个结果，而主查询用不到这么多时，可以用ANY SOME ALL关键字</p>\r\n<p>其中ANY和SOME一样，满足其中一个就好，具体是哪个 要看运算符是什么（比如&gt;就大于最小值就行）</p>\r\n<p>ALL要求满足所有返回的要求</p>\r\n<p>用法是写在子查询小括号的前面</p>\r\n<p>----由IN或NOT IN引发的子查询</p>\r\n<p>其实IN 与=ALL运算符等价，NOT IN与=！ALL等价</p>\r\n<p>用法也类似</p>\r\n<p>----EXIST</p>\r\n<p>返回布尔值，用的很少</p>\r\n<p> </p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:28:27', '0', '0', '0', '1', '84');
INSERT INTO `blog` VALUES ('3006', '有时候就是看不进论文-jQuery动画特效篇&MySQL ', '网络', '\n<p>　　hi</p>\r\n<p>早上知道新的乱斗模式后，没忍住开了几把，然后就无心论文了。。。用这个来破吧</p>\r\n<p>1、jQuery</p>\r\n<p>-----动画特效-----</p>\r\n<p>----调用show()和hide()方法显示和隐藏元素</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">show()</code>和<code class=\"marker\">hide()</code>方法用于显示或隐藏页面中的元素，它的调用格式分别为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).hide(speed,[callback])</strong></code><strong>和</strong><code class=\"marker\"><strong>$(selector).show(speed,[callback])</strong></code></p>\r\n<p>参数speed设置隐藏或显示时的速度值，可为“slow”、“fast”或毫秒数值，可选项参数callback为隐藏或显示动作执行完成后调用的函数名。</p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;使用show()和hide()方法显示和隐藏元素&lt;/h3&gt;<br>        &lt;div&gt;<br>            &lt;h4&gt;我喜欢吃的水果&lt;/h4&gt;<br>            &lt;ul&gt;<br>                &lt;li&gt;苹果&lt;/li&gt;<br>                &lt;li&gt;甘桔&lt;/li&gt;<br>                &lt;li&gt;梨&lt;/li&gt;<br>            &lt;/ul&gt;<br>            &lt;input id=\"hidval\" type=\"hidden\" value=\"0\"/&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"h4\").bind(\"click\", function () {<br>                    if ($(\"#hidval\").val() == 0) {<br>                        $(\"ul\").show();<br>                        $(\"#hidval\").val(1);<br>                    } else {<br>                        $(\"ul\").hide();<br>                        $(\"#hidval\").val(0);<br>                    }<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----动画效果的show()和hide()方法</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>在上一小节中，调用<code class=\"marker\">show()</code>和<code class=\"marker\">hide()</code>方法仅是实现的元素的显示和隐藏功能，如果在这些方法中增加“speed”参数可以实现动画效果的显示与隐藏，同时，如果添加了方法的回调函数，它将在显示或隐藏执行成功后被调用。</p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;show()和hide()方法动画方式显示和隐藏元素&lt;/h3&gt;<br>        &lt;div&gt;<br>            &lt;h4&gt;我喜欢吃的水果&lt;/h4&gt;<br>            &lt;ul&gt;<br>                &lt;li&gt;苹果&lt;/li&gt;<br>                &lt;li&gt;甘桔&lt;/li&gt;<br>                &lt;li&gt;梨&lt;/li&gt;<br>            &lt;/ul&gt;<br>            &lt;input id=\"hidval\" type=\"hidden\" value=\"0\"/&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"h4\").bind(\"click\", function () {<br>                    if ($(\"#hidval\").val() == 0) {<br>                        $(\"ul\").show(\"slow\",function(){<br>                            $(\"#hidval\").val(1);<br>                        })<br>                    } else {<br>                        $(\"ul\").hide(\"slow\",function(){<br>                            $(\"#hidval\").val(0);<br>                        })<br>                    }<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----调用toggle()方法实现动画切换效果</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>第一节我们学过实现元素的显示与隐藏需要使用<code class=\"marker\">hide()</code>与<code class=\"marker\">show()</code>，那么有没有更简便的方法来实现同样的动画效果呢？</p>\r\n<p>调用<code class=\"marker\">toggle()</code>方法就可以很容易做到，即如果元素处于显示状态，调用该方法则隐藏该元素，反之，则显示该元素，它的调用格式是：</p>\r\n<p><code class=\"marker\"><strong>$(selector).toggle(speed,[callback])</strong></code></p>\r\n<p>其中speed参数为动画效果时的速度值，可以为数字，单位为毫秒，也可是“fast”、“slow”字符，可选项参数callback为方法执行成功后回调的函数名称。</p>\r\n<p> &lt;body&gt;<br>        &lt;h3&gt;toggle()方法的动画切换效果&lt;/h3&gt;<br>        &lt;div&gt;<br>            &lt;h4&gt;<br>               &lt;span class=\"fl\"&gt;我喜欢吃的水果&lt;/span&gt;<br>               &lt;span class=\"fr\" id=\"spnTip\"&gt;显示&lt;/span&gt;<br>            &lt;/h4&gt;<br>            &lt;ul&gt;<br>                &lt;li&gt;苹果&lt;/li&gt;<br>                &lt;li&gt;甘桔&lt;/li&gt;<br>                &lt;li&gt;梨&lt;/li&gt;<br>            &lt;/ul&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                var $spn = $(\"#spnTip\");<br>                $(\"h4\").bind(\"click\", function () {<br>                    $($spn).toggle(\"slow\",function(){<br>                     $spn.html() == \"隐藏\" ? $spn.html(\"显示\") : $spn.html(\"隐藏\");<br>                    })<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用slideUp()和slideDown()方法的滑动效果</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>可以使用<code class=\"marker\">slideUp()</code>和<code class=\"marker\">slideDown()</code>方法在页面中滑动元素，前者用于向上滑动元素，后者用于向下滑动元素，它们的调用方法分别为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).slideUp(speed,[callback])</strong></code><strong>和</strong><code class=\"marker\"><strong>$(selector).slideDown(speed,[callback])</strong></code></p>\r\n<p>其中speed参数为滑动时的速度，单位是毫秒，可选项参数callback为滑动成功后执行的回调函数名。</p>\r\n<p><strong>要注意的是：</strong><code class=\"marker\">slideDown()</code>仅适用于<strong>被隐藏的元素；</strong><code class=\"marker\">slideup()</code>则<strong>相反。</strong></p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;使用slideUp()和slideDown()方法的滑动效果&lt;/h3&gt;<br>        &lt;div&gt;<br>            &lt;h4&gt;我喜欢吃的水果&lt;/h4&gt;<br>            &lt;ul&gt;<br>                &lt;li&gt;苹果&lt;/li&gt;<br>                &lt;li&gt;甘桔&lt;/li&gt;<br>                &lt;li&gt;梨&lt;/li&gt;<br>            &lt;/ul&gt;<br>            &lt;input id=\"hidval\" type=\"hidden\" value=\"0\"/&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"h4\").bind(\"click\", function () {<br>                    if ($(\"#hidval\").val() == 0) {<br>                        $(\"ul\").slideUp(\"fast\",function(){<br>                            $(\"#hidval\").val(1);<br>                        })<br>                    } else {<br>                        $(\"ul\").slideDown(\"fast\",function(){<br>                            $(\"#hidval\").val(0);<br>                        })<br>                    }<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>注意：JS对大小写敏感，函数名不要写错（不要问我是怎么知道的</p>\r\n<p>----使用slideToggle()方法实现图片“变脸”效果</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>使用<code class=\"marker\">slideToggle()</code>方法可以切换<code class=\"marker\">slideUp()</code>和<code class=\"marker\">slideDown()</code>，即调用该方法时，如果元素已向上滑动，则元素自动向下滑动，反之，则元素自动向上滑动，格式为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).slideToggle(speed,[callback])</strong></code></p>\r\n<p>其中speed参数为动画效果时的速度值，可以为数字，单位为毫秒，也可是“fast”、“slow”字符，可选项参数callback为方法执行成功后回调的函数名称。</p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;使用slideToggle()方法切换滑动效果&lt;/h3&gt;<br>        &lt;div&gt;<br>            &lt;h4&gt;<br>               &lt;span class=\"fl\"&gt;我喜欢吃的水果&lt;/span&gt;<br>               &lt;span class=\"fr\" id=\"spnTip\"&gt;向下滑&lt;/span&gt;&lt;/h4&gt;<br>            &lt;ul&gt;<br>                &lt;li&gt;苹果&lt;/li&gt;<br>                &lt;li&gt;甘桔&lt;/li&gt;<br>                &lt;li&gt;梨&lt;/li&gt;<br>            &lt;/ul&gt;<br>            &lt;input id=\"hidval\" type=\"hidden\" value=\"0\"/&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                var $spn = $(\"#spnTip\");<br>                $(\"h4\").bind(\"click\", function () {<br>                    $(\"ul\").slideToggle(\"fast\",function(){<br>               $spn.html() == \"向下滑\" ? $spn.html(\"向上滑\") : $spn.html(\"向下滑\");<br>                    })<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用fadeIn()与fadeOut()方法实现淡入淡出效果</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">fadeIn()</code>和<code class=\"marker\">fadeOut()</code>方法可以实现元素的淡入淡出效果，前者淡入隐藏的元素，后者可以淡出可见的元素，它们的调用格式分别为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).fadeIn(speed,[callback])</strong></code><strong>和</strong><code class=\"marker\"><strong>$(selector).fadeOut(speed,[callback])</strong></code></p>\r\n<p>其中参数speed为淡入淡出的速度，callback参数为完成后执行的回调函数名。</p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n<p> &lt;body&gt;<br>        &lt;h3&gt;使用fadeIn()与fadeOut()方法实现元素淡入淡出的效果&lt;/h3&gt;<br>        &lt;div&gt;<br>            &lt;h4&gt;我喜欢吃的水果&lt;/h4&gt;<br>            &lt;ul&gt;<br>                &lt;li&gt;苹果&lt;/li&gt;<br>                &lt;li&gt;甘桔&lt;/li&gt;<br>                &lt;li&gt;梨&lt;/li&gt;<br>            &lt;/ul&gt;<br>            &lt;input id=\"hidval\" type=\"hidden\" value=\"0\"/&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"h4\").bind(\"click\", function () {<br>                    if ($(\"#hidval\").val() == 0) {<br>                        $(\"ul\").fadeIn(\"fast\",function(){<br>                            $(\"#hidval\").val(1);<br>                        })<br>                    } else {<br>                         $(\"ul\").fadeOut(\"fast\",function(){<br>                            $(\"#hidval\").val(0);<br>                        })<br>                    }<br>                })<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用fadeTo()方法设置淡入淡出效果的不透明度</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>调用<code class=\"marker\">fadeTo()</code>方法，可以将所选择元素的不透明度以淡入淡出的效果调整为指定的值，该方法的调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).fadeTo(speed,opacity,[callback])</strong></code></p>\r\n<p>其中speed参数为效果的速度，opacity参数为指定的不透明值，它的取值范围是0.0~1.0，可选项参数callback为效果完成后，回调的函数名。</p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n<p> &lt;body&gt;<br>        &lt;h3&gt;使用fadeTo()方法设置淡入淡出效果的不透明度&lt;/h3&gt;<br>        &lt;span class=\"red\"&gt;&lt;/span&gt;&lt;span class=\"orange\"&gt;&lt;/span&gt;&lt;span class=\"blue\"&gt;&lt;/span&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"span\").each(function (index) {<br>                    switch (index) {<br>                        case 0:<br>                            $(\".red\").fadeTo(\"fast\",0.2);<br>                            break;<br>                        case 1:<br>                            $(\".orange\").fadeTo(\"fast\",0.4);<br>                            break;<br>                        case 2:<br>                            $(\".blue\").fadeTo(\"fast\",0.6);<br>                            break;<br>                    }<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----调用animate()方法制作简单的动画效果</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>调用<code class=\"marker\">animate()</code>方法可以创建自定义动画效果，它的调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).animate({params},speed,[callback])</strong></code></p>\r\n<p>其中，params参数为制作动画效果的CSS属性名与值，speed参数为动画的效果的速度，单位为毫秒，可选项callback参数为动画完成时执行的回调函数名。</p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n<p>    &lt;body&gt;<br>        &lt;h3&gt;制作简单的动画效果&lt;/h3&gt;<br>        &lt;span&gt;&lt;/span&gt;<br>        &lt;div id=\"tip\"&gt;&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"span\").animate({<br>                    width: \"80px\",<br>                    height: \"80px\"<br>                },<br>                3000, function () {<br>                    $(\"#tip\").html(\"执行完成!\");<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----调用animate()方法制作移动位置的动画</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>调用<code class=\"marker\">animate()</code>方法不仅可以制作简单渐渐变大的动画效果，而且还能制作移动位置的动画，在移动位置之前，必须将被移元素的“position”属性值设为“absolute”或“relative”，否则，该元素移动不了。</p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n<p> &lt;body&gt;<br>        &lt;h3&gt;制作移动位置的动画&lt;/h3&gt;<br>        &lt;span&gt;&lt;/span&gt;<br>        &lt;div id=\"tip\"&gt;&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"span\").animate({<br>                    left: \"+=100px\"<br>                }, 3000, function () {<br>                    $(\"span\").animate({<br>                        height: \'+=30px\',<br>                        width: \'+=30px\'<br>                    }, 3000, function () {<br>                        $(\"#tip\").html(\"执行完成!\");<br>                    });<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----调用stop()方法停止当前所有动画效果</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">stop()</code>方法的功能是在动画完成之前，停止当前正在执行的动画效果，这些效果包括滑动、淡入淡出和自定义的动画，它的调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).stop([clearQueue],[goToEnd])</strong></code></p>\r\n<p>其中，两个可选项参数clearQueue和goToEnd都是布尔类型值，前者表示是否停止正在执行的动画，后者表示是否完成正在执行的动画，默认为false。</p>\r\n<p> &lt;body&gt;<br>        &lt;h3&gt;调用stop()方法停止当前所有动画效果&lt;/h3&gt;<br>        &lt;span&gt;&lt;/span&gt;<br>        &lt;input id=\"btnStop\" type=\"button\" value=\"停止\" /&gt;<br>        &lt;div id=\"tip\"&gt;&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"span\").animate({<br>                    left: \"+=100px\"<br>                }, 3000, function () {<br>                    $(this).animate({<br>                        height: \'+=60px\',<br>                        width: \'+=60px\'<br>                    }, 3000, function () {<br>                        $(\"#tip\").html(\"执行完成!\");<br>                    });<br>                });<br>                $(\"#btnStop\").bind(\"click\", function () {<br>                   $(\"span\").stop();<br>                    $(\"#tip\").html(\"执行停止!\");<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----调用delay()方法延时执行动画效果</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">delay()</code>方法的功能是设置一个延时值来推迟动画效果的执行，它的调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).delay(duration)</strong></code></p>\r\n<p>其中参数duration为延时值，它的单位是毫秒，当超过延时值时，动画继续执行。</p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;调用delay()方法延时执行动画效果&lt;/h3&gt;<br>        &lt;span&gt;&lt;/span&gt;<br>        &lt;input id=\"btnStop\" type=\"button\" value=\"延时\" /&gt;<br>        &lt;div id=\"tip\"&gt;&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(function () {<br>                $(\"span\").animate({<br>                    left: \"+=100px\"<br>                }, 3000, function () {<br>                    $(this).animate({<br>                        height: \'+=60px\',<br>                        width: \'+=60px\'<br>                    }, 3000, function () {<br>                        $(\"#tip\").html(\"执行完成!\");<br>                    });<br>                });<br>                $(\"#btnStop\").bind(\"click\", function () {<br>                     $(\"span\").delay(3000);<br>                    $(\"#tip\").html(\"正在延时!\");<br>                });<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>2、MySQL</p>\r\n<p>-----子查询与连接-----</p>\r\n<p>----复习</p>\r\n<p>上一次是增删改查</p>\r\n<p>主要记住，前三个是写操作；改是读操作</p>\r\n<p>----数据准备</p>\r\n<p>创建一个电子商城的数据表的缩小版如下</p>\r\n<p>创建数据库和数据表</p>\r\n<p>mysql&gt; CREATE DATABASE Tables_in_imooc;</p>\r\n<p>mysql&gt; USE Tables_in_imooc;</p>\r\n<p>mysql&gt; CREATE TABLE IF NOT EXISTS tdb_goods(<br>    -&gt;     goods_id    SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,<br>    -&gt;     goods_name  VARCHAR(150) NOT NULL,<br>    -&gt;     goods_cate  VARCHAR(40)  NOT NULL,<br>    -&gt;     brand_name  VARCHAR(40)  NOT NULL,<br>    -&gt;     goods_price DECIMAL(15,3) UNSIGNED NOT NULL DEFAULT 0,<br>    -&gt;     is_show     BOOLEAN NOT NULL DEFAULT 1,<br>    -&gt;     is_saleoff  BOOLEAN NOT NULL DEFAULT 0<br>    -&gt;   );</p>\r\n<p>mysql&gt; SHOW COLUMNS FROM TDB_GOODS;<br>+-------------+------------------------+------+-----+---------+----------------+<br>| Field       | Type                   | Null | Key | Default | Extra          |<br>+-------------+------------------------+------+-----+---------+----------------+<br>| goods_id    | smallint(5) unsigned   | NO   | PRI | NULL    | auto_increment |<br>| goods_name  | varchar(150)           | NO   |     | NULL    |                |<br>| goods_cate  | varchar(40)            | NO   |     | NULL    |                |<br>| brand_name  | varchar(40)            | NO   |     | NULL    |                |<br>| goods_price | decimal(15,3) unsigned | NO   |     | 0.000   |                |<br>| is_show     | tinyint(1)             | NO   |     | 1       |                |<br>| is_saleoff  | tinyint(1)             | NO   |     | 0       |                |<br>+-------------+------------------------+------+-----+---------+----------------+</p>\r\n<p>插入记录</p>\r\n<p>INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'R510VC 15.6英寸笔记本\',\'笔记本\',\'华硕\',\'3399\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'Y400N 14.0英寸笔记本电脑\',\'笔记本\',\'联想\',\'4899\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'G150TH 15.6英寸游戏本\',\'游戏本\',\'雷神\',\'8499\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'X550CC 15.6英寸笔记本\',\'笔记本\',\'华硕\',\'2799\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'X240(20ALA0EYCD) 12.5英寸超极本\',\'超级本\',\'联想\',\'4999\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'U330P 13.3英寸超极本\',\'超级本\',\'联想\',\'4299\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'SVP13226SCB 13.3英寸触控超极本\',\'超级本\',\'索尼\',\'7999\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'iPad mini MD531CH/A 7.9英寸平板电脑\',\'平板电脑\',\'苹果\',\'1998\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'iPad Air MD788CH/A 9.7英寸平板电脑 （16G WiFi版）\',\'平板电脑\',\'苹果\',\'3388\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\' iPad mini ME279CH/A 配备 Retina 显示屏 7.9英寸平板电脑 （16G WiFi版）\',\'平板电脑\',\'苹果\',\'2788\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'IdeaCentre C340 20英寸一体电脑 \',\'台式机\',\'联想\',\'3499\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'Vostro 3800-R1206 台式电脑\',\'台式机\',\'戴尔\',\'2899\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'iMac ME086CH/A 21.5英寸一体电脑\',\'台式机\',\'苹果\',\'9188\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'AT7-7414LP 台式电脑 （i5-3450四核 4G 500G 2G独显 DVD 键鼠 Linux ）\',\'台式机\',\'宏碁\',\'3699\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'Z220SFF F4F06PA工作站\',\'服务器/工作站\',\'惠普\',\'4288\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'PowerEdge T110 II服务器\',\'服务器/工作站\',\'戴尔\',\'5388\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'Mac Pro MD878CH/A 专业级台式电脑\',\'服务器/工作站\',\'苹果\',\'28888\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\' HMZ-T3W 头戴显示设备\',\'笔记本配件\',\'索尼\',\'6999\',DEFAULT,DEFAULT);</p>\r\n<p> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'商务双肩背包\',\'笔记本配件\',\'索尼\',\'99\',DEFAULT,DEFAULT);</p>\r\n<p> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'X3250 M4机架式服务器 2583i14\',\'服务器/工作站\',\'IBM\',\'6888\',DEFAULT,DEFAULT);<br><br> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'玄龙精英版 笔记本散热器\',\'笔记本配件\',\'九州风神\',\'\',DEFAULT,DEFAULT);</p>\r\n<p> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\' HMZ-T3W 头戴显示设备\',\'笔记本配件\',\'索尼\',\'6999\',DEFAULT,DEFAULT);</p>\r\n<p> INSERT tdb_goods (goods_name,goods_cate,brand_name,goods_price,is_show,is_saleoff) VALUES(\'商务双肩背包\',\'笔记本配件\',\'索尼\',\'99\',DEFAULT,DEFAULT);</p>\r\n<p>mysql&gt; SELECT * FROM TDB_GOODS\\G;</p>\r\n<p>这时候显示数据看看有没有乱码，如果有，改gbk</p>\r\n<p> </p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n<p> </p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\n ', '2016-04-28 20:05:06', '2016-04-28 20:28:27', '0', '0', '0', '1', '84');
INSERT INTO `blog` VALUES ('3007', 'web进阶之jQuery操作DOM元素&&MySQL记录操作&&PHP面向对象学习笔记 ', '网络', '\n<p>hi</p>\r\n<p>保持学习数量和质量</p>\r\n<p>1、jQuery操作DOM元素</p>\r\n<p>----使用attr()方法控制元素的属性</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">attr()</code>方法的作用是设置或者返回元素的属性，其中<code class=\"marker\">attr(属性名)</code>格式是获取元素属性名的值，<code class=\"marker\">attr(属性名，属性值)</code>格式则是设置元素属性名的值。</p>\r\n<p>控制就是获取以及设置</p>\r\n<p> &lt;h3&gt;attr()方法设置元素属性&lt;/h3&gt;<br>        &lt;a href=\"http://127.0.0.1\" id=\"a1\"&gt;点我就变&lt;/a&gt;<br>        &lt;div&gt;我改变后的地址是：&lt;span id=\"tip\"&gt;&lt;/span&gt;&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"#a1\").attr(\"href\",\"www.imooc.com\");<br>            var $url = $(\"#a1\").attr(\"href\");<br>            $(\"#tip\").html($url);<br>        &lt;/script&gt;</p>\r\n<p>----操作元素的内容</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>使用<code class=\"marker\">html()</code>和<code class=\"marker\">text()</code>方法操作元素的内容，当两个方法的参数为空时，表示获取该元素的内容，而如果方法中包含参数，则表示将参数值设置为元素内容。</p>\r\n<p>使用方法与attr()略有不同，但作用基本相同</p>\r\n<p> &lt;h3&gt;html()和text()方法设置元素内容&lt;/h3&gt;<br>        &lt;div id=\"html\"&gt;&lt;/div&gt;<br>        &lt;div id=\"text\"&gt;&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            var $content = \"&lt;b&gt;唉，我又变胖了！&lt;/b&gt;\";<br>            $(\"#html\").html($content);<br>            $(\"#text\").text($content);<br>        &lt;/script&gt;</p>\r\n<p>----操作元素的样式</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>通过<code class=\"marker\">addClass()</code>和<code class=\"marker\">css()</code>方法可以方便地操作元素中的样式，前者括号中的参数为增加元素的样式名称，后者直接将样式的属性内容写在括号中。</p>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;css()方法设置元素样式&lt;/h3&gt;<br>        &lt;div id=\"content\"&gt;我穿了一件红色外衣&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"#content\").css({\"background-color\":\"red\",\"color\":\"#fff\"}) ;<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----移除属性和样式</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>使用<code class=\"marker\">removeAttr(name)</code>和<code class=\"marker\">removeClass(class)</code>分别可以实现移除元素的属性和样式的功能，前者方法中参数表示移除属性名，后者方法中参数则表示移除的样式名</p>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;removeClass()方法移除元素样式&lt;/h3&gt;<br>        &lt;div id=\"content\" class=\"blue white\"&gt;我脱下了一件蓝色外衣&lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"#content\").removeClass(\"blue white\");<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用append()方法向元素内追加内容</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">append(content)</code>方法的功能是向指定的元素中追加内容，被追加的content参数，可以是字符、HTML元素标记，还可以是一个返回字符串内容的函数。</p>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;append()方法追加内容&lt;/h3&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            function rethtml() {<br>                var $html = \"&lt;div id=\'test\' title=\'hi\'&gt;我是调用函数创建的&lt;/div&gt;\"<br>                return $html;<br>            }<br>            $(\"body\").append(rethtml());<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用appendTo()方法向被选元素内插入内容</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">appendTo()</code>方法也可以向指定的元素内插入内容，它的使用格式是：</p>\r\n<p><code class=\"marker\"><strong>$(content).appendTo(selector)</strong></code></p>\r\n<p>参数content表示需要插入的内容，参数selector表示被选的元素，即把content内容插入selector元素内，默认是在尾部。</p>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n</div>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;appendTo()方法插入内容&lt;/h3&gt;<br>        &lt;div&gt;<br>            &lt;span class=\"green\"&gt;小乌龟&lt;/span&gt;<br>        &lt;/div&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            var $html = \"&lt;span class=\'red\'&gt;小青蛙&lt;/span&gt;\"<br>            $($html).appendTo(\"div\");<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p> 注意这里的div若换为.red，效果会有不同，自行实验以及思考吧。</p>\r\n<p>----使用before()和after()在元素前后插入内容</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>使用<code class=\"marker\">before()</code>和<code class=\"marker\">after()</code>方法可以在元素的前后插入内容，它们分别表示在整个元素的前面和后面插入指定的元素或内容，调用格式分别为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).before(content)</strong></code>和<code class=\"marker\"><strong>$(selector).after(content)</strong></code></p>\r\n<p>其中参数content表示插入的内容，该内容可以是元素或HTML字符串。</p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n<p> </p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;after()方法在元素之后插入内容&lt;/h3&gt;<br>        &lt;span class=\"green\"&gt;我们交个朋友吧！&lt;/span&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            var $html = \"&lt;span class=\'red\'&gt;兄弟。&lt;/span&gt;\"<br>            $(\"span\").after($html);<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用clone()方法复制元素</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>调用<code class=\"marker\">clone()</code>方法可以生成一个被选元素的副本，即复制了一个被选元素，包含它的节点、文本和属性，它的调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).clone()</strong></code></p>\r\n<p>其中参数selector可以是一个元素或HTML内容。</p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n<p> </p>\r\n<p> &lt;body&gt;<br>        &lt;h3&gt;使用clone()方法复制元素&lt;/h3&gt;<br>        &lt;span class=\"red\" title=\"hi\"&gt;我是美猴王&lt;/span&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"body\").append($(\"span\").clone());<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----替换内容</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">replaceWith()</code>和<code class=\"marker\">replaceAll()</code>方法都可以用于替换元素或元素中的内容，但它们调用时，内容和被替换元素所在的位置不同，分别为如下所示：</p>\r\n<p><code class=\"marker\"><strong>$(selector).replaceWith(content)</strong></code>和<code class=\"marker\"><strong>$(content).replaceAll(selector)</strong></code></p>\r\n<p>参数selector为被替换的元素，content为替换的内容。</p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n</div>\r\n<p> </p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;使用replaceAll()方法替换元素内容&lt;/h3&gt;<br>        &lt;span class=\"green\" title=\"hi\"&gt;我是屌丝&lt;/span&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            var $html = \"&lt;span class=\'red\' title=\'hi\'&gt;我是土豪&lt;/span&gt;\";<br>            $($html).replaceAll(\"span\");<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用wrap()和wrapInner()方法包裹元素和内容</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">wrap()</code>和<code class=\"marker\">wrapInner()</code>方法都可以进行元素的包裹，但前者用于包裹元素本身，后者则用于包裹元素中的内容，它们的调用格式分别为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).wrap(wrapper)</strong></code>和<code class=\"marker\"><strong>$(selector).wrapInner(wrapper)</strong></code></p>\r\n<p>参数selector为被包裹的元素，wrapper参数为包裹元素的格式。比如&lt;div&gt;&lt;/div&gt;</p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;使用wrapInner()方法包裹元素&lt;/h3&gt;<br>        &lt;span class=\"red\" title=\'hi\'&gt;我的身体有点歪&lt;/span&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\".red\").wrapInner(\"&lt;i&gt;&lt;/i&gt;\");<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用each()方法遍历元素</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>使用<code class=\"marker\">each()</code>方法可以遍历指定的元素集合，在遍历时，通过回调函数返回遍历元素的序列号，它的调用格式为：</p>\r\n<p><code class=\"marker\"><strong>$(selector).each(function(index))</strong></code></p>\r\n<p>参数function为遍历时的回调函数，index为遍历元素的序列号，它从0开始。</p>\r\n<p>&lt;body&gt;<br>        &lt;h3&gt;使用each()方法遍历元素&lt;/h3&gt;<br>        &lt;span class=\"green\"&gt;香蕉&lt;/span&gt;<br>        &lt;span class=\"green\"&gt;桃子&lt;/span&gt;<br>        &lt;span class=\"green\"&gt;葡萄&lt;/span&gt;<br>        &lt;span class=\"green\"&gt;荔枝&lt;/span&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"span\").each(function (index) {<br>                if (index == 1) {<br>                    $(this).attr(\"class\", \"red\");<br>                }<br>            });<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p>----使用remove()和empty()方法删除元素</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p><code class=\"marker\">remove()</code>方法删除所选元素本身和子元素，该方法可以通过添加过滤参数指定需要删除的某些元素，而<code class=\"marker\">empty()</code>方法则只删除所选元素的子元素。</p>\r\n</div>\r\n</div>\r\n<p>    &lt;body&gt;<br>        &lt;h3&gt;使用empty()方法删除元素&lt;/h3&gt;<br>        &lt;span class=\"green\"&gt;香蕉&lt;/span&gt;<br>        &lt;span class=\"green\"&gt;桃子&lt;/span&gt;<br>        &lt;span class=\"green\"&gt;葡萄&lt;/span&gt;<br>        &lt;span class=\"green\"&gt;荔枝&lt;/span&gt;<br><br>        &lt;script type=\"text/javascript\"&gt;<br>            $(\"span\").empty(\".green\");<br>        &lt;/script&gt;<br>    &lt;/body&gt;</p>\r\n<p> </p>\r\n<p>2、MySQL</p>\r\n<p>-----操作数据表中的记录-----</p>\r\n<p>mysql&gt; CREATE TABLE users(<br>    -&gt; id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,<br>    -&gt; username VARCHAR(20) NOT NULL,<br>    -&gt; password VARCHAR(32) NOT NULL,<br>    -&gt; age SMALLINT NOT NULL DEFAULT 10,<br>    -&gt; sex BOOLEAN<br>    -&gt; );</p>\r\n<p>----插入记录INSERT</p>\r\n<p>INSERT tbl_name [(col_name)] {VALUES|VALUE}...</p>\r\n<p>若省略字段，则对所有字段进行赋值操作。若此时想保持主键的递增，主键的VALUE写为NULL/DEFAULT即可。而且，省略字段时，必须且只能对所有赋值，每一个字段都要赋值，若不匹配会报错</p>\r\n<p>mysql&gt; INSERT users VALUES(NULL,\'Tom\',\'123\',23,1);</p>\r\n<p>赋值可以写值，也可以写函数，或者默认值。这里插入多个值为例。</p>\r\n<p>mysql&gt; INSERT users VALUES(NULL,\'Tom\',\'123\',23,1),(NULL,\'Rose\',md5(\'123\'),DEFAULT,0);</p>\r\n<p>mysql&gt; SELECT * FROM users;<br>+----+----------+----------------------------------+-----+------+<br>| id | username | password                         | age | sex  |<br>+----+----------+----------------------------------+-----+------+<br>|  1 | Tom      | 123                              |  23 |    1 |<br>|  2 | Tom      | 123                              |  23 |    1 |<br>|  3 | Rose     | 202cb962ac59075b964b07152d234b70 |  10 |    0 |<br>+----+----------+----------------------------------+-----+------+</p>\r\n<p>----其他插入记录的方法</p>\r\n<p>--INSERT.. SET </p>\r\n<p>与INSERT不同的在于可以进行子查询（SubQuery）;且每次只能插入一条记录</p>\r\n<p>INSERT tbl_name </p>\r\n<p>mysql&gt; INSERT users SET username=\'Ben\',password=\'323\';</p>\r\n<p>由于其他字段有默认或者非空，所以这样写没错。</p>\r\n<p>--INSERT...SELECT</p>\r\n<p>----更新（单表更新）UPDATE</p>\r\n<p>类似INSERT...SET...的书写方式</p>\r\n<p>mysql&gt; UPDATE users SET age=age+5;</p>\r\n<p>mysql&gt; SELECT * FROM users;<br>+----+----------+----------------------------------+-----+------+<br>| id | username | password                         | age | sex  |<br>+----+----------+----------------------------------+-----+------+<br>|  1 | Tom      | 123                              |  28 |    1 |<br>|  2 | Tom      | 123                              |  28 |    1 |<br>|  3 | Rose     | 202cb962ac59075b964b07152d234b70 |  15 |    0 |<br>|  4 | Ben      | 323                              |  15 | NULL |<br>+----+----------+----------------------------------+-----+------+</p>\r\n<p>此时更新所有列。</p>\r\n<p>若想更新某些列，要用到条件</p>\r\n<p>mysql&gt; UPDATE users SET age=age+10 WHERE id%2=0;</p>\r\n<p>这里的意思是把偶数id的age加10的操作</p>\r\n<p>----删除记录（单表删除）DELETE</p>\r\n<p>DELETE FROM tbl [WHERE ...]</p>\r\n<p>注意删除后再插入的id变化</p>\r\n<p>mysql&gt; DELETE FROM users WHERE id=2;<br>Query OK, 1 row affected (0.01 sec)</p>\r\n<p>mysql&gt; SELECT * FROM users;<br>+----+----------+----------------------------------+-----+------+<br>| id | username | password                         | age | sex  |<br>+----+----------+----------------------------------+-----+------+<br>|  1 | Tom      | 123                              |  27 |    0 |<br>|  3 | Rose     | 202cb962ac59075b964b07152d234b70 |  12 |    0 |<br>|  4 | Ben      | 323                              |  21 |    0 |<br>+----+----------+----------------------------------+-----+------+<br>3 rows in set (0.00 sec)</p>\r\n<p>mysql&gt; INSERT users SET username=\'Ben\',password=\'323\';<br>Query OK, 1 row affected (0.01 sec)</p>\r\n<p>mysql&gt; SELECT * FROM users;<br>+----+----------+----------------------------------+-----+------+<br>| id | username | password                         | age | sex  |<br>+----+----------+----------------------------------+-----+------+<br>|  1 | Tom      | 123                              |  27 |    0 |<br>|  3 | Rose     | 202cb962ac59075b964b07152d234b70 |  12 |    0 |<br>|  4 | Ben      | 323                              |  21 |    0 |<br>|  5 | Ben      | 323                              |  10 | NULL |<br>+----+----------+----------------------------------+-----+------+</p>\r\n<p>id号是自动增加，而不是智能的填补，请注意。</p>\r\n<p>----查询SELECT</p>\r\n<p>对于数据库最多应用的语句。比如之前见过的SELECT * FROM users;</p>\r\n<p>--查询表达式</p>\r\n<p>每一个表达式表示想要的一列，必须有且至少有一个；</p>\r\n<p>多个列之间以,分隔</p>\r\n<p>*表示所有列。tbl_name.*可以表示命名表的所有列；</p>\r\n<p>mysql&gt; SELECT id,username FROM users;</p>\r\n<p>也可以改变顺序来显示</p>\r\n<p>mysql&gt; SELECT username,id FROM userS;<br>+----------+----+<br>| username | id |<br>+----------+----+<br>| Tom      |  1 |<br>| Rose     |  3 |<br>| Ben      |  4 |<br>| Ben      |  5 |<br>+----------+----+</p>\r\n<p>为了以后多表查询的方便，“全”查询这样写</p>\r\n<p>mysql&gt; SELECT users.id,users.username FROM users;</p>\r\n<p>--赋予别名</p>\r\n<p>mysql&gt; SELECT id AS userid,username AS uname FROM users;<br>+--------+-------+<br>| userid | uname |<br>+--------+-------+<br>|      1 | Tom   |<br>|      3 | Rose  |<br>|      4 | Ben   |<br>|      5 | Ben   |<br>+--------+-------+</p>\r\n<p>数据表中的名称其实没有变</p>\r\n<p>----WHERE条件</p>\r\n<p>添加删除一般要加，不然就是对所有记录的操作；WHERE表达式中支持函数或运算符</p>\r\n<p>----GROUP BY查询结果分组</p>\r\n<p>ASC升序， DESC降序</p>\r\n<p>mysql&gt; SELECT sex FROM users GROUP BY sex;<br>+------+<br>| sex  |<br>+------+<br>| NULL |<br>|    0 |<br>+------+<br>2 rows in set (0.01 sec)</p>\r\n<p>mysql&gt; SELECT sex FROM users GROUP BY age ASC;<br>+------+<br>| sex  |<br>+------+<br>| NULL |<br>|    0 |<br>|    0 |<br>|    0 |<br>+------+</p>\r\n<p>----having分组条件</p>\r\n<p>mysql&gt; SELECT sex,age FROM users GROUP BY sex HAVING age&gt;20;<br>+------+-----+<br>| sex  | age |<br>+------+-----+<br>|    0 |  27 |<br>+------+-----+</p>\r\n<p>注意having语句中的字段必须出现在select中，或者就干脆是个聚合函数（max等）</p>\r\n<p>----查询结果进行排序ORDER BY</p>\r\n<p>类似GROUP BY</p>\r\n<p>mysql&gt; SELECT * FROM users ORDER BY age,id DESC;</p>\r\n<p>+----+----------+----------------------------------+-----+------+<br>| id | username | password                         | age | sex  |<br>+----+----------+----------------------------------+-----+------+<br>|  5 | Ben      | 323                              |  10 | NULL |<br>|  3 | Rose     | 202cb962ac59075b964b07152d234b70 |  12 |    0 |<br>|  4 | Ben      | 323                              |  21 |    0 |<br>|  1 | Tom      | 123                              |  27 |    0 |<br>+----+----------+----------------------------------+-----+------+</p>\r\n<p>注意这里排序的标准给了不止一个，则先按照age进行默认的升序，若遇到相同的，则再按照id对相同的进行降序排列</p>\r\n<p>----LIMIT限制返回数量</p>\r\n<p>mysql&gt; SELECT * FROM users LIMIT 2,2;<br>+----+----------+----------+-----+------+<br>| id | username | password | age | sex  |<br>+----+----------+----------+-----+------+<br>|  4 | Ben      | 323      |  21 |    0 |<br>|  5 | Ben      | 323      |  10 | NULL |<br>+----+----------+----------+-----+------+</p>\r\n<p>需要注意的是若只写一个数字2，是说从头算起的两个；这里的2,2是指，从第三条开始返回两条，因为排列是默认从0开始的，所以这里是第三条开始。</p>\r\n<p>另外，限制的顺序与id没有关系</p>\r\n<p>mysql&gt; SELECT * FROM users ORDER BY id DESC LIMIT 2;<br>+----+----------+----------+-----+------+<br>| id | username | password | age | sex  |<br>+----+----------+----------+-----+------+<br>|  5 | Ben      | 323      |  10 | NULL |<br>|  4 | Ben      | 323      |  21 |    0 |<br>+----+----------+----------+-----+------+</p>\r\n<p>----学习了SELECT之后</p>\r\n<p>mysql&gt; INSERT test(username) SELECT username FROM users WHERE age&gt;=20;</p>\r\n<p>mysql&gt; SELECT * FROM test;<br>+----+----------+<br>| id | username |<br>+----+----------+<br>|  1 | Tom      |<br>|  2 | Ben      |<br>+----+----------+</p>\r\n<p>就可以定向的查找并写入</p>\r\n<p>----小结</p>\r\n<p>记录操作：增更删查</p>\r\n<p>INSERT,UPDATE,DELETE,SELECT</p>\r\n<p>3、面向对象</p>\r\n<p> -----基本实践-----</p>\r\n<p>----类的概念</p>\r\n<p>类可以看作是“一类人”，具有相同的“属性”和“方法”（但相对应的值不一定相同）；</p>\r\n<p>属性，是类的固有性质</p>\r\n<p>方法，是类的“动作”</p>\r\n<p>类的对象称为类的实例化——对象就是属于类的某一个个体，类的具体化</p>\r\n<p>类的属性和方法是类成员</p>\r\n<p>----类的实例化</p>\r\n<p>用具体的数据填满类的框架</p>\r\n<p>&lt;?php<br>/*<br> * 面对对象的学习记录用代码<br> */<br>//定义类<br>class nbaPlayer{<br>	public $name=\"Jordan\";<br>	public $height=\"198cm\";<br>	public $team=\"Bull\";<br><br>	public function __construct(){<br><br>	}<br><br>	public function run(){<br>		echo \"Running\\n\";<br>	}<br>}<br>//实例化<br>$jordan=new nbaPlayer();<br>//调用对象的属性和方法<br>echo $jordan-&gt;name.\"\\n\";<br>$jordan-&gt;run();</p>\r\n<p>----构造函数</p>\r\n<p>__construct</p>\r\n<p>默认调用，可以自定义来给出类的默认值</p>\r\n<p>使用方法是在函数中写入变量，实例化的时候要给值</p>\r\n<p>&lt;?php<br>/*<br> * 面对对象的学习记录用代码<br> */<br>//定义类<br>class nbaPlayer{<br>	public $name;<br>	public $height;<br>	public $team;<br><br>	public function __construct($name,$height,$team){<br>		echo \"constructing\\n\";//判断是否调用了构造函数<br>		$this-&gt;name=$name;      //在方法中用$this伪变量来传递参数<br>		$this-&gt;height=$height;<br>		$this-&gt;team=$team;<br>	}<br><br>	public function run(){<br>		echo \"Running\\n\";<br>	}<br>}<br>//实例化<br>$jordan=new nbaPlayer(\"Jordan\",\"198cm\",\"Bull\");<br>//调用对象的属性和方法<br>echo $jordan-&gt;name.\"\\n\";</p>\r\n<p>$jordan-&gt;run();</p>\r\n<p>$james=new nbaPlayer(\"James\", \"197cm\", \"Heat\");</p>\r\n<p>注意这里会输出两次构造函数。也就是说，每一次实例化都会调用一次构造函数。</p>\r\n<p>----析构函数</p>\r\n<p>__destruct()</p>\r\n<p>写入析构函数后，</p>\r\n<p>function __destruct(){<br>		echo \"destructing\\n\";<br>	}</p>\r\n<p>结果如下</p>\r\n<p>constructing Jordan Running constructing destructing destructing</p>\r\n<p>也就是说，析构函数会在程序结束的时候自动调用</p>\r\n<p>或者，把实例化的对象赋值为null时也会调用析构函数</p>\r\n<p>一般用于清理使用的资源</p>\r\n<p>----对象引用</p>\r\n<p>//对象的引用<br>$james1=$james;</p>\r\n<p>$james2=&amp;$james;</p>\r\n<p>其中，有&amp;的引用，两个对象的变化是同步的，可以看作是一种映像。具体可以用上面提到的析构函数来简单的验证。</p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n</div>\n ', '2016-04-28 20:05:06', '2016-04-28 20:28:27', '0', '0', '0', '1', '84');
INSERT INTO `blog` VALUES ('3008', '数据库有点意思 ', '网络', '\n<p>　　hi</p>\r\n<p>今天没什么想头，直接数据库搞起。看了看课程，入门这个就打算7天搞定好了，毕竟还是在教研室干活的人。。。</p>\r\n<p>1、MySQL</p>\r\n<p>---添加约束---</p>\r\n<p>--mysql&gt; ALTER TABLE users2 ADD PRIMARY KEY (id);</p>\r\n<p>--mysql&gt; ALTER TABLE users2 ADD FOREIGN KEY (pid) REFERENCES province (id);</p>\r\n<p>--设置默认值mysql&gt; ALTER TABLE users2 ALTER age SET DEFAULT 15;</p>\r\n<p>删除默认值mysql&gt; ALTER TABLE users2 ALTER age DROP DEFAULT;</p>\r\n<p>--删除主键，由于每张表只有一个主键，所以mysql&gt; ALTER TABLE users2 DROP PRIMARY KEY;</p>\r\n<p>--删除唯一约束，由于唯一约束在一张表中可能有很多个，所以要先查名字mysql&gt; SHOW INDEXES FROM users2\\G;即那个Key_name</p>\r\n<p>mysql&gt; ALTER TABLE users2 DROP INDEX username;</p>\r\n<p>注意这里删除的是约束</p>\r\n<p>--删除外键约束，也是要先查看名字</p>\r\n<p>mysql&gt; SHOW CREATE TABLE users2;<br>+--------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+<br>| Table  | Create Table                                                                                                                                                                                                                                                                                                                                   |<br>+--------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+<br>| users2 | CREATE TABLE `users2` (<br>  `username` varchar(10) NOT NULL,<br>  `pid` smallint(5) unsigned DEFAULT NULL,<br>  `id` smallint(5) unsigned NOT NULL DEFAULT \'0\',<br>  `age` tinyint(3) unsigned NOT NULL,<br>  UNIQUE KEY `pid` (`pid`),<br>  CONSTRAINT `users2_ibfk_1` FOREIGN KEY (`pid`) REFERENCES `province` (`id`)<br>) ENGINE=InnoDB DEFAULT CHARSET=latin1 |<br>+--------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+<br>1 row in set (0.00 sec)</p>\r\n<p>这里找到CONSTRAINT后面的名称，然后</p>\r\n<p>mysql&gt; ALTER TABLE users2 DROP FOREIGN KEY users2_ibfk_1;</p>\r\n<p>这里删除的是外键约束，但索引还在，要删除索引需要上面的命令DROP INDEX</p>\r\n<p>---修改数据表---</p>\r\n<p>--修改列定义（数据类型，位置等）</p>\r\n<p>mysql&gt; ALTER TABLE users2 MODIFY id SMALLINT UNSIGNED NOT NULL FIRST;</p>\r\n<p>注意这里id的定义虽然不变，但是还是要输入一遍；要是要修改定义，也要输入相对应的；而且修改列定义一定要小心，尤其是数据库中数据很多很杂的时候。</p>\r\n<p>--修改列名称</p>\r\n<p>mysql&gt; ALTER TABLE users2 CHANGE pid p_id TINYINT UNSIGNED NOT NULL;</p>\r\n<p>change的能力要大，输入也要多一点</p>\r\n<p>--修改数据表名字</p>\r\n<p>mysql&gt; ALTER TABLE users2 RENAME users3;</p>\r\n<p>mysql&gt; RENAME TABLE users3 TO users2;</p>\r\n<p>两种方法，其中第二种方法可以对多个表进行修改</p>\r\n<p>------再次强调，尽量不要修改表名或者库名，危险，必须谨慎。-------</p>\r\n<p>---小结---</p>\r\n<p>--约束</p>\r\n<p>-5种约束或表级和列级</p>\r\n<p>--修改数据表</p>\r\n<p>-对字段：添加删除修改定义和名称</p>\r\n<p>-对约束：添加删除</p>\r\n<p>-对数据表：更名</p>\r\n<p>2、PHP-正则表达式</p>\r\n<p>---边界控制与模式单元---</p>\r\n<p>--^匹配字符串开始的位置-限制要匹配的字段必须以什么开头</p>\r\n<p>-比如^d必须以d开头，然后前面连空格都不能有</p>\r\n<p>--$。。。。。。结束</p>\r\n<p>--模式单元（）</p>\r\n<p>把（）内的东西当作一个原子看待，（）中是一个正则表达式</p>\r\n<p>----基本语法到此结束，知识点多而散，要灵活运用----</p>\r\n<p>---懒惰匹配与贪婪匹配---</p>\r\n<p>--修正模式-修正匹配出现歧义的情况</p>\r\n<p>--贪婪匹配在歧义时选长的，匹配相反</p>\r\n<p>--有歧义时，默认贪婪</p>\r\n<p>&lt;?php<br>/*<br> * Description:PHP 正则表达式函数<br> * <br> * @name:show<br> * @description:output debug<br> * @param $var:input data<br> * @return void<br> * <br> */</p>\r\n<p>//产生歧义<br>$pattern=\'/imooc.+123/\';  //匹配imooc任意个任意多个字符并以123结尾<br>$subject=\'I love imooc__123123123123123\';</p>\r\n<p>$matches=array();<br>preg_match($pattern,$subject,$matches);</p>\r\n<p>show($matches);</p>\r\n<p>function show($var=null){<br>	if(empty($var)){<br>		echo \'null\';<br>	}elseif(is_array($var)||is_object($var)){<br>		//array,object<br>		echo \'&lt;pre&gt;\';<br>		print_r($var);<br>		echo \'&lt;/pre&gt;\';<br>	}else{<br>		//string,int,float...<br>		echo $var;<br>	}<br>}</p>\r\n<p>结果是</p>\r\n<pre>Array\r\n(\r\n    [0] =&gt; imooc__123123123123123\r\n)\r\n</pre>\r\n<p>--修改为懒惰模式：$pattern=\'/imooc.+123/U\';  </p>\r\n<pre>Array\r\n(\r\n    [0] =&gt; imooc__123\r\n)\r\n</pre>\r\n<p>---常见的修正模式---</p>\r\n<p>--U，懒惰匹配  $pattern=\'/imooc.+123/U\'; </p>\r\n<p>--i，忽略大小写 $pattern=\'/iMooc.+123/Ui\';  //这里用了两种修正模式，也是可以的</p>\r\n<p>--x，忽略空白 $pattern=\'/iMo o<span class=\"Apple-tab-span\"> c.+123/Uxi\';</span></p>\r\n<p>--s，让‘.\'匹配除换行符以外的所有字符</p>\r\n<p>--注意，修正模式是指对匹配结构进行修正，对象是正则表达式，一定不是匹配对象</p>\r\n<p>-------------实战应用-------------</p>\r\n<p>---常用情况---</p>\r\n<p>--需求~正则表达式的行为的口头描述~正则表达式</p>\r\n<p>--非空~原子出现的次数1次到无穷大次~.+   //.一般代表任意原子，+代表任意多个，应用场景就是必填项的提示等</p>\r\n<p>--浮点数（例子是两位小数的浮点数）~数字连续出现1到无穷大次，点号后面有两位数字~\\d+\\.\\d{2}$      //\\d数字匹配，\\.转义.，\\d{2}两位数字i，{}实现量词，$必须以两位数字结尾（和之前的描述相吻合）。应用场景是款项之类的验证</p>\r\n<p> </p>\r\n<p>----------------复习------------------</p>\r\n<p>筛选</p>\r\n<p>|  匹配两个或多个，即或者</p>\r\n<p>[]  匹配括号内任意一个原子，特殊[1-3]，这里的-是“到”的意思</p>\r\n<p>[^] 同上互逆，匹配除括号内的所有原子</p>\r\n<p>注意：用^要小心，会匹配所有其他的，包括空格等不可见原子；再有就是^要和其他原子紧贴顶头写</p>\r\n<p>-定义原子的集合</p>\r\n<p>.   等价于[^\\n]，匹配除换行符之外的任意字符——基本上就是所有的</p>\r\n<p>\\d  [0-9]匹配一个十进制数字</p>\r\n<p>\\D  [^0-9]匹配一个非十进制数字</p>\r\n<p>\\w  [0-9a-zA-Z]匹配一个数字、字母或下划线</p>\r\n<p>\\W  [^0-9a-zA-Z]匹配一个非数字、字母或下划线</p>\r\n<p>\\s  匹配一个不可见原子</p>\r\n<p>\\S  匹配一个可见原子</p>\r\n<p>--量词</p>\r\n<p>-表示某个原子连续出现多少次</p>\r\n<p>-{n}   表示其前面的原子恰好连续出现n次——5{3}</p>\r\n<p>-{n,}   表示其前面的原子至少连续出现n次</p>\r\n<p>-{n,m}   [f|5]{3,6}表示连续出现n次，最多m次,就是n到m次</p>\r\n<p>-*   任意次，只要连续，都匹配，{0,}</p>\r\n<p>-?    {0,1}0到1次</p>\r\n<p>-+   {1,}至少有1次</p>\r\n<p>-------------------复习结束------------------------</p>\r\n<p>--手机号匹配~数字，11位，以数字结尾，以数字1开头~^1[34578]\\d{9}$或者^1(3|4|5|7|8)\\d{9}$</p>\r\n<p>--email地址匹配~英文或者数字，位数不限，有@，有.，并以非数字结尾~^\\w+@\\w+(\\.\\w+)+$   //注意（）的妙用，即自定义原子（块），把可能重复出现的一些原子集合的写</p>\r\n<p>--URL地址匹配~字母开头（非数字），://，然后是数字，字母.之类的~^(https?://)?(\\w+\\.)+[a-zA-Z]+      //这里仅仅是匹配到了一般情况</p>\r\n<p> </p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:05:06', '0', '0', '0', '0', '84');
INSERT INTO `blog` VALUES ('3009', '周一周一周。。一 ', '网络', '\n<p>　　hi</p>\r\n<p>周一是谁设定的。。。、</p>\r\n<p>1、JS</p>\r\n<p>主要是DOM的内容，本来是打算就随便看看，粘贴复制就算了的，但是看看后面还要学习iQuery等内容，还是好好看看吧，DOM这边总有些东西有点蛋疼。。。代码先不上了，待完成这一章的编程练习再说好了，吃饭去</p>\r\n<p>------------------17：19-----------------------</p>\r\n<p> 2、MySQL</p>\r\n<p>---约束---</p>\r\n<p>--目的是为了保证数据的完整性和一致性</p>\r\n<p>--分为表级约束和列级约束</p>\r\n<p>--仅针对某一对象（一列），称为列级约束；若大于1列，就是表级</p>\r\n<p>--五种约束：DEFAULT,NOT NULL,PRIMARY KEY,UNIQUE KEY,FOREIGN KEY</p>\r\n<p>---FOREIGN KEY 外键约束---</p>\r\n<p>--实现一对一或一对多</p>\r\n<p>--使用该约束需要一些条件，比如父表和子表（默认存储引擎都为Inno DB），外键列和参照列（具有相似的数据类型），索引的创立（默认的主键或者自己创建）等</p>\r\n<p>--实现以上要求，可以创建数据表之后，输入SHOW CREATE TABLE table_name;命令查看</p>\r\n<p>--使用外键，如下所示</p>\r\n<p>mysql&gt; CREATE TABLE province(<br>    -&gt; id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,<br>    -&gt; pename VARCHAR(20) NOT NULL);<br>Query OK, 0 rows affected (0.04 sec)</p>\r\n<p>mysql&gt; SHOW CREATE TABLE province;<br>+----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+<br>| Table    | Create Table                                                                                                                                                                |<br>+----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+<br>| province | CREATE TABLE `province` (<br>  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,<br>  `pename` varchar(20) NOT NULL,<br>  PRIMARY KEY (`id`)<br>) ENGINE=InnoDB DEFAULT CHARSET=latin1 |<br>+----------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+<br>1 row in set (0.00 sec)</p>\r\n<p>mysql&gt; CREATE TABLE users(<br>    -&gt; id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,<br>    -&gt; username VARCHAR(10) NOT NULL,<br>    -&gt; pid BIGINT,<br>    -&gt; FOREIGN KEY(pid) REFERENCES province (id)<br>    -&gt; );<br>ERROR 1215 (HY000): Cannot add foreign key constraint<br>mysql&gt; CREATE TABLE users(<br>    -&gt; id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,<br>    -&gt; username VARCHAR(10) NOT NULL,<br>    -&gt; pid SMALLINT UNSIGNED,<br>    -&gt; FOREIGN KEY(pid) REFERENCES province (id)<br>    -&gt; );<br>Query OK, 0 rows affected (0.04 sec)</p>\r\n<p>注意，这里体现出1】INNODB的检验；2】数据类型的相似条件；3】FOREIGN KEY的使用方式</p>\r\n<p>另外，区分好子表users，父表province，外键列pid，参照列id</p>\r\n<p>---外键约束的参照操作---</p>\r\n<p>--CASCADE,SET NULL,RESTRICT,NO ACTION</p>\r\n<p>--表示主表做变化后，子表是否变化</p>\r\n<p>--需要注意的是，要想往子表中插入记录，必须先往父表中插入记录，不然你让子表去哪里参考</p>\r\n<p>mysql&gt; INSERT province(pename) VALUES(\'A\');<br>Query OK, 1 row affected (0.01 sec)</p>\r\n<p>mysql&gt; INSERT province(pename) VALUES(\'B\');<br>Query OK, 1 row affected (0.01 sec)</p>\r\n<p>mysql&gt; INSERT province(pename) VALUES(\'C\');<br>Query OK, 1 row affected (0.01 sec)</p>\r\n<p>mysql&gt; INSERT users1(username,pid) VALUES(\'TOM\',2);<br>Query OK, 1 row affected (0.01 sec)</p>\r\n<p>mysql&gt; INSERT users1(username,pid) VALUES(\'JACK\',1);<br>Query OK, 1 row affected (0.01 sec)</p>\r\n<p>mysql&gt; SELECT * FROM users1;<br>+----+----------+------+<br>| id | username | pid  |<br>+----+----------+------+<br>|  1 | TOM      |    2 |<br>|  2 | JACK     |    1 |<br>+----+----------+------+<br>2 rows in set (0.00 sec)</p>\r\n<p>mysql&gt; DELETE FROM province WHERE id=3;<br>Query OK, 1 row affected (0.01 sec)</p>\r\n<p>mysql&gt; SELECT * FROM users1;<br>+----+----------+------+<br>| id | username | pid  |<br>+----+----------+------+<br>|  1 | TOM      |    2 |<br>|  2 | JACK     |    1 |<br>+----+----------+------+<br>2 rows in set (0.00 sec)</p>\r\n<p>mysql&gt; DELETE FROM province WHERE id=2;<br>Query OK, 1 row affected (0.01 sec)</p>\r\n<p>mysql&gt; SELECT * FROM users1;<br>+----+----------+------+<br>| id | username | pid  |<br>+----+----------+------+<br>|  2 | JACK     |    1 |<br>+----+----------+------+<br>1 row in set (0.00 sec)</p>\r\n<p>--CASCADE-父子同步删除或更新</p>\r\n<p>--SET NULL-父删除，则子为NULL；另外，子不能设置为NOT NULL</p>\r\n<p>--RESTRICT-拒绝对父的删除和更新</p>\r\n<p>--NO ACTION-类似上一个</p>\r\n<p>--很多情况，多使用逻辑的外键约束，不适用这种innodb的物理约束</p>\r\n<p>---表级和列级</p>\r\n<p>--列级，在列的声明时或声明后定义，比如FOREIGN　KEY</p>\r\n<p>--表级，用的少，必须在列定义后声明</p>\r\n<p>---修改数据表---</p>\r\n<p>--即列的添加/删除，约束的添加/删除</p>\r\n<p>--添加列</p>\r\n<p>-ALTER TABLE tbl_name ADD [COLUMN] col_name column_definition [FIRST|AFTER col_name]</p>\r\n<p>mysql&gt; ALTER TABLE users1 ADD password VARCHAR(32) NOT NULL AFTER username;<br>Query OK, 0 rows affected (0.08 sec)<br>Records: 0  Duplicates: 0  Warnings: 0</p>\r\n<p>-添加多列：ALTER TABLE tbl_name ADD [COLUMN](col_name column_definition,...)位置无法再选</p>\r\n<p>--删除列</p>\r\n<p>-ADD变为DROP</p>\r\n<p> </p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:12:00', '0', '0', '0', '1', '84');
INSERT INTO `blog` VALUES ('3010', '无聊到周六的教研室 ', '网络', '\n<p>　　hi！</p>\r\n<p>无聊啊，无聊啊。。。。</p>\r\n<p>虽然前两天懈怠了，用日本人中二的方式说一句，今天我会好好努力的！！</p>\r\n<p>--------------------11：58-------------------</p>\r\n<p>1、MySQL</p>\r\n<p>---数据类型之字符型</p>\r\n<p>--CHAR(M)   VARCHAR(M)  TINYTEXT   TEXT    MEDIUMTEXT   LONGTEXT   ENUM()        SET()</p>\r\n<p>    定长            变长                                                                                    枚举（选择） 集合（任意的排列组合）</p>\r\n<p>---创建数据表</p>\r\n<p>--行称为记录，列称为字段</p>\r\n<p>--数据表组成数据库，所以先处理数据库。</p>\r\n<p>USE TEST;</p>\r\n<p>--创建表格:CREATE TABLE[IF NOT EXISTS] table_name(</p>\r\n<p>                 column_name data_type,   //分隔符为逗号，列数一定要准备好，数据类型已讲,最后一个字段不加逗号</p>\r\n<p>                 ... </p>\r\n<p>               )   </p>\r\n<p>--注意数据类型的选择，比如不能出现负值，就UNSIGNED</p>\r\n<p>mysql&gt; CREATE TABLE tb1(<br>    -&gt; username VARCHAR(20),<br>    -&gt; age TINYINT UNSIGNED,<br>    -&gt; salary FLOAT(8,2) UNSIGNED);</p>\r\n<p>---查看数据表</p>\r\n<p>--SHOW TABLES;</p>\r\n<p>--SHOW TABLES FROM mysql；查看所有表，注意这里数据库并不会改变</p>\r\n<p>---查看数据表结构</p>\r\n<p>--SHOW COLUMNS FROM table_name；</p>\r\n<p>---记录（行）的插入与查找</p>\r\n<p>--INSERT [INTO] tbl_name [(col_name,...)] VALUES(val,...);//如果省略掉列名，则对所有的列进行赋值，也就是说，所有的value都要有，比如有4列，赋值3个值就不行</p>\r\n<p>--查看记录,SELECT的简化使用：SELECT expr,... FROM tbl_name;</p>\r\n<p>---空值与非空  NULL&amp;NOT NULL</p>\r\n<p>--判断输入是否为空:对字段的设定</p>\r\n<p>--比如年龄这个字段必须输入，非空，在创建字段时应该如此：age TINYINT UNSIGNED NOT NULL</p>\r\n<p>---自动编号AUTO_INCREMENT&amp;主键约束</p>\r\n<p>--避免记录不重复</p>\r\n<p>--起始值为1，步长为1</p>\r\n<p>--自动编号的字段必须是主键</p>\r\n<p>--每张数据表必须只有一个主键，主键自动是NOT　NULL，主键不允许存在相同的值</p>\r\n<p>mysql&gt; CREATE TABLE tb3(<br>    -&gt; id SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,//这里自动编号和主键在一起~<br>    -&gt; sername VARCHAR(30) NOT NULL);</p>\r\n<p>+---------+----------------------+------+-----+---------+----------------+<br>| Field   | Type                 | Null | Key | Default | Extra          |<br>+---------+----------------------+------+-----+---------+----------------+<br>| id      | smallint(5) unsigned | NO   | PRI | NULL    | auto_increment |<br>| sername | varchar(30)          | NO   |     | NULL    |                |<br>+---------+----------------------+------+-----+---------+----------------+</p>\r\n<p>SHOW COLUMNS FROM tb3;</p>\r\n<p>SELECT * FROM tb3;</p>\r\n<p>---初涉唯一约束UNIQUE KEY</p>\r\n<p>--保证唯一性</p>\r\n<p>--可以为空值，也可以有许多空值NULL，不算做重复</p>\r\n<p>--与主键不同，可以在一个表中有多个唯一约束</p>\r\n<p>--username VARCHAR(20) UNIQUE KEY,</p>\r\n<p>---初涉默认约束DEFAULT</p>\r\n<p>--系统默认</p>\r\n<p>--常出现于ENUM类型中</p>\r\n<p>mysql&gt; CREATE TABLE tb4(<br>    -&gt; id SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,<br>    -&gt; name VARCHAR(20) NOT NULL UNIQUE KEY,<br>    -&gt; gender ENUM(\'1\',\'2\',\'3\') DEFAULT \'3\');</p>\r\n<p>+--------+----------------------+------+-----+---------+----------------+<br>| Field  | Type                 | Null | Key | Default | Extra          |<br>+--------+----------------------+------+-----+---------+----------------+<br>| id     | smallint(5) unsigned | NO   | PRI | NULL    | auto_increment |<br>| name   | varchar(20)          | NO   | UNI | NULL    |                |<br>| gender | enum(\'1\',\'2\',\'3\')    | YES  |     | 3       |                |<br>+--------+----------------------+------+-----+---------+----------------+</p>\r\n<p> </p>\r\n<p>2、Javascript入门完结篇</p>\r\n<p>---window对象问题</p>\r\n<p>--即浏览器窗口，不要误解为windows系统的对象</p>\r\n<p>--window.open,window.alert</p>\r\n<p>--计时器Interval——执行多次，或clearInterval</p>\r\n<p>-setInterval(fucntion,time);</p>\r\n<p>-clearInterval(setInterval_var_name);用于停止延时操作</p>\r\n<p>&lt;!DOCTYPE HTML&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;<br>&lt;title&gt;计时器&lt;/title&gt;<br>&lt;script type=\"text/javascript\"&gt;<br>   function clock(){<br>      var time=new Date();               	  <br>      document.getElementById(\"clock\").value = time;<br>   }<br>     var i=setInterval(clock,100);<br>&lt;/script&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>  &lt;form&gt;<br>    &lt;input type=\"text\" id=\"clock\" size=\"50\"  /&gt;<br>    &lt;input type=\"button\" value=\"Stop\"  onclick=\"clearInterval(i)\"/&gt;<br>  &lt;/form&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>--计时器Timeout</p>\r\n<p>-setTimeout(function_name,time);</p>\r\n<p>-clearTimeout()</p>\r\n<p>&lt;!DOCTYPE HTML&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;<br>&lt;title&gt;计时器&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;script type=\"text/javascript\"&gt;<br>  var num=0;<br>  var i;<br>  function startCount(){<br>    document.getElementById(\'count\').value=num;<br>    num=num+1;<br>    i=setTimeout(\"startCount()\",1000);<br>  }<br>  function stopCount(){<br>  clearTimeout(i);<br>  }<br>&lt;/script&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>  &lt;form&gt;<br>    &lt;input type=\"text\" id=\"count\" /&gt;<br>    &lt;input type=\"button\" value=\"Start\"  onclick=\"startCount()\"/&gt;<br>    &lt;input type=\"button\" value=\"Stop\"   onclick=\"stopCount()\"/&gt;<br>  &lt;/form&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>--window.history_URL 记录器</p>\r\n<p>-window.history.[属性|方法]</p>\r\n<p>-属性有.length——包含URL条数</p>\r\n<p>-方法有.back().forward().go()</p>\r\n<p>-.back()=.go(-1)</p>\r\n<p>&lt;!DOCTYPE HTML&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;/head&gt;<br> &lt;script type=\"text/javascript\"&gt;<br>        function GoBack() {<br>            window.history.go(-1);<br>        }</p>\r\n<p>        function GoForward() {<br>            window.history.forward();<br>        }<br>    &lt;/script&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>    点击下面的锚点链接，添加历史列表项:    <br>    &lt;br /&gt;<br>    &lt;a href=\"#target1\"&gt;第一个锚点&lt;/a&gt;<br>    &lt;a name=\"target1\"&gt;&lt;/a&gt;<br>    &lt;br /&gt;<br>    &lt;a href=\"#target2\"&gt;第二个锚点&lt;/a&gt;<br>    &lt;a name=\"target2\"&gt;&lt;/a&gt;<br>    &lt;br /&gt;&lt;br /&gt;<br>    使用下面按钮，实现返回前或下一个页面:<br>    &lt;form&gt;<br>       &lt;input type=\"button\"  value=\"返回前一个页面\" onclick=\"GoBack();\" /&gt;<br>       &lt;input type=\"button\"  value=\"返回下一个页面\" onclick=\"GoForward();\" /&gt; <br>    &lt;/form&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>--location对象_用于获取或设置窗体的URL，并且可以用于解析URL</p>\r\n<p>-location.[]</p>\r\n<p><span style=\"font-size: 14px; line-height: 1.5;\">-属性比较多：host,hostname,hash,href,protocal,port,pathname(4h3p)</span></p>\r\n<p>-方法：assign(),reload(),replace()</p>\r\n<p>document.write(window.location.href);</p>\r\n<p>--Navigator 对象包含有关浏览器的信息，通常用于检测浏览器与操作系统的版本。</p>\r\n<p>-基本都是属性:appName,appVersion,appCodeName,platform,userAgent</p>\r\n<p>document.write(window.navigator.appName);</p>\r\n<p>--screen对象用于获取用户的屏幕信息。</p>\r\n<p>-属性多是一些height,width</p>\r\n<p>document.write( \"屏幕宽度：\"+window.screen.width+\"&lt;br&gt;\");<br>document.write( \"屏幕高度：\"+window.screen.height);  </p>\r\n<p>---DOM文档对象模型</p>\r\n<p>--文档对象模型DOM（Document Object Model）定义访问和处理HTML文档的标准方法。DOM 将HTML文档呈现为带有元素、属性和文本的树结构（节点树）。</p>\r\n<p>--也就是说，对文档结构直接进行操作</p>\r\n<p>--用法等见下文代码及注释</p>\r\n<p>----------------------------------------</p>\r\n<p>&lt;!DOCTYPE HTML&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;script type=\"text/javascript\"&gt;<br>function getnum(){<br>  var mynode=document.getElementsByName(\"myt\")         ; //document.getElementsByName()返回带有指定名称的节点对象的集合<br>  alert(mynode.length);<br>}<br>&lt;/script&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;input name=\"myt\" type=\"text\" value=\"1\"&gt;<br>&lt;input name=\"myt\" type=\"text\" value=\"2\"&gt;<br>&lt;input name=\"myt\" type=\"text\" value=\"3\"&gt;<br>&lt;input name=\"myt\" type=\"text\" value=\"4\"&gt;<br>&lt;input name=\"myt\" type=\"text\" value=\"5\"&gt;<br>&lt;input name=\"myt\" type=\"text\" value=\"6\"&gt;</p>\r\n<p>&lt;br /&gt;<br>&lt;input type=\"button\" onclick=\"getnum()\" value=\"看看有几项？\" onclick=\"getnum()\"/&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>---------------------------------------------------------------</p>\r\n<p>&lt;!DOCTYPE HTML&gt;<br>&lt;html&gt;  <br>&lt;head&gt;  <br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /&gt;  <br>&lt;title&gt;JavaScript&lt;/title&gt;  <br>&lt;/head&gt;  <br>&lt;body&gt;  <br><br>        &lt;form name=\"Input\"&gt;<br>            &lt;table align=\"center\" width=\"500px\" height=\"50%\" border=\"1\"&gt;<br>                &lt;tr&gt;<br>                    &lt;td align=\"center\" width=\"100px\"&gt;<br>                        学号:<br>                    &lt;/td&gt;<br>                    &lt;td align=\"center\" width=\"300px\"&gt;<br>                        &lt;input type=\"text\" id=userid name=\"user\" onblur=\"validate();\"&gt;<br>                        &lt;div id=usermsg&gt;&lt;/div&gt;<br>                    &lt;/td&gt;<br>                &lt;/tr&gt;<br>                &lt;tr&gt;<br>                    &lt;td align=\"center\" width=\"100px\"&gt;<br>                        姓名:<br>                    &lt;/td&gt;<br>                        &lt;td align=\"center\"&gt;<br>                        &lt;input type=\"text\" name=\"name\"&gt;<br>                    &lt;/td&gt;<br>                &lt;/tr&gt;<br>                &lt;tr&gt;<br>                    &lt;td align=\"center\" width=\"%45\"&gt;<br>                        性别:<br>                    &lt;/td&gt;<br>                    &lt;td align=\"center\"&gt;<br>                        &lt;input type=\"radio\" name=\"sex\" value=\"男\"&gt;<br>                        男<br>                        &lt;input type=\"radio\" name=\"sex\" value=\"女\"&gt;<br>                        女<br>                    &lt;/td&gt;<br>                &lt;/tr&gt;<br>                &lt;tr&gt;<br>                    &lt;td align=\"center\" width=\"30%\"&gt;<br>                        年龄:<br>                    &lt;/td&gt;<br>                    &lt;td align=\"center\" width=\"300px\"&gt;<br>                        &lt;input type=\"text\" name=\"age\"&gt;<br>                    &lt;/td&gt;<br>                &lt;/tr&gt;<br>                &lt;tr&gt;<br>                    &lt;td align=\"center\" width=\"100px\"&gt;<br>                        地址:<br>                    &lt;/td&gt;<br>                    &lt;td align=\"center\" width=\"300px\"&gt;<br>                        &lt;input type=\"text\" name=\"addr\"&gt;<br>                    &lt;/td&gt;<br>                &lt;/tr&gt;</p>\r\n<p>            &lt;/table&gt;<br>        &lt;/form&gt;<br>        &lt;h1 id=\"myHead\" onclick=\"getValue()\"&gt;<br>            看看三种获取节点的方法?<br>        &lt;/h1&gt;<br>        &lt;p&gt;<br>            点击标题弹出它的值。<br>        &lt;/p&gt;<br>        &lt;input type=\"button\" onclick=\"getElements()\"<br>            value=\"看看name为sex的节点有几个?\" /&gt;<br>        &lt;Br&gt;<br>        &lt;input type=\"button\" onclick=\"getTagElements()\"<br>            value=\"看看标签名为input的节点有几个?\" /&gt;<br><br>     &lt;script type=\"text/javascript\"&gt;<br>         function getValue()<br>          {<br>              var myH=document.getElementById(\"myHead\");   //document.getElementById(),document.getElementsByName(),document.getElementsByTagName()</p>\r\n<p>//1. ID 是一个人的身份证号码，是唯一的。所以通过getElementById获取的是指定的一个人。</p>\r\n<p>//2. Name 是他的名字，可以重复。所以通过getElementsByName获取名字相同的人集合。</p>\r\n<p>//3. TagName可看似某类，getElementsByTagName获取相同类的人集合。如获取小孩这类人，getElementsByTagName(\"小孩\")。</p>\r\n<p><img src=\"http://img.mukewang.com/5405263300018bcf05760129.jpg\" alt=\"\"></p>\r\n<p><br>              alert(myH.innerHTML)<br>          }<br>          function getElements()<br>          {<br>            var mys=document.getElementsByName(\"sex\"); <br>              alert(myS.length);<br>          }</p>\r\n<p>          function getTagElements()<br>          {<br>              var myI=document.getElementsByTagName(\'input\');<br>              alert(myI.length);<br>          }<br><br>     &lt;/script&gt;        </p>\r\n<p>    &lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p> </p>\r\n<p> </p>\r\n<p>3、PHP-面向对象实践</p>\r\n<p>---基本实践</p>\r\n<p>--物以类聚，类，你懂的——相同的属性和方法</p>\r\n<p>--具体化描述类，就是对象。类的对象称为类的一个实例</p>\r\n<p>--类的属性和方法都是类的成员</p>\r\n<p> </p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:05:06', '0', '0', '0', '0', '84');
INSERT INTO `blog` VALUES ('3011', '教研室的夜晚 ', '网络', '\n<p>hi</p>\r\n<p>总感觉这已经不是三天打渔两天晒网了，是。。四天晒网</p>\r\n<p>太阳穴嘣嘣痛的一天，反而只有网上课堂能进行下去的</p>\r\n<p>一、PHP</p>\r\n<p>1、数组</p>\r\n<p>-$var=array()</p>\r\n<p>-索引数组，关联数组</p>\r\n<p>-关联,</p>\r\n<p>$var=array(\'key\'=&gt;\'value\');</p>\r\n<p>array[\'key\'];</p>\r\n<p>-foreach($arr as $key =&gt;$value);</p>\r\n<p>2、函数</p>\r\n<p>-function function_name(){}</p>\r\n<p>-可变函数</p>\r\n<p>$var=\'function.name</p>\r\n<p> </p>\r\n<p>不想一一写下来了，贴代码</p>\r\n<p>&lt;?php</p>\r\n<p>//数组<br>$arr=array(\'apple\'=&gt;\'苹果\',\'pear\'=&gt;\'梨子\');<br>echo $arr[\'apple\'];<br>foreach($arr as $key=&gt;$value){<br>	echo $key.\"的值是\".$value;<br>}</p>\r\n<p>//函数，尤其是可变函数<br>function wahtf(){<br>	echo \"What the f**k\";<br>}<br>$wtf=\'wahtf\';<br>if(function_exists($wtf)){<br>	echo \"Oh shit!\";<br>}</p>\r\n<p>//类和对象<br>//类的基本定义<br>class man{<br>	//访问控制<br>	protected $gender=\"man\";<br>	protected $age=18;<br>	//构造函数<br>	//function __construct(){<br>		// print \"构造函数被调用\\n\"；<br>	//}<br>	//方法<br>	public function ageUp(){<br>		$this-&gt;age+=1;<br>	}<br>	//重载，动态创建属性等<br><br>}</p>\r\n<p>$peter=new man();<br>$peter-&gt;ageUp();<br>//echo $peter;</p>\r\n<p>//字符串<br>$a=\"I\";<br>$b=\"love\";<br>$c=\"you\";<br>$d=$a.$b.$c;<br>//$e=23.23;<br>echo strlen($d);<br>echo substr($d,2,4);<br>echo strpos($d,\"you\");<br>echo str_replace(\"him\",\"you\",$d);<br>//echo sprintf(%01.4f,$e);</p>\r\n<p> </p>\r\n<p>有不少错误，不想查了，留待以后弄吧，不知道是版本问题还是什么，学习其他的去了。</p>\r\n<p>---------19：19---------------</p>\r\n<p>2、git</p>\r\n<p>-仅仅是创建了下git的库，但是linux环境下。。什么鬼。。。</p>\r\n<p>-我觉得是时候装一个红帽子了</p>\r\n<p>3、MySQL</p>\r\n<p>-基本操作命令CREAT ALTER DROP SHOW+DATABASE；</p>\r\n<p>-数据类型之整型：TINYINT     SMALLINT,MEDIUMINT,INT,BIGINT</p>\r\n<p>                        1字节               2               3           4      8</p>\r\n<p>                        2的8次方个数    16             24         32     64</p>\r\n<p>-数据类型之浮点型：FLOAT[(M,D)]       DOUBLE[(M,D)]</p>\r\n<p>                             单精度                        双精度</p>\r\n<p>                         M是总位数，D是小数点后有几位数</p>\r\n<p>注意，这里的中括号是指括号里面的不是必选而是可选项。</p>\r\n<p>-数据类型之日期：YEAR  TIME  DATE  DATETIME  TIMESTAMP</p>\r\n<p>                           1       3        3           8                  4</p>\r\n<p>-数据类型之字符型：CHAR(M)  VARCHAR(M)  TINYTEXT  TEXT  MEDIUMTEXT  LONGTEXT</p>\r\n<p>                            定长             变长            &lt;2的8次    16          24                    42</p>\r\n<p>                          ENUM(\'value1\',\'value2\',...)   SET(\'value1\',\'value2\',...)</p>\r\n<p>                           枚举                                      选择</p>\r\n<p> </p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:05:06', '0', '0', '0', '0', '84');
INSERT INTO `blog` VALUES ('3012', 'PHP_Bibel阅读笔记（二）——脸黑的一天（？一年） ', '网络', '\n<p>　　一早上起来把50包开了，一张橙卡。。。就问还有谁。。。。。。。。。。。本命年啊，我去买红内裤还不行么。。。。</p>\r\n<p>实时更新，老哥的号的30包什么都没有。。。。不过中午又开了5包，皇帝，好评啊！！！</p>\r\n<p><strong>五、代码重用与函数编写</strong></p>\r\n<p>include警告与require的错误；</p>\r\n<p>大量的包含实现，可以改ini文件中的：auto_prepend_file和auto_append_file;</p>\r\n<p>global关键字也是可以用在函数内的参数的；</p>\r\n<p>参数的引用传递和return</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">1</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\FunctionUse;\r\n</span><span style=\"color: #008080;\">2</span> \r\n<span style=\"color: #008080;\">3</span> <span style=\"color: #0000ff;\">include_once</span> \'index.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">4</span> <span style=\"color: #800080;\">$value</span>=10<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">5</span> increment1(<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">6</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$value</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">7</span> <span style=\"color: #800080;\">$value2</span>=100<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">8</span> <span style=\"color: #800080;\">$value2</span>=increment2(<span style=\"color: #800080;\">$value2</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">9</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$value2</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\";</pre>\r\n</div>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #0000ff;\">function</span> increment1(&amp;<span style=\"color: #800080;\">$value</span>,<span style=\"color: #800080;\">$mount</span>=1<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\"> 4</span>     <span style=\"color: #800080;\">$value</span>=<span style=\"color: #800080;\">$value</span>+<span style=\"color: #800080;\">$mount</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 6</span> \r\n<span style=\"color: #008080;\"> 7</span> <span style=\"color: #0000ff;\">function</span> increment2(<span style=\"color: #800080;\">$value</span>,<span style=\"color: #800080;\">$mount</span>=1<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\"> 9</span>     <span style=\"color: #800080;\">$value</span>=<span style=\"color: #800080;\">$value</span>+<span style=\"color: #800080;\">$mount</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">11</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>递归函数比循环慢且占用更多内存，虽然很多循环都可以用递归来代替；（在应用领域中基本不用它</p>\r\n<p><strong>六、面向对象</strong></p>\r\n<p>好玩的代码，学到些东西！</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">  1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">  2</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\ObjectPage;\r\n</span><span style=\"color: #008080;\">  3</span> \r\n<span style=\"color: #008080;\">  4</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Chapter6.P132</span>\r\n<span style=\"color: #008080;\">  5</span> \r\n<span style=\"color: #008080;\">  6</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> Page\r\n</span><span style=\"color: #008080;\">  7</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">  8</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$content</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  9</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$title</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 10</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$keyword</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 11</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$button</span>=<span style=\"color: #0000ff;\">array</span>(\"Home\"=&gt;\"http://115.159.201.78/wordpress/\",\r\n<span style=\"color: #008080;\"> 12</span>         \"Basic\"=&gt;\"Section1.php\"\r\n<span style=\"color: #008080;\"> 13</span> <span style=\"color: #000000;\">    );\r\n</span><span style=\"color: #008080;\"> 14</span>     \r\n<span style=\"color: #008080;\"> 15</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __set(<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 16</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 17</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #800080;\">$name</span>=<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 18</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 19</span>     \r\n<span style=\"color: #008080;\"> 20</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> Display()\r\n</span><span style=\"color: #008080;\"> 21</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 22</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;html&gt;\\n&lt;head&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 23</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayTitle();\r\n</span><span style=\"color: #008080;\"> 24</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayKeywords();\r\n</span><span style=\"color: #008080;\"> 25</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayStyles();\r\n</span><span style=\"color: #008080;\"> 26</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/head&gt;\\n&lt;body&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 27</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayHeader();\r\n</span><span style=\"color: #008080;\"> 28</span>         <span style=\"color: #800080;\">$this</span>-&gt;DisplayMenu(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">button);\r\n</span><span style=\"color: #008080;\"> 29</span>         <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">content;\r\n</span><span style=\"color: #008080;\"> 30</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayFooter();\r\n</span><span style=\"color: #008080;\"> 31</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/body&gt;\\n&lt;/html&gt;\\n\"<span style=\"color: #000000;\">;   \r\n</span><span style=\"color: #008080;\"> 32</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 33</span>     \r\n<span style=\"color: #008080;\"> 34</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayTitle()\r\n</span><span style=\"color: #008080;\"> 35</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 36</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;title&gt;\".<span style=\"color: #800080;\">$this</span>-&gt;title.\"&lt;/title&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 37</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 38</span>     \r\n<span style=\"color: #008080;\"> 39</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayKeywords()\r\n</span><span style=\"color: #008080;\"> 40</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 41</span>         <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$this</span>-&gt;keyword <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$words</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 42</span>             <span style=\"color: #0000ff;\">echo</span> \"&lt;meta name=\\\"keywords\\\" content=\\\"\".<span style=\"color: #800080;\">$words</span>.\"\\\"/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 43</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\"> 44</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 45</span>     \r\n<span style=\"color: #008080;\"> 46</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayStyles()\r\n</span><span style=\"color: #008080;\"> 47</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 48</span>    ?&gt;\r\n<span style=\"color: #008080;\"> 49</span>      &lt;style&gt;\r\n<span style=\"color: #008080;\"> 50</span> <span style=\"color: #000000;\">      h1 {\r\n</span><span style=\"color: #008080;\"> 51</span>             color:white; font-size:24pt; text-align:<span style=\"color: #000000;\">center;\r\n</span><span style=\"color: #008080;\"> 52</span>             font-family:arial,sans-<span style=\"color: #000000;\">serif\r\n</span><span style=\"color: #008080;\"> 53</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 54</span>     .<span style=\"color: #000000;\">menu {\r\n</span><span style=\"color: #008080;\"> 55</span>         color:white; font-size:12pt; text-align:<span style=\"color: #000000;\">center;\r\n</span><span style=\"color: #008080;\"> 56</span>         font-family:arial,sans-serif; font-weight:<span style=\"color: #000000;\">bold\r\n</span><span style=\"color: #008080;\"> 57</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 58</span> <span style=\"color: #000000;\">    td {\r\n</span><span style=\"color: #008080;\"> 59</span>         background:<span style=\"color: #000000;\">black\r\n</span><span style=\"color: #008080;\"> 60</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 61</span> <span style=\"color: #000000;\">    p {\r\n</span><span style=\"color: #008080;\"> 62</span>         color:black; font-size:12pt; text-align:<span style=\"color: #000000;\">justify;\r\n</span><span style=\"color: #008080;\"> 63</span>         font-family:arial,sans-<span style=\"color: #000000;\">serif\r\n</span><span style=\"color: #008080;\"> 64</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 65</span>     p.<span style=\"color: #000000;\">foot {\r\n</span><span style=\"color: #008080;\"> 66</span>         color:white; font-size:12pt; text-align:<span style=\"color: #000000;\">center;\r\n</span><span style=\"color: #008080;\"> 67</span>         font-family:arial,sans-serif; font-weight:<span style=\"color: #000000;\">bold\r\n</span><span style=\"color: #008080;\"> 68</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 69</span>     a:link,a:visited,a:<span style=\"color: #000000;\">active {\r\n</span><span style=\"color: #008080;\"> 70</span>         color:<span style=\"color: #000000;\">white\r\n</span><span style=\"color: #008080;\"> 71</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 72</span>     &lt;/style&gt;\r\n<span style=\"color: #008080;\"> 73</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 74</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 75</span>     \r\n<span style=\"color: #008080;\"> 76</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayHeader()\r\n</span><span style=\"color: #008080;\"> 77</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 78</span> ?&gt;\r\n<span style=\"color: #008080;\"> 79</span>   &lt;table width=\"100%\" cellpadding=\"12\" \r\n<span style=\"color: #008080;\"> 80</span>          cellspacing=\"0\" border=\"0\"&gt;\r\n<span style=\"color: #008080;\"> 81</span>   &lt;tr bgcolor=\"black\"&gt;\r\n<span style=\"color: #008080;\"> 82</span>     &lt;td align=\"left\"&gt;&lt;img alt=\"img\" src=\"logo.png\"&gt;&lt;/td&gt;\r\n<span style=\"color: #008080;\"> 83</span>     &lt;td&gt;&lt;h1&gt;The OOP page&lt;/h1&gt;&lt;/td&gt;\r\n<span style=\"color: #008080;\"> 84</span>   &lt;/tr&gt;\r\n<span style=\"color: #008080;\"> 85</span> &lt;/table&gt;\r\n<span style=\"color: #008080;\"> 86</span> &lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #008080;\"> 87</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 88</span>     \r\n<span style=\"color: #008080;\"> 89</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span> DisplayMenu(<span style=\"color: #800080;\">$button</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 90</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 91</span>         <span style=\"color: #0000ff;\">echo</span> \"<span style=\"color: #000000;\">&lt;table width=\\\"100%\\\" bgcolor=\\\"white\\\"\r\n</span><span style=\"color: #008080;\"> 92</span>               cellpadding=\\\"4\\\"    cellsapcing=\\\"4\\\"&gt;\\n \"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 93</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;tr&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 94</span>         <span style=\"color: #800080;\">$width</span>=100/<span style=\"color: #008080;\">count</span>(<span style=\"color: #800080;\">$button</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 95</span>         <span style=\"color: #0000ff;\">while</span> (<span style=\"color: #0000ff;\">list</span>(<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$url</span>)=<span style=\"color: #008080;\">each</span>(<span style=\"color: #800080;\">$button</span><span style=\"color: #000000;\">)) {\r\n</span><span style=\"color: #008080;\"> 96</span>             <span style=\"color: #800080;\">$this</span>-&gt;DisplayButton(<span style=\"color: #800080;\">$width</span>,<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$url</span>,\r\n<span style=\"color: #008080;\"> 97</span>                 !<span style=\"color: #800080;\">$this</span>-&gt;IsURLCurrentPage(<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 98</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\"> 99</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/tr&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">100</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/table&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">101</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">102</span>     \r\n<span style=\"color: #008080;\">103</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span> IsURLCurrentPage(<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">104</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">105</span>         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">strpos</span>(<span style=\"color: #800080;\">$_SERVER</span>[\'PHP_SELF\'], <span style=\"color: #800080;\">$url</span>)==<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">106</span>             <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">107</span>         } <span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">108</span>             <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">109</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\">110</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">111</span>     \r\n<span style=\"color: #008080;\">112</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span> DisplayButton(<span style=\"color: #800080;\">$width</span>,<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$url</span>,<span style=\"color: #800080;\">$active</span>=<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">113</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">114</span>         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$active</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">115</span>             <span style=\"color: #0000ff;\">echo</span> \"&lt;td width=\\\"\".<span style=\"color: #800080;\">$width</span>.\"<span style=\"color: #000000;\">%\\\"&gt;\r\n</span><span style=\"color: #008080;\">116</span>             &lt;a href=\\\"\".<span style=\"color: #800080;\">$url</span>.\"<span style=\"color: #000000;\">\\\" onclick=\\\"blank\\\"&gt;\r\n</span><span style=\"color: #008080;\">117</span>             &lt;img src=\\\"w-logo-blue.png\\\" alt=\\\"\".<span style=\"color: #800080;\">$name</span>.\"<span style=\"color: #000000;\">\\\" border=\\\"0\\\" /&gt;&lt;/a&gt;\r\n</span><span style=\"color: #008080;\">118</span>             &lt;a href=\\\"\".<span style=\"color: #800080;\">$url</span>.\"\\\"&gt;&lt;span class=\\\"menu\\\"&gt;\".<span style=\"color: #800080;\">$name</span>.\"<span style=\"color: #000000;\">&lt;/span&gt;&lt;/a&gt;\r\n</span><span style=\"color: #008080;\">119</span>                 &lt;/td&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">120</span>         } <span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">121</span>             <span style=\"color: #0000ff;\">echo</span> \"&lt;td width=\\\"\".<span style=\"color: #800080;\">$width</span>.\"<span style=\"color: #000000;\">%\\\"&gt;\r\n</span><span style=\"color: #008080;\">122</span> <span style=\"color: #000000;\">            &lt;img src=\\\"w-logo-white.png\\\"&gt;\r\n</span><span style=\"color: #008080;\">123</span>             &lt;span class=\\\"menu\\\"&gt;\".<span style=\"color: #800080;\">$name</span>.\"&lt;/span&gt;&lt;/td&gt;\"<span style=\"color: #000000;\">;            \r\n</span><span style=\"color: #008080;\">124</span> <span style=\"color: #000000;\">        }        \r\n</span><span style=\"color: #008080;\">125</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">126</span>     \r\n<span style=\"color: #008080;\">127</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayFooter()\r\n</span><span style=\"color: #008080;\">128</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">129</span> ?&gt;\r\n<span style=\"color: #008080;\">130</span>   &lt;table width=\"100%\" bgcolor=\"black\" cellpadding=\"12\" border=\"0\"&gt;\r\n<span style=\"color: #008080;\">131</span>   &lt;tr&gt;\r\n<span style=\"color: #008080;\">132</span>     &lt;td&gt;\r\n<span style=\"color: #008080;\">133</span>     &lt;p <span style=\"color: #0000ff;\">class</span>=\"foot\"&gt;&amp;<span style=\"color: #008080;\">copy</span>; Andy Liang.&lt;/p&gt;\r\n<span style=\"color: #008080;\">134</span>     &lt;p <span style=\"color: #0000ff;\">class</span>=\"foot\"&gt;Please visit my own site:&lt;a href=\"http://115.159.201.78/wordpress/\"&gt;Andy\'<span style=\"color: #000000;\">s Learning Diary&lt;/a&gt;&lt;/p&gt;\r\n</span><span style=\"color: #008080;\">135</span> <span style=\"color: #000000;\">    &lt;/td&gt;\r\n</span><span style=\"color: #008080;\">136</span> <span style=\"color: #000000;\">  &lt;/tr&gt;\r\n</span><span style=\"color: #008080;\">137</span> <span style=\"color: #000000;\">&lt;/table&gt;\r\n</span><span style=\"color: #008080;\">138</span> <span style=\"color: #000000;\">&lt;?php \r\n</span><span style=\"color: #008080;\">139</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">140</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">141</span> \r\n<span style=\"color: #008080;\">142</span> <span style=\"color: #000000;\">$homepage=new Page();\r\n</span><span style=\"color: #008080;\">143</span> <span style=\"color: #000000;\">$homepage-&gt;content=\"&lt;p&gt;\".\"I do not know what to write down, how about this?\".\"&lt;/p&gt;\";\r\n</span><span style=\"color: #008080;\">144</span> <span style=\"color: #000000;\">$homepage-&gt;title=\"You have to try OO.\";\r\n</span><span style=\"color: #008080;\">145</span> <span style=\"color: #000000;\">$homepage-&gt;keyword=array(\"SAR\",\"MRF\");\r\n</span><span style=\"color: #008080;\">146</span> $homepage-&gt;Display();</pre>\r\n</div>\r\n<p> </p>\r\n<p>就是个默认网页的生成对象，还是有改进空间的。</p>\r\n<p>然后，php写html，有点繁琐，但写完了一身爽。</p>\r\n<p>&lt;?php ?&gt;标记的活用有点厉害啊，套路~</p>\r\n<p>PS:上面代码中的链接不要乱点~会吓到你的。</p>\r\n<p>当然，其实这种得到页面在应用中是不推荐的，只是试着练下手。</p>\r\n<p><strong>七、错误和异常处理</strong></p>\r\n<p>try{ throw new Exception() }  catch{  }</p>\r\n<p>PHP中，异常必须手动抛出；</p>\r\n<p>try代码块和catch代码块是“绑定的”，每个try一定要有一个catch！</p>\r\n<p>一个try可以有多个catch</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Session1.Chapter7.P146</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\ExceptionTry;\r\n</span><span style=\"color: #008080;\"> 4</span> \r\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\r\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> \\ErrorException(\"A serious wrong has occured!\", 14<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #0000ff;\">catch</span> (\\ErrorException <span style=\"color: #800080;\">$e</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 9</span>     <span style=\"color: #0000ff;\">echo</span> \"Exceotion\".<span style=\"color: #800080;\">$e</span>-&gt;getCode().\":\".<span style=\"color: #800080;\">$e</span>-&gt;getMessage().\"&lt;br/&gt;\"\r\n<span style=\"color: #008080;\">10</span>         .\"File:\".<span style=\"color: #800080;\">$e</span>-&gt;getFile().\"at Line:\".<span style=\"color: #800080;\">$e</span>-&gt;getLine().\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">11</span>     <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$e</span><span style=\"color: #000000;\">;    \r\n</span><span style=\"color: #008080;\">12</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>应用中，希望可以<strong>自定义异常处理</strong>：继承已有的Exception类就好，需要注意的是，一般的getMessage等是final的，不能进行重载的，只有_tostring这一个方法可以重载；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">class</span> MyException <span style=\"color: #0000ff;\">extends</span><span style=\"color: #000000;\"> \\ErrorException\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\"> 3</span>     <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> _tostring()\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 5</span>         <span style=\"color: #0000ff;\">return</span> \"Fatal error,sorry!\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\r\n</span><span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> MyException(\"OH\", 14<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #0000ff;\">catch</span> (MyException <span style=\"color: #800080;\">$e</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">13</span>     <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$e</span>-&gt;<span style=\"color: #000000;\">_tostring();\r\n</span><span style=\"color: #008080;\">14</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>应用中，<strong>常常把异常处理用在最容易出错的I/O部分</strong>；格式一般都是</p>\r\n<p>try{ if(!...) throw...} catch(){}</p>\r\n<p> </p>\r\n<p>Session 2</p>\r\n<p>（二） 使用MySQL</p>\r\n<p>八、设计Web数据库</p>\r\n<p> </p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:05:06', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3013', 'PHP_Bibel阅读学习（一）——看书看经典，写文写代码 ', '网络', '\n<p>　　基础快速再看一下，然后每天有新的好玩的看。</p>\r\n<p>这本书，反正好评不少，就是`PHP和MySQL Web开发`，机械工业出版社，澳洲人写的，红皮，有兴趣的可以看一下。</p>\r\n<p> </p>\r\n<p><strong>第一篇 使用PHP</strong></p>\r\n<p><strong>一、入门</strong></p>\r\n<p>5分钟翻一下，两个点吧。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//From Bible\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Session1 Based\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//Chapter1-Use</span>\r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\Using;\r\n</span><span style=\"color: #008080;\">10</span> \r\n<span style=\"color: #008080;\">11</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">引用操作符\r\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #008000;\">//这样子赋值的变量享有同一个空间</span>\r\n<span style=\"color: #008080;\">13</span> <span style=\"color: #800080;\">$a</span>=3<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$a</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #800080;\">$b</span>=&amp;<span style=\"color: #800080;\">$a</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">16</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$b</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">17</span> <span style=\"color: #800080;\">$b</span>=3333<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">18</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$a</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">19</span> \r\n<span style=\"color: #008080;\">20</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">执行操作符\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #008000;\">//``</span>\r\n<span style=\"color: #008080;\">22</span> <span style=\"color: #800080;\">$out</span>=`ls -<span style=\"color: #000000;\">la`;\r\n</span><span style=\"color: #008080;\">23</span> <span style=\"color: #0000ff;\">echo</span> \'&lt;pre&gt;\'.<span style=\"color: #800080;\">$out</span>.\'&lt;/pre&gt;\';</pre>\r\n</div>\r\n<p><strong> 二、数据的存储与检索（文件直接操作</strong></p>\r\n<p>想说的都在代码里了。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\DataUsing;\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断文件是否存在——打开文件——锁定文件——读取文件——写入数据——解锁——关闭文件</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #800080;\">$filename</span>=\'test.txt\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">)) {\r\n</span><span style=\"color: #008080;\"> 5</span>     <span style=\"color: #0000ff;\">echo</span> \'The file you want to visit is not exist!\';<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">exit</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #800080;\">$fp</span>=@<span style=\"color: #008080;\">fopen</span>(<span style=\"color: #800080;\">$filename</span>,\'r+\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008080;\">flock</span>(<span style=\"color: #800080;\">$fp</span>, LOCK_EX);  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">锁定文件，只允许一个写入</span>\r\n<span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">while</span> (!<span style=\"color: #008080;\">feof</span>(<span style=\"color: #800080;\">$fp</span>)){   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">按行读取文件内容</span>\r\n<span style=\"color: #008080;\">11</span>     <span style=\"color: #800080;\">$content</span>=<span style=\"color: #008080;\">fgets</span>(<span style=\"color: #800080;\">$fp</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">12</span>     <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$content</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #800080;\">$writeContent</span>=\'I have something to write into\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #008080;\">fwrite</span>(<span style=\"color: #800080;\">$fp</span>, <span style=\"color: #800080;\">$writeContent</span>,<span style=\"color: #008080;\">strlen</span>(<span style=\"color: #800080;\">$writeContent</span>));  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">控制写入长度，兼容性考虑</span>\r\n<span style=\"color: #008080;\">16</span> <span style=\"color: #008080;\">flock</span>(<span style=\"color: #800080;\">$fp</span>, LOCK_UN);  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">释放锁定</span>\r\n<span style=\"color: #008080;\">17</span> <span style=\"color: #008080;\">fclose</span>(<span style=\"color: #800080;\">$fp</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong>三、数组</strong></p>\r\n<p>其他的都老生常谈，大概查一下随便用，就是熟练度的问题，但还是得知道哈。</p>\r\n<p>然后学到了usort（用户自定义排序）的妙处：</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Chapter3.Array</span>\r\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\ArrayUsort;\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多维数组的排序</span>\r\n<span style=\"color: #008080;\"> 4</span> <span style=\"color: #800080;\">$array1</span>=<span style=\"color: #0000ff;\">array</span>(54654,545,668<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #800080;\">$array2</span>=<span style=\"color: #0000ff;\">array</span>(5454,88,37,54<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #800080;\">$array3</span>=<span style=\"color: #0000ff;\">array</span>(123,4444,5453<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #800080;\">$arrayAll</span>=<span style=\"color: #0000ff;\">array</span>(<span style=\"color: #800080;\">$array1</span>,<span style=\"color: #800080;\">$array2</span>,<span style=\"color: #800080;\">$array3</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$arrayAll</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 9</span> \r\n<span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">function</span> dimensionsCompare(<span style=\"color: #800080;\">$x</span>,<span style=\"color: #800080;\">$y</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">12</span>     <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$x</span>[1]==<span style=\"color: #800080;\">$y</span>[1<span style=\"color: #000000;\">]){\r\n</span><span style=\"color: #008080;\">13</span>         <span style=\"color: #0000ff;\">return</span> 0<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">14</span>     }<span style=\"color: #0000ff;\">elseif</span> (<span style=\"color: #800080;\">$x</span>[1]&lt;<span style=\"color: #800080;\">$y</span>[1<span style=\"color: #000000;\">]){\r\n</span><span style=\"color: #008080;\">15</span>         <span style=\"color: #0000ff;\">return</span> -1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">16</span>     }<span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">17</span>         <span style=\"color: #0000ff;\">return</span> 1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">20</span> @<span style=\"color: #008080;\">usort</span>(<span style=\"color: #800080;\">$arrayAll</span>, \"dimensionsCompare\"<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$arrayAll</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p>其他什么的explode还是有点好玩的。</p>\r\n<p><strong>四、字符串操作和正则表达式</strong></p>\r\n<p>字符串整理</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">1</span> <span style=\"color: #800080;\">$name</span>=<span style=\"color: #008080;\">trim</span>(<span style=\"color: #800080;\">$_POST</span>[\'name\'<span style=\"color: #000000;\">]);\r\n</span><span style=\"color: #008080;\">2</span> <span style=\"color: #800080;\">$email</span>=<span style=\"color: #008080;\">rtrim</span>(<span style=\"color: #800080;\">$_POST</span>[\'email\'<span style=\"color: #000000;\">]);\r\n</span><span style=\"color: #008080;\">3</span> <span style=\"color: #800080;\">$feedback</span>=<span style=\"color: #008080;\">chop</span>(<span style=\"color: #800080;\">$_POST</span>[\'feedback\']);</pre>\r\n</div>\r\n<p> </p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:05:06', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3014', 'MordenPHP阅读笔记（一）——先跑再说，跑累了再走 ', '网络', '\n<p>---恢复内容开始---</p>\r\n<p>　　后台一大堆半成品，或者是几乎不成的。。。</p>\r\n<p>这本书不错，起码是别人推荐的，然后也是比较新的东西，学哪本不是学嘛，关键是得看。</p>\r\n<p>今儿个网不好，科研所需的代码下不到，看书做笔记吧。</p>\r\n<p>这本书基本将的是5.4版本后的一些新变化，写的浅显易懂，虽然鄙人走的还不顺溜，跑一跑也摔不到哪儿去，跑累了我有的是走的机会~~</p>\r\n<p><strong>（一）特性</strong></p>\r\n<p><strong>一、命名空间</strong></p>\r\n<p>一个文件一个类，用了命名空间方便互相调用；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//Namespace\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 4</span> <span style=\"color: #000000;\">namespace ModernPHP\\feature\\mingmingkongjian;\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #0000ff;\">function</span> <span style=\"color: #008080;\">var_dump</span><span style=\"color: #000000;\">(){\r\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">echo</span> \"Shit!\".\"&lt;/br&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #800080;\">$test</span>=\"OK\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$test</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">11</span> \\ModernPHP\\feature\\mingmingkongjian\\<span style=\"color: #008080;\">var_dump</span><span style=\"color: #000000;\">();\r\n</span><span style=\"color: #008080;\">12</span> \r\n<span style=\"color: #008080;\">13</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">命名空间必须顶头，但一个文件中可以有很多命名空间，然后也可以有子空间\r\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #008000;\">//厂商的命名空间是最顶层的命名空间，用于识别品牌\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #008000;\">//旨在解决命名冲突的问题，当然现在应该有比较灵活的其他用法\r\n</span><span style=\"color: #008080;\">16</span> \r\n<span style=\"color: #008080;\">17</span> <span style=\"color: #008000;\">//一个比较实用的点：导入和别名\r\n</span><span style=\"color: #008080;\">18</span> <span style=\"color: #008000;\">//导入另一个文件夹下的类定义，直接用</span>\r\n<span style=\"color: #008080;\">19</span> <span style=\"color: #0000ff;\">require</span> \'index.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">20</span> <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> a\\aaa;\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #800080;\">$daoru</span>=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> aaa;\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #800080;\">$daoru</span>-&gt;<span style=\"color: #000000;\">send();\r\n</span><span style=\"color: #008080;\">23</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">use是导入，然后在use中设置最懒的别名\r\n</span><span style=\"color: #008080;\">24</span> <span style=\"color: #008000;\">//另外，5.6版本后可以实现use 函数\r\n</span><span style=\"color: #008080;\">25</span> <span style=\"color: #008000;\">// use func a\\call;\r\n</span><span style=\"color: #008080;\">26</span> <span style=\"color: #008000;\">// \\a\\call();</span></pre>\r\n</div>\r\n<p>index.php</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">namespace a;\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> aaa{\r\n</span><span style=\"color: #008080;\"> 4</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> send(){\r\n</span><span style=\"color: #008080;\"> 5</span>         <span style=\"color: #0000ff;\">echo</span> \"ok\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> call(){\r\n</span><span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">echo</span> \"func_use is successful.\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">11</span> }</pre>\r\n</div>\r\n<p><strong>二、使用接口</strong></p>\r\n<p>接口，本来没太懂，看懂了之后简直了，牛逼啊！</p>\r\n<p>一个接口，大家只要遵守接口规定，就都能用，就这么个意思。</p>\r\n<p>下面是一个获得内容的接口示例，还可以写更多基于此接口的模块；（其中，模块中getContent的我基本都不会。。。哭）</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">\r\n//Chapter2.P19\r\n//Feature_Interface\r\n//</span>\r\n<span style=\"color: #000000;\">namespace ModernPHP\\feature\\jiekou;\r\n\r\n\r\n\r\n</span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> DocumentStore{\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$data</span>=<span style=\"color: #000000;\">[];\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> addDocument(Documentable <span style=\"color: #800080;\">$document</span>){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">这里注明只能使用接口的参数</span>\r\n        <span style=\"color: #800080;\">$key</span>=<span style=\"color: #800080;\">$document</span>-&gt;<span style=\"color: #000000;\">getID();\r\n        </span><span style=\"color: #800080;\">$value</span>=<span style=\"color: #800080;\">$document</span>-&gt;<span style=\"color: #000000;\">getContent();\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;data[<span style=\"color: #800080;\">$key</span>]=<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">;\r\n    }\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getDocuments(){\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">data;\r\n    }\r\n}\r\n\r\n</span><span style=\"color: #0000ff;\">interface</span> Documentable{     <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">定义接口，说白了就是定规矩，其他地方要用，就得说一声</span>\r\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getId();\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getContent();\r\n}\r\n\r\n</span><span style=\"color: #0000ff;\">class</span> HtmlDocument <span style=\"color: #0000ff;\">implements</span> Documentable{   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">声明要用接口；这个是获得url的内容的</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">;\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __construct(<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;url=<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">;\r\n    }\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getId(){\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">url;\r\n    }\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getContent(){\r\n        </span><span style=\"color: #800080;\">$ch</span>=curl_init();   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">这里的curl是针对url进行操作一个库（相当于）。这个命令是开启一个curl对话，所以下面这些都是一个对话</span>\r\n        curl_setopt(<span style=\"color: #800080;\">$ch</span>, CURLOPT_URL, <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">url);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>, CURLOPT_RETURNTRANSFER, 1<span style=\"color: #000000;\">);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>,CURLOPT_CONNECTTIMEOUT,3<span style=\"color: #000000;\">);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>,CURLOPT_FOLLOWLOCATION,1<span style=\"color: #000000;\">);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>,CURLOPT_MAXREDIRS,3<span style=\"color: #000000;\">);\r\n        </span><span style=\"color: #800080;\">$html</span>=curl_exec(<span style=\"color: #800080;\">$ch</span>);   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">由这个命令执行刚才的对话</span>\r\n        curl_close(<span style=\"color: #800080;\">$ch</span><span style=\"color: #000000;\">);\r\n        \r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$html</span><span style=\"color: #000000;\">;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n</span><span style=\"color: #800080;\">$documentStore</span>=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> DocumentStore();\r\n\r\n</span><span style=\"color: #800080;\">$htmlDoc</span>=<span style=\"color: #0000ff;\">new</span> HtmlDocument(\'http://www.baidu.com\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$documentStore</span>-&gt;addDocument(<span style=\"color: #800080;\">$htmlDoc</span><span style=\"color: #000000;\">);\r\n\r\n\r\n\r\n</span><span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$documentStore</span>-&gt;getDocuments());</pre>\r\n</div>\r\n<p> 另一个模块</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">class</span> StreamDocument <span style=\"color: #0000ff;\">implements</span> Documentable{  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">流媒体</span>\r\n<span style=\"color: #008080;\"> 2</span>     <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$resource</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 3</span>     <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$buffer</span>;   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">缓冲区大小</span>\r\n<span style=\"color: #008080;\"> 4</span>     \r\n<span style=\"color: #008080;\"> 5</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __construct(<span style=\"color: #800080;\">$resource</span>,<span style=\"color: #800080;\">$buffer</span>=4096<span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 6</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>=<span style=\"color: #800080;\">$resource</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 7</span>         <span style=\"color: #800080;\">$this</span>-&gt;buffer=<span style=\"color: #800080;\">$buffer</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 9</span>     \r\n<span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getId(){\r\n</span><span style=\"color: #008080;\">11</span>         <span style=\"color: #0000ff;\">return</span> \'resource-\'.(int)<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">13</span>     \r\n<span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getContent(){\r\n</span><span style=\"color: #008080;\">15</span>         <span style=\"color: #800080;\">$streamContent</span>=\'\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">16</span>         <span style=\"color: #008080;\">rewind</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>); <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">rewind() 函数将文件指针的位置倒回文件的开头</span>\r\n<span style=\"color: #008080;\">17</span>         <span style=\"color: #0000ff;\">while</span> (<span style=\"color: #008080;\">feof</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>)===<span style=\"color: #0000ff;\">false</span>){    <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">feof() 函数检测是否已到达文件末尾 (eof)。</span>\r\n<span style=\"color: #008080;\">18</span>             <span style=\"color: #800080;\">$streamContent</span>.=<span style=\"color: #008080;\">fread</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>,<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">buffer);\r\n</span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\">20</span>         \r\n<span style=\"color: #008080;\">21</span>         <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$streamContent</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">23</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong> 三、性状</strong></p>\r\n<p>奇怪的东西。。。</p>\r\n<p>其实就是为了多重继承或者一对多个不同的类别吧</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter2.P23\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Feature_Trait\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//性状\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//前面说的接口，是针对同类型的东西，实现相同的功能的；\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\">//这里的性状是针对不同的东西，实现相同的功能\r\n</span><span style=\"color: #008080;\">10</span> \r\n<span style=\"color: #008080;\">11</span> <span style=\"color: #008000;\">//基本用法如下</span>\r\n<span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">trait traitName{\r\n</span><span style=\"color: #008080;\">13</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> testThis(){\r\n</span><span style=\"color: #008080;\">14</span>         <span style=\"color: #0000ff;\">echo</span> \"This is how trait works.\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">16</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">17</span> \r\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">trait traitMore{\r\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> testAgain(){\r\n</span><span style=\"color: #008080;\">20</span>         <span style=\"color: #0000ff;\">echo</span> \"This is multiple use.\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">23</span> \r\n<span style=\"color: #008080;\">24</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> className{\r\n</span><span style=\"color: #008080;\">25</span>     <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> traitName;\r\n</span><span style=\"color: #008080;\">26</span>     <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> traitMore;\r\n</span><span style=\"color: #008080;\">27</span>     \r\n<span style=\"color: #008080;\">28</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">29</span> \r\n<span style=\"color: #008080;\">30</span> <span style=\"color: #800080;\">$classMine</span>=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> className();\r\n</span><span style=\"color: #008080;\">31</span> <span style=\"color: #800080;\">$classMine</span>-&gt;<span style=\"color: #000000;\">testThis();\r\n</span><span style=\"color: #008080;\">32</span> <span style=\"color: #800080;\">$classMine</span>-&gt;testAgain();</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong> 四、生成器</strong></p>\r\n<p>直接上代码</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter2.P26\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Feature_Generator\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//生成器\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//其实就是在函数中使用了yield语句的东西\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\">//优点在于节省了内存使用情况\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #008000;\">//方法是通过动态分配内存进行循环操作\r\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #008000;\">//典型用处是处理csv类数据文件</span>\r\n<span style=\"color: #008080;\">12</span> \r\n<span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">namespace ModernPHP\\feature\\shengchegnqi;\r\n</span><span style=\"color: #008080;\">14</span> \r\n<span style=\"color: #008080;\">15</span> <span style=\"color: #0000ff;\">function</span> getRows(<span style=\"color: #800080;\">$file</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">16</span>     <span style=\"color: #800080;\">$handle</span>=<span style=\"color: #008080;\">fopen</span>(<span style=\"color: #800080;\">$file</span>,\'rb\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">17</span>     <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$handle</span>===<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">18</span>         <span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> <span style=\"color: #0000ff;\">Exception</span>();  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">抛出错误原因</span>\r\n<span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">20</span>     <span style=\"color: #0000ff;\">while</span> (<span style=\"color: #008080;\">feof</span>(<span style=\"color: #800080;\">$handle</span>)===<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">) {\r\n</span><span style=\"color: #008080;\">21</span>         yield <span style=\"color: #008080;\">fgetcsv</span>(<span style=\"color: #800080;\">$handle</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">23</span>     <span style=\"color: #008080;\">fclose</span>(<span style=\"color: #800080;\">$handle</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">24</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">25</span> \r\n<span style=\"color: #008080;\">26</span> <span style=\"color: #0000ff;\">foreach</span> (getRows(\'data.csv\') <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$row</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">27</span>     <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$row</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">28</span>     <span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">30</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">当数据文件很大时，效果尤其明显</span></pre>\r\n</div>\r\n<p> </p>\r\n<p><strong> 五、闭包</strong></p>\r\n<p>这里闭包基本等于匿名函数</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter2.P29\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Feature_ClosePatch\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//闭包或匿名函数\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//把函数当作是变量\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\">//然后它就可以像变量一样用来用去了。。\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #008000;\">//常用做函数和方法的回调</span>\r\n<span style=\"color: #008080;\">11</span> \r\n<span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">namespace ModernPHP\\feature\\bibao;\r\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #800080;\">$var</span>=<span style=\"color: #0000ff;\">function</span> (<span style=\"color: #800080;\">$name</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">sprintf</span>(\'Hello %s\',<span style=\"color: #800080;\">$name</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">};\r\n</span><span style=\"color: #008080;\">16</span> \r\n<span style=\"color: #008080;\">17</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$var</span>(\'Andy\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">18</span> \r\n<span style=\"color: #008080;\">19</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">做回调</span>\r\n<span style=\"color: #008080;\">20</span> <span style=\"color: #800080;\">$array</span>=[2,3,4<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #800080;\">$num</span>=<span style=\"color: #008080;\">array_map</span>(<span style=\"color: #0000ff;\">function</span> (<span style=\"color: #800080;\">$number</span>){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">array_map,将函数作用到数组中的每个值上，每个值都乘以本身，并返回带有新值的数组</span>\r\n<span style=\"color: #008080;\">22</span>     <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$number</span>+1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">23</span> },<span style=\"color: #800080;\">$array</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">24</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$num</span>);</pre>\r\n</div>\r\n<p> 六、附加状态</p>\r\n<p>这个没搞懂。。。</p>\r\n<p>（二）标准</p>\r\n<p>PHP-FIG的一些约定俗成；</p>\r\n<p>---类名称，驼峰式，ShitHappens</p>\r\n<p>---方法名称，驼峰式，但首字母小写，shitHappens</p>\r\n<p>---缩进统一为4个空格</p>\r\n<p>---不写?&gt;结束符号；</p>\r\n<p>---{另起一行；</p>\r\n<p>---命名空间要有空格；</p>\r\n<p>---类中属性和方法必须有可见性声明；</p>\r\n<p>---if等控制性结构后面有空格；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter3.P44\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//PHP-FIG puts PSRs\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 6</span> \r\n<span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">namespace ModernPHP\\standard\\realize;\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> ModernPHP\\feature\\bibao;\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> ModernPHP\\feature\\fujiazhuangtai;\r\n</span><span style=\"color: #008080;\">11</span> \r\n<span style=\"color: #008080;\">12</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> ShitHappens\r\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$a</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span>     \r\n<span style=\"color: #008080;\">16</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> suck()\r\n</span><span style=\"color: #008080;\">17</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">18</span>         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$this</span>-&gt;a===<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">19</span>             <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">20</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">22</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>----------------------</p>\r\n<p>后面的都是讲述的东西，有需要的我再写吧。 </p>\r\n<p> </p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:14:51', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3015', 'PHP&MySQL（三）——数组 ', '网络', '\n<p>　　前一段忙着比赛忙着找实习，最后一地鸡毛，就是长长教训罢了。。。。</p>\r\n<p>看书还是多必须的，试着高效的、踏实的做吧！！</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">  1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">  2</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">PHP数组其实能创建很多种数据结构，列表，堆栈，队列，树等\r\n</span><span style=\"color: #008080;\">  3</span> <span style=\"color: #008000;\">//数组创建array_fill</span>\r\n<span style=\"color: #008080;\">  4</span> <span style=\"color: #800080;\">$start_index</span>=1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  5</span> <span style=\"color: #800080;\">$num</span>=10<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  6</span> <span style=\"color: #800080;\">$value</span>=\"fuck\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  7</span> <span style=\"color: #800080;\">$array1</span>=<span style=\"color: #008080;\">array_fill</span>(<span style=\"color: #800080;\">$start_index</span>, <span style=\"color: #800080;\">$num</span>, <span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">); \r\n</span><span style=\"color: #008080;\">  8</span> \r\n<span style=\"color: #008080;\">  9</span> \r\n<span style=\"color: #008080;\"> 10</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array1</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 11</span> \r\n<span style=\"color: #008080;\"> 12</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #008080;\">count</span>(<span style=\"color: #800080;\">$array1</span>); <span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"; <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">count计数实现，返回一个数，代表数组长度\r\n</span><span style=\"color: #008080;\"> 13</span> <span style=\"color: #008000;\">//print_r(array_count_values($array1));\r\n</span><span style=\"color: #008080;\"> 14</span> \r\n<span style=\"color: #008080;\"> 15</span> <span style=\"color: #008000;\">//移除元素</span>\r\n<span style=\"color: #008080;\"> 16</span> <span style=\"color: #0000ff;\">unset</span>(<span style=\"color: #800080;\">$array1</span>[3<span style=\"color: #000000;\">]);\r\n</span><span style=\"color: #008080;\"> 17</span> <span style=\"color: #800080;\">$array2</span>=<span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 18</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">unset($array1);</span>\r\n<span style=\"color: #008080;\"> 19</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array1</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 20</span> \r\n<span style=\"color: #008080;\"> 21</span> <span style=\"color: #800080;\">$start</span>=\"a\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 22</span> <span style=\"color: #800080;\">$limit</span>=\"z\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 23</span> <span style=\"color: #800080;\">$array_letters</span>=<span style=\"color: #008080;\">range</span>(<span style=\"color: #800080;\">$start</span>, <span style=\"color: #800080;\">$limit</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 24</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array_letters</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 25</span> \r\n<span style=\"color: #008080;\"> 26</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">异构数组，即数组中有各种类型的</span>\r\n<span style=\"color: #008080;\"> 27</span> <span style=\"color: #800080;\">$array_yigou</span>=<span style=\"color: #0000ff;\">array</span>(\"fuck\",1,23.343,<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 28</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 29</span> \r\n<span style=\"color: #008080;\"> 30</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多维数组</span>\r\n<span style=\"color: #008080;\"> 31</span> <span style=\"color: #800080;\">$array_dimensions</span>=<span style=\"color: #0000ff;\">array</span>(<span style=\"color: #800080;\">$array1</span>,<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 32</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_dimensions</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 33</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$array_dimensions</span>[1][2];<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 34</span> \r\n<span style=\"color: #008080;\"> 35</span> <span style=\"color: #800080;\">$array_complicated</span>=<span style=\"color: #0000ff;\">array</span>(<span style=\"color: #800080;\">$array_dimensions</span>,<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 36</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_complicated</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 37</span> \r\n<span style=\"color: #008080;\"> 38</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">foreach,一开始我理解上有点问题，foreach本来就是一个循环了！！！</span>\r\n<span style=\"color: #008080;\"> 39</span> <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$array1</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$person</span> =&gt; <span style=\"color: #800080;\">$saying</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 40</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 41</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 42</span> \r\n<span style=\"color: #008080;\"> 43</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">比较适合foreach理解的一种方式</span>\r\n<span style=\"color: #008080;\"> 44</span> <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$array1</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$person</span> =&gt; <span style=\"color: #800080;\">$saying</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 45</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" said \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 46</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 47</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 48</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 49</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 50</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 51</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 52</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 53</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 54</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 55</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 56</span> \r\n<span style=\"color: #008080;\"> 57</span> <span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 58</span> \r\n<span style=\"color: #008080;\"> 59</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">数组计数\r\n</span><span style=\"color: #008080;\"> 60</span> <span style=\"color: #008000;\">//array_count_values返回一个数组,统计（！！）每个value的个数</span>\r\n<span style=\"color: #008080;\"> 61</span> <span style=\"color: #800080;\">$array1Value</span>=<span style=\"color: #008080;\">array_count_values</span>(<span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 62</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array1</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 63</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #800080;\">$array1Value</span>[\"fuck\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #008080;\"> 64</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">count计数的是“个体”的数目吧</span>\r\n<span style=\"color: #008080;\"> 65</span> <span style=\"color: #0000ff;\">print</span> \"There is \".<span style=\"color: #008080;\">count</span>(<span style=\"color: #800080;\">$array_letters</span>).\" letters.\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 66</span> \r\n<span style=\"color: #008080;\"> 67</span> <span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 68</span> \r\n<span style=\"color: #008080;\"> 69</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">神奇的explode和implode\r\n</span><span style=\"color: #008080;\"> 70</span> <span style=\"color: #008000;\">//就是字符串的拆解和安装\r\n</span><span style=\"color: #008080;\"> 71</span> <span style=\"color: #008000;\">//注意一定要有glue或者什么，不能不输入</span>\r\n<span style=\"color: #008080;\"> 72</span> <span style=\"color: #800080;\">$sentence</span>=\"What is your name?\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 73</span> <span style=\"color: #800080;\">$explode_demo</span>=<span style=\"color: #008080;\">explode</span>(\" \", <span style=\"color: #800080;\">$sentence</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 74</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$explode_demo</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 75</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">implode</span>(\" \", <span style=\"color: #800080;\">$explode_demo</span>));<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 76</span> \r\n<span style=\"color: #008080;\"> 77</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">数组元素搜索判断\r\n</span><span style=\"color: #008080;\"> 78</span> <span style=\"color: #008000;\">//in_array判断是否存在,array_search返回在哪里</span>\r\n<span style=\"color: #008080;\"> 79</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #008080;\">in_array</span>(\"fuck\", <span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 80</span> <span style=\"color: #800080;\">$check_list</span>=\"fuck you\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 81</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$check_list</span>, <span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 82</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">in_array第三个参数为严格检查类型，默认为false</span>\r\n<span style=\"color: #008080;\"> 83</span> <span style=\"color: #800080;\">$check_list2</span>=\"1 is in here\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 84</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$check_list2</span>, <span style=\"color: #800080;\">$array_yigou</span>,<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 85</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$check_list2</span>, <span style=\"color: #800080;\">$array_yigou</span>,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 86</span> \r\n<span style=\"color: #008080;\"> 87</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #008080;\">array_search</span>(\"fuck\", <span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 88</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #008080;\">array_search</span>(1, <span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 89</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">array_key_exists判断key是不是存在</span>\r\n<span style=\"color: #008080;\"> 90</span> <span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 91</span> \r\n<span style=\"color: #008080;\"> 92</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">直接利用key或value</span>\r\n<span style=\"color: #008080;\"> 93</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">array_keys</span>(<span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 94</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">array_values</span>(<span style=\"color: #800080;\">$array_dimensions</span>));<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 95</span> \r\n<span style=\"color: #008080;\"> 96</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">implode和array_merge</span>\r\n<span style=\"color: #008080;\"> 97</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">implode</span>(\" \", <span style=\"color: #800080;\">$array1</span>));<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 98</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">array_merge</span>(<span style=\"color: #800080;\">$array1</span>,<span style=\"color: #800080;\">$array_letters</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 99</span> \r\n<span style=\"color: #008080;\">100</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">数组排序\r\n</span><span style=\"color: #008080;\">101</span> <span style=\"color: #008000;\">//注意排序之后，直接改变/返回到原数组\r\n</span><span style=\"color: #008080;\">102</span> <span style=\"color: #008000;\">//sort升rsort降\r\n</span><span style=\"color: #008080;\">103</span> <span style=\"color: #008000;\">//这里也是我第一次对PHP语言有理解的地方，各种封装好的函数，需要的就是多用，知道，然后熟练的调用\r\n</span><span style=\"color: #008080;\">104</span> <span style=\"color: #008000;\">//自己编写的排序函数，往往没有其自带的/现成的函数效率/效果好</span>\r\n<span style=\"color: #008080;\">105</span> <span style=\"color: #800080;\">$array_num</span>=<span style=\"color: #008080;\">range</span>(2, 123,3<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">106</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array_num</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">107</span> <span style=\"color: #008080;\">rsort</span>(<span style=\"color: #800080;\">$array_num</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">108</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array_num</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">109</span> <span style=\"color: #008080;\">sort</span>(<span style=\"color: #800080;\">$array_letters</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">110</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_dimensions</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">111</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">关联数组，若想保持键值的关系不变，应该用asort</span>\r\n<span style=\"color: #008080;\">112</span> <span style=\"color: #008080;\">sort</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">113</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">114</span> <span style=\"color: #008080;\">rsort</span>(<span style=\"color: #800080;\">$array_yigou</span>,<span style=\"color: #000000;\">SORT_NUMERIC);\r\n</span><span style=\"color: #008080;\">115</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">116</span> <span style=\"color: #008080;\">asort</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">117</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">118</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">ksort是根据key值来排序的\r\n</span><span style=\"color: #008080;\">119</span> \r\n<span style=\"color: #008080;\">120</span> <span style=\"color: #008000;\">//总结_数组\r\n</span><span style=\"color: #008080;\">121</span> <span style=\"color: #008000;\">//数组创建——array(),array_fill(),range()\r\n</span><span style=\"color: #008080;\">122</span> <span style=\"color: #008000;\">//数组输出——var_dump,print_r\r\n</span><span style=\"color: #008080;\">123</span> <span style=\"color: #008000;\">//数组种类——索引数组，关联数组；异构数组，多维数组\r\n</span><span style=\"color: #008080;\">124</span> <span style=\"color: #008000;\">//数组排序——sort(),rsort(),asort(),ksort()\r\n</span><span style=\"color: #008080;\">125</span> <span style=\"color: #008000;\">//foreach的使用\r\n</span><span style=\"color: #008080;\">126</span> <span style=\"color: #008000;\">//implode(),explode()\r\n</span><span style=\"color: #008080;\">127</span> <span style=\"color: #008000;\">//is_array,in_array,array_search\r\n</span><span style=\"color: #008080;\">128</span> <span style=\"color: #008000;\">//array_count_values,count</span></pre>\r\n</div>\r\n<p> </p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:05:06', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3016', 'PHP实现文件上传下载——心在忙而已 ', '网络', '\n<p>　　这一周都没有写什么东西，是啊，一周时间都没有学习太多新的东西，除了开车。</p>\r\n<p>妈蛋啊，天天中午去学车然后两周没有午觉的日子还是很崩溃的，加上之后工作压力带来的心忙，宝宝不开心啊。</p>\r\n<p>不过，也是自己不是那么能吃苦吧。那天看到的那句话怎么说的来着，我痛恨自己，在简单和困难之前，选择了前者；在什么什么面前，balabala，不是很鸡汤，但有点触动，愿少点矫情和娇气。</p>\r\n<p><strong>PHP实现文件上传与下载——来自mooc网</strong></p>\r\n<p><strong>一、上传原理与配置</strong></p>\r\n<p><strong>1.1 原理</strong></p>\r\n<p>将客户端文件<strong>上传到服务器端</strong>，再将服务器端的文件（<strong>临时文件）移动到指定目录</strong>即可。</p>\r\n<p><strong>1.2 客户端配置</strong></p>\r\n<p>所需：<strong>表单</strong>页面（选择上传文件）；</p>\r\n<p>具体而言：<strong>发送方式为POST，添加enctype=\"multipart/form-data\"属性</strong>，两者缺一不可（但是，优缺点并存，这里也限定了上传的方式和上传的文件之后的调用等方面，后面会说到）</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：\r\n</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">php\r\n\r\n</span><span style=\"color: #0000ff;\">?&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p>先是表单页面（请自动忽略前端问题。。。），关键就是form的属性；另外就是<strong>input 中用到了type=\"file\"这一点</strong>（体现到php的强大的拓展等等）。</p>\r\n<p>然后是doAction</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$_FILES:文件上传变量\r\n//print_r($_FILES);</span>\r\n<span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'name\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$type</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'type\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$tmp_name</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'tmp_name\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$size</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'size\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$error</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'error\'<span style=\"color: #000000;\">];\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">将服务器上的临时文件移动到指定位置\r\n//方法一move_upload_file($tmp_name,$destination)\r\n//move_uploaded_file($tmp_name, \"uploads/\".$filename);//文件夹应提前建立好，不然报错\r\n//方法二copy($src,$des)\r\n//以上两个函数都是成功返回真，否则返回false\r\n//copy($tmp_name, \"copies/\".$filename);\r\n//注意，不能两个方法都对临时文件进行操作，临时文件似乎操作完就没了，我们试试反过来</span>\r\n<span style=\"color: #008080;\">copy</span>(<span style=\"color: #800080;\">$tmp_name</span>, \"copies/\".<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span>, \"uploads/\".<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">能够实现，说明move那个函数基本上相当于剪切；copy就是copy，临时文件还在\r\n\r\n//另外，错误信息也是不一样的，遇到错误可以查看或者直接报告给用户</span>\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$error</span>==0<span style=\"color: #000000;\">) {\r\n    </span><span style=\"color: #0000ff;\">echo</span> \"上传成功！\"<span style=\"color: #000000;\">;\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">case</span> 1:\r\n            <span style=\"color: #0000ff;\">echo</span> \"超过了上传文件的最大值，请上传2M以下文件\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 2:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件过多，请一次上传20个及以下文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 3:\r\n            <span style=\"color: #0000ff;\">echo</span> \"文件并未完全上传，请再次尝试！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 4:\r\n            <span style=\"color: #0000ff;\">echo</span> \"未选择上传文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 5:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件为0\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p><span style=\"line-height: 1.5;\">先把print_r($_FILES)这个信息看一下</span></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #000000;\">Array\r\n(\r\n    [myFile] =&gt; Array\r\n        (\r\n            [name] =&gt; 梁博_简历.doc\r\n            [type] =&gt; application/msword\r\n            [tmp_name] =&gt; D:\\wamp\\tmp\\php1D78.tmp\r\n            [error] =&gt; 0\r\n            [size] =&gt; 75776\r\n        )\r\n\r\n)</span></pre>\r\n</div>\r\n<p>所以得到的是个二维数组，该怎么用，都是基本的东西（其实我喜欢降维再用）；</p>\r\n<p>基本是一眼就懂的东西，不罗嗦，关键有两个：<strong>tmp_name临时文件名；error报错信息（代号，后面可以利用）</strong>；</p>\r\n<p>然后这里看一下doAction后面一部分，利用报错信息来反馈给用户，需要说明的是为什么报错，和报错信息是什么都；</p>\r\n<p><strong>1.3 关于报错</strong></p>\r\n<p><strong>--报错原因</strong></p>\r\n<p>基本上都是超过或者不符合服务器关于上传文件的配置，那么服务器端<strong>配置</strong>有哪些呢？</p>\r\n<p>先考虑上传我们用了什么？POST，upload</p>\r\n<p>所以在php.ini中找这么几项：</p>\r\n<p>file_upload:On</p>\r\n<p>upload_tmp_dir=——临时文件保存目录；</p>\r\n<p>upload_max_filesize=2M</p>\r\n<p>max_file_uploads=20——允许一次上传的最大文件数量（注意和上面那个的区别，有没有size，别乱想）</p>\r\n<p>post_max_size=8M——post方式发送数据的最大值</p>\r\n<p>其他相关配置</p>\r\n<p>max_exectuion_time=-1——最大执行时间，避免程序不好占用服务器资源；</p>\r\n<p>max_input_time=60</p>\r\n<p>max_input_nesting_level=64——输入嵌套深度；</p>\r\n<p>memory_limit=128M——最大单线程的独立内存使用量</p>\r\n<p>总之都是有关资源的配置。</p>\r\n<p><strong>--错误号</strong></p>\r\n<p>以下（偷懒）引自http://blog.sina.com.cn/s/blog_3cdfaea201008utf.html</p>\r\n<p>UPLOAD_ERR_OK             值：0; 没有错误发生，文件上传成功。<br>  UPLOAD_ERR_INI_SIZE      \r\n值：1; 上传的文件超过了 php.ini 中 upload_max_filesize \r\n选项限制的值。<br>  UPLOAD_ERR_FORM_SIZE  值：2; 上传文件的大小超过了 HTML 表单中 \r\nMAX_FILE_SIZE \r\n选项指定的值。<br>  UPLOAD_ERR_PARTIAL          \r\n值：3; \r\n文件只有部分被上传。<br>  UPLOAD_ERR_NO_FILE          \r\n值：4; 没有文件被上传。  </p>\r\n<p>注意：这个错误信息是第一步上传的信息，也就是上传到临时文件夹的情况，而不是move或者copy的情况。 </p>\r\n<p><strong>二、上传相关限制</strong></p>\r\n<p><strong>2.1 客户端限制</strong></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction2.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"hidden\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"MAX_FILE_SIZE\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"101321\"</span> <span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：\r\n</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile\"</span><span style=\"color: #ff0000;\"> accept</span><span style=\"color: #0000ff;\">=\"image/jpeg,image/gif,text/html\"</span><span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这里用input的属性对上传文件的大小和类型进行了限制，但是个人感觉：一，html代码是“可见的”；二，常不起作用（没找到原因，但因为第一个我也想放弃它，知道就好。 </p>\r\n<p> 2.2 服务器端限制</p>\r\n<p>主要限制大小和类型，再有就是方式。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">接受文件，临时文件信息</span>\r\n<span style=\"color: #800080;\">$fileinfo</span>=<span style=\"color: #800080;\">$_FILES</span>[\"myFile\"];<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">降维操作</span>\r\n<span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$tmp_name</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"tmp_name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$size</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"size\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$error</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"error\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$type</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"type\"<span style=\"color: #000000;\">];\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">服务器端设定限制</span>\r\n<span style=\"color: #800080;\">$maxsize</span>=10485760;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">10M,10*1024*1024</span>\r\n<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'tif\');<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">允许上传的文件类型（拓展名</span>\r\n<span style=\"color: #800080;\">$ext</span>=<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$filename</span>,PATHINFO_EXTENSION);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">提取上传文件的拓展名\r\n\r\n//目的信息</span>\r\n<span style=\"color: #800080;\">$path</span>=\"uploads\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$path</span>)) {   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">当目录不存在，就创建目录</span>\r\n    <span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$path</span>,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n    </span><span style=\"color: #008080;\">chmod</span>(<span style=\"color: #800080;\">$path</span>, 0777<span style=\"color: #000000;\">);\r\n}\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$destination=$path.\"/\".$filename;\r\n//得到唯一的文件名！防止因为文件名相同而产生覆盖</span>\r\n<span style=\"color: #800080;\">$uniName</span>=<span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span>)).<span style=\"color: #800080;\">$ext</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">md5加密，uniqid产生唯一id，microtime做前缀</span>\r\n\r\n\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$error</span>==0<span style=\"color: #000000;\">) {\r\n    </span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$size</span>&gt;<span style=\"color: #800080;\">$maxsize</span><span style=\"color: #000000;\">) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传文件过大！\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$ext</span>, <span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"非法文件类型\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传方式有误，请使用post方式\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (@<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span>, <span style=\"color: #800080;\">$uniName</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">@错误抑制符，不让用户看到警告</span>\r\n        <span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传成功!\"<span style=\"color: #000000;\">;\r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传失败!\"<span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断是否为真实图片（防止伪装成图片的病毒一类的</span>\r\n    <span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$tmp_name</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">getimagesize真实返回数组，否则返回false</span>\r\n        <span style=\"color: #0000ff;\">exit</span>(\"不是真正的图片类型\"<span style=\"color: #000000;\">);\r\n    }\r\n\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">case</span> 1:\r\n            <span style=\"color: #0000ff;\">echo</span> \"超过了上传文件的最大值，请上传2M以下文件\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 2:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件过多，请一次上传20个及以下文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 3:\r\n            <span style=\"color: #0000ff;\">echo</span> \"文件并未完全上传，请再次尝试！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 4:\r\n            <span style=\"color: #0000ff;\">echo</span> \"未选择上传文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 7:\r\n            <span style=\"color: #0000ff;\">echo</span> \"没有临时文件夹\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这里，具体实现都有注释，每一步其实都可以自己试试的，很有趣。</p>\r\n<p>2.3 封装</p>\r\n<p>函数</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #0000ff;\">function</span> uploadFile(<span style=\"color: #800080;\">$fileInfo</span>,<span style=\"color: #800080;\">$path</span>,<span style=\"color: #800080;\">$allowExt</span>,<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">){\r\n\r\n</span><span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$tmp_name</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"tmp_name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$size</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"size\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$error</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"error\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$type</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"type\"<span style=\"color: #000000;\">];\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">服务器端设定限制</span>\r\n\r\n<span style=\"color: #800080;\">$ext</span>=<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$filename</span>,<span style=\"color: #000000;\">PATHINFO_EXTENSION);\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">目的信息</span>\r\n<span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$path</span><span style=\"color: #000000;\">)) {   \r\n    </span><span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$path</span>,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n    </span><span style=\"color: #008080;\">chmod</span>(<span style=\"color: #800080;\">$path</span>, 0777<span style=\"color: #000000;\">);\r\n}\r\n</span><span style=\"color: #800080;\">$uniName</span>=<span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span>)).\'.\'.<span style=\"color: #800080;\">$ext</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$destination</span>=<span style=\"color: #800080;\">$path</span>.\"/\".<span style=\"color: #800080;\">$uniName</span><span style=\"color: #000000;\">;\r\n\r\n\r\n</span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$error</span>==0<span style=\"color: #000000;\">) {\r\n    </span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$size</span>&gt;<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传文件过大！\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$ext</span>, <span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"非法文件类型\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传方式有误，请使用post方式\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断是否为真实图片（防止伪装成图片的病毒一类的</span>\r\n    <span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$tmp_name</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">getimagesize真实返回数组，否则返回false</span>\r\n        <span style=\"color: #0000ff;\">exit</span>(\"不是真正的图片类型\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (@<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span>, <span style=\"color: #800080;\">$destination</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">@错误抑制符，不让用户看到警告</span>\r\n        <span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传成功!\"<span style=\"color: #000000;\">;\r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传失败!\"<span style=\"color: #000000;\">;\r\n    }\r\n    \r\n\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">case</span> 1:\r\n            <span style=\"color: #0000ff;\">echo</span> \"超过了上传文件的最大值，请上传2M以下文件\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 2:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件过多，请一次上传20个及以下文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 3:\r\n            <span style=\"color: #0000ff;\">echo</span> \"文件并未完全上传，请再次尝试！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 4:\r\n            <span style=\"color: #0000ff;\">echo</span> \"未选择上传文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 7:\r\n            <span style=\"color: #0000ff;\">echo</span> \"没有临时文件夹\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n    }\r\n}\r\n</span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$destination</span><span style=\"color: #000000;\">;\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>调用</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$fileInfo</span>=<span style=\"color: #800080;\">$_FILES</span>[\"myFile\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$maxSize</span>=10485760;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">10M,10*1024*1024</span>\r\n<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'tif\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$path</span>=\"uploads\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">include_once</span> \'upFunc.php\'<span style=\"color: #000000;\">;\r\nuploadFile(</span><span style=\"color: #800080;\">$fileInfo</span>, <span style=\"color: #800080;\">$path</span>, <span style=\"color: #800080;\">$allowExt</span>, <span style=\"color: #800080;\">$maxSize</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong>三、多文件的上传实现</strong></p>\r\n<p><strong>3.1 利用单文件封装</strong></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction5.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile1\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile2\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile3\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile4\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">print_r($_FILES);</span>\r\n<span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #0000ff;\">include_once</span> \'upFunc.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$_FILES</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #800080;\">$file</span>[]=uploadFile(<span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">);\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这里的思路，从print_r($_FILES)中去找，打印出来看到是个二维数组，很简单，遍历去用就好了！ </p>\r\n<p>上面那个function的定义改一下，给定一些默认值</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span> uploadFile(<span style=\"color: #800080;\">$fileInfo</span>,<span style=\"color: #800080;\">$path</span>=\"uploads\",<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'tif\'),<span style=\"color: #800080;\">$maxSize</span>=10485760){</pre>\r\n</div>\r\n<p> </p>\r\n<p>这样子，简单是简单，但遇到一些问题。</p>\r\n<p>正常的上传4个图片是没问题，但要是中间激活了函数中的exit，就会立即停止，导致其他图片也无法上传。</p>\r\n<p><strong>3.2 升级版封装</strong></p>\r\n<p>旨在实现针对多个或单个文件上传的封装</p>\r\n<p>首先这样子写个静态文件</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction5.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>打印一下$_FILES</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #000000;\">Array\r\n(\r\n    [myFile] =&gt; Array\r\n        (\r\n            [name] =&gt; Array\r\n                (\r\n                    [0] =&gt; test32.png\r\n                    [1] =&gt; test32.png\r\n                    [2] =&gt; 333.png\r\n                    [3] =&gt; test41.png\r\n                )\r\n\r\n            [type] =&gt; Array\r\n                (\r\n                    [0] =&gt; image/png\r\n                    [1] =&gt; image/png\r\n                    [2] =&gt; image/png\r\n                    [3] =&gt; image/png\r\n                )\r\n\r\n            [tmp_name] =&gt; Array\r\n                (\r\n                    [0] =&gt; D:\\wamp\\tmp\\php831C.tmp\r\n                    [1] =&gt; D:\\wamp\\tmp\\php834C.tmp\r\n                    [2] =&gt; D:\\wamp\\tmp\\php837C.tmp\r\n                    [3] =&gt; D:\\wamp\\tmp\\php83BB.tmp\r\n                )\r\n\r\n            [error] =&gt; Array\r\n                (\r\n                    [0] =&gt; 0\r\n                    [1] =&gt; 0\r\n                    [2] =&gt; 0\r\n                    [3] =&gt; 0\r\n                )\r\n\r\n            [size] =&gt; Array\r\n                (\r\n                    [0] =&gt; 46174\r\n                    [1] =&gt; 46174\r\n                    [2] =&gt; 34196\r\n                    [3] =&gt; 38514\r\n                )\r\n\r\n        )\r\n\r\n)</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>可以得到一个三维数组。</p>\r\n<p>复杂是复杂了，但复杂的有规律，各项数值都在一起了，很方便我们取值！！</p>\r\n<p>所以先得到文件信息，<strong>变成单文件处理那种信息</strong></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getFiles(){\r\n    </span><span style=\"color: #800080;\">$i</span>=0<span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">foreach</span>(<span style=\"color: #800080;\">$_FILES</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$file</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #008080;\">is_string</span>(<span style=\"color: #800080;\">$file</span>[\'name\'])){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">单文件判定</span>\r\n            <span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>]=<span style=\"color: #800080;\">$file</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #800080;\">$i</span>++<span style=\"color: #000000;\">;\r\n        }</span><span style=\"color: #0000ff;\">elseif</span>(<span style=\"color: #008080;\">is_array</span>(<span style=\"color: #800080;\">$file</span>[\'name\'<span style=\"color: #000000;\">])){\r\n            </span><span style=\"color: #0000ff;\">foreach</span>(<span style=\"color: #800080;\">$file</span>[\'name\'] <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$key</span>=&gt;<span style=\"color: #800080;\">$val</span>){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">我的天，这个$key用的diao</span>\r\n                <span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'name\']=<span style=\"color: #800080;\">$file</span>[\'name\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'type\']=<span style=\"color: #800080;\">$file</span>[\'type\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'tmp_name\']=<span style=\"color: #800080;\">$file</span>[\'tmp_name\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'error\']=<span style=\"color: #800080;\">$file</span>[\'error\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'size\']=<span style=\"color: #800080;\">$file</span>[\'size\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$i</span>++<span style=\"color: #000000;\">;\r\n            }\r\n        }\r\n    }\r\n    </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$files</span><span style=\"color: #000000;\">;\r\n    \r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>然后之前的那种exit错误，就把exit改一下就好了，这里用res</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span> uploadFile(<span style=\"color: #800080;\">$fileInfo</span>,<span style=\"color: #800080;\">$path</span>=\'./uploads\',<span style=\"color: #800080;\">$flag</span>=<span style=\"color: #0000ff;\">true</span>,<span style=\"color: #800080;\">$maxSize</span>=1048576,<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'gif\'<span style=\"color: #000000;\">)){\r\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$flag=true;\r\n    //$allowExt=array(\'jpeg\',\'jpg\',\'gif\',\'png\');\r\n    //$maxSize=1048576;//1M\r\n    //判断错误号</span>\r\n    <span style=\"color: #800080;\">$res</span>=<span style=\"color: #0000ff;\">array</span><span style=\"color: #000000;\">();\r\n    </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'error\']===<span style=\"color: #000000;\">UPLOAD_ERR_OK){\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测上传得到小</span>\r\n        <span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'size\']&gt;<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'上传文件过大\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #800080;\">$ext</span>=getExt(<span style=\"color: #800080;\">$fileInfo</span>[\'name\'<span style=\"color: #000000;\">]);\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测上传文件的文件类型</span>\r\n        <span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$ext</span>,<span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">)){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'非法文件类型\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测是否是真实的图片类型</span>\r\n        <span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$flag</span><span style=\"color: #000000;\">){\r\n            </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n                </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'不是真实图片类型\'<span style=\"color: #000000;\">;\r\n            }\r\n        }\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测文件是否是通过HTTP POST上传上来的</span>\r\n        <span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'文件不是通过HTTP POST方式上传上来的\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$res</span>) <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$res</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$path=\'./uploads\';</span>\r\n        <span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$path</span><span style=\"color: #000000;\">)){\r\n            </span><span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$path</span>,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n            </span><span style=\"color: #008080;\">chmod</span>(<span style=\"color: #800080;\">$path</span>,0777<span style=\"color: #000000;\">);\r\n        }\r\n        </span><span style=\"color: #800080;\">$uniName</span>=<span style=\"color: #000000;\">getUniName();\r\n        </span><span style=\"color: #800080;\">$destination</span>=<span style=\"color: #800080;\">$path</span>.\'/\'.<span style=\"color: #800080;\">$uniName</span>.\'.\'.<span style=\"color: #800080;\">$ext</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'tmp_name\'],<span style=\"color: #800080;\">$destination</span><span style=\"color: #000000;\">)){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'文件移动失败\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'上传成功\'<span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$res</span>[\'dest\']=<span style=\"color: #800080;\">$destination</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$res</span><span style=\"color: #000000;\">;\r\n        \r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">匹配错误信息</span>\r\n        <span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$fileInfo</span> [\'error\'<span style=\"color: #000000;\">]) {\r\n            </span><span style=\"color: #0000ff;\">case</span> 1 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'上传文件超过了PHP配置文件中upload_max_filesize选项的值\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 2 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'超过了表单MAX_FILE_SIZE限制的大小\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 3 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'文件部分被上传\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 4 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'没有选择上传文件\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 6 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'没有找到临时目录\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 7 :\r\n            <span style=\"color: #0000ff;\">case</span> 8 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'系统错误\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$res</span><span style=\"color: #000000;\">;\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>里面封装了两个小的</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span> getExt(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">strtolower</span>(<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$filename</span>,<span style=\"color: #000000;\">PATHINFO_EXTENSION));\r\n}\r\n\r\n</span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n * 产生唯一字符串\r\n * @return string\r\n </span><span style=\"color: #008000;\">*/</span>\r\n<span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getUniName(){\r\n    </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">));\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>然后静态中，用multiple属性实现多个文件的输入；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction6.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"POST\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span><span style=\"color: #ff0000;\"> multiple</span><span style=\"color: #0000ff;\">=\'multiple\' </span><span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>doAction6</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">print_r($_FILES);</span>\r\n<span style=\"color: #008080;\">header</span>(\"content-type:text/html;charset=utf-8\"<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #0000ff;\">require_once</span> \'upFunc2.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">require_once</span> \'common.func.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$files</span>=<span style=\"color: #000000;\">getFiles();\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> print_r($files);</span>\r\n<span style=\"color: #0000ff;\">foreach</span>(<span style=\"color: #800080;\">$files</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #800080;\">$res</span>=uploadFile(<span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">);\r\n    </span><span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$res</span>[\'mes\'],\'&lt;br/&gt;\'<span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #800080;\">$uploadFiles</span>[]=@<span style=\"color: #800080;\">$res</span>[\'dest\'<span style=\"color: #000000;\">];\r\n}\r\n</span><span style=\"color: #800080;\">$uploadFiles</span>=<span style=\"color: #008080;\">array_values</span>(<span style=\"color: #008080;\">array_filter</span>(<span style=\"color: #800080;\">$uploadFiles</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">print_r($uploadFiles);</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这样子的几个文件，就实现比较强大的面向过程的上传文件的功能（学的叫一个心酸。。。）；</p>\r\n<p><strong>四、面向对象的文件上传</strong></p>\r\n<p> （不是很写的动了。。。先粘过来，再说吧。。。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> upload{\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$fileName</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$allowMime</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$uploadPath</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$imgFlag</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$ext</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * @param string $fileName\r\n     * @param string $uploadPath\r\n     * @param string $imgFlag\r\n     * @param number $maxSize\r\n     * @param array $allowExt\r\n     * @param array $allowMime\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __construct(<span style=\"color: #800080;\">$fileName</span>=\'myFile\',<span style=\"color: #800080;\">$uploadPath</span>=\'./uploads\',<span style=\"color: #800080;\">$imgFlag</span>=<span style=\"color: #0000ff;\">true</span>,<span style=\"color: #800080;\">$maxSize</span>=5242880,<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'gif\'),<span style=\"color: #800080;\">$allowMime</span>=<span style=\"color: #0000ff;\">array</span>(\'image/jpeg\',\'image/png\',\'image/gif\'<span style=\"color: #000000;\">)){\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;fileName=<span style=\"color: #800080;\">$fileName</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;maxSize=<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;allowMime=<span style=\"color: #800080;\">$allowMime</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;allowExt=<span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;uploadPath=<span style=\"color: #800080;\">$uploadPath</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;imgFlag=<span style=\"color: #800080;\">$imgFlag</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;fileInfo=<span style=\"color: #800080;\">$_FILES</span>[<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">fileName];\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测上传文件是否出错\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkError(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">is_null</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">fileInfo)){\r\n            </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'error\']&gt;0<span style=\"color: #000000;\">){\r\n                </span><span style=\"color: #0000ff;\">switch</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'error\'<span style=\"color: #000000;\">]){\r\n                    </span><span style=\"color: #0000ff;\">case</span> 1:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'超过了PHP配置文件中upload_max_filesize选项的值\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 2:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'超过了表单中MAX_FILE_SIZE设置的值\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 3:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'文件部分被上传\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 4:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'没有选择上传文件\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 6:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'没有找到临时目录\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 7:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'文件不可写\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 8:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'由于PHP的扩展程序中断文件上传\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                        \r\n                }\r\n                </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n            }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n                </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n            }\r\n        }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'文件上传出错\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测上传文件的大小\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkSize(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'size\']&gt;<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">maxSize){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'上传文件过大\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测扩展名\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkExt(){\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;ext=<span style=\"color: #008080;\">strtolower</span>(<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'name\'],<span style=\"color: #000000;\">PATHINFO_EXTENSION));\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$this</span>-&gt;ext,<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">allowExt)){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'不允许的扩展名\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测文件的类型\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkMime(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'type\'],<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">allowMime)){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'不允许的文件类型\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测是否是真实图片\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkTrueImg(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">imgFlag){\r\n            </span><span style=\"color: #0000ff;\">if</span>(!@<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n                </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'不是真实图片\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n            }\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n        }\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测是否通过HTTP POST方式上传上来的\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkHTTPPost(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'文件不是通过HTTP POST方式上传上来的\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     *显示错误 \r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> showError(){\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\'&lt;span style=\"color:red\"&gt;\'.<span style=\"color: #800080;\">$this</span>-&gt;error.\'&lt;/span&gt;\'<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测目录不存在则创建\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkUploadPath(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">uploadPath)){\r\n            </span><span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$this</span>-&gt;uploadPath,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n        }\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 产生唯一字符串\r\n     * @return string\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getUniName(){\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">));\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 上传文件\r\n     * @return string\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> uploadFile(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;checkError()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkSize()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkExt()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkMime()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkTrueImg()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">checkHTTPPost()){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">checkUploadPath();\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;uniName=<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">getUniName();\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;destination=<span style=\"color: #800080;\">$this</span>-&gt;uploadPath.\'/\'.<span style=\"color: #800080;\">$this</span>-&gt;uniName.\'.\'.<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">ext;\r\n            </span><span style=\"color: #0000ff;\">if</span>(@<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'tmp_name\'], <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">destination)){\r\n                </span><span style=\"color: #0000ff;\">return</span>  <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">destination;\r\n            }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n                </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'文件移动失败\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">showError();\r\n            }\r\n        }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">showError();\r\n        }\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p> </p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #0000ff;\">require_once</span> \'upload.class.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$upload</span>=<span style=\"color: #0000ff;\">new</span> upload(\'myFile1\',\'imooc\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$dest</span>=<span style=\"color: #800080;\">$upload</span>-&gt;<span style=\"color: #000000;\">uploadFile();\r\n</span><span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$dest</span>;</pre>\r\n</div>\r\n<p> </p>\r\n<p>四、下载</p>\r\n<p>对于浏览器不识别的，可以直接下载，但对于能识别的，需要多一两步</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html </span><span style=\"color: #ff0000;\">xmlns</span><span style=\"color: #0000ff;\">=\"http://www.w3.org/1999/xhtml\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span> <span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"1.rar\"</span><span style=\"color: #0000ff;\">&gt;</span>下载1.rar<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">br </span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"1.jpg\"</span><span style=\"color: #0000ff;\">&gt;</span>下载1.jpg<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">br </span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"doDownload.php?filename=1.jpg\"</span><span style=\"color: #0000ff;\">&gt;</span>通过程序下载1.jpg<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">br </span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"doDownload.php?filename=../upload/nv.jpg\"</span><span style=\"color: #0000ff;\">&gt;</span>下载nv.jpg<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">php\r\n\r\n</span><span style=\"color: #0000ff;\">?&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$_GET</span>[\'filename\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #008080;\">header</span>(\'content-disposition:attachment;filename=\'.<span style=\"color: #008080;\">basename</span>(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\">header</span>(\'content-length:\'.<span style=\"color: #008080;\">filesize</span>(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\">readfile</span>(<span style=\"color: #800080;\">$filename</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p>------------------总结-----------------------</p>\r\n<pre>&lt;form action=\"doAction.php\" method=\"post\" enctype=\"multipart/form-data\"&gt;</pre>\r\n<p> &lt;input type=\"file\" name=\"myFile\" /&gt;&lt;br/&gt;</p>\r\n<p> 二维数组的降维处理；</p>\r\n<p>$_FILES变量</p>\r\n<p>move_upload_file();copy();</p>\r\n<p>tmp_name临时文件；</p>\r\n<p>拓展名的提取；</p>\r\n<p>真实图片的验证；</p>\r\n<p>唯一文件名的生成；</p>\r\n<p>函数封装以及调用；</p>\r\n<p>利用单个文件函数实现多文件上传；</p>\r\n<p>小功能的封装；</p>\r\n<p>多文件的遍历；</p>\r\n<p>面向对象的开发过程；</p>\r\n<p>下载；</p>\r\n<p>----------------------------------------</p>\r\n<p>妈蛋啊。。。。。。。。。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:05:06', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3017', 'PHP&MySQL（二）——困也得啃书 ', '网络', '\n<p>madan，所有事情都敢赶在一起。。。以后每天中午去学车啊，好开心。。晚上好困，但是困也得啃书。。。。。。。。</p>\r\n<p>二、PHP脚本编程语言</p>\r\n<p>什么变量啊，数据类型啊，特别特别基本的不记录了，说点容易忽略的。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">define</span>(\"PI\", 3.1415926);  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">常量的定义</span>\r\n\r\n<span style=\"color: #0000ff;\">echo</span> \"圆周率=\".<span style=\"color: #008080;\">PI</span>.\"&lt;br/&gt;\";   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">.的链接作用，同样用于$var的赋值等</span>\r\n\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">PI</span>&lt;3&amp;&amp;<span style=\"color: #008080;\">PI</span>&gt;=2<span style=\"color: #000000;\">) {  \r\n    </span><span style=\"color: #800080;\">$var</span>=\"shit\"<span style=\"color: #000000;\">;\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">echo</span> \"f**k\".\"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n}\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 先判断PI&lt;3，如果不成立，就直接进入else——称为短路设计，加快程序速度；\r\n// 同理，为了实现程序的高效，把最容易出错的放前面，最复杂的计算放右边</span>\r\n\r\n<span style=\"color: #800080;\">$var</span>=\"asldkjflajdfklj\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$v2</span>=(<span style=\"color: #0000ff;\">boolean</span>)<span style=\"color: #800080;\">$var</span>;   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">强制类型转换</span>\r\n<span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$v2</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n\r\n</span><span style=\"color: #800080;\">$v_true</span>=<span style=\"color: #0000ff;\">true</span>;   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">boolean值也可以直接赋值</span>\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">is_bool</span>(<span style=\"color: #800080;\">$v2</span>)&amp;&amp;<span style=\"color: #800080;\">$v2</span>===<span style=\"color: #800080;\">$v_true</span>) {    <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">恒等===，可以判断数据类型是否相同；is_bool</span>\r\n    <span style=\"color: #0000ff;\">echo</span> \"Variables have the same value and type!\"<span style=\"color: #000000;\">;  \r\n    </span><span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n}\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">另外，非恒等仍然是!==</span>\r\n\r\n<span style=\"color: #800080;\">$lll</span>=\"dfa\"+333<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">echo</span> <span style=\"color: #008080;\">gettype</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">var_dump允许一次检查多个变量，同时提供信息；print_r多用来对数组和对象进行输出；</span>\r\n\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #0000ff;\">isset</span>(<span style=\"color: #800080;\">$lll</span>)&amp;&amp;!<span style=\"color: #0000ff;\">empty</span>(<span style=\"color: #800080;\">$v2</span>)) {  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断是否为空</span>\r\n    <span style=\"color: #0000ff;\">unset</span>(<span style=\"color: #800080;\">$lll</span><span style=\"color: #000000;\">);\r\n}\r\n</span><span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\";  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">会报错，但仍能输出null</span>\r\n\r\n<span style=\"color: #0000ff;\">function</span> doubleint(<span style=\"color: #800080;\">$var</span>){   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">自定义函数</span>\r\n    <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">is_int</span>(<span style=\"color: #800080;\">$var</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #800080;\">$var</span>=<span style=\"color: #800080;\">$var</span>*2<span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$var</span><span style=\"color: #000000;\">;\r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"Please enter a int data.\"<span style=\"color: #000000;\">;\r\n    }\r\n}\r\n\r\n</span><span style=\"color: #0000ff;\">echo</span> doubleint(<span style=\"color: #800080;\">$var</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">echo</span> doubleint(4);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">个人觉得，还是少用global和地址传递，逻辑上容易出错，程序没错，结果却不对\r\n\r\n// 关于include和require\r\n// 多用include吧\r\n// include失败了只是警告，后者则是错误然后中断程序\r\n// 同时推荐没事儿就写绝对路径，好读也不易出错</span></pre>\r\n</div>\r\n<p>要说的都在上面了，总结下就是：常量，连接符，自定义函数，类型转换，类型判断，文件引用，恒等符，短路设计，var_dump。</p>\r\n<p>比较乱。</p>\r\n<p>最后举个例子吧，自制乘法表</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Chapter 2\'s example which is a chengfabiao</span>\r\n<span style=\"color: #0000ff;\">function</span> chengfabiao(<span style=\"color: #800080;\">$var</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #0000ff;\">for</span> (<span style=\"color: #800080;\">$row</span>=1;<span style=\"color: #800080;\">$row</span>&lt;=<span style=\"color: #800080;\">$var</span>;<span style=\"color: #800080;\">$row</span>++<span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">for</span>(<span style=\"color: #800080;\">$queue</span>=1;<span style=\"color: #800080;\">$queue</span>&lt;=<span style=\"color: #800080;\">$var</span>;<span style=\"color: #800080;\">$queue</span>++<span style=\"color: #000000;\">){\r\n            </span><span style=\"color: #800080;\">$answer</span>=<span style=\"color: #800080;\">$row</span>*<span style=\"color: #800080;\">$queue</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">echo</span> \"<span style=\"color: #800080;\">$row</span>*<span style=\"color: #800080;\">$queue</span>=\".<span style=\"color: #800080;\">$answer</span>.\"  \"<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n    }        \r\n}\r\n</span><span style=\"color: #800080;\">$var</span>=9<span style=\"color: #000000;\">;\r\nchengfabiao(</span><span style=\"color: #800080;\">$var</span>);</pre>\r\n</div>\r\n<p><br>自己改着玩吧。基础的东西也得常常拿出来温习下，我是这么认为的。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:05:06', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3018', '一起来啃书——PHP看书 ', '网络', '\n<p>形式所迫，不得不开展android的学习，PHP这边也开始了啃书的日子。两部500+的书，45天够不，有点忙有点忙。。。</p>\r\n<p>早上的胃胀，简直是一记闷棍，长点儿记性吧。。。。。。。。</p>\r\n<p>1、PHP+MYSQL开发指南（一）</p>\r\n<p>一、数据库应用程序与web</p>\r\n<p>1、本书中</p>\r\n<p>PHP+PEAR函数库；</p>\r\n<p>2、三层体系结构</p>\r\n<p>底层/数据库层——》中间层/程序逻辑层——》用户层/浏览器；</p>\r\n<p>MySQL（一种数据库管理系统DBMS）——》PHP程序/web脚本程序——》强化浏览器能力（Javascript）</p>\r\n<p>根据流量等指标调整每一层的安排。</p>\r\n<p>3、PHP优点</p>\r\n<p>老生常谈，但还是得知道，为了就是最大限度的发挥其特性。</p>\r\n<p>灵活——与HTML的集合；</p>\r\n<p>多功能实现；</p>\r\n<p>函数库/源码丰富；</p>\r\n<p>多平台的可移植。</p>\r\n<p>-----------------------------------------</p>\r\n<p> </p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:16:47', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3019', 'I am back-电商网站开发&jQuery ', '网络', '\n<p>　　hi</p>\r\n<p>之前有将近两周的时间没有更新，除了懒就是其他的事情耽误了。现在好了，回家了，虽然家里停水，外面又有积雪，天寒地冻的，但诸多不便，都比不过有点闲的好。</p>\r\n<p>开搞每个学PHP的必经之路——电商网站的开发。</p>\r\n<p><strong>1、电商网站开发——前端</strong></p>\r\n<p><strong>一、首页制作</strong></p>\r\n<p><strong>1.1 概况&amp;准备</strong></p>\r\n<p>整个电商网站包括什么呢，就是首页信息，后面的分类信息页，商品详情页，购物页面，售后页面等等，所以就一步步做。自己做的时候可以简单的画个概况图来指导开发，免得逻辑搞混。</p>\r\n<p>准备：项目文件夹，其中要有images（图片素材），js（javascript），style（css）三个子文件夹中。工具的话，看个人爱好，不过涉及的是前端，一般上习惯用DS的多，我比较懒，直接用zend+浏览器算求。</p>\r\n<p>其中准备中有一部是实现reset.css，也就是清零/清除css效果。css我基本算是个白痴，找个源码贴出来，侵删：</p>\r\n<p>@charset \"utf-8\";<br>/* CSS Document */<br>body,ul,ol,li,p,h1,h2,h3,h4,h5,h6,form,fieldset,table,td,img,div,dl,dt,dd,input{margin:0;padding:0;}<br>body{font-size:12px;}<br>img{border:none;}<br>li{list-style:none;}<br>input,select,textarea{outline:none;border:none; background:none;}<br>textarea{resize:none;}<br>a{text-decoration:none; color:#656565;}</p>\r\n<p>/*清浮动*/<br>.clearfix:after{content:\"\";display:block;clear:both;}<br>.clearfix{zoom:1;}<br>.fl{float:left;}<br>.fr{float:right;}</p>\r\n<p>1.2 顶部结构</p>\r\n<p> 用fireworks做，我还不会，先去学习下。</p>\r\n<p>--------真是蛋疼，做个开头就发现自己naive，先完成web进阶的jQuery吧----------</p>\r\n<p><strong>2、jQuery</strong></p>\r\n<p><strong>十二、jQuery在线聊天室</strong></p>\r\n<p><strong>12.1 基本功能介绍</strong></p>\r\n<p>登陆后才能进入（用于基本信息的在线显示）；</p>\r\n<p>动态显示交流后的内容；</p>\r\n<p>文字和表情的沟通实现（表情也是字符代号编码）</p>\r\n<p><strong>技术重点</strong>：<strong>ajax</strong>的无刷新技术展示数据</p>\r\n<p><strong>12.2 实现效果</strong></p>\r\n<p>利用jq中的ajax函数（比如$.ajax等）实现登陆，登陆时，显示登陆中，正确或失败，有相应的动作；</p>\r\n<p>聊天室就是聊天内容区域，输入区域，人员显示区域。</p>\r\n<p><strong>12.3 流程</strong></p>\r\n<p>登录页面——》向服务器请求登录信息（用户名和密码信息）——》成功：跳转到聊天主页；否则，跳回登录页面。</p>\r\n<p>聊天页面——》请求聊天数据——》获取聊天数据；</p>\r\n<p>在线人员信息——》请求——》获取；</p>\r\n<p>所以，可以简单作图，这里我掠过了，然后清楚的看到需要做的页面数量，请求和响应的逻辑和对应关系。</p>\r\n<p><strong>12.4 登录页面开发login</strong></p>\r\n<p>--功能</p>\r\n<p>验证登录信息；</p>\r\n<p>进入聊天室；</p>\r\n<p>--代码</p>\r\n<p>以前在PDO中讲过的一种，直接用POST方法传递表格参数的方法：</p>\r\n<p>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html;chraset=UTF-8\"&gt;<br>&lt;title&gt;登录&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;form action=\'login.php\' method=\'post\'&gt;<br>用户名：&lt;input type=\'text\' name=\'username\'/&gt;&lt;br/&gt;<br>密     码：&lt;input type=\'password\' name=\'password\'/&gt;&lt;br/&gt;<br>&lt;input type=\'submit\' value=\'登录\'/&gt;<br>&lt;/form&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>然后后续工作在login.php中实现就好了；</p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>$username=$_POST[\'username\'];<br>$password=$_POST[\'password\'];<br>try {<br>	$pdo=new PDO(\'mysql:host=localhost;dbname=imooc\',\'root\',\'\');<br>	$pdo-&gt;exec(\'use imooc_pdo\');<br>	$sql=\"select * from user where username=? and password=?\";<br>	$stmt=$pdo-&gt;prepare($sql);<br>	$stmt-&gt;execute(array($username,$password));<br>	//$stmt=$pdo-&gt;query($sql);<br><br>	$shit=$stmt-&gt;rowCount();//显示结果集statement对象中的行数<br>	echo $shit;<br>	if($shit == 1){<br>		//$url=\"ChatMain.html\";<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"alert(\\\"登录成功\\\")\";<br>		echo \"&lt;/script&gt;\";<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"document.location=\\\"ChatMain.html\\\"\";<br>		echo \"&lt;/script&gt;\";<br>	}else{	<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"alert(\\\"用户名或密码错误\\\")\";<br>		echo \"&lt;/script&gt;\";<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"document.location=\\\"login2.html\\\"\";<br>		echo \"&lt;/script&gt;\";<br>	}</p>\r\n<p>} catch (PDOException $e) {<br>	echo $e-&gt;getMessage();<br>}</p>\r\n<p>----------------------------------------------</p>\r\n<p>我们在这里想要的是jQuery实现方法：换一种实现，同时把登录做的稍微好看一点点哈（我觉得好看，一个在于对应的css文件的编写，另一个在html中实现，DS工具实现要方便一点，有时间也得整着学一下）；</p>\r\n<p>&lt;!DOCTYPE html&gt;<br>&lt;HTML&gt;<br>&lt;head&gt;<br>&lt;TITLE&gt;登录&lt;/TITLE&gt;<br>  &lt;SCRIPT type=\"text/javascript\" src=\"jq/jquery-1.8.2.min.js\"&gt;&lt;/SCRIPT&gt;<br>  &lt;SCRIPT type=\"text/javascript\" src=\"js/jsLogin.js\"&gt;&lt;/SCRIPT&gt;<br>  &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"style/cssLogin.css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>  &lt;div id=\"divLogin\"&gt;<br>    &lt;h3&gt;用户登录&lt;/h3&gt;<br>      &lt;div class=\"content\"&gt;<br>        &lt;div&gt;用户：&lt;input id=\"txtName\" type=\"text\" class=\"txt\" /&gt;&lt;/div&gt;<br>        &lt;div&gt;密码：&lt;input id=\"txtPass\" type=\"text\" class=\"txt\" /&gt;&lt;/div&gt;<br>        &lt;div class=\"btnCenter\"&gt;<br>          &lt;input id=\"Button1\" type=\"button\" value=\"登录\" class=\"btn\" /&gt;<br>          &amp;nbsp;&amp;nbsp;<br>          &lt;input id=\"Button2\" type=\"button\" value=\"取消\" class=\"btn\" /&gt;<br>        &lt;/div&gt;<br>        &lt;span id=\"divMsg\" class=\"clsTip\"&gt;&lt;/span&gt;<br>      &lt;/div&gt;<br>  &lt;/div&gt;<br>&lt;/body&gt;<br>&lt;/HTML&gt;</p>\r\n<p>其中，js是javascript逻辑控制文件；jq是jquery实现文件；css是css文件；后面的span标签，是为了实现某些功能暂时留下的。</p>\r\n<p>$(function(){<br>	//元素绑定全局ajaxStart事件<br>	//这里就是用到span的标签，给出过程<br>	$(\"#divMsg\").ajaxStart(function(){<br>		$(this).show().html(\"正在发送登录请求...\");<br>	})<br>	$(\"#divMsg\").ajaxStop(function(){<br>		$(this).html(\"请求处理已完成！\").hide();<br>	})<br>	$(\"#Button1\").click(function(){<br>		var $name=$(\"#txtName\");<br>		var $pass=$(\"#txtPass\");<br>		if($name.val() !== \"\" &amp;&amp; $pass.val()!==\"\"){<br>			UserLogin($name.val(),$pass.val());<br>		}else{<br>			if($name.val()==\"\"){<br>				alert(\"用户名不能为空！\");<br>				$name.focus();<br>				return false;  // 阻止进一步的动作，很重要的一步<br>			}else{<br>				alert(\"密码不能为空！\");<br>				$pass.focus();<br>				return false;<br>			}<br>		}<br>	})<br>});</p>\r\n<p>function UserLogin(name,pass){<br>	$.ajax({<br>		type: \"GET\",  //提交方式<br>		url: \"index.php\",   //提交对象<br>		data:\"action=Login&amp;d=\"+new Date()+\"&amp;name=\"+name+\"&amp;pass=\"+pass, //提交数据<br>		success:function(data){<br>			if(data==\"1\"){<br>			window.location=\"ChatMain.html\";<br>		}else{<br>			alert(\"用户名或密码错误！\");<br>			return false;<br>		}<br>	}<br>	});<br>} </p>\r\n<p>其实这里面还是有错误的，实现起来感觉没有第一种实现方法简单明了，希望了解的兄弟们指点下，两种方法的优缺点。</p>\r\n<p>我还是稍微完善了下第一种PDO方法，直接在html中post表格数据，与数据库进行比对，然后返回信息。</p>\r\n<p> 当然呢，第二种，也就是本来应该采用的这种方式，很明显的优点在于其模块化实现，对于开发人员来说也是清晰明了。但，私以为，小型任务中，如果没有统一规划好的名称啊，什么的，这样子模块化是不是显得冗余，毕竟还需要看模块是否匹配啊什么的，不知道理解的对不对。</p>\r\n<p><strong>12.5 聊天室页面ChatMain</strong></p>\r\n<p>从页面本身来说，就是head包含jq文件，js文件，css文件；body实现当前页面的效果，也有接口功能的实现；</p>\r\n<p>从布局来说，就是聊天窗口的样子，三个框框搞定（可是尼玛老子不会用css啊！！！！）；</p>\r\n<p> -----晚上不一定还会写，先发了吧-----</p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:12:05', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3020', '这回真的是挤时间了-PHP基础（三） ', '网络', '\n<p>　　hi</p>\r\n<p>刚看了唐人街探案，5星好评啊亲。由于是早就约好的，也不好推辞（虽然是和男的..），但该写的还是得挤时间写。明天早上老师的项目结题，虽然和我关系不大，但不要添乱就好！！</p>\r\n<p><strong>1、PHP </strong></p>\r\n<p><strong>一、PHP基础（三）</strong><br><strong>1.3.2 Int</strong></p>\r\n<p>整型。</p>\r\n<p>几个点：<strong>进制问题</strong>（2，8，16）；</p>\r\n<p>溢出——溢出后自动转为float型；</p>\r\n<p>整除；</p>\r\n<p>float转为int——向下取整；</p>\r\n<p>例子给出</p>\r\n<p><strong>$shi=123;</strong><br><strong>$bin=0b100001;</strong><br><strong>$ba=0123;</strong><br><strong>$shiliu=0x1234555;</strong></p>\r\n<p>function show($a){<br>	echo \"Truth is:\";<br>	var_dump($a);<br>	echo \"&lt;br/&gt;\";<br>}</p>\r\n<p>show($shiliu);<br>show($ba);<br>show($bin);</p>\r\n<p><strong>$qiguaideba=01237823;  //八进制的“溢出”,会截断，只输出01237</strong></p>\r\n<p>show($qiguaideba);</p>\r\n<p>function zhengchu($a,$b){<br>	$c=$a/$b;<br>	if(is_float($c)){<br><strong>var_dump(round($c));   //用round控制输出结果</strong><br>	}else{<br>		var_dump($c);<br>	}<br>}</p>\r\n<p>zhengchu($shiliu , $ba);</p>\r\n<p><strong>1.3.3 float</strong></p>\r\n<p>php版本不同，浮点型的精确度似乎是有变化的；而且坑爹的是，<strong>由于PHP内部机制的问题，也许会出现：</strong></p>\r\n<p><strong>var_dump(floor((0.1+0.7)*10));</strong></p>\r\n<p><strong>返回的往往是7而不是期望中的8....</strong></p>\r\n<p>使用高精度的话，<strong>用gmp函数</strong>，请自行去了解...</p>\r\n<p>然后真想比较的话，不妨<strong>设置一个最小值</strong>来比较：</p>\r\n<p>$bijiao1=0.232342342;<br>$bijiao2=0.232342323;<br><strong>$esp=0.000001;</strong><br>if(abs($bijiao1-$bijiao2)&lt;=$esp){<br>	echo \"True\".\"&lt;br/&gt;\";<br>}else{<br>	echo \"F**k\".\"&lt;br/&gt;\";<br>}</p>\r\n<p><strong>1.3.4 字符串</strong></p>\r\n<p>单双引号括起来的就是了~</p>\r\n<p>然后只想说一点的就是heredoc：</p>\r\n<p><strong>$str= &lt;&lt;&lt; EOF</strong><br>alsidjflja<br>akjsdhflkj<br>dfjlkj.<br><strong>EOF;</strong></p>\r\n<p>echo $str;</p>\r\n<p>基本就是这么个样子，但是注意，<strong>最后一行那个EOF;是必须要和分号紧紧相依的，而且分号后面必须是换行，EOF前面不能出现包括空格的一切东西；</strong></p>\r\n<p>然后heredoc还可以用在传递参数，初始化静态值等等；</p>\r\n<p>当然，heredoc中也可以调用参数啊属性的什么的——把EOF看成是大大的双引号就好了。</p>\r\n<p>其他的字符串相关，比如我经常用到的.做连接符什么的，比较基础，但是好用，去看一下视频就很明了。</p>\r\n<p>nowdoc也是一种比较新的方式，不太熟悉，然后似乎相当于单引号。</p>\r\n<p><strong>1.4 变量</strong></p>\r\n<p>变量好用，变量灵活，变量难用——一般就是渐渐的这么认为的。</p>\r\n<p>第一，PHP中不强调赋初值，不需要声明，但是<strong>推荐还是赋初值，养成好习惯</strong>；不赋初值，变量值为其类型的默认值；</p>\r\n<p>第二，引用赋值要知道，$b=&amp;$a;  只能对变量名进行操作；</p>\r\n<p>第三，赋值一次更新一次：</p>\r\n<p>$shit=\"asdf\";<br>$s=123;</p>\r\n<p>echo $shit;</p>\r\n<p>$shit=$s;<br>echo $shit;</p>\r\n<p><strong>2、GD库实现图片水印与缩略图</strong></p>\r\n<p><strong>一、简介</strong></p>\r\n<p>使用PHP中自带的GD库制作图片的水印。</p>\r\n<p>适合大批量的图片的简单处理。</p>\r\n<p>学习基本的方法，然后封装为一个工具类。 </p>\r\n<p> </p>\r\n<p>这周末除了看星球大战，就来补过补过，知道错了。。。。。</p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:12:07', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3021', '好好写，好好干-PHP基础（二） ', '网络', '\n<p>　　hi</p>\r\n<p>好久没写，昨儿一写，感觉还是有人看的，至少是有一两个评论的~~好好干！</p>\r\n<p>每天需要坚持的就那么4件事儿：写这个，学一点法语，看会儿书，锻炼。单身狗也有好处。</p>\r\n<p><strong>1、PHP</strong></p>\r\n<p><strong>一、PHP基础（二）</strong></p>\r\n<p><strong>1.3 数据类型</strong></p>\r\n<p><strong>8种——4种标量：布尔boolean，整型integer，浮点float/双精度double，字符串string；2种复合：数组array，对象object；2种特殊：资源resource，NULL无；</strong></p>\r\n<p>推荐记住英文，在学习的过程中，变量通常都是这么来命名的。</p>\r\n<p><strong>php是弱类型语言</strong>，也就是说，不需要提前声明变量的类型。</p>\r\n<p>查看变量的类型：gettype()；</p>\r\n<p>判断类型：is_*()，其中*为各种数据类型的简写。</p>\r\n<p><strong>1.3.1 Boolean</strong></p>\r\n<p>true或false，不区分大小写，习惯上（我）写全小写。</p>\r\n<p><strong>一般不需要强制转换为布尔值，系统自动判断；（见下例）</strong></p>\r\n<p><strong>这些都被认为为false：false；0；0.0；空字符串以及字符串\"0\"；空数组；NULL；从空标记生成的SimpleXML对象（我也不是很理解还，主要是还没有涉及XML）；</strong></p>\r\n<p>相对应的是其他都认为为true——<strong>注意，-1，也是true；</strong></p>\r\n<p>&lt;?php</p>\r\n<p>$boola=true;<br>$boolb=false;<br>$boolc=null;<br>$boold=-1;<br>$boole=\"sdkljf\";</p>\r\n<p>echo gettype($boola).\"&lt;hr/&gt;\";</p>\r\n<p>function isbool($bool){<br>	if(<strong>is_bool($bool)</strong>){<br>		echo \"You are damn right.It is boolean.\".\"&lt;br/&gt;\";<br>	}else{<br>		echo \"Sorry, it is not this type.Please try again.\".\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>isbool($boola);<br>isbool($boolc);<br>isbool($boold);<br>isbool($boole);</p>\r\n<p>function booluse($bool){<br><strong>if($bool)</strong>{<br>		echo \"It is equal to TRUE.\".\"&lt;br/&gt;\";<br>	}else{<br>		echo \"It is equal to FALSE.\".\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>booluse($boola);<br>booluse($boolc);<br>booluse($boold);</p>\r\n<p> 在上述例子中注意，如果直接判断是否为boolean，一般的数据类型是不会强制转换的，只有当用在if等判断中时，才会自动的、强制的转换为boolean使用。 </p>\r\n<p>1.3.2 Int</p>\r\n<p>整型。</p>\r\n<p> </p>\r\n<p> 我错了。。。写一半被老板召唤加班，明天保证完成该系列第一部分（说明晚要看唐人街的嘛。。）。</p>\r\n<p>晚安，看书去了</p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:05:06', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3022', '自罚一杯-PHP基础（一） ', '网络', '\n<p>　　hi</p>\r\n<p>懒癌是最可怕的癌了吧，在即将迎来本命年时，给自己定下每天必干的几件成习惯的事情，望不再鸽！！</p>\r\n<p>php是我一直在学习的东西，但总以为php简单，难点在需要掌握大量的相关知识，其实并不完全对，php也是有算法好吧，php也值得认真对待，既然决定学了，拿点样子出来啊，是男人吧。</p>\r\n<p><strong>1、PHP</strong></p>\r\n<p><strong>一、PHP基础（一）</strong></p>\r\n<p><strong>1.1 简介</strong></p>\r\n<p>PHP=Hypertext Preprocessor=超文本预处理语言；</p>\r\n<p><strong>脚本语言；</strong></p>\r\n<p><strong>执行效率高（就是速度快）；</strong></p>\r\n<p>可大可小，大网站往往不只使用它一种语言，比如淘宝，前p后j好像是；</p>\r\n<p>俗语：电子商务三大宝——上线，支付宝，php；</p>\r\n<p>版本问题：目前最新为PHP 7.0.0；我一般还在用PHP5。</p>\r\n<p>环境问题：windows各种集成环境，wamp，xampp，或者自行百度自助搭建；linux我前面的博文中有说，其实就几行命令的问题，当然系统版本不同，可能命令有所不同，大同小异，举一反三~</p>\r\n<p><strong>1.2 基础语法</strong></p>\r\n<p><strong>--PHP标记</strong></p>\r\n<p>&lt;?php和?&gt;；</p>\r\n<p>天生为html而生，嵌套其中；</p>\r\n<p><strong>一般在编译器中，不要写?&gt;，因为容易在结束标记前有不希望输出的空格等内容；直接删掉就行了，会自动结束的；</strong></p>\r\n<p>--从HTML中分离</p>\r\n<p><strong>&lt;?php if ($expression==true): ?&gt;</strong><br><strong> aaaaaaaaa</strong><br><strong> &lt;?php else: ?&gt;</strong><br><strong> bbbbbb</strong><br><strong> &lt;?php endif;?&gt;</strong></p>\r\n<p>一般情况下，php标记能很好的从HTML中分离，但上述例子情况例外——<strong>使用条件的高级分离方法</strong>；</p>\r\n<p>当解释器遇到未完成的条件语句时，会跳过标记寻找相应的东西（比如else）；</p>\r\n<p><strong>适用于输出大段文本，比echo等更有效率。</strong></p>\r\n<p>另外，开始结束的标记也可以用其他的，但推荐&lt;?php；</p>\r\n<p><span style=\"line-height: 1.5;\">--其他</span></p>\r\n<p><span style=\"line-height: 1.5;\">注释：//单行，/*多行；</span></p>\r\n<p><span style=\"line-height: 1.5;\">指令分隔符：分号</span></p>\r\n<p> </p>\r\n<p>把憋了一个月的电影去看了，时间挤啊挤，才有a杯那么一点，明天继续！</p>\r\n<p> </p>\n ', '2016-04-28 20:05:06', '2016-04-28 20:05:06', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3023', '睡觉问题早晚成为我顶头疼的问题。。。-PHP ', '网络', '\n<p>　　hi</p>\r\n<p>昨晚又作自己，睡不好整个人都不好。。。</p>\r\n<p><strong>1、PHP实现页面静态化</strong></p>\r\n<p><strong>二、纯静态化</strong></p>\r\n<p><strong>2.2 实现页面纯静态化的原理</strong></p>\r\n<p><strong>--基本方式</strong></p>\r\n<p>file_put_contents()函数；</p>\r\n<p>使用php内置缓存机制，output_buffering.</p>\r\n<p>具体信息可以去php手册中查找。重点看函数格式，参数，返回值。</p>\r\n<p><strong>--栗子file_put_contents()</strong></p>\r\n<p>&lt;?php<br>/*<br> * 写入函数<br> */</p>\r\n<p><strong>file_put_contents(\'index.shtml\',\'asdklfj\');</strong></p>\r\n<p>运行http://localhost/phpJingtaihua/index.shtml，得到结果。很简单的一个函数。</p>\r\n<p><strong>--栗子output_buffering</strong></p>\r\n<p>有内置函数，<strong>ob（output_buffering)系列的。</strong></p>\r\n<p>主要涉及四个</p>\r\n<p>ob_start,打开输出控制缓冲；</p>\r\n<p>ob_get_contents,返回输出缓冲区内容；</p>\r\n<p>ob_clean,清空输出缓冲区；</p>\r\n<p>ob_get_clean，得到缓冲区内容并删除当前输出缓冲区。</p>\r\n<p><strong>ob_start(); //打开缓冲区</strong><br>echo 1234;<br><strong>echo ob_get_contents();</strong></p>\r\n<p>得到12341234的序列。也就是说，所有输出都要经过缓冲区——就像是水龙头上装了个滤嘴。</p>\r\n<p>ob_start(); //打开缓冲区<br>echo 111;echo \"&lt;br/&gt;\";<br>echo ob_get_contents();echo \"&lt;br/&gt;\";<br><strong>ob_clean();</strong><br>echo ob_get_contents();echo \"&lt;br/&gt;\";</p>\r\n<p>echo 222;echo \"&lt;br/&gt;\";</p>\r\n<p>echo ob_get_clean();echo \"&lt;br/&gt;\";</p>\r\n<p>这里呢，111因为缓冲区的清除，而不会再输出，即使是原始的echo语句也不行。</p>\r\n<p><strong>2.3 纯静态化案例实现简介</strong></p>\r\n<p>终极目的就是生成静态文件。</p>\r\n<p>其一，写入数据到静态文件。</p>\r\n<p>其二，利用ob机制，获取（可以写入到静态文件的）数据。</p>\r\n<p><strong>2.4 案例实现步骤</strong></p>\r\n<p>链接数据库，从数据库中获取数据——》把获取到的数据填充到模板文件中去——》把动态页面转化为静态页面，生成纯静态文件。</p>\r\n<p> </p>\r\n<p>-----------------</p>\r\n<p>先这样，晚上有时间再写。。。。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3024', '其实今天没有欲望..-MySQLi ', '网络', '\n<p>　　hi</p>\r\n<p>中午爽爽的游了会儿泳，但是下午把一拳超人看完了，竟然萌生不出学习的欲望了。。。强迫自己更新点东西吧，一会儿看书去。</p>\r\n<p><strong>1、MySQLi</strong></p>\r\n<p><strong>二、MySQLi基于OOP的编程</strong></p>\r\n<p><strong>2.1 使用解析</strong></p>\r\n<p>--基本</p>\r\n<p><strong>MySQLi是一个拓展类库，本质上是个类</strong>（？）。</p>\r\n<p>一般流程和MySQL一样：<strong>连接，选库，字符集设定，SQL语句执行，关闭连接</strong>。</p>\r\n<p><strong>--链接库例子</strong></p>\r\n<p>&lt;?php<br>/*<br> * <strong>连接和选库</strong><br> */<br><strong>$mysqli=new mysqli(\'localhost\', \'root\', \'\');</strong><br>print_r($mysqli);echo \"&lt;br/&gt;\";</p>\r\n<p>echo <strong>$mysqli-&gt;select_db</strong>(\'test\');echo \"&lt;br/&gt;\";</p>\r\n<p><strong>$mysqli2=new mysqli();</strong><br>print_r(<strong>$mysqli2-&gt;connect</strong>(\'localhost\', \'root\', \'\'));echo \"&lt;br/&gt;\";</p>\r\n<p>print_r(<strong>$mysqli3=new mysqli(\'localhost\', \'root\', \'\',\'test\')</strong>);echo \"&lt;br/&gt;\";</p>\r\n<p>三种不同的方法，这里的方法都是利用mysqli的类属性来做的；当然也可以利用mysqli的命令来链接；</p>\r\n<p>$con=mysqli_connect(HOST,USERNAME,PASSWORD)</p>\r\n<p>结果中有一些信息</p>\r\n<table><tbody>\n<tr>\n<td class=\"webkit-line-content\">mysqli Object</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">(</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[affected_rows] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[client_info] =&gt; mysqlnd 5.0.11-dev - 20120503 - $Id: bf9ad53b11c9a57efdb1057292d73b928b8c5c77 $</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[client_version] =&gt; 50011</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[connect_errno] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[connect_error] =&gt;</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[errno] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[error] =&gt;</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[error_list] =&gt; Array</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">(</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">)</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\"> </td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[field_count] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[host_info] =&gt; localhost via TCP/IP</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[info] =&gt;</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[insert_id] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[server_info] =&gt; 5.6.17</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[server_version] =&gt; 50617</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[stat] =&gt; Uptime: 968 Threads: 1 Questions: 24 Slow queries: 0 Opens: 70 Flush tables: 1 Open tables: 63 Queries per second avg: 0.024</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[sqlstate] =&gt; 00000</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[protocol_version] =&gt; 10</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[thread_id] =&gt; 11</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[warning_count] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">)</td>\r\n\r\n</tr>\n</tbody></table>\n<p>这些属性都是可以通过对象的属性来得到的，比如</p>\r\n<p>echo $mysqli-&gt;client_info;echo \"&lt;br/&gt;\";</p>\r\n<p>或者是通过相对应的方法得到，这些东西查手册可以看到。</p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>//1.建立到MySQL数据的连接<br>// $mysqli=new mysqli(\'localhost\',\'root\',\'root\');<br>// //print_r($mysqli);<br>// //2.打开指定的数据库<br>// $mysqli-&gt;select_db(\'test\');<br>// $mysqli=new mysqli();<br>// $mysqli-&gt;connect(\'127.0.0.1\',\'root\',\'root\');<br>// print_r($mysqli);</p>\r\n<p>//建立连接的同时打开指定数据库<br>$mysqli=@new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>//print_r($mysqli);<br>//$mysqli-&gt;connect_errno:得到连接产生的错误编号<br>//$mysqli-&gt;connect_error:得到连接产生的错误信息<br>if($mysqli-&gt;connect_errno){<br>	die(\'Connect Error:\'.$mysqli-&gt;connect_error);<br>}<br>print_r($mysqli);<br>echo \'&lt;hr color=\"red\"/&gt;\';<br>echo \'客户端的信息：\'.$mysqli-&gt;client_info.\'&lt;br/&gt;\';<br>echo $mysqli-&gt;get_client_info().\'&lt;br/&gt;\';<br>echo \'客户端的版本：\'.$mysqli-&gt;client_version.\'&lt;br/&gt;\';<br>echo \'&lt;hr/&gt;\';<br>echo \'服务器端信息：\'.$mysqli-&gt;server_info.\'&lt;br/&gt;\';<br>echo $mysqli-&gt;get_server_info();<br>echo \'&lt;hr/&gt;\';<br>echo \'服务器版本：\'.$mysqli-&gt;server_version.\'&lt;br/&gt;\';</p>\r\n<p>echo \'&lt;hr/&gt;\';</p>\r\n<p><strong>--字符集例子</strong></p>\r\n<p>&lt;?php<br>//1.建立到MySQL的连接<br>$mysqli=@new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'Connect Error:\'.$mysqli-&gt;connect_error);<br>}<br>//2.设置默认的客户端编码方式utf8<br><strong>$mysqli-&gt;set_charset(\'utf8\');</strong></p>\r\n<p>//3.执行SQL查询<br>$sql=&lt;&lt;&lt;EOF<br>	CREATE TABLE IF NOT EXISTS mysqli(<br>		id TINYINT UNSIGNED AUTO_INCREMENT KEY,<br>		username VARCHAR(20) NOT NULL<br>	);<br>EOF;<br>$res=$mysqli-&gt;query($sql);<br>var_dump($res);</p>\r\n<p>/*<br> SELECT/DESC/DESCRIBE/SHOW/EXPLAIN执行成功返回mysqli_result对象，执行失败返回false<br> 对于其它SQL语句的执行，执行成功返回true，否则返回false<br> */<br>//关闭连接<br>$mysqli-&gt;close();</p>\r\n<p>需要注意的是数据库中的是utf8，而不是utf-8；</p>\r\n<p><strong>2.2 插入记录操作</strong></p>\r\n<p>增。</p>\r\n<p><strong>--connect.php</strong></p>\r\n<p>因为连接数据库的一系列操作是常用的，对于这种，我们简便的方法就是<strong>封装起来，到处调用</strong></p>\r\n<p>require_once \'connect.php\';</p>\r\n<p>connect.php</p>\r\n<p>&lt;?php<br>/*<br> * <strong>连接和选库（头）文件</strong><br> */<br>$mysqli=new mysqli(\'localhost\', \'root\', \'\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'Connect Error:\'.$mysqli-&gt;connect_error);<br>}else{<br>	echo \'客户端的信息：\'.$mysqli-&gt;client_info.\'&lt;br/&gt;\';<br>}<br>$mysqli-&gt;set_charset(\'utf8\');</p>\r\n<p><strong>--增</strong></p>\r\n<p>&lt;?php<br>/*<br> * 数据库插入数据<br> */</p>\r\n<p><strong>require_once \'connect.php\';</strong></p>\r\n<p>$sql=\"insert mysqli(username) value(\'Tom\')\";<br><strong>echo $mysqli-&gt;query($sql);</strong></p>\r\n<p>这里执行的是单条的sql语句。</p>\r\n<p>或者完善一点，添加一个判断，并输出错误信息。</p>\r\n<p>if($res){<br>	echo $mysqli-&gt;insert_id; <br>}else{<br>	echo \'ERROR \'.$mysqli-&gt;error;<br>}</p>\r\n<p>或者，插入多条记录</p>\r\n<p>$sql=\"insert mysqli(username) value(\'Sdaf\'),(\'Andy\')\";</p>\r\n<p><strong>2.3 更新记录</strong></p>\r\n<p>更新。</p>\r\n<p>$sql=\"update test set id=id+10\";<br>$mysqli-&gt;query($sql);</p>\r\n<p><strong>2.4 删除</strong></p>\r\n<p>删</p>\r\n<p>$sql=\"delete from mysqli where id&gt;=2\";</p>\r\n<p>--</p>\r\n<p><strong>特别说明，affected_rows返回的情况有三种：</strong></p>\r\n<p><strong>-1  sql语句有问题；</strong></p>\r\n<p>0 没有受影响的语句；</p>\r\n<p>&gt;=0 受影响的条数。</p>\r\n<p><strong>--小结</strong></p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>$mysqli=new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'CONNECT ERROR:\'.$mysqli-&gt;connect_error);<br>}<br>$mysqli-&gt;set_charset(\'utf8\');</p>\r\n<p>//执行SQL查询<br>//添加记录<br>//执行单条SQL语句,只能执行一条SQL语句<br>// $sql=\"INSERT user(username,password) VALUES(\'king\',\'king\');\";<br>// $sql.=\"DROP TABLE user;\";<br>$sql=\"INSERT user(username,password) VALUES(\'queen1\',\'queen1\'),(\'queen2\',\'queen2\'),(\'queen3\',\'queen3\'),(\'queen4\',\'queen4\')\";<br>$res=$mysqli-&gt;query($sql);<br>if($res){<br>	//得到上一插入操作产生的AUTO_INCREMENT的值<br>	echo \'恭喜您注册成功，您是网站第\'.$mysqli-&gt;insert_id.\'位用户&lt;br/&gt;\';<br>	//得到上一步操作产生的受影响记录条数<br>	echo \'有\'.$mysqli-&gt;affected_rows.\'记录被影响\';<br>}else{<br>	//得到上一步操作产生的错误号和错误信息<br>	echo \'ERROR \'.$mysqli-&gt;errno.\':\'.$mysqli-&gt;error;<br>}<br>echo \'&lt;hr/&gt;\';</p>\r\n<p>//将表中年龄+10<br>$sql=\"UPDATE user SET age=age+10\";<br>$res=$mysqli-&gt;query($sql);<br>if($res){<br>	echo $mysqli-&gt;affected_rows.\'条记录被更新\';<br>}else{<br>	echo \"ERROR \".$mysqli-&gt;errno.\':\'.$mysqli-&gt;error;<br>}<br>echo \'&lt;hr/&gt;\';</p>\r\n<p>//将表中id&lt;=6的用户删除掉<br>$sql=\"DELETE FROM user WHERE id&lt;=6\";<br>$res=$mysqli-&gt;query($sql);<br>if($res){<br>	echo $mysqli-&gt;affected_rows.\'条记录被删除\';<br>}else{<br>	echo \"ERROR \".$mysqli-&gt;errno.\':\'.$mysqli-&gt;error;<br>}<br>//关闭到MySQL的连接<br>$mysqli-&gt;close();</p>\r\n<p><strong>2.5 查</strong></p>\r\n<p>需要注意的是，用的是select，所以返回的是结果集，是可以打印出来的print_r或var_dump。</p>\r\n<p>所以这里就要说一下，返回的结果集的选择了。</p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>$mysqli=new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'CONNECT ERROR:\'.$mysqli-&gt;connect_error);<br>}<br>$mysqli-&gt;set_charset(\'utf8\');<br>$sql=\"SELECT id,username,age FROM user\";<br><strong>$mysqli_result=$mysqli-&gt;query($sql);</strong><br>//var_dump($mysqli_result);<br>if($mysqli_result &amp;&amp; $mysqli_result-&gt;num_rows&gt;0){<br>	//echo $mysqli_result-&gt;num_rows;<br><strong>//$rows=$mysqli_result-&gt;fetch_all();//获取结果集中所有记录，默认返回的是二维的</strong><br>	//索引+索引的形式<br>	//$rows=$mysqli_result-&gt;fetch_all(MYSQLI_NUM);<br>	//$rows=$mysqli_result-&gt;fetch_all(MYSQLI_ASSOC);<br>	//$rows=$mysqli_result-&gt;fetch_all(MYSQLI_BOTH);<br><strong>// 	$row=$mysqli_result-&gt;fetch_row();//取得结果集中一条记录作为索引数组返回</strong><br>// 	print_r($row);<br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_assoc();//取得结果集中的一条记录作为关联数组返回</strong><br>// 	print_r($row);<br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_array();//二者都有的</strong><br>// 	print_r($row);<br><br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_array(MYSQLI_ASSOC);</strong><br>// 	print_r($row);<br><br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_object();</strong><br>// 	print_r($row);<br>// 	echo \'&lt;hr/&gt;\';<br>// 	//移动结果集内部指针<br>// 	$mysqli_result-&gt;data_seek(0);<br>// 	$row=$mysqli_result-&gt;fetch_assoc();<br>// 	print_r($row);<br><br>// 	print_r($rows);</p>\r\n<p>	while($row=$mysqli_result-&gt;fetch_assoc()){<br>		//print_r($row);<br>		//echo \'&lt;hr/&gt;\';<br>		$rows[]=$row;<br>	}<br>	print_r($rows);<br><br><strong>//释放结果集</strong><br><strong>	$mysqli_result-&gt;free();</strong><br><br><br>}else{<br>	echo \'查询错误或者结果集中没有记录\';<br>}<br>$mysqli-&gt;close();</p>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3025', '感觉没睡好就..-shenmedoumeixie.... ', '网络', '\n<p>　　hi</p>\r\n<p>昨晚没睡好，虽然梦很香，但睡不好没精神做科研啊。。。</p>\r\n<p><strong>1、jQuery</strong></p>\r\n<p><strong>十二、实现聊天室创建</strong></p>\r\n<p><strong>12.1 基本功能</strong></p>\r\n<p>登陆；</p>\r\n<p><strong>无刷新实时交流；</strong></p>\r\n<p>支持表情。</p>\r\n<p>12.2 大致效果</p>\r\n<p>登陆——》验证，打算用AJAX来做；</p>\r\n<p>聊天——》php实现具体功能就行。</p>\r\n<p>12.3 数据流分析</p>\r\n<p>登陆页面：获取用户名和密码请求登陆-返回聊天页面或失败信息以及登陆页面；</p>\r\n<p>聊天页面：聊天内容的请求和返回（实现无刷新的更新数据）；在线人员信息的请求和返回；处理发送内容的请求，写入聊天内容。</p>\r\n<p><strong>12.4 登陆页面开发</strong></p>\r\n<p> --------突然间发现需要AJAX的知识储备，但我今天不想看ajax，周末再来吧。。。-----------</p>\r\n<p><strong>2、PHP实现页面静态化（一）</strong></p>\r\n<p><strong>一、静态化简介</strong></p>\r\n<p><strong>1.1、动态页面和静态页面</strong></p>\r\n<p>动态：执行动态程序，php，jsp等；比如php，语法分析，编译再运行。</p>\r\n<p>静态：html等文件。</p>\r\n<p><strong>1.2、关于优化页面响应时间</strong></p>\r\n<p><span style=\"line-height: 1.5;\">--主要手段</span></p>\r\n<p><span style=\"line-height: 1.5;\">动态页面静态化——本节重点；</span></p>\r\n<p>优化数据库；</p>\r\n<p>使用负载均衡；</p>\r\n<p>使用缓存；</p>\r\n<p><strong>--动态页面静态化</strong></p>\r\n<p><strong>场景</strong>：页面中的一些内容不经常改动；</p>\r\n<p><strong>实质：生成静态的HTML文件</strong>；（减少了执行步骤，也就节省了时间）</p>\r\n<p>减少响应时间，<strong>重要的是减少服务器负担。</strong></p>\r\n<p>不适合微博等更新较快的。</p>\r\n<p><strong>1.3 关于动态URL地址设置静态形式</strong></p>\r\n<p>http://state.com/index.php?c=play&amp;a=index&amp;id=8123</p>\r\n<p>变为</p>\r\n<p>http://state.com/play/8123.shtml</p>\r\n<p>这个过程暂时还是伪静态（实际上还是动态文件，只是换了个马甲）。</p>\r\n<p><strong>1.4 PHP静态化</strong></p>\r\n<p><strong>--纯静态</strong></p>\r\n<p>通过php程序生成的真正的静态文件。</p>\r\n<p>又分为局部纯静态（/局部动态，实现方法可能是ajax的异步操作）和全局纯静态。</p>\r\n<p><strong>--伪静态</strong></p>\r\n<p>把URL地址转化为类似html的情况。</p>\r\n<p><strong>二、纯静态化案例实现</strong></p>\r\n<p><strong>2.1 buffer</strong></p>\r\n<p>--概述</p>\r\n<p><strong>其实就是缓冲区</strong>，一个内存地址空间，用于存储数据。</p>\r\n<p>实现静态化，要围绕buffer展开。</p>\r\n<p>比如说电脑系统中的buffer，就是当有数据要进行存储操作的时候，需要先把某个buffer存满，然后再写入磁盘。</p>\r\n<p><strong>--流程</strong></p>\r\n<p>内容——php buffer——tcp——终端</p>\r\n<p><strong>--使用</strong></p>\r\n<p>&lt;?php<br>echo 1;echo \"&lt;br/&gt;\";<br>echo ob_get_contents();</p>\r\n<p>如果没开启，要么改php.ini，要么加头文件</p>\r\n<p>ob_start();</p>\r\n<p>2.2 实现纯静态化</p>\r\n<p>--基本方式</p>\r\n<p>file_put_contents()</p>\r\n<p>output_buffering()</p>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:14:48', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3026', '周一干不干活-PHP+MySQLi ', '网络', '\n<p>hi</p>\r\n<p>本来是雄心壮志的要干活的，哪知天有不测，早上大阴天起不来，中午又回寝室折腾衣服（做女工啊，牛不牛）没睡午觉，这样的迷糊状态，怎么科研，写这个好了。</p>\r\n<p><strong>1、PHP的OOP编程</strong></p>\r\n<p><strong>4.7 多态</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>由于接口的方法实现有多种多样，这种特性称之为多态</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>function eat($obj){<br>  if($obj instanceof ICanEat){ <br>    $obj-&gt;eat(\"FOOD\"); // 不需要知道到底是Human还是Animal，直接吃就行了<br>  }else{<br>    echo \"Can\'t eat!\\n\";<br>  }<br>}</p>\r\n<p>$man = new Human();<br>$monkey = new Animal();</p>\r\n<p><strong>// 同样的代码，传入接口的不同实现类的时候，表现不同。这就是为什么成为多态的原因。</strong><br>eat($man);<br>eat($monkey);</p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 多态<br> * 1. 只要某个对象实现了接口（instanceof），就可以直接在对象上调用接口的方法<br> */</p>\r\n<p><strong>4.8 抽象类</strong></p>\r\n<p><strong>--问题</strong></p>\r\n<p>连接接口的类，某些方法都是相同的，那么是否能够允许类中不实现，而是在接口中实现。</p>\r\n<p>比如，人和动物吃东西不同，但呼吸相同。</p>\r\n<p><strong>--栗子</strong></p>\r\n<p><strong>abstract class ACanEat{ //关键字改变</strong><br><strong>abstract public function eat($food);//需要类自行实现的，前面加上abstract关键字</strong><br><br>	public function breath(){<br>		echo \"Breath use the air.&lt;br/&gt;\";<br>	}<br><br>}</p>\r\n<p>class Human extends ACanEat{       //实现接口用implenments，这里用extends<br>	public function eat($food){<br>		echo \"Human eating \".$food.\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class Animal <strong>extends</strong> ACanEat{       <strong>//实现接口用implenments，这里用extends</strong><br>	public function eat($food){<br>		echo \"Animal eating \".$food.\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>$xiaoming=new Human();<br>$xiaohei=new Animal();</p>\r\n<p>$xiaoming-&gt;breath();$xiaoming-&gt;eat(\"food\");<br>$xiaohei-&gt;breath();$xiaohei-&gt;eat(\"shit\");</p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 抽象类<br> * 1. 抽象类允许类里面的部分方法暂时没有具体实现，这些方法我们成为抽象方法<br> * 2. 一旦类里面有抽象方法，这个类就必须是抽象类<br> * 3. 抽象类跟接口一样，不能直接实例化为对象<br> */</p>\r\n<p><strong>五、魔术方法</strong></p>\r\n<p><strong>5.1 简介</strong></p>\r\n<p><strong>注意所有的魔术方法前面都是两个下划线__</strong></p>\r\n<p>PHP中的OOP特有的。</p>\r\n<p>比如构造函数和析构函数。</p>\r\n<p><strong>5.2 __tostring()和__invoke()</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>__tostring()，当对象被当作String使用时，这个方法会被自动调用；echo $obj;</p>\r\n<p>__invoke()，当对象被当作方法（函数）调用时，这个方法被自动调用；$obj(4);</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>&lt;?php<br>/*<br> * tostring()魔术方法<br> * invoke()魔术方法<br> */</p>\r\n<p>class MagicTest{<br>	public function __toString(){<br>	return \"This is the class magictest.\";<br>}<br>   public function __invoke($x){<br>   	echo \"&lt;br/&gt;\".$x;<br>   }<br>}<br>$obj=new MagicTest();<br>echo $obj;</p>\r\n<p>$obj(5);</p>\r\n<p>用法和构造函数析构函数类似。比较自动化（自动调用，即使没有声明也会调用），但同时<strong>比较容易出错，小心。</strong></p>\r\n<p><strong>5.3 __call()和__callStatic()或重载（overloading）</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>当对象访问不存在的方法名称时，__call()会被自动调用；</p>\r\n<p>当对象访问不存在的静态方法名称时，__callStatic()会被自动调用；</p>\r\n<p>这两个方法，又称为重载（不同于重写）；通过这两个方法，同一个方法的名称的调用可以对应不同的方法实现</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>&lt;?php<br>/*<br> * tostring()魔术方法<br> * invoke()魔术方法<br> */</p>\r\n<p>class MagicTest{<br>	public function __toString(){<br>	return \"This is the class magictest.\";<br>}<br>   public function __invoke($x){<br>   	echo \"&lt;br/&gt;\".$x.\"&lt;br/&gt;\";<br>   }<br><strong>public function __call($name,$arguments){    //__call的格式是固定的，第一个是方法名，第二个是方法内的参数</strong><br>   	  echo \"Calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br>   public <strong>static</strong> function __callstatic($name,$arguments){ <br>   	echo \"Static calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br>}<br>$obj=new MagicTest();<br>echo $obj;</p>\r\n<p>$obj(5);</p>\r\n<p>$obj-&gt;runTest(\"para1\",\"para2\");<br>$obj::runTest(\"para3\",\"para4\");</p>\r\n<p>注意这里要求定义方法的时候格式是固定的。</p>\r\n<p><strong>5.4 __get()__set()__isset()__unset</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>这几个方法也被称为<strong>属性重载</strong>的魔术方法。</p>\r\n<p>__set()，在给<strong>不可访问属性（一种是属性未定义，另一种是没有访问权限，如private）</strong>赋值时调用；</p>\r\n<p>__get()，读取不可访问属性的值时调用；</p>\r\n<p>__isset()，当对不可访问属性调用isset（）或empty（）时调用；</p>\r\n<p>__unset()，。。。。。。。。。unset（）。。。。。。。。。。</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>&lt;?php<br>/*<br> * tostring()魔术方法<br> * invoke()魔术方法<br> */</p>\r\n<p>class MagicTest{<br>	public function __toString(){<br>	return \"This is the class magictest.\";<br>}<br>   public function __invoke($x){<br>   	echo \"&lt;br/&gt;\".$x.\"&lt;br/&gt;\";<br>   }<br>   public function __call($name,$arguments){    //__call的格式是固定的，第一个是方法名，第二个是方法内的参数<br>   	  echo \"Calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br>   public static function __callstatic($name,$arguments){    <br>   	echo \"Static calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br><strong>public function __get($name){  //get要有name</strong><br>   	return \"Getting the property \".$name.\"&lt;br/&gt;\"; 	  	<br>   } <br><strong>public function __set($name,$value){   //set要有名有值</strong><br>   	echo \"Setting the property \".$name.\" to value \".$value.\".&lt;br/&gt;\";<br>   }<br><strong>public function __isset($name){    //判断是否定义了属性</strong><br>   	echo \"__isset invoked&lt;br/&gt;\";<br>   	return true;<br>   }<br><strong>public function __unset($name){   //撤销</strong><br>   	echo \"unsetting protery \".$name.\"&lt;br/&gt;\";<br>   	return true;<br>   }<br>}<br>$obj=new MagicTest();<br>echo $obj;</p>\r\n<p>$obj(5);</p>\r\n<p>$obj-&gt;runTest(\"para1\",\"para2\");<br>$obj::runTest(\"para3\",\"para4\");</p>\r\n<p>echo $obj-&gt;classname;<br>$obj-&gt;classname=\"shit\";</p>\r\n<p>echo isset($obj-&gt;classname).\"&lt;br/&gt;\";<br>unset($obj-&gt;classname);echo \"&lt;br/&gt;\";<br>echo empty($obj-&gt;classname).\"&lt;br/&gt;\";</p>\r\n<p>结果是</p>\r\n<p>This is the class magictest.<br>5<br>Calling runTest with parameters: para1,para2<br>Static calling runTest with parameters: para3,para4<br>Getting the property classname<br>Setting the property classname to value shit.<br>__isset invoked<br>1<br>unsetting protery classname<br><br>__isset invoked</p>\r\n<p>可以看到，<strong>其实isset和empty调用__isset时一对相反的操作。</strong></p>\r\n<p>然后，<strong>__set($name，$value)和__unset($name)</strong>是一对相反的操作，但所要元素不一样；</p>\r\n<p><strong>__isset($name),__get($name)</strong>都只需要名字（记住每个魔术方法的作用，理解了，就好记了）。</p>\r\n<p><strong>5.5 __clone()</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>就是克隆，或克隆</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>先给出<strong>clone关键字</strong>的用法。</p>\r\n<p>&lt;?php<br>/*<br> * 克隆魔术方法<br> */</p>\r\n<p>class  nbaPlayer{<br>	public $name;<br>}</p>\r\n<p>$james=new nbaPlayer();<br>$james-&gt;name=\'James\';<br>echo $james-&gt;name.\"&lt;br/&gt;\";</p>\r\n<p><strong>$kobe=clone $james;</strong><br>$kobe-&gt;name=\'Kobe\';<br>echo $kobe-&gt;name;</p>\r\n<p>clone后的，就是个单独的对象，对其操作不影响原对象。</p>\r\n<p><strong>加上__clone()</strong></p>\r\n<p>&lt;?php<br>/*<br> * 克隆魔术方法<br> */</p>\r\n<p>class  nbaPlayer{<br>	public $name;<br><br><strong>public function __clone(){</strong><br>		$this-&gt;name=\"shit\";<br>	}<br><br>}</p>\r\n<p>$james=new nbaPlayer();<br>$james-&gt;name=\'James\';<br>echo $james-&gt;name.\"&lt;br/&gt;\";</p>\r\n<p>$kobe=clone $james;<br><strong>echo $kobe-&gt;name.\"&lt;br/&gt;\";</strong><br>$kobe-&gt;name=\'Kobe\';<br>echo $kobe-&gt;name.\"&lt;br/&gt;\";</p>\r\n<p>一般来说，用处在于<strong>clone后的初始化</strong>；或者说，<strong>当复制后，不想透露的某些信息的掩盖。</strong></p>\r\n<p>在工作中常用到这一个，因为常有<strong>对某个对象的操作，又不想影响原有数据</strong>，就克隆/复制一个出来。</p>\r\n<p>----------------------------------------</p>\r\n<p><strong>2、MySQLi扩展</strong></p>\r\n<p><strong>一、安装及下载</strong></p>\r\n<p>1.1 优势及简介</p>\r\n<p>更新更好，PHP5及以后推荐使用（或者PDO）。</p>\r\n<p><strong>--优点</strong></p>\r\n<p>基于OOP和面向过程的使用；</p>\r\n<p>支持预处理语句；</p>\r\n<p>支持事务。</p>\r\n<p>--其他</p>\r\n<p>速度更快。安全性更好</p>\r\n<p><strong>1.2 安装及配置</strong></p>\r\n<p>--安装</p>\r\n<p>配置php，开启php_mysqli.dll；</p>\r\n<p>配置extension_dir=\'ext目录位置\';</p>\r\n<p>重启服务器。</p>\r\n<p>（我用的是WAMP，直接打对勾就行）</p>\r\n<p><strong>--验证</strong></p>\r\n<p>&lt;?php<br>/*<br> * 验证mysqli是否开启<br> */</p>\r\n<p>//phpinfo();<br>//2.检测扩展是否已经加载<br>var_dump(extension_loaded(\'mysqli\'));<br>var_dump(extension_loaded(\'curl\'));<br>echo \'&lt;hr/&gt;\';<br>//3.检测函数是否存在<br>var_dump(function_exists(\'mysqli_connect\'));<br>echo \'&lt;hr/&gt;\';<br>//4.得到当前已经开启的扩展<br>print_r(get_loaded_extensions());<br>echo \'&lt;hr/&gt;\';</p>\r\n<p> </p>\r\n<p>---</p>\r\n<p>困了，回去洗洗睡觉。。。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3027', '荒芜的周六-PHP之面向对象（三） ', '网络', '\n<p>　　hi　　</p>\r\n<p>又是开森的周六了。积攒的两周的衣服，终于是差不多洗完了。大下午的才来学点东西~~</p>\r\n<p><strong>1、PHP面向对象（三）</strong></p>\r\n<p><strong>四、OOP的高级实践</strong></p>\r\n<p><strong>4.3 Static-静态成员</strong></p>\r\n<p>&lt;?php<br>date_default_timezone_set(\"PRC\");<br>/**<br> * 1. 类的定义以class关键字开始，后面跟着这个类的名称。类的名称命名通常每个单词的第一个字母大写。<br> * 2. 定义类的属性<br> * 3. 定义类的方法<br> * 4. 实例化类的对象<br> * 5. 使用对象的属性和方法<br> */</p>\r\n<p>class Human{<br>	public $name;<br>	public $height;<br>	public $weight;<br><br>	public function eat($food){<br>		echo $this-&gt;name.\"\'s eating \".$food.\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class Animal{<br>	public $kind;<br>	public $gender;<br>}</p>\r\n<p><br>class NbaPlayer extends Human{<br>    // 类的属性的定义<br>    public $name=\"Jordan\";// 定义属性<br>    public $height=\"198cm\";<br>    public $weight=\"98kg\";<br>    public $team=\"Bull\";<br>    public $playerNumber=\"23\";<br>    private $age=\"44\";<br>    public $president=\"David Stern\";<br><br><br><br>    // 类的方法的定义<br>    public function changePresident($newP){<br>    	$this-&gt;president=$newP;<br>    }<br><br>    public function run() {<br>        echo \"Running&lt;br/&gt;\";<br>    }</p>\r\n<p>    public function jump(){<br>        echo \"Jumping&lt;br/&gt;\";<br>    }<br><br>    public function dribble(){<br>        echo \"Dribbling&lt;br/&gt;\";<br>    }<br><br>    public function shoot(){<br>        echo \"Shooting&lt;br/&gt;\";<br>    }<br><br>    public function dunk(){<br>        echo \"Dunking&lt;br/&gt;\";<br>    }<br><br>    public function pass(){<br>        echo \"Passing&lt;br/&gt;\";<br>    }<br><br>    public function getAge(){<br>    	echo $this-&gt;name.\"\'s age is \".$this-&gt;age;<br>    }<br><br>    function __construct($name, $height, $weight, $team, $playerNumber){<br>    	print $name . \";\" . $height . \";\" . $weight . \";\" . $team . \";\" . $playerNumber.\"\\n\";<br>    	$this-&gt;name = $name; // $this是php里面的伪变量，表示对象自身<br>    	$this-&gt;height = $height; // 通过$this可以设置对象的属性值<br>    	$this-&gt;weight = $weight;<br>    	$this-&gt;team = $team;<br>    	$this-&gt;playerNumber = $playerNumber;<br>    }<br><br>}</p>\r\n<p><br>/**<br> * 1. 类实例化为对象时使用new关键字，new之后紧跟类的名称和一对括号。<br> * 2. 使用对象可以像使用其他值一样进行赋值操作<br> */<br>$jordan = new NbaPlayer(\"Jordan\", \"198cm\",\"98kg\",\"Bull\",\"23\");echo \"&lt;br/&gt;\";<br>$james=new NbaPlayer(\"James\", \"203cm\", \"120kg\", \"Heat\", \"6\");echo \"&lt;br/&gt;\";<br>// 访问对象的属性使用的语法是-&gt;符号，后面跟着属性的名称<br>echo $jordan-&gt;name.\"&lt;br/&gt;\";<br>// 调用对象的某个方法使用的语法是-&gt;符号，后面跟着方法的名称和一对括号<br>$jordan-&gt;run();<br>$jordan-&gt;pass();<br>//子类调用父类的方法<br>$jordan-&gt;eat(\"apple\");<br>//试着调用private,直接以及通过内部的public函数<br>//$jordan-&gt;age;<br>$jordan-&gt;getAge();echo \"&lt;br/&gt;\";</p>\r\n<p>$jordan-&gt;changePresident(\"Adam Silver\");<br>echo $jordan-&gt;president.\"&lt;br/&gt;\";<br>echo $james-&gt;president.\"&lt;br/&gt;\";</p>\r\n<p> 直接从上述例子开始吧。</p>\r\n<p>这里想得到的是，<strong>把两位对象的某一个变量同时变掉。——用static</strong></p>\r\n<p><strong> public static $president=\"David Stern\";</strong><br><br>    // 类的方法的定义<br>    public <strong>static</strong> function changePresident($newP){<br><strong>static::$president=$newP;//这里static换成self更符合规范</strong><br>    }</p>\r\n<p>注意这里static的位置，以及，方法内的::</p>\r\n<p>调用的方法也有所变动。</p>\r\n<p>echo <strong>NbaPlayer::$president;</strong>echo \"&lt;br/&gt;\";<br><strong>NbaPlayer::changePresident(\"Adam Silver\");</strong><br>echo NbaPlayer::$president;echo \"&lt;br/&gt;\";</p>\r\n<p>也就是像之前说的，<strong>静态成员就是个常量，所以不针对某个具体的对象（不受具体对象的约束）</strong>——基于此，定义&amp;赋值&amp;调用都不需要具体的对象参与。</p>\r\n<p><strong>内部调用要用self/static::$...</strong></p>\r\n<p><strong>外部调用，类名::</strong></p>\r\n<p>用处就是所有的对象共用的数据。</p>\r\n<p><strong>--如果内部调用时，变量在父类中</strong></p>\r\n<p>比如说，在上述例子中，父类human中写这么一句话</p>\r\n<p>public static $aaa=\"dafdfa\";</p>\r\n<p>然后在子类nbaplayer中，调用父类的静态成员时，要</p>\r\n<p>echo <strong>parent::$aaa;</strong></p>\r\n<p>而外部调用，按照上面说的，类名::，所以，直接父类类名即可</p>\r\n<p>echo Human::$aaa;</p>\r\n<p>--其他</p>\r\n<p><strong>在静态方法中，是无法访问其他变量的，也就是说，不能用$this-&gt;</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 静态成员<br> * 1. 静态属性用于保存类的公有数据<br> * 2. 静态方法里面只能访问静态属性<br> * 3. 静态成员不需要实例化对象就可以访问<br> * 4. 类内部，可以通过self或者static关键字访问自身的静态成员<br> * 5. 可以通过parent关键字访问父类的静态成员<br> * 6. 可以通过类名称在外部访问类的静态成员<br> */</p>\r\n<p><strong>4.4 Final成员</strong></p>\r\n<p><strong>--问题</strong></p>\r\n<p>不希望某个类拥有子类；</p>\r\n<p>不希望子类修改父类中的某个变量（避免重写？）</p>\r\n<p><strong>--final</strong></p>\r\n<p>》=php5版本</p>\r\n<p>举个例子</p>\r\n<p>class BaseClass{<br>	public  function test(){<br>		echo \"BaseClass::test called&lt;br/&gt;\";<br>	}<br><br>	public function test1(){<br>		echo \"BaseClass::test1 called&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class  ChildClass extends BaseClass{<br>	public function test(){<br>		echo \"ChildClass::test called&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>$obj=new ChildClass();<br>$obj-&gt;test();</p>\r\n<p>子类中编写跟父类中完全一致的方法名（内容可以不同），会完成对父类方法的<strong>重写</strong>！</p>\r\n<p><strong> 所以，不希望被重写的父类中的方法，写上final</strong></p>\r\n<p><strong><strong>final </strong>public function test(){</strong></p>\r\n<p>依此类推，对于不想有子类的父类，在类名那里写上final</p>\r\n<p><strong>final class BaseClass{</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 重写和Final<br> * 1. 子类中编写跟父类完全一致的方法可以完成对父类方法的重写<br> * 2. 对于不想被任何类继承的类可以在class之前添加final关键字<br> * 3. 对于不想被子类重写（overwrite, 修改）的方法，可以在方法定义前面添加final关键字<br> */</p>\r\n<p><strong>4.5 数据访问</strong></p>\r\n<p>先把final都去掉</p>\r\n<p>--parent</p>\r\n<p>然后再子类中的方法中写</p>\r\n<p>parent::test();</p>\r\n<p>运行后会发现，依然可以<strong>通过parent的关键字调用父类中，即使是被重写的数据</strong></p>\r\n<p>--self</p>\r\n<p>然后在父类中的方法test中写</p>\r\n<p><span class=\"Apple-tab-span\"> self::test1();</span></p>\r\n<p>运行后，发现<strong>self可以调用同一个类中的数据（其他方法/静态变量/常量const）</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 数据访问补充<br> * 1. parent关键字可以用于调用父类被重写的类成员<br> * 2. self关键字可以用于访问类自身的成员方法，也可以用于访问自身的静态成员和类常量；不能用于访问类自身的属性；访问类常量时不用在常量名称前面加$符号<br> * 3. static关键字用于访问类自身定义的静态成员，访问静态属性时需要在属性名前面添加$符号<br> */</p>\r\n<p><strong>4.6 对象接口</strong></p>\r\n<p>非常重要！！！</p>\r\n<p><strong>--问题</strong></p>\r\n<p>不同的类，有着相同的行为，但相同的行为又有着不同的实现方法。</p>\r\n<p>比如人和动物都会吃东西，但吃的方式方法又不太一样。</p>\r\n<p>--定义</p>\r\n<p><strong>接口就是把不同类的共同行为进行了定义，然后在不同的类里面实现不同的功能。</strong></p>\r\n<p><strong>--栗子 </strong></p>\r\n<p>//定义一个接口<br><strong>interface ICanEat{</strong><br>	public function eat($food);<br>}</p>\r\n<p>可以看到，接口中并没有方法的具体实现，但必须有方法！</p>\r\n<p>那么，下面是，“人类会吃”</p>\r\n<p>//具体对象，连接到接口<br><strong>class Human implements ICanEat{</strong><br><br>	public function eat($food){<br>		echo \"Human eating \".$food.\".&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>$obj=new Human();<br>$obj-&gt;eat(\"shit\");</p>\r\n<p>请忽略我给出的“食物”。</p>\r\n<p>注意，<strong>不再用extends，而是implements。然后，同样是方法名的完全相同。然后，对象必须/最好实现方法。</strong></p>\r\n<p>继续</p>\r\n<p>interface ICanEat{<br>	public function eat($food);<br>}</p>\r\n<p>//具体对象，连接到接口<br>class Human implements ICanEat{<br>public function eat($food){<br>		echo \"Human eating \".$food.\".&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class Animal implements ICanEat{<br>    public function eat($food){<br>		echo \"Animal eating \".$food.\".&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p><br>$obj=new Human();<br>$obj-&gt;eat(\"shit\");</p>\r\n<p>$monkey=new Animal();<br>$monkey-&gt;eat(\"banana\");</p>\r\n<p>让动物也吃起来！</p>\r\n<p><strong>--逆向操作</strong></p>\r\n<p>判断某个对象是否连接了某个接口。</p>\r\n<p>var_dump($obj<strong> instanceof</strong> ICanEat);</p>\r\n<p>会返回boolean值。</p>\r\n<p><strong>--更多的栗子</strong></p>\r\n<p><strong>interface ICanPee extends ICanEat{</strong><br>	public function pee();<br>}</p>\r\n<p>class Demon implements ICanPee{<br>	public function pee(){<br>		echo \"Can demon pee?\";<br>	}<br>	public function eat($food){<br>		echo \"Can demon eat \".$food;<br>	}<br>}</p>\r\n<p>$ghost=new Demon();<br>$ghost-&gt;pee();<br>$ghost-&gt;eat(\"shit\");</p>\r\n<p><strong>接口本质上也是类，可以被继承/继承，但是使用继承接口的接口，所有父类、“爷类”的方法都要有具体实现。</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 接口<br> * 1. 接口的基本概念和基本使用方法<br> * 2. 接口里面的方法没有具体的实现<br> * 3. 实现了某个接口的类必须提供接口中定义的方法<br> * 4. 不能用接口创建对象，但是能够判断某个对象是否实现了某个接口<br> * 5. 接口可以继承接口（interface extends interface）<br> * 6. 接口中定义的所有方法都必须是公有，这是接口的特性。<br> */</p>\r\n<p> </p>\r\n<p>aaaaaaaaaaaaaa</p>\r\n<p>bu xiang xie le....................</p>\r\n<p>ming tian yao ge ..............</p>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3028', '周五了啦啦啦啦-LAMP+PHP‘s OOP ', '网络', '\n<p>　　hi</p>\r\n<p>周五咯~~</p>\r\n<p><strong>1、LAMP配置完结篇</strong></p>\r\n<p><strong>五、LAMP配置环境优化</strong></p>\r\n<p><strong>5.4 虚拟主机工作原理</strong></p>\r\n<p>apache的虚拟主机。virtual-host</p>\r\n<p>用不同的域名访问不同的目录——手动模拟dns</p>\r\n<p>修改host文件即可实现。具体就是主机地址 域名</p>\r\n<p><strong>复习</strong></p>\r\n<p>liang@liang-andy:~$ sudo apt-get install apache2</p>\r\n<p>liang@liang-andy:~$ sudo apt-get install php5<br>然后加载/检查php5.load这个php实现对apache2操作的模块<strong>（LAMP的互相，就是模块的启动/连接）</strong><br>liang@liang-andy:~$ cat /etc/apache2/mods-enabled/php5.load<br>liang@liang-andy:~$ sudo apt-get install mysql-server</p>\r\n<p>sudo apt-get install apache2 php5 mysql-server php5-mysql</p>\r\n<p>liang@liang-andy:~$ sudo service mysql restart<br>liang@liang-andy:~$ sudo service apache2 restart</p>\r\n<p>----创建phpinfo探针</p>\r\n<p>先装vim</p>\r\n<p>sudo apt-get install vim</p>\r\n<p>再切换到php的www文件夹，用cd命令</p>\r\n<p>cd /var/www/html（14.4版本）</p>\r\n<p>然后在这里创建一个php文件</p>\r\n<p>sudo vim info.php</p>\r\n<p>写php代码</p>\r\n<p>&lt;?php<br>echo mysql_connect(\'localhost\',\'root\',\'hanhan123\') ? \'Hoho\' : \'WTF\';<br><br>phpinfo();<br>然后esc键，输入:wq保存退出</p>\r\n<p>http://192.168.1.100/info.php 浏览器输入验证结果</p>\r\n<p><strong>复习结束</strong></p>\r\n<p><strong>5.5 安装phpmyadmin</strong></p>\r\n<p>--</p>\r\n<p><strong>apt-get命令</strong></p>\r\n<p>sudo apt-get install phpmyadmin</p>\r\n<p>sudo ln -s /usr/share/phpmyadmin/ /var/www/pma</p>\r\n<p><strong> 六、服务器集群了解</strong></p>\r\n<p>国内外有很多著名的巨型服务器集群。</p>\r\n<p>用于同时处理大批量的请求</p>\r\n<p>-----------------------------------</p>\r\n<p><strong>2、PHP的OOP编程</strong></p>\r\n<p><strong>四、OOP的高级实践</strong></p>\r\n<p><strong>程序准备</strong></p>\r\n<p>&lt;?php<br>date_default_timezone_set(\"PRC\");<br>/**<br> * 1. 类的定义以class关键字开始，后面跟着这个类的名称。类的名称命名通常每个单词的第一个字母大写。<br> * 2. 定义类的属性<br> * 3. 定义类的方法<br> * 4. 实例化类的对象<br> * 5. 使用对象的属性和方法<br> */<br>class NbaPlayer<br>{<br>    // 类的属性的定义<br>    public $name=\"Jordan\";// 定义属性<br>    public $height=\"198cm\";<br>    public $weight=\"98kg\";<br>    public $team=\"Bull\";<br>    public $playerNumber=\"23\";</p>\r\n<p>    // 类的方法的定义<br>    public function run() {<br>        echo \"Running\\n\";<br>    }</p>\r\n<p>    public function jump(){<br>        echo \"Jumping\\n\";<br>    }<br>    public function dribble(){<br>        echo \"Dribbling\\n\";<br>    }<br>    public function shoot(){<br>        echo \"Shooting\\n\";<br>    }<br>    public function dunk(){<br>        echo \"Dunking\\n\";<br>    }<br>    public function pass(){<br>        echo \"Passing\\n\";<br>    }<br>}</p>\r\n<p>/**<br> * 1. 类实例化为对象时使用new关键字，new之后紧跟类的名称和一对括号。<br> * 2. 使用对象可以像使用其他值一样进行赋值操作<br> */<br>$jordan = new NbaPlayer();<br>// 访问对象的属性使用的语法是-&gt;符号，后面跟着属性的名称<br>echo $jordan-&gt;name.\"\\n\";<br>// 调用对象的某个方法使用的语法是-&gt;符号，后面跟着方法的名称和一对括号<br>$jordan-&gt;run();<br>$jordan-&gt;pass();</p>\r\n<p>?&gt;</p>\r\n<p><strong> 4.1 继承</strong></p>\r\n<p>也就是对象相似的部分，可以多处使用——避免代码冗余，开发效率提高。</p>\r\n<p>优点：父类中定义的了，子类中无需再次定义——效率高；对于外部，表现一致（父类是一样的）；重写，来修改子类。</p>\r\n<p>举个栗子</p>\r\n<p>class Human{<br>	public $name;<br>	public $height;<br>	public $weight;<br><br>	public function eat($food){<br>		echo $this-&gt;name.\"\'s eating\".$food.\"\\n\";<br>	}<br>}</p>\r\n<p>人类作为父类，然后nba球员作为子类</p>\r\n<p><strong>class NbaPlayer extends Human{</strong></p>\r\n<p>试着直接通过子类调用父类中的function</p>\r\n<p>$jordan-&gt;eat(\"apple\");</p>\r\n<p>输出</p>\r\n<p>Jordan\'s eating apple</p>\r\n<p>没有问题！<strong>子类是可以直接调用父类的属性和方法的！！（在子类的对象上可以直接访问父类中定义的方法和属性）</strong></p>\r\n<p>毕竟从它的意思来看，子类就是父类的延伸。</p>\r\n<p>另外，<strong>父类中的属性可以在子类中进行访问（实际上，简单的理解就是，所有的子类都是大于等于父类的对象，想象一下文氏图）</strong></p>\r\n<p>类的继承，用extends，<strong>只能跟一个“爸爸”——php的单继承原则</strong></p>\r\n<p><strong>4.2 访问控制</strong></p>\r\n<p>所有的属性和方法都有访问权限的选择——选择可以被谁访问</p>\r\n<p><strong>public：公有，任何地方</strong></p>\r\n<p><strong>protected：受保护的，被自身以及其子类</strong></p>\r\n<p><strong>private：私有，只能被自身访问</strong></p>\r\n<p>举个private的栗子</p>\r\n<p>在Nbaplayer这个子类中，新增加定义</p>\r\n<p>    private $age=\"44\";</p>\r\n<p> public function getAge(){<br>    	echo $this-&gt;name.\"\'s age is \".$this-&gt;age;<br>    }</p>\r\n<p>//试着调用private,直接以及通过内部的public函数<br>//$jordan-&gt;age;<br>$jordan-&gt;getAge();</p>\r\n<p>然后，<strong>关于protected，范围紧紧的限制在了父类中和子类中，也就是说，出了子类的定义那个大括号就失效了！</strong></p>\r\n<p><strong>4.3 静态成员</strong></p>\r\n<p>可以简单的理解为常量（？）</p>\r\n<p>static</p>\r\n<p> </p>\r\n<p> </p>\r\n<p>bu xiang xie le </p>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3029', '敲-PHP与MySQL，JSON ', '网络', '\n<p>hi</p>\r\n<p>敲代码~</p>\r\n<p><strong>1、php与mysql</strong></p>\r\n<p><strong>5.4 修改界面</strong></p>\r\n<p>同样是界面和程序。</p>\r\n<p><strong>界面article.modify.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	//读取旧信息<br>	$id = $_GET[\'id\'];<br>	$query = mysqli_query($con,\"select * from article where id=$id\");<br>	$data = mysqli_fetch_assoc($query);<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"213\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;      &lt;a href=\"article.add.php\"&gt;&lt;/a&gt;&lt;/td&gt;<br>    &lt;td width=\"854\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;&lt;form id=\"form1\" name=\"form1\" method=\"post\" action=\"article.modify.handle.php\"&gt;<br>    	&lt;input type=\"hidden\" name=\"id\" value=\"&lt;?php echo $data[\'id\']?&gt;\" /&gt;<br>      &lt;table width=\"590\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\"&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"center\"&gt;修改文章&lt;/td&gt;<br>          &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td width=\"119\"&gt;标题&lt;/td&gt;<br>          &lt;td width=\"437\"&gt;&lt;label for=\"title\"&gt;&lt;/label&gt;<br>            &lt;input type=\"text\" name=\"title\" id=\"title\" value=\"&lt;?php echo $data[\'title\']?&gt;\"/&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;作者&lt;/td&gt;<br>          &lt;td&gt;&lt;input type=\"text\" name=\"author\" id=\"author\"  value=\"&lt;?php echo $data[\'author\']?&gt;\"/&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;简介&lt;/td&gt;<br>          &lt;td&gt;&lt;label for=\"description\"&gt;&lt;/label&gt;<br>            &lt;textarea name=\"description\" id=\"description\" cols=\"60\" rows=\"5\"&gt;&lt;?php echo $data[\'description\']?&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;内容&lt;/td&gt;<br>          &lt;td&gt;&lt;textarea name=\"content\" cols=\"60\" rows=\"20\" id=\"content\"&gt;&lt;?php echo $data[\'content\']?&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"right\"&gt;&lt;input type=\"submit\" name=\"button\" id=\"button\" value=\"提交\" /&gt;&lt;/td&gt;<br>          &lt;/tr&gt;<br>      &lt;/table&gt;<br>    &lt;/form&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>关键点在于php的读取，以及在html中value的php调用。</p>\r\n<p><strong>修改程序article.modify.handle.php</strong></p>\r\n<p>&lt;?php <br>//和数据库有关的，无条件写上这么一句话<br>	require_once(\'../connect.php\');<br><br>	//接受修改后的数据（表单传递）<br>	$id = $_POST[\'id\'];<br>	$title = $_POST[\'title\'];<br>	$author = $_POST[\'author\'];<br>	$description = $_POST[\'description\'];<br>	$content = $_POST[\'content\'];<br>	$dateline =  time();<br><br>	//写sql修改语句，并做成功与否的判断，并跳回修改界面<br>	$updatesql = \"update article set title=\'$title\',author=\'$author\',description=\'$description\',content=\'$content\',dateline=$dateline where id=$id\";<br>	if(mysqli_query($con,$updatesql)){<br>		echo \"&lt;script&gt;alert(\'修改文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'修改文章失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p><strong>5.5 文章删除</strong></p>\r\n<p>先做需求的分析：同上面几个略有区别，<strong>删除文章不需要界面，只需要一个删除按钮来掉要就行了</strong>。所以只有一个文件。而关键的sql语句只有一句</p>\r\n<p><strong>$delsql=\"delete from article where id=$id\";</strong></p>\r\n<p><strong>aritcle.del.handle.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');</p>\r\n<p>//读取id号。不像其他的是有传递值的<br>	$id = $_GET[\'id\'];<br>	$deletesql = \"delete from article where id=$id\";<br>	if(mysql_query($deletesql)){<br>		echo \"&lt;script&gt;alert(\'删除文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'删除文章失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p><strong>5.6 文章管理列表</strong></p>\r\n<p>需求分析：列表显示出所有的文章，然后后面有两个按钮，删除（链接至上一节的删除模块）和修改（链接至之前的模块）</p>\r\n<p>所以，只需要一个文件，显示模块就好</p>\r\n<p><strong>article.manage.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	$sql = \"select * from article order by dateline desc\";<br>	$query  = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row =mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}else{<br>		$data = array();<br>	}</p>\r\n<p>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"156\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;<br>    &lt;td width=\"837\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;&lt;table width=\"743\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>      &lt;tr&gt;<br>        &lt;td colspan=\"3\" align=\"center\" bgcolor=\"#FFFFFF\"&gt;文章管理列表&lt;/td&gt;<br>        &lt;/tr&gt;<br>      &lt;tr&gt;<br>        &lt;td width=\"37\" bgcolor=\"#FFFFFF\"&gt;编号&lt;/td&gt;<br>        &lt;td width=\"572\" bgcolor=\"#FFFFFF\"&gt;标题&lt;/td&gt;<br>        &lt;td width=\"82\" bgcolor=\"#FFFFFF\"&gt;操作&lt;/td&gt;<br>      &lt;/tr&gt;<br>	&lt;?php <br>		if(!empty($data)){<br>			foreach($data as $value){<br>	?&gt;<br>      &lt;tr&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&amp;nbsp;&lt;?php echo $value[\'id\']?&gt;&lt;/td&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&amp;nbsp;&lt;?php echo $value[\'title\']?&gt;&lt;/td&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&lt;a href=\"article.del.handle.php?id=&lt;?php echo $value[\'id\']?&gt;\"&gt;删除&lt;/a&gt; &lt;a href=\"article.modify.php?id=&lt;?php echo $value[\'id\']?&gt;\"&gt;修改&lt;/a&gt;&lt;/td&gt;<br>      &lt;/tr&gt;<br>    &lt;/table&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>5.7 函数总结</strong></p>\r\n<p>mysqli_connect()</p>\r\n<p>mysqli_select_db()</p>\r\n<p>mysqli_query()</p>\r\n<p>mysqli_error()</p>\r\n<p>mysqli_fetch_assoc()</p>\r\n<p>mysqli_num_rows()</p>\r\n<p><strong>六、前台管理界面的开发</strong></p>\r\n<p><strong>6.1 文章列表</strong></p>\r\n<p><strong>article.list.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from article order by dateline desc\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row = mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>	&lt;?php<br>		if(empty($data)){	<br>			echo \"当前没有文章，请管理员在后台添加文章\";<br>		}else{<br>			foreach($data as $value){<br>	?&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;?php echo $value[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $value[\'author\']?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $value[\'description\']?&gt;<br>			&lt;/div&gt;<br>			&lt;div class=\"meta\"&gt;<br>				&lt;p class=\"links\"&gt;&lt;a href=\"article.show.php?id=&lt;?php echo $value[\'id\']?&gt;\" class=\"more\"&gt;查看详细&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;raquo;&amp;nbsp;&amp;nbsp;&lt;/p&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;?php<br>			}<br>		}<br>	?&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"article.search.php\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"key\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.2 文章详情页</strong></p>\r\n<p><strong>article.show.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$id = intval($_GET[\'id\']);<br>	$sql = \"select * from article where id=$id\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		$row = mysqli_fetch_assoc($query);<br>	}else{<br>		echo \"这篇文章不存在\";<br>		exit;<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"#\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"#\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"#\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;!--文章标题放置到这里--&gt;&lt;?php echo $row[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $row[\'author\'];?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;!--文章内容放置到这里--&gt;<br>				&lt;?php echo $row[\'content\']?&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.3 检索</strong></p>\r\n<p>article.search.php</p>\r\n<p>这里的查询的是根据题目来查询。</p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$key = $_GET[\'key\'];<br>	$sql = \"select * from article where title like \'%$key%\' order by dateline desc\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row = mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>	&lt;?php<br>		if(empty($data)){	<br>			echo \"当前没有文章，请管理员在后台添加文章\";<br>		}else{<br>			foreach($data as $value){<br>	?&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;?php echo $value[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $value[\'author\']?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $value[\'description\']?&gt;<br>			&lt;/div&gt;<br>			&lt;div class=\"meta\"&gt;<br>				&lt;p class=\"links\"&gt;&lt;a href=\"article.show.php?id=&lt;?php echo $value[\'id\']?&gt;\" class=\"more\"&gt;查看详细&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;raquo;&amp;nbsp;&amp;nbsp;&lt;/p&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;?php<br>			}<br>		}<br>	?&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.4 关于我们和联系我们</strong></p>\r\n<p><strong>about.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from  introduce\";<br>	$query = mysqli_query($con,$sql);<br>	//if($query&amp;&amp;mysqli_num_rows($query)){<br>		$about = \"啦啦啦\";<br>	//}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br><br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;关于我们&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $about?&gt;<br>			&lt;/div&gt;<br><br>		&lt;/div&gt;<br><br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>contact.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from  introduce\";<br>	$query = mysqli_query($con,$sql);<br>	//$arr=mysqli_fetch_array($query, MYSQL_ASSOC);<br>	//if($query&amp;&amp;mysqli_num_rows($query)){<br>		$contact = \"asdfadf\";<br>	//}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br><br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;联系我们&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $contact?&gt;<br>			&lt;/div&gt;<br><br>		&lt;/div&gt;<br><br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;</p>\r\n<p>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p> ------------------------------------------</p>\r\n<p><strong>2、JSON基础</strong></p>\r\n<p><strong>1.2 JSON的使用</strong></p>\r\n<p>--<strong>JSON与serialize</strong>数据格式的异同和使用</p>\r\n<p>相同点：把其他数据类型转换为一个可以传输的字符串；都是结构性数据；</p>\r\n<p>不同点：s序列化之后，保存数据原有类型——适用于存储带有加密方式的数据串；JSON更简洁——适合数据量大，不要求数据类型保存的情况</p>\r\n<p>举个栗子</p>\r\n<p>&lt;?php<br>//输出模块<br>function createHtmlTag($tag=\"\"){<br>	echo \"&lt;h1&gt;$tag&lt;/h1&gt;&lt;br/&gt;\";<br>}<br>createHtmlTag(\"Hello!\");<br>createHtmlTag(\"JSON和serialize的对比\");</p>\r\n<p>//测试用数组<br>$member=array(\"username\",\"age\");<br>var_dump($member);</p>\r\n<p><br>$jsonObj=json_encode($member);</p>\r\n<p>$serializeObj=serialize($member);</p>\r\n<p>createHtmlTag($jsonObj);<br>createHtmlTag($serializeObj);</p>\r\n<p>结果</p>\r\n<h1>Hello!</h1>\r\n<p> </p>\r\n<h1>JSON和serialize的对比</h1>\r\n<p> </p>\r\n<pre class=\"xdebug-var-dump\"><strong>array</strong> <em>(size=2)</em>\r\n  0 <span style=\"color: #888a85;\">=&gt;</span> </pre>\r\n<p><small>string</small></p>\r\n<pre class=\"xdebug-var-dump\"> <span style=\"color: #cc0000;\">\'username\'</span> <em>(length=8)</em>\r\n  1 <span style=\"color: #888a85;\">=&gt;</span> </pre>\r\n<p><small>string</small></p>\r\n<pre class=\"xdebug-var-dump\"> <span style=\"color: #cc0000;\">\'age\'</span> <em>(length=3)</em>\r\n</pre>\r\n<h1>[\"username\",\"age\"]</h1>\r\n<p> </p>\r\n<h1>a:2:{i:0;s:8:\"username\";i:1;s:3:\"age\";}</h1>\r\n<p><strong>--常用JSON函数</strong></p>\r\n<p>json_encode()——JSON加密</p>\r\n<p>json_decode()——解密</p>\r\n<p><strong>1.3 JSON实例讲解</strong></p>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3030', '挤点时间写博客-php&MySQL实践 ', '网络', '\n<p>　　hi</p>\r\n<p>晚上要吃火锅的嘛，挤点时间写点东西吧，别被老板发现哦</p>\r\n<p>1、PHP与MySQL</p>\r\n<p><strong>五、文章发布系统之后台</strong></p>\r\n<p><strong>5.2 创建配置文件和初始化文件</strong></p>\r\n<p>为了统一配置以及管理方便，还有就是减少代码的冗余。</p>\r\n<p>分别为config.php和connect.php</p>\r\n<p><strong>config.php</strong></p>\r\n<p>&lt;?php<br>/*<br> * 配置文件<br> */<br>//配置数据库的相关信息<br>//由于是常量，直接用define<br>define(\'HOST\', \'127.0.0.1\');<br>define(\'USERNAME\', \'root\');<br>define(\'PASSWORD\', \'\');</p>\r\n<p> </p>\r\n<p><strong>connect.php</strong></p>\r\n<p>&lt;?php<br>/*<br> * 链接到数据库的文件<br> * 主要是链接到数据库服务器，然后选择数据库。<br> * 特殊的是设置字符集。<br> * 然后希望对每个操作进行判断<br> */</p>\r\n<p> </p>\r\n<p>//包含配置文件<br>require_once \'config.php\';</p>\r\n<p>//连库<br>if(!$con=mysqli_connect(HOST,USERNAME,PASSWORD)){<br>	echo mysqli_error($con);<br>}</p>\r\n<p>//选库<br>if(mysqli_select_db($con, \'info\')){<br>	echo mysqli_error($con);<br>}</p>\r\n<p>//字符集<br>if(mysqli_query($con,\'set names utf8\')){<br>	echo mysqli_error($con);<br>}</p>\r\n<p>完成后测试一下链接文件就ok了。这里的mysqli和mysql都可以，只要格式正确就行。</p>\r\n<p><strong>5.3 发布文章</strong></p>\r\n<p><strong>文章发布界面article.add.php</strong></p>\r\n<p>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"156\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;      &lt;a href=\"article.add.php\"&gt;&lt;/a&gt;&lt;/td&gt;<br>    &lt;td width=\"837\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;<br>    &lt;form id=\"form1\" name=\"form1\" method=\"post\" action=\"article.add.handle.php\"&gt;<br>      &lt;table width=\"779\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\"&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"center\"&gt;发布文章&lt;/td&gt;<br>          &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td width=\"119\"&gt;标题&lt;/td&gt;<br>          &lt;td width=\"625\"&gt;&lt;label for=\"title\"&gt;&lt;/label&gt;<br>            &lt;input type=\"text\" name=\"title\" id=\"title\" /&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;作者&lt;/td&gt;<br>          &lt;td&gt;&lt;input type=\"text\" name=\"author\" id=\"author\" /&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;简介&lt;/td&gt;<br>          &lt;td&gt;&lt;label for=\"description\"&gt;&lt;/label&gt;<br>            &lt;textarea name=\"description\" id=\"description\" cols=\"60\" rows=\"5\"&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;内容&lt;/td&gt;<br>          &lt;td&gt;&lt;textarea name=\"content\" cols=\"60\" rows=\"15\" id=\"content\"&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"right\"&gt;&lt;input type=\"submit\" name=\"button\" id=\"button\" value=\"提交\" /&gt;&lt;/td&gt;<br>          &lt;/tr&gt;<br>      &lt;/table&gt;<br>    &lt;/form&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>不是很漂亮就是了，学习嘛</p>\r\n<p> </p>\r\n<p>文章发布处理程序article.add.handle.php</p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	//把传递过来的信息入库,在入库之前对所有的信息进行校验。<br>	if(!(isset($_POST[\'title\'])&amp;&amp;(!empty($_POST[\'title\'])))){<br>		echo \"&lt;script&gt;alert(\'标题不能为空\');window.location.href=\'article.add.php\';&lt;/script&gt;\";<br>	}<br>	$title = $_POST[\'title\'];<br>	$author = $_POST[\'author\'];<br>	$description = $_POST[\'description\'];<br>	$content = $_POST[\'content\'];<br>	$dateline =  time();<br>	$insertsql = \"insert into article(title, author, description, content, dateline) values(\'$title\', \'$author\', \'$description\', \'$content\', $dateline)\";<br>	if(mysqli_query($con,$insertsql)){<br>		echo \"&lt;script&gt;alert(\'发布文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'发布失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p>注意两者的功能和连接，就是add页面把东西传给handle处理</p>\r\n<p> ------------------------</p>\r\n<p>由于我遇到了前所未见的乱码问题。。。跪着解决中。。。。望大家不吝赐教（wamp环境，mysql，zend，浏览器都已经设置为utf8，apache配置文件中添加了AddDefaultCharset UTF-8，问题依然存在，我晕啊。。。。）</p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:16:42', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3031', '突然发现这周有点忙。。着玩-PHP进阶 ', '网络', '\n<p>　　hi</p>\r\n<p>周二才，不过我突然意识到这周有点忙着玩的感觉，还是很期待的——今天下午去市里，晚上回来看电影，明晚聚餐吃火锅，后天下午拍短片，晚上可能要打球，周五，嗯，就到周五了。虽然这样下去连怎么写（bian）周报都不知道，但还是来做这个的好。</p>\r\n<p><strong>1、PHP进阶完结篇</strong></p>\r\n<p><strong>十一、数据库操作</strong></p>\r\n<p><strong>11.1 PHP支持哪些数据库</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP通过安装相应的扩展来实现数据库操作，现代应用程序的设计离不开数据库的应用，当前主流的数据库有MsSQL，MySQL，Sybase，Db2，Oracle，PostgreSQL，Access等，这些数据库PHP都能够安装扩展来支持，一般情况下常说的LAMP架构指的是：Linux、Apache、Mysql、PHP，因此Mysql数据库在PHP中的应用非常广泛，我们会在本章中简单的了解Mysql的操作方法。</p>\r\n</div>\r\n</div>\r\n<p><strong>11.2 数据库扩展</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP中一个数据库可能有一个或者多个扩展，其中既有官方的，也有第三方提供的。像Mysql常用的扩展有原生的mysql库，也可以使用增强版的mysqli扩展，还可以使用PDO进行连接与操作。</p>\r\n<p>不同的扩展提供基本相近的操作方法，不同的是可能具备一些新特性，以及操作性能可能会有所不同。</p>\r\n<p>mysql扩展进行数据库连接的方法：</p>\r\n<pre class=\"code\">$link = mysql_connect(\'mysql_host\', \'mysql_user\', \'mysql_password\');</pre>\r\n<p>mysqli扩展：</p>\r\n<pre class=\"code\">$link = mysqli_connect(\'mysql_host\', \'mysql_user\', \'mysql_password\');</pre>\r\n<p>PDO扩展</p>\r\n<pre class=\"code\">$dsn = \'mysql:dbname=testdb;host=127.0.0.1\';\r\n$user = \'dbuser\';\r\n$password = \'dbpass\';\r\n$dbh = new PDO($dsn, $user, $password);</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>$link = mysql_connect(\'127.0.0.1\', \'code1\', \'\') or die(\'数据库连接失败\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>$result = mysql_query(\'select * from user limit 1\');<br>$row = mysql_fetch_assoc($result);<br>print_r($row);</p>\r\n<p><strong>11.3 连接MySQL数据库</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP要对数据库进行操作，首先要做的是与数据库建立连接，通常我们使用mysql_connect函数进行数据库连接，该函数需要指定数据库的地址，用户名及密码。</p>\r\n<pre class=\"code\">$host = \'localhost\';\r\n$user = \'code1\';\r\n$pass = \'\';\r\n$link = mysql_connect($host, $user, $pass);</pre>\r\n<p>PHP连接数据库的方式类似于直接在命令行下通过进行连接，类似：<code class=\"marker\">mysql -hlocalhost -ucode1 -p</code>，当连接成功以后，我们需要选择一个操作的数据库，通过mysql_select_db函数来选择数据库。</p>\r\n<pre class=\"code\">mysql_select_db(\'code1\');</pre>\r\n<p>通常我们会先设置一下当前连接使用的字符编码，一般的我们会使用utf8编码。</p>\r\n<pre class=\"code\">mysql_query(\"set names \'utf8\'\");</pre>\r\n<p>通过上面的步骤，我们就与数据库建立了连接，可以进行数据操作了。</p>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>$host = \'127.0.0.1\';<br>$user = \'code1\';<br>$pass = \'\';<br>//在这里编写数据库连接代码<br>mysql_connect($host,$user,$pass);<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");</p>\r\n<p><strong> 11.4 执行MySQL查询</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>在数据库建立连接以后就可以进行查询，采用mysql_query加sql语句的形式向数据库发送查询指令。</p>\r\n<pre class=\"code\">$res = mysql_query(\'select * from user limit 1\');</pre>\r\n<p>对于查询类的语句会返回一个资源句柄（resource），可以通过该资源获取查询结果集中的数据。</p>\r\n<pre class=\"code\">$row = mysql_fetch_array($res);\r\nvar_dump($row);</pre>\r\n<p>默认的，PHP使用最近的数据库连接执行查询，但如果存在多个连接的情况，则可以通过参数指令从那个连接中进行查询。</p>\r\n<pre class=\"code\">$link1 = mysql_connect(\'127.0.0.1\', \'code1\', \'\');\r\n$link2 = mysql_connect(\'127.0.0.1\', \'code1\', \'\', true); //开启一个新的连接\r\n$res = mysql_query(\'select * from user limit 1\', $link1); //从第一个连接中查询数据</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//在这里进行数据查询<br>$arr=mysql_query(\"select * from user limit 1\");<br>$row=mysql_fetch_row($arr);<br>print_r($row);<br>echo $row[0];</p>\r\n<p>11.5 插入新数据到MySQL中</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>当我们了解了如何使用mysql_query进行数据查询以后，那么类似的，插入数据其实也是通过执行一个sql语句来实现，例如：</p>\r\n<pre class=\"code\">$sql = \"insert into user(name, age, class) values(\'李四\', 18, \'高三一班\')\";\r\nmysql_query($sql); //执行插入语句</pre>\r\n<p>通常数据都是存储在变量或者数组中，因此sql语句需要先进行字符串拼接得到。</p>\r\n<pre class=\"code\">$name = \'李四\';\r\n$age = 18;\r\n$class = \'高三一班\';\r\n$sql = \"insert into user(name, age, class) values(\'$name\', \'$age\', \'$class\')\";\r\nmysql_query($sql); //执行插入语句</pre>\r\n<p>在mysql中，执行插入语句以后，可以得到自增的主键id,通过PHP的mysql_insert_id函数可以获取该id。</p>\r\n<pre class=\"code\">$uid = mysql_insert_id();</pre>\r\n<p>这个id的作用非常大，通常可以用来判断是否插入成功，或者作为关联ID进行其他的数据操作。</p>\r\n</div>\r\n</div>\r\n<p><strong>11.6 取得数据查询结果</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>通过前面的章节，我们发现PHP操作数据库跟MySql客户端上操作极为相似，先进行连接，然后执行sql语句，再然后获取我们想要的结果集。</p>\r\n<p>PHP有多个函数可以获取数据集中的一行数据，最常用的是mysql_fetch_array，可以通过设定参数来更改行数据的下标，默认的会包含数字索引的下标以及字段名的关联索引下标。</p>\r\n<pre class=\"code\">$sql = \"select * from user limit 1\";\r\n$result = mysql_query($sql);\r\n$row = mysql_fetch_array($result);</pre>\r\n<p>可以通过设定参数MYSQL_NUM只获取数字索引数组，等同于mysql_fetch_row函数，如果设定参数为MYSQL_ASSOC则只获取关联索引数组，等同于mysql_fetch_assoc函数。</p>\r\n<pre class=\"code\">$row = mysql_fetch_row($result);\r\n$row = mysql_fetch_array($result, MYSQL_NUM); //这两个方法获取的数据是一样的</pre>\r\n<pre class=\"code\">$row = mysql_fetch_assoc($result);\r\n$row = mysql_fetch_array($result, MYSQL_ASSOC);</pre>\r\n<p>如果要获取数据集中的所有数据，我们通过循环来遍历整个结果集。</p>\r\n<pre class=\"code\">$data = array();\r\nwhile ($row = mysql_fetch_array($result)) {\r\n    $data[] = $row;\r\n}</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//数据预处理 防止查询不到数据<br>mysql_query(\"insert into user(name, age, class) values(\'王二\', 19, \'高三五班\')\");<br>//进行数据查询<br>$sql = \"select * from user limit 1\";<br>$result = mysql_query($sql);</p>\r\n<p>//在这里获取一行数据<br>$row=mysql_fetch_assoc($result);</p>\r\n<p>echo \'&lt;pre&gt;\';<br>print_r($row);<br>echo \'&lt;/pre&gt;\';</p>\r\n<p><strong>11.7 查询分页数据</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>上一节中，我们了解到通过循环可以获取一个查询的所有数据，在实际应用中，我们并不希望一次性获取数据表中的所有数据，那样性能会非常的低，因此会使用翻页功能，每页仅显示10条或者20条数据。</p>\r\n<p>通过mysql的limit可以很容易的实现分页，limit m,n表示从m行后取n行数据，在PHP中我们需要构造m与n来实现获取某一页的所有数据。</p>\r\n<p>假定当前页为$page，每页显示$n条数据，那么m为当前页前面所有的数据，既$m = ($page-1) * $n，在知道了翻页原理以后，那么我们很容易通过构造SQL语句在PHP中实现数据翻页。</p>\r\n<pre class=\"code\">$page = 2;\r\n$n = 2;\r\n$m = ($page - 1) * $n;\r\n$sql = \"select * from user limit $m, $n\";\r\n$result = mysql_query($sql);\r\n//循环获取当前页的数据\r\n$data = array();\r\nwhile ($row = mysql_fetch_assoc($result)) {\r\n    $data[] = $row;\r\n}\r\n</pre>\r\n<p>在上面的例子中，我们使用了$m与$n变量来表示偏移量与每页数据条数，但我们推荐使用更有意义的变量名来表示，比如$pagesize, $start, $offset等，这样更容易理解，有助于团队协作开发。</p>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//预设翻页参数<br>$page = 2;<br>$pagesize = 2;<br>//在这里构建分页查询<br>$start=($page-1)*$pagesize;</p>\r\n<p>$sql=\"SELECT * FROM user LIMIT $start,$pagesize\";</p>\r\n<p>//获取翻页数据<br>$result = mysql_query($sql);<br>$data = array();<br>while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {<br>    $data[] = $row;<br>}<br>echo \'&lt;pre&gt;\';<br>print_r($data);<br>echo \'&lt;/pre&gt;\';</p>\r\n<p>11.8 更新与删除数据</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>数据的更新与删除相对比较简单，只需要构建好相应的sql语句，然后调用mysql_query执行就能完成相应的更新与删除操作。</p>\r\n<pre class=\"code\">$sql = \"update user set name = \'曹操\' where id=2 limit 1\";\r\nif (mysql_query($sql)) {\r\n    echo \'更新成功\';\r\n}</pre>\r\n<p>同样的删除可以使用类似以下的代码：</p>\r\n<pre class=\"code\">$sql = \"delete from user where id=2 limit 1\";\r\nif (mysql_query($sql)) {\r\n    echo \'删除成功\';\r\n}</pre>\r\n<p>对于删除与更新操作，可以通过mysql_affected_rows函数来获取更新过的数据行数，如果数据没有变化，则结果为0。</p>\r\n<pre class=\"code\">$sql = \"update user set name = \'曹操\' where id=2 limit 1\";\r\nif (mysql_query($sql)) {\r\n    echo mysql_affected_rows();\r\n}</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//预设数据以便进行更新操作<br>mysql_query(\"insert into user(name, age, class) values(\'王二\', 19, \'高三五班\')\");<br>$id = mysql_insert_id();<br>//在这里更新id为$id的行的名字为李白<br>$sql=\"update user set name=\'李白\' where id=$id limit 1\";<br>mysql_query($sql);<br>//输出更新数据条数<br>echo \'数据更新行数：\'.mysql_affected_rows();<br>mysql_query(\"delete from user where id=\'$id\'\");</p>\r\n<p><strong>11.9 关闭MySQL连接</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>当数据库操作完成以后，可以使用mysql_close关闭数据库连接，默认的，当PHP执行完毕以后，会自动的关闭数据库连接。</p>\r\n<pre class=\"code\">mysql_close();</pre>\r\n<p>虽然PHP会自动关闭数据库连接，一般情况下已经满足需求，但是在对性能要求比较高的情况下，可以在进行完数据库操作之后尽快关闭数据库连接，以节省资源，提高性能。</p>\r\n<p>在存在多个数据库连接的情况下，可以设定连接资源参数来关闭指定的数据库连接。</p>\r\n<pre class=\"code\">$link = mysql_connect($host, $user, $pass);\r\nmysql_close($link);</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>$con=mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//在这里关闭数据库连接</p>\r\n<p>mysql_close($con);</p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n\r\n</div>\r\n\r\n</div>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3032', 'PHP_Bibel阅读笔记（二）——脸黑的一天（？一年） ', '网络', '\n<p>　　一早上起来把50包开了，一张橙卡。。。就问还有谁。。。。。。。。。。。本命年啊，我去买红内裤还不行么。。。。</p>\r\n<p>实时更新，老哥的号的30包什么都没有。。。。不过中午又开了5包，皇帝，好评啊！！！</p>\r\n<p><strong>五、代码重用与函数编写</strong></p>\r\n<p>include警告与require的错误；</p>\r\n<p>大量的包含实现，可以改ini文件中的：auto_prepend_file和auto_append_file;</p>\r\n<p>global关键字也是可以用在函数内的参数的；</p>\r\n<p>参数的引用传递和return</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">1</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\FunctionUse;\r\n</span><span style=\"color: #008080;\">2</span> \r\n<span style=\"color: #008080;\">3</span> <span style=\"color: #0000ff;\">include_once</span> \'index.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">4</span> <span style=\"color: #800080;\">$value</span>=10<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">5</span> increment1(<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">6</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$value</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">7</span> <span style=\"color: #800080;\">$value2</span>=100<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">8</span> <span style=\"color: #800080;\">$value2</span>=increment2(<span style=\"color: #800080;\">$value2</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">9</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$value2</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\";</pre>\r\n</div>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #0000ff;\">function</span> increment1(&amp;<span style=\"color: #800080;\">$value</span>,<span style=\"color: #800080;\">$mount</span>=1<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\"> 4</span>     <span style=\"color: #800080;\">$value</span>=<span style=\"color: #800080;\">$value</span>+<span style=\"color: #800080;\">$mount</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 6</span> \r\n<span style=\"color: #008080;\"> 7</span> <span style=\"color: #0000ff;\">function</span> increment2(<span style=\"color: #800080;\">$value</span>,<span style=\"color: #800080;\">$mount</span>=1<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\"> 9</span>     <span style=\"color: #800080;\">$value</span>=<span style=\"color: #800080;\">$value</span>+<span style=\"color: #800080;\">$mount</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">11</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>递归函数比循环慢且占用更多内存，虽然很多循环都可以用递归来代替；（在应用领域中基本不用它</p>\r\n<p><strong>六、面向对象</strong></p>\r\n<p>好玩的代码，学到些东西！</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">  1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">  2</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\ObjectPage;\r\n</span><span style=\"color: #008080;\">  3</span> \r\n<span style=\"color: #008080;\">  4</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Chapter6.P132</span>\r\n<span style=\"color: #008080;\">  5</span> \r\n<span style=\"color: #008080;\">  6</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> Page\r\n</span><span style=\"color: #008080;\">  7</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">  8</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$content</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  9</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$title</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 10</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$keyword</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 11</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$button</span>=<span style=\"color: #0000ff;\">array</span>(\"Home\"=&gt;\"http://115.159.201.78/wordpress/\",\r\n<span style=\"color: #008080;\"> 12</span>         \"Basic\"=&gt;\"Section1.php\"\r\n<span style=\"color: #008080;\"> 13</span> <span style=\"color: #000000;\">    );\r\n</span><span style=\"color: #008080;\"> 14</span>     \r\n<span style=\"color: #008080;\"> 15</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __set(<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 16</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 17</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #800080;\">$name</span>=<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 18</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 19</span>     \r\n<span style=\"color: #008080;\"> 20</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> Display()\r\n</span><span style=\"color: #008080;\"> 21</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 22</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;html&gt;\\n&lt;head&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 23</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayTitle();\r\n</span><span style=\"color: #008080;\"> 24</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayKeywords();\r\n</span><span style=\"color: #008080;\"> 25</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayStyles();\r\n</span><span style=\"color: #008080;\"> 26</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/head&gt;\\n&lt;body&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 27</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayHeader();\r\n</span><span style=\"color: #008080;\"> 28</span>         <span style=\"color: #800080;\">$this</span>-&gt;DisplayMenu(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">button);\r\n</span><span style=\"color: #008080;\"> 29</span>         <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">content;\r\n</span><span style=\"color: #008080;\"> 30</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayFooter();\r\n</span><span style=\"color: #008080;\"> 31</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/body&gt;\\n&lt;/html&gt;\\n\"<span style=\"color: #000000;\">;   \r\n</span><span style=\"color: #008080;\"> 32</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 33</span>     \r\n<span style=\"color: #008080;\"> 34</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayTitle()\r\n</span><span style=\"color: #008080;\"> 35</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 36</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;title&gt;\".<span style=\"color: #800080;\">$this</span>-&gt;title.\"&lt;/title&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 37</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 38</span>     \r\n<span style=\"color: #008080;\"> 39</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayKeywords()\r\n</span><span style=\"color: #008080;\"> 40</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 41</span>         <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$this</span>-&gt;keyword <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$words</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 42</span>             <span style=\"color: #0000ff;\">echo</span> \"&lt;meta name=\\\"keywords\\\" content=\\\"\".<span style=\"color: #800080;\">$words</span>.\"\\\"/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 43</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\"> 44</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 45</span>     \r\n<span style=\"color: #008080;\"> 46</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayStyles()\r\n</span><span style=\"color: #008080;\"> 47</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 48</span>    ?&gt;\r\n<span style=\"color: #008080;\"> 49</span>      &lt;style&gt;\r\n<span style=\"color: #008080;\"> 50</span> <span style=\"color: #000000;\">      h1 {\r\n</span><span style=\"color: #008080;\"> 51</span>             color:white; font-size:24pt; text-align:<span style=\"color: #000000;\">center;\r\n</span><span style=\"color: #008080;\"> 52</span>             font-family:arial,sans-<span style=\"color: #000000;\">serif\r\n</span><span style=\"color: #008080;\"> 53</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 54</span>     .<span style=\"color: #000000;\">menu {\r\n</span><span style=\"color: #008080;\"> 55</span>         color:white; font-size:12pt; text-align:<span style=\"color: #000000;\">center;\r\n</span><span style=\"color: #008080;\"> 56</span>         font-family:arial,sans-serif; font-weight:<span style=\"color: #000000;\">bold\r\n</span><span style=\"color: #008080;\"> 57</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 58</span> <span style=\"color: #000000;\">    td {\r\n</span><span style=\"color: #008080;\"> 59</span>         background:<span style=\"color: #000000;\">black\r\n</span><span style=\"color: #008080;\"> 60</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 61</span> <span style=\"color: #000000;\">    p {\r\n</span><span style=\"color: #008080;\"> 62</span>         color:black; font-size:12pt; text-align:<span style=\"color: #000000;\">justify;\r\n</span><span style=\"color: #008080;\"> 63</span>         font-family:arial,sans-<span style=\"color: #000000;\">serif\r\n</span><span style=\"color: #008080;\"> 64</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 65</span>     p.<span style=\"color: #000000;\">foot {\r\n</span><span style=\"color: #008080;\"> 66</span>         color:white; font-size:12pt; text-align:<span style=\"color: #000000;\">center;\r\n</span><span style=\"color: #008080;\"> 67</span>         font-family:arial,sans-serif; font-weight:<span style=\"color: #000000;\">bold\r\n</span><span style=\"color: #008080;\"> 68</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 69</span>     a:link,a:visited,a:<span style=\"color: #000000;\">active {\r\n</span><span style=\"color: #008080;\"> 70</span>         color:<span style=\"color: #000000;\">white\r\n</span><span style=\"color: #008080;\"> 71</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 72</span>     &lt;/style&gt;\r\n<span style=\"color: #008080;\"> 73</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 74</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 75</span>     \r\n<span style=\"color: #008080;\"> 76</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayHeader()\r\n</span><span style=\"color: #008080;\"> 77</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 78</span> ?&gt;\r\n<span style=\"color: #008080;\"> 79</span>   &lt;table width=\"100%\" cellpadding=\"12\" \r\n<span style=\"color: #008080;\"> 80</span>          cellspacing=\"0\" border=\"0\"&gt;\r\n<span style=\"color: #008080;\"> 81</span>   &lt;tr bgcolor=\"black\"&gt;\r\n<span style=\"color: #008080;\"> 82</span>     &lt;td align=\"left\"&gt;&lt;img alt=\"img\" src=\"logo.png\"&gt;&lt;/td&gt;\r\n<span style=\"color: #008080;\"> 83</span>     &lt;td&gt;&lt;h1&gt;The OOP page&lt;/h1&gt;&lt;/td&gt;\r\n<span style=\"color: #008080;\"> 84</span>   &lt;/tr&gt;\r\n<span style=\"color: #008080;\"> 85</span> &lt;/table&gt;\r\n<span style=\"color: #008080;\"> 86</span> &lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #008080;\"> 87</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 88</span>     \r\n<span style=\"color: #008080;\"> 89</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span> DisplayMenu(<span style=\"color: #800080;\">$button</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 90</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 91</span>         <span style=\"color: #0000ff;\">echo</span> \"<span style=\"color: #000000;\">&lt;table width=\\\"100%\\\" bgcolor=\\\"white\\\"\r\n</span><span style=\"color: #008080;\"> 92</span>               cellpadding=\\\"4\\\"    cellsapcing=\\\"4\\\"&gt;\\n \"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 93</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;tr&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 94</span>         <span style=\"color: #800080;\">$width</span>=100/<span style=\"color: #008080;\">count</span>(<span style=\"color: #800080;\">$button</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 95</span>         <span style=\"color: #0000ff;\">while</span> (<span style=\"color: #0000ff;\">list</span>(<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$url</span>)=<span style=\"color: #008080;\">each</span>(<span style=\"color: #800080;\">$button</span><span style=\"color: #000000;\">)) {\r\n</span><span style=\"color: #008080;\"> 96</span>             <span style=\"color: #800080;\">$this</span>-&gt;DisplayButton(<span style=\"color: #800080;\">$width</span>,<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$url</span>,\r\n<span style=\"color: #008080;\"> 97</span>                 !<span style=\"color: #800080;\">$this</span>-&gt;IsURLCurrentPage(<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 98</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\"> 99</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/tr&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">100</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/table&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">101</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">102</span>     \r\n<span style=\"color: #008080;\">103</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span> IsURLCurrentPage(<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">104</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">105</span>         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">strpos</span>(<span style=\"color: #800080;\">$_SERVER</span>[\'PHP_SELF\'], <span style=\"color: #800080;\">$url</span>)==<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">106</span>             <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">107</span>         } <span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">108</span>             <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">109</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\">110</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">111</span>     \r\n<span style=\"color: #008080;\">112</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span> DisplayButton(<span style=\"color: #800080;\">$width</span>,<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$url</span>,<span style=\"color: #800080;\">$active</span>=<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">113</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">114</span>         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$active</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">115</span>             <span style=\"color: #0000ff;\">echo</span> \"&lt;td width=\\\"\".<span style=\"color: #800080;\">$width</span>.\"<span style=\"color: #000000;\">%\\\"&gt;\r\n</span><span style=\"color: #008080;\">116</span>             &lt;a href=\\\"\".<span style=\"color: #800080;\">$url</span>.\"<span style=\"color: #000000;\">\\\" onclick=\\\"blank\\\"&gt;\r\n</span><span style=\"color: #008080;\">117</span>             &lt;img src=\\\"w-logo-blue.png\\\" alt=\\\"\".<span style=\"color: #800080;\">$name</span>.\"<span style=\"color: #000000;\">\\\" border=\\\"0\\\" /&gt;&lt;/a&gt;\r\n</span><span style=\"color: #008080;\">118</span>             &lt;a href=\\\"\".<span style=\"color: #800080;\">$url</span>.\"\\\"&gt;&lt;span class=\\\"menu\\\"&gt;\".<span style=\"color: #800080;\">$name</span>.\"<span style=\"color: #000000;\">&lt;/span&gt;&lt;/a&gt;\r\n</span><span style=\"color: #008080;\">119</span>                 &lt;/td&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">120</span>         } <span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">121</span>             <span style=\"color: #0000ff;\">echo</span> \"&lt;td width=\\\"\".<span style=\"color: #800080;\">$width</span>.\"<span style=\"color: #000000;\">%\\\"&gt;\r\n</span><span style=\"color: #008080;\">122</span> <span style=\"color: #000000;\">            &lt;img src=\\\"w-logo-white.png\\\"&gt;\r\n</span><span style=\"color: #008080;\">123</span>             &lt;span class=\\\"menu\\\"&gt;\".<span style=\"color: #800080;\">$name</span>.\"&lt;/span&gt;&lt;/td&gt;\"<span style=\"color: #000000;\">;            \r\n</span><span style=\"color: #008080;\">124</span> <span style=\"color: #000000;\">        }        \r\n</span><span style=\"color: #008080;\">125</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">126</span>     \r\n<span style=\"color: #008080;\">127</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayFooter()\r\n</span><span style=\"color: #008080;\">128</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">129</span> ?&gt;\r\n<span style=\"color: #008080;\">130</span>   &lt;table width=\"100%\" bgcolor=\"black\" cellpadding=\"12\" border=\"0\"&gt;\r\n<span style=\"color: #008080;\">131</span>   &lt;tr&gt;\r\n<span style=\"color: #008080;\">132</span>     &lt;td&gt;\r\n<span style=\"color: #008080;\">133</span>     &lt;p <span style=\"color: #0000ff;\">class</span>=\"foot\"&gt;&amp;<span style=\"color: #008080;\">copy</span>; Andy Liang.&lt;/p&gt;\r\n<span style=\"color: #008080;\">134</span>     &lt;p <span style=\"color: #0000ff;\">class</span>=\"foot\"&gt;Please visit my own site:&lt;a href=\"http://115.159.201.78/wordpress/\"&gt;Andy\'<span style=\"color: #000000;\">s Learning Diary&lt;/a&gt;&lt;/p&gt;\r\n</span><span style=\"color: #008080;\">135</span> <span style=\"color: #000000;\">    &lt;/td&gt;\r\n</span><span style=\"color: #008080;\">136</span> <span style=\"color: #000000;\">  &lt;/tr&gt;\r\n</span><span style=\"color: #008080;\">137</span> <span style=\"color: #000000;\">&lt;/table&gt;\r\n</span><span style=\"color: #008080;\">138</span> <span style=\"color: #000000;\">&lt;?php \r\n</span><span style=\"color: #008080;\">139</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">140</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">141</span> \r\n<span style=\"color: #008080;\">142</span> <span style=\"color: #000000;\">$homepage=new Page();\r\n</span><span style=\"color: #008080;\">143</span> <span style=\"color: #000000;\">$homepage-&gt;content=\"&lt;p&gt;\".\"I do not know what to write down, how about this?\".\"&lt;/p&gt;\";\r\n</span><span style=\"color: #008080;\">144</span> <span style=\"color: #000000;\">$homepage-&gt;title=\"You have to try OO.\";\r\n</span><span style=\"color: #008080;\">145</span> <span style=\"color: #000000;\">$homepage-&gt;keyword=array(\"SAR\",\"MRF\");\r\n</span><span style=\"color: #008080;\">146</span> $homepage-&gt;Display();</pre>\r\n</div>\r\n<p> </p>\r\n<p>就是个默认网页的生成对象，还是有改进空间的。</p>\r\n<p>然后，php写html，有点繁琐，但写完了一身爽。</p>\r\n<p>&lt;?php ?&gt;标记的活用有点厉害啊，套路~</p>\r\n<p>PS:上面代码中的链接不要乱点~会吓到你的。</p>\r\n<p>当然，其实这种得到页面在应用中是不推荐的，只是试着练下手。</p>\r\n<p><strong>七、错误和异常处理</strong></p>\r\n<p>try{ throw new Exception() }  catch{  }</p>\r\n<p>PHP中，异常必须手动抛出；</p>\r\n<p>try代码块和catch代码块是“绑定的”，每个try一定要有一个catch！</p>\r\n<p>一个try可以有多个catch</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Session1.Chapter7.P146</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\ExceptionTry;\r\n</span><span style=\"color: #008080;\"> 4</span> \r\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\r\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> \\ErrorException(\"A serious wrong has occured!\", 14<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #0000ff;\">catch</span> (\\ErrorException <span style=\"color: #800080;\">$e</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 9</span>     <span style=\"color: #0000ff;\">echo</span> \"Exceotion\".<span style=\"color: #800080;\">$e</span>-&gt;getCode().\":\".<span style=\"color: #800080;\">$e</span>-&gt;getMessage().\"&lt;br/&gt;\"\r\n<span style=\"color: #008080;\">10</span>         .\"File:\".<span style=\"color: #800080;\">$e</span>-&gt;getFile().\"at Line:\".<span style=\"color: #800080;\">$e</span>-&gt;getLine().\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">11</span>     <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$e</span><span style=\"color: #000000;\">;    \r\n</span><span style=\"color: #008080;\">12</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>应用中，希望可以<strong>自定义异常处理</strong>：继承已有的Exception类就好，需要注意的是，一般的getMessage等是final的，不能进行重载的，只有_tostring这一个方法可以重载；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">class</span> MyException <span style=\"color: #0000ff;\">extends</span><span style=\"color: #000000;\"> \\ErrorException\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\"> 3</span>     <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> _tostring()\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 5</span>         <span style=\"color: #0000ff;\">return</span> \"Fatal error,sorry!\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\r\n</span><span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> MyException(\"OH\", 14<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #0000ff;\">catch</span> (MyException <span style=\"color: #800080;\">$e</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">13</span>     <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$e</span>-&gt;<span style=\"color: #000000;\">_tostring();\r\n</span><span style=\"color: #008080;\">14</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>应用中，<strong>常常把异常处理用在最容易出错的I/O部分</strong>；格式一般都是</p>\r\n<p>try{ if(!...) throw...} catch(){}</p>\r\n<p> </p>\r\n<p>Session 2</p>\r\n<p>（二） 使用MySQL</p>\r\n<p>八、设计Web数据库</p>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3033', 'PHP_Bibel阅读学习（一）——看书看经典，写文写代码 ', '网络', '\n<p>　　基础快速再看一下，然后每天有新的好玩的看。</p>\r\n<p>这本书，反正好评不少，就是`PHP和MySQL Web开发`，机械工业出版社，澳洲人写的，红皮，有兴趣的可以看一下。</p>\r\n<p> </p>\r\n<p><strong>第一篇 使用PHP</strong></p>\r\n<p><strong>一、入门</strong></p>\r\n<p>5分钟翻一下，两个点吧。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//From Bible\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Session1 Based\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//Chapter1-Use</span>\r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\Using;\r\n</span><span style=\"color: #008080;\">10</span> \r\n<span style=\"color: #008080;\">11</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">引用操作符\r\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #008000;\">//这样子赋值的变量享有同一个空间</span>\r\n<span style=\"color: #008080;\">13</span> <span style=\"color: #800080;\">$a</span>=3<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$a</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #800080;\">$b</span>=&amp;<span style=\"color: #800080;\">$a</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">16</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$b</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">17</span> <span style=\"color: #800080;\">$b</span>=3333<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">18</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$a</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">19</span> \r\n<span style=\"color: #008080;\">20</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">执行操作符\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #008000;\">//``</span>\r\n<span style=\"color: #008080;\">22</span> <span style=\"color: #800080;\">$out</span>=`ls -<span style=\"color: #000000;\">la`;\r\n</span><span style=\"color: #008080;\">23</span> <span style=\"color: #0000ff;\">echo</span> \'&lt;pre&gt;\'.<span style=\"color: #800080;\">$out</span>.\'&lt;/pre&gt;\';</pre>\r\n</div>\r\n<p><strong> 二、数据的存储与检索（文件直接操作</strong></p>\r\n<p>想说的都在代码里了。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\DataUsing;\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断文件是否存在——打开文件——锁定文件——读取文件——写入数据——解锁——关闭文件</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #800080;\">$filename</span>=\'test.txt\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">)) {\r\n</span><span style=\"color: #008080;\"> 5</span>     <span style=\"color: #0000ff;\">echo</span> \'The file you want to visit is not exist!\';<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">exit</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #800080;\">$fp</span>=@<span style=\"color: #008080;\">fopen</span>(<span style=\"color: #800080;\">$filename</span>,\'r+\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008080;\">flock</span>(<span style=\"color: #800080;\">$fp</span>, LOCK_EX);  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">锁定文件，只允许一个写入</span>\r\n<span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">while</span> (!<span style=\"color: #008080;\">feof</span>(<span style=\"color: #800080;\">$fp</span>)){   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">按行读取文件内容</span>\r\n<span style=\"color: #008080;\">11</span>     <span style=\"color: #800080;\">$content</span>=<span style=\"color: #008080;\">fgets</span>(<span style=\"color: #800080;\">$fp</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">12</span>     <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$content</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #800080;\">$writeContent</span>=\'I have something to write into\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #008080;\">fwrite</span>(<span style=\"color: #800080;\">$fp</span>, <span style=\"color: #800080;\">$writeContent</span>,<span style=\"color: #008080;\">strlen</span>(<span style=\"color: #800080;\">$writeContent</span>));  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">控制写入长度，兼容性考虑</span>\r\n<span style=\"color: #008080;\">16</span> <span style=\"color: #008080;\">flock</span>(<span style=\"color: #800080;\">$fp</span>, LOCK_UN);  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">释放锁定</span>\r\n<span style=\"color: #008080;\">17</span> <span style=\"color: #008080;\">fclose</span>(<span style=\"color: #800080;\">$fp</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong>三、数组</strong></p>\r\n<p>其他的都老生常谈，大概查一下随便用，就是熟练度的问题，但还是得知道哈。</p>\r\n<p>然后学到了usort（用户自定义排序）的妙处：</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Chapter3.Array</span>\r\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\ArrayUsort;\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多维数组的排序</span>\r\n<span style=\"color: #008080;\"> 4</span> <span style=\"color: #800080;\">$array1</span>=<span style=\"color: #0000ff;\">array</span>(54654,545,668<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #800080;\">$array2</span>=<span style=\"color: #0000ff;\">array</span>(5454,88,37,54<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #800080;\">$array3</span>=<span style=\"color: #0000ff;\">array</span>(123,4444,5453<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #800080;\">$arrayAll</span>=<span style=\"color: #0000ff;\">array</span>(<span style=\"color: #800080;\">$array1</span>,<span style=\"color: #800080;\">$array2</span>,<span style=\"color: #800080;\">$array3</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$arrayAll</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 9</span> \r\n<span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">function</span> dimensionsCompare(<span style=\"color: #800080;\">$x</span>,<span style=\"color: #800080;\">$y</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">12</span>     <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$x</span>[1]==<span style=\"color: #800080;\">$y</span>[1<span style=\"color: #000000;\">]){\r\n</span><span style=\"color: #008080;\">13</span>         <span style=\"color: #0000ff;\">return</span> 0<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">14</span>     }<span style=\"color: #0000ff;\">elseif</span> (<span style=\"color: #800080;\">$x</span>[1]&lt;<span style=\"color: #800080;\">$y</span>[1<span style=\"color: #000000;\">]){\r\n</span><span style=\"color: #008080;\">15</span>         <span style=\"color: #0000ff;\">return</span> -1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">16</span>     }<span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">17</span>         <span style=\"color: #0000ff;\">return</span> 1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">20</span> @<span style=\"color: #008080;\">usort</span>(<span style=\"color: #800080;\">$arrayAll</span>, \"dimensionsCompare\"<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$arrayAll</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p>其他什么的explode还是有点好玩的。</p>\r\n<p><strong>四、字符串操作和正则表达式</strong></p>\r\n<p>字符串整理</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">1</span> <span style=\"color: #800080;\">$name</span>=<span style=\"color: #008080;\">trim</span>(<span style=\"color: #800080;\">$_POST</span>[\'name\'<span style=\"color: #000000;\">]);\r\n</span><span style=\"color: #008080;\">2</span> <span style=\"color: #800080;\">$email</span>=<span style=\"color: #008080;\">rtrim</span>(<span style=\"color: #800080;\">$_POST</span>[\'email\'<span style=\"color: #000000;\">]);\r\n</span><span style=\"color: #008080;\">3</span> <span style=\"color: #800080;\">$feedback</span>=<span style=\"color: #008080;\">chop</span>(<span style=\"color: #800080;\">$_POST</span>[\'feedback\']);</pre>\r\n</div>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3034', 'MordenPHP阅读笔记（一）——先跑再说，跑累了再走 ', '网络', '\n<p>---恢复内容开始---</p>\r\n<p>　　后台一大堆半成品，或者是几乎不成的。。。</p>\r\n<p>这本书不错，起码是别人推荐的，然后也是比较新的东西，学哪本不是学嘛，关键是得看。</p>\r\n<p>今儿个网不好，科研所需的代码下不到，看书做笔记吧。</p>\r\n<p>这本书基本将的是5.4版本后的一些新变化，写的浅显易懂，虽然鄙人走的还不顺溜，跑一跑也摔不到哪儿去，跑累了我有的是走的机会~~</p>\r\n<p><strong>（一）特性</strong></p>\r\n<p><strong>一、命名空间</strong></p>\r\n<p>一个文件一个类，用了命名空间方便互相调用；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//Namespace\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 4</span> <span style=\"color: #000000;\">namespace ModernPHP\\feature\\mingmingkongjian;\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #0000ff;\">function</span> <span style=\"color: #008080;\">var_dump</span><span style=\"color: #000000;\">(){\r\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">echo</span> \"Shit!\".\"&lt;/br&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #800080;\">$test</span>=\"OK\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$test</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">11</span> \\ModernPHP\\feature\\mingmingkongjian\\<span style=\"color: #008080;\">var_dump</span><span style=\"color: #000000;\">();\r\n</span><span style=\"color: #008080;\">12</span> \r\n<span style=\"color: #008080;\">13</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">命名空间必须顶头，但一个文件中可以有很多命名空间，然后也可以有子空间\r\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #008000;\">//厂商的命名空间是最顶层的命名空间，用于识别品牌\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #008000;\">//旨在解决命名冲突的问题，当然现在应该有比较灵活的其他用法\r\n</span><span style=\"color: #008080;\">16</span> \r\n<span style=\"color: #008080;\">17</span> <span style=\"color: #008000;\">//一个比较实用的点：导入和别名\r\n</span><span style=\"color: #008080;\">18</span> <span style=\"color: #008000;\">//导入另一个文件夹下的类定义，直接用</span>\r\n<span style=\"color: #008080;\">19</span> <span style=\"color: #0000ff;\">require</span> \'index.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">20</span> <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> a\\aaa;\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #800080;\">$daoru</span>=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> aaa;\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #800080;\">$daoru</span>-&gt;<span style=\"color: #000000;\">send();\r\n</span><span style=\"color: #008080;\">23</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">use是导入，然后在use中设置最懒的别名\r\n</span><span style=\"color: #008080;\">24</span> <span style=\"color: #008000;\">//另外，5.6版本后可以实现use 函数\r\n</span><span style=\"color: #008080;\">25</span> <span style=\"color: #008000;\">// use func a\\call;\r\n</span><span style=\"color: #008080;\">26</span> <span style=\"color: #008000;\">// \\a\\call();</span></pre>\r\n</div>\r\n<p>index.php</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">namespace a;\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> aaa{\r\n</span><span style=\"color: #008080;\"> 4</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> send(){\r\n</span><span style=\"color: #008080;\"> 5</span>         <span style=\"color: #0000ff;\">echo</span> \"ok\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> call(){\r\n</span><span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">echo</span> \"func_use is successful.\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">11</span> }</pre>\r\n</div>\r\n<p><strong>二、使用接口</strong></p>\r\n<p>接口，本来没太懂，看懂了之后简直了，牛逼啊！</p>\r\n<p>一个接口，大家只要遵守接口规定，就都能用，就这么个意思。</p>\r\n<p>下面是一个获得内容的接口示例，还可以写更多基于此接口的模块；（其中，模块中getContent的我基本都不会。。。哭）</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">\r\n//Chapter2.P19\r\n//Feature_Interface\r\n//</span>\r\n<span style=\"color: #000000;\">namespace ModernPHP\\feature\\jiekou;\r\n\r\n\r\n\r\n</span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> DocumentStore{\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$data</span>=<span style=\"color: #000000;\">[];\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> addDocument(Documentable <span style=\"color: #800080;\">$document</span>){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">这里注明只能使用接口的参数</span>\r\n        <span style=\"color: #800080;\">$key</span>=<span style=\"color: #800080;\">$document</span>-&gt;<span style=\"color: #000000;\">getID();\r\n        </span><span style=\"color: #800080;\">$value</span>=<span style=\"color: #800080;\">$document</span>-&gt;<span style=\"color: #000000;\">getContent();\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;data[<span style=\"color: #800080;\">$key</span>]=<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">;\r\n    }\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getDocuments(){\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">data;\r\n    }\r\n}\r\n\r\n</span><span style=\"color: #0000ff;\">interface</span> Documentable{     <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">定义接口，说白了就是定规矩，其他地方要用，就得说一声</span>\r\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getId();\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getContent();\r\n}\r\n\r\n</span><span style=\"color: #0000ff;\">class</span> HtmlDocument <span style=\"color: #0000ff;\">implements</span> Documentable{   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">声明要用接口；这个是获得url的内容的</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">;\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __construct(<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;url=<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">;\r\n    }\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getId(){\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">url;\r\n    }\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getContent(){\r\n        </span><span style=\"color: #800080;\">$ch</span>=curl_init();   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">这里的curl是针对url进行操作一个库（相当于）。这个命令是开启一个curl对话，所以下面这些都是一个对话</span>\r\n        curl_setopt(<span style=\"color: #800080;\">$ch</span>, CURLOPT_URL, <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">url);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>, CURLOPT_RETURNTRANSFER, 1<span style=\"color: #000000;\">);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>,CURLOPT_CONNECTTIMEOUT,3<span style=\"color: #000000;\">);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>,CURLOPT_FOLLOWLOCATION,1<span style=\"color: #000000;\">);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>,CURLOPT_MAXREDIRS,3<span style=\"color: #000000;\">);\r\n        </span><span style=\"color: #800080;\">$html</span>=curl_exec(<span style=\"color: #800080;\">$ch</span>);   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">由这个命令执行刚才的对话</span>\r\n        curl_close(<span style=\"color: #800080;\">$ch</span><span style=\"color: #000000;\">);\r\n        \r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$html</span><span style=\"color: #000000;\">;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n</span><span style=\"color: #800080;\">$documentStore</span>=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> DocumentStore();\r\n\r\n</span><span style=\"color: #800080;\">$htmlDoc</span>=<span style=\"color: #0000ff;\">new</span> HtmlDocument(\'http://www.baidu.com\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$documentStore</span>-&gt;addDocument(<span style=\"color: #800080;\">$htmlDoc</span><span style=\"color: #000000;\">);\r\n\r\n\r\n\r\n</span><span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$documentStore</span>-&gt;getDocuments());</pre>\r\n</div>\r\n<p> 另一个模块</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">class</span> StreamDocument <span style=\"color: #0000ff;\">implements</span> Documentable{  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">流媒体</span>\r\n<span style=\"color: #008080;\"> 2</span>     <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$resource</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 3</span>     <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$buffer</span>;   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">缓冲区大小</span>\r\n<span style=\"color: #008080;\"> 4</span>     \r\n<span style=\"color: #008080;\"> 5</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __construct(<span style=\"color: #800080;\">$resource</span>,<span style=\"color: #800080;\">$buffer</span>=4096<span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 6</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>=<span style=\"color: #800080;\">$resource</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 7</span>         <span style=\"color: #800080;\">$this</span>-&gt;buffer=<span style=\"color: #800080;\">$buffer</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 9</span>     \r\n<span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getId(){\r\n</span><span style=\"color: #008080;\">11</span>         <span style=\"color: #0000ff;\">return</span> \'resource-\'.(int)<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">13</span>     \r\n<span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getContent(){\r\n</span><span style=\"color: #008080;\">15</span>         <span style=\"color: #800080;\">$streamContent</span>=\'\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">16</span>         <span style=\"color: #008080;\">rewind</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>); <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">rewind() 函数将文件指针的位置倒回文件的开头</span>\r\n<span style=\"color: #008080;\">17</span>         <span style=\"color: #0000ff;\">while</span> (<span style=\"color: #008080;\">feof</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>)===<span style=\"color: #0000ff;\">false</span>){    <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">feof() 函数检测是否已到达文件末尾 (eof)。</span>\r\n<span style=\"color: #008080;\">18</span>             <span style=\"color: #800080;\">$streamContent</span>.=<span style=\"color: #008080;\">fread</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>,<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">buffer);\r\n</span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\">20</span>         \r\n<span style=\"color: #008080;\">21</span>         <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$streamContent</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">23</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong> 三、性状</strong></p>\r\n<p>奇怪的东西。。。</p>\r\n<p>其实就是为了多重继承或者一对多个不同的类别吧</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter2.P23\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Feature_Trait\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//性状\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//前面说的接口，是针对同类型的东西，实现相同的功能的；\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\">//这里的性状是针对不同的东西，实现相同的功能\r\n</span><span style=\"color: #008080;\">10</span> \r\n<span style=\"color: #008080;\">11</span> <span style=\"color: #008000;\">//基本用法如下</span>\r\n<span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">trait traitName{\r\n</span><span style=\"color: #008080;\">13</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> testThis(){\r\n</span><span style=\"color: #008080;\">14</span>         <span style=\"color: #0000ff;\">echo</span> \"This is how trait works.\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">16</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">17</span> \r\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">trait traitMore{\r\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> testAgain(){\r\n</span><span style=\"color: #008080;\">20</span>         <span style=\"color: #0000ff;\">echo</span> \"This is multiple use.\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">23</span> \r\n<span style=\"color: #008080;\">24</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> className{\r\n</span><span style=\"color: #008080;\">25</span>     <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> traitName;\r\n</span><span style=\"color: #008080;\">26</span>     <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> traitMore;\r\n</span><span style=\"color: #008080;\">27</span>     \r\n<span style=\"color: #008080;\">28</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">29</span> \r\n<span style=\"color: #008080;\">30</span> <span style=\"color: #800080;\">$classMine</span>=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> className();\r\n</span><span style=\"color: #008080;\">31</span> <span style=\"color: #800080;\">$classMine</span>-&gt;<span style=\"color: #000000;\">testThis();\r\n</span><span style=\"color: #008080;\">32</span> <span style=\"color: #800080;\">$classMine</span>-&gt;testAgain();</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong> 四、生成器</strong></p>\r\n<p>直接上代码</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter2.P26\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Feature_Generator\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//生成器\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//其实就是在函数中使用了yield语句的东西\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\">//优点在于节省了内存使用情况\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #008000;\">//方法是通过动态分配内存进行循环操作\r\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #008000;\">//典型用处是处理csv类数据文件</span>\r\n<span style=\"color: #008080;\">12</span> \r\n<span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">namespace ModernPHP\\feature\\shengchegnqi;\r\n</span><span style=\"color: #008080;\">14</span> \r\n<span style=\"color: #008080;\">15</span> <span style=\"color: #0000ff;\">function</span> getRows(<span style=\"color: #800080;\">$file</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">16</span>     <span style=\"color: #800080;\">$handle</span>=<span style=\"color: #008080;\">fopen</span>(<span style=\"color: #800080;\">$file</span>,\'rb\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">17</span>     <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$handle</span>===<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">18</span>         <span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> <span style=\"color: #0000ff;\">Exception</span>();  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">抛出错误原因</span>\r\n<span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">20</span>     <span style=\"color: #0000ff;\">while</span> (<span style=\"color: #008080;\">feof</span>(<span style=\"color: #800080;\">$handle</span>)===<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">) {\r\n</span><span style=\"color: #008080;\">21</span>         yield <span style=\"color: #008080;\">fgetcsv</span>(<span style=\"color: #800080;\">$handle</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">23</span>     <span style=\"color: #008080;\">fclose</span>(<span style=\"color: #800080;\">$handle</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">24</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">25</span> \r\n<span style=\"color: #008080;\">26</span> <span style=\"color: #0000ff;\">foreach</span> (getRows(\'data.csv\') <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$row</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">27</span>     <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$row</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">28</span>     <span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">30</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">当数据文件很大时，效果尤其明显</span></pre>\r\n</div>\r\n<p> </p>\r\n<p><strong> 五、闭包</strong></p>\r\n<p>这里闭包基本等于匿名函数</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter2.P29\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Feature_ClosePatch\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//闭包或匿名函数\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//把函数当作是变量\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\">//然后它就可以像变量一样用来用去了。。\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #008000;\">//常用做函数和方法的回调</span>\r\n<span style=\"color: #008080;\">11</span> \r\n<span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">namespace ModernPHP\\feature\\bibao;\r\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #800080;\">$var</span>=<span style=\"color: #0000ff;\">function</span> (<span style=\"color: #800080;\">$name</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">sprintf</span>(\'Hello %s\',<span style=\"color: #800080;\">$name</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">};\r\n</span><span style=\"color: #008080;\">16</span> \r\n<span style=\"color: #008080;\">17</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$var</span>(\'Andy\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">18</span> \r\n<span style=\"color: #008080;\">19</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">做回调</span>\r\n<span style=\"color: #008080;\">20</span> <span style=\"color: #800080;\">$array</span>=[2,3,4<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #800080;\">$num</span>=<span style=\"color: #008080;\">array_map</span>(<span style=\"color: #0000ff;\">function</span> (<span style=\"color: #800080;\">$number</span>){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">array_map,将函数作用到数组中的每个值上，每个值都乘以本身，并返回带有新值的数组</span>\r\n<span style=\"color: #008080;\">22</span>     <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$number</span>+1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">23</span> },<span style=\"color: #800080;\">$array</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">24</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$num</span>);</pre>\r\n</div>\r\n<p> 六、附加状态</p>\r\n<p>这个没搞懂。。。</p>\r\n<p>（二）标准</p>\r\n<p>PHP-FIG的一些约定俗成；</p>\r\n<p>---类名称，驼峰式，ShitHappens</p>\r\n<p>---方法名称，驼峰式，但首字母小写，shitHappens</p>\r\n<p>---缩进统一为4个空格</p>\r\n<p>---不写?&gt;结束符号；</p>\r\n<p>---{另起一行；</p>\r\n<p>---命名空间要有空格；</p>\r\n<p>---类中属性和方法必须有可见性声明；</p>\r\n<p>---if等控制性结构后面有空格；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter3.P44\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//PHP-FIG puts PSRs\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 6</span> \r\n<span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">namespace ModernPHP\\standard\\realize;\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> ModernPHP\\feature\\bibao;\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> ModernPHP\\feature\\fujiazhuangtai;\r\n</span><span style=\"color: #008080;\">11</span> \r\n<span style=\"color: #008080;\">12</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> ShitHappens\r\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$a</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span>     \r\n<span style=\"color: #008080;\">16</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> suck()\r\n</span><span style=\"color: #008080;\">17</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">18</span>         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$this</span>-&gt;a===<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">19</span>             <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">20</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">22</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>----------------------</p>\r\n<p>后面的都是讲述的东西，有需要的我再写吧。 </p>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3035', 'PHP&MySQL（三）——数组 ', '网络', '\n<p>　　前一段忙着比赛忙着找实习，最后一地鸡毛，就是长长教训罢了。。。。</p>\r\n<p>看书还是多必须的，试着高效的、踏实的做吧！！</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">  1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">  2</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">PHP数组其实能创建很多种数据结构，列表，堆栈，队列，树等\r\n</span><span style=\"color: #008080;\">  3</span> <span style=\"color: #008000;\">//数组创建array_fill</span>\r\n<span style=\"color: #008080;\">  4</span> <span style=\"color: #800080;\">$start_index</span>=1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  5</span> <span style=\"color: #800080;\">$num</span>=10<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  6</span> <span style=\"color: #800080;\">$value</span>=\"fuck\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  7</span> <span style=\"color: #800080;\">$array1</span>=<span style=\"color: #008080;\">array_fill</span>(<span style=\"color: #800080;\">$start_index</span>, <span style=\"color: #800080;\">$num</span>, <span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">); \r\n</span><span style=\"color: #008080;\">  8</span> \r\n<span style=\"color: #008080;\">  9</span> \r\n<span style=\"color: #008080;\"> 10</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array1</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 11</span> \r\n<span style=\"color: #008080;\"> 12</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #008080;\">count</span>(<span style=\"color: #800080;\">$array1</span>); <span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"; <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">count计数实现，返回一个数，代表数组长度\r\n</span><span style=\"color: #008080;\"> 13</span> <span style=\"color: #008000;\">//print_r(array_count_values($array1));\r\n</span><span style=\"color: #008080;\"> 14</span> \r\n<span style=\"color: #008080;\"> 15</span> <span style=\"color: #008000;\">//移除元素</span>\r\n<span style=\"color: #008080;\"> 16</span> <span style=\"color: #0000ff;\">unset</span>(<span style=\"color: #800080;\">$array1</span>[3<span style=\"color: #000000;\">]);\r\n</span><span style=\"color: #008080;\"> 17</span> <span style=\"color: #800080;\">$array2</span>=<span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 18</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">unset($array1);</span>\r\n<span style=\"color: #008080;\"> 19</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array1</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 20</span> \r\n<span style=\"color: #008080;\"> 21</span> <span style=\"color: #800080;\">$start</span>=\"a\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 22</span> <span style=\"color: #800080;\">$limit</span>=\"z\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 23</span> <span style=\"color: #800080;\">$array_letters</span>=<span style=\"color: #008080;\">range</span>(<span style=\"color: #800080;\">$start</span>, <span style=\"color: #800080;\">$limit</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 24</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array_letters</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 25</span> \r\n<span style=\"color: #008080;\"> 26</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">异构数组，即数组中有各种类型的</span>\r\n<span style=\"color: #008080;\"> 27</span> <span style=\"color: #800080;\">$array_yigou</span>=<span style=\"color: #0000ff;\">array</span>(\"fuck\",1,23.343,<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 28</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 29</span> \r\n<span style=\"color: #008080;\"> 30</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多维数组</span>\r\n<span style=\"color: #008080;\"> 31</span> <span style=\"color: #800080;\">$array_dimensions</span>=<span style=\"color: #0000ff;\">array</span>(<span style=\"color: #800080;\">$array1</span>,<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 32</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_dimensions</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 33</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$array_dimensions</span>[1][2];<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 34</span> \r\n<span style=\"color: #008080;\"> 35</span> <span style=\"color: #800080;\">$array_complicated</span>=<span style=\"color: #0000ff;\">array</span>(<span style=\"color: #800080;\">$array_dimensions</span>,<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 36</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_complicated</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 37</span> \r\n<span style=\"color: #008080;\"> 38</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">foreach,一开始我理解上有点问题，foreach本来就是一个循环了！！！</span>\r\n<span style=\"color: #008080;\"> 39</span> <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$array1</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$person</span> =&gt; <span style=\"color: #800080;\">$saying</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 40</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 41</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 42</span> \r\n<span style=\"color: #008080;\"> 43</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">比较适合foreach理解的一种方式</span>\r\n<span style=\"color: #008080;\"> 44</span> <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$array1</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$person</span> =&gt; <span style=\"color: #800080;\">$saying</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 45</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" said \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 46</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 47</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 48</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 49</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 50</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 51</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 52</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 53</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 54</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 55</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 56</span> \r\n<span style=\"color: #008080;\"> 57</span> <span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 58</span> \r\n<span style=\"color: #008080;\"> 59</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">数组计数\r\n</span><span style=\"color: #008080;\"> 60</span> <span style=\"color: #008000;\">//array_count_values返回一个数组,统计（！！）每个value的个数</span>\r\n<span style=\"color: #008080;\"> 61</span> <span style=\"color: #800080;\">$array1Value</span>=<span style=\"color: #008080;\">array_count_values</span>(<span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 62</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array1</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 63</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #800080;\">$array1Value</span>[\"fuck\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #008080;\"> 64</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">count计数的是“个体”的数目吧</span>\r\n<span style=\"color: #008080;\"> 65</span> <span style=\"color: #0000ff;\">print</span> \"There is \".<span style=\"color: #008080;\">count</span>(<span style=\"color: #800080;\">$array_letters</span>).\" letters.\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 66</span> \r\n<span style=\"color: #008080;\"> 67</span> <span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 68</span> \r\n<span style=\"color: #008080;\"> 69</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">神奇的explode和implode\r\n</span><span style=\"color: #008080;\"> 70</span> <span style=\"color: #008000;\">//就是字符串的拆解和安装\r\n</span><span style=\"color: #008080;\"> 71</span> <span style=\"color: #008000;\">//注意一定要有glue或者什么，不能不输入</span>\r\n<span style=\"color: #008080;\"> 72</span> <span style=\"color: #800080;\">$sentence</span>=\"What is your name?\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 73</span> <span style=\"color: #800080;\">$explode_demo</span>=<span style=\"color: #008080;\">explode</span>(\" \", <span style=\"color: #800080;\">$sentence</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 74</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$explode_demo</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 75</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">implode</span>(\" \", <span style=\"color: #800080;\">$explode_demo</span>));<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 76</span> \r\n<span style=\"color: #008080;\"> 77</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">数组元素搜索判断\r\n</span><span style=\"color: #008080;\"> 78</span> <span style=\"color: #008000;\">//in_array判断是否存在,array_search返回在哪里</span>\r\n<span style=\"color: #008080;\"> 79</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #008080;\">in_array</span>(\"fuck\", <span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 80</span> <span style=\"color: #800080;\">$check_list</span>=\"fuck you\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 81</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$check_list</span>, <span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 82</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">in_array第三个参数为严格检查类型，默认为false</span>\r\n<span style=\"color: #008080;\"> 83</span> <span style=\"color: #800080;\">$check_list2</span>=\"1 is in here\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 84</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$check_list2</span>, <span style=\"color: #800080;\">$array_yigou</span>,<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 85</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$check_list2</span>, <span style=\"color: #800080;\">$array_yigou</span>,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 86</span> \r\n<span style=\"color: #008080;\"> 87</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #008080;\">array_search</span>(\"fuck\", <span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 88</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #008080;\">array_search</span>(1, <span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 89</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">array_key_exists判断key是不是存在</span>\r\n<span style=\"color: #008080;\"> 90</span> <span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 91</span> \r\n<span style=\"color: #008080;\"> 92</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">直接利用key或value</span>\r\n<span style=\"color: #008080;\"> 93</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">array_keys</span>(<span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 94</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">array_values</span>(<span style=\"color: #800080;\">$array_dimensions</span>));<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 95</span> \r\n<span style=\"color: #008080;\"> 96</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">implode和array_merge</span>\r\n<span style=\"color: #008080;\"> 97</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">implode</span>(\" \", <span style=\"color: #800080;\">$array1</span>));<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 98</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">array_merge</span>(<span style=\"color: #800080;\">$array1</span>,<span style=\"color: #800080;\">$array_letters</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 99</span> \r\n<span style=\"color: #008080;\">100</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">数组排序\r\n</span><span style=\"color: #008080;\">101</span> <span style=\"color: #008000;\">//注意排序之后，直接改变/返回到原数组\r\n</span><span style=\"color: #008080;\">102</span> <span style=\"color: #008000;\">//sort升rsort降\r\n</span><span style=\"color: #008080;\">103</span> <span style=\"color: #008000;\">//这里也是我第一次对PHP语言有理解的地方，各种封装好的函数，需要的就是多用，知道，然后熟练的调用\r\n</span><span style=\"color: #008080;\">104</span> <span style=\"color: #008000;\">//自己编写的排序函数，往往没有其自带的/现成的函数效率/效果好</span>\r\n<span style=\"color: #008080;\">105</span> <span style=\"color: #800080;\">$array_num</span>=<span style=\"color: #008080;\">range</span>(2, 123,3<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">106</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array_num</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">107</span> <span style=\"color: #008080;\">rsort</span>(<span style=\"color: #800080;\">$array_num</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">108</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array_num</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">109</span> <span style=\"color: #008080;\">sort</span>(<span style=\"color: #800080;\">$array_letters</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">110</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_dimensions</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">111</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">关联数组，若想保持键值的关系不变，应该用asort</span>\r\n<span style=\"color: #008080;\">112</span> <span style=\"color: #008080;\">sort</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">113</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">114</span> <span style=\"color: #008080;\">rsort</span>(<span style=\"color: #800080;\">$array_yigou</span>,<span style=\"color: #000000;\">SORT_NUMERIC);\r\n</span><span style=\"color: #008080;\">115</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">116</span> <span style=\"color: #008080;\">asort</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">117</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">118</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">ksort是根据key值来排序的\r\n</span><span style=\"color: #008080;\">119</span> \r\n<span style=\"color: #008080;\">120</span> <span style=\"color: #008000;\">//总结_数组\r\n</span><span style=\"color: #008080;\">121</span> <span style=\"color: #008000;\">//数组创建——array(),array_fill(),range()\r\n</span><span style=\"color: #008080;\">122</span> <span style=\"color: #008000;\">//数组输出——var_dump,print_r\r\n</span><span style=\"color: #008080;\">123</span> <span style=\"color: #008000;\">//数组种类——索引数组，关联数组；异构数组，多维数组\r\n</span><span style=\"color: #008080;\">124</span> <span style=\"color: #008000;\">//数组排序——sort(),rsort(),asort(),ksort()\r\n</span><span style=\"color: #008080;\">125</span> <span style=\"color: #008000;\">//foreach的使用\r\n</span><span style=\"color: #008080;\">126</span> <span style=\"color: #008000;\">//implode(),explode()\r\n</span><span style=\"color: #008080;\">127</span> <span style=\"color: #008000;\">//is_array,in_array,array_search\r\n</span><span style=\"color: #008080;\">128</span> <span style=\"color: #008000;\">//array_count_values,count</span></pre>\r\n</div>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3036', 'PHP实现文件上传下载——心在忙而已 ', '网络', '\n<p>　　这一周都没有写什么东西，是啊，一周时间都没有学习太多新的东西，除了开车。</p>\r\n<p>妈蛋啊，天天中午去学车然后两周没有午觉的日子还是很崩溃的，加上之后工作压力带来的心忙，宝宝不开心啊。</p>\r\n<p>不过，也是自己不是那么能吃苦吧。那天看到的那句话怎么说的来着，我痛恨自己，在简单和困难之前，选择了前者；在什么什么面前，balabala，不是很鸡汤，但有点触动，愿少点矫情和娇气。</p>\r\n<p><strong>PHP实现文件上传与下载——来自mooc网</strong></p>\r\n<p><strong>一、上传原理与配置</strong></p>\r\n<p><strong>1.1 原理</strong></p>\r\n<p>将客户端文件<strong>上传到服务器端</strong>，再将服务器端的文件（<strong>临时文件）移动到指定目录</strong>即可。</p>\r\n<p><strong>1.2 客户端配置</strong></p>\r\n<p>所需：<strong>表单</strong>页面（选择上传文件）；</p>\r\n<p>具体而言：<strong>发送方式为POST，添加enctype=\"multipart/form-data\"属性</strong>，两者缺一不可（但是，优缺点并存，这里也限定了上传的方式和上传的文件之后的调用等方面，后面会说到）</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：\r\n</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">php\r\n\r\n</span><span style=\"color: #0000ff;\">?&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p>先是表单页面（请自动忽略前端问题。。。），关键就是form的属性；另外就是<strong>input 中用到了type=\"file\"这一点</strong>（体现到php的强大的拓展等等）。</p>\r\n<p>然后是doAction</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$_FILES:文件上传变量\r\n//print_r($_FILES);</span>\r\n<span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'name\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$type</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'type\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$tmp_name</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'tmp_name\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$size</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'size\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$error</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'error\'<span style=\"color: #000000;\">];\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">将服务器上的临时文件移动到指定位置\r\n//方法一move_upload_file($tmp_name,$destination)\r\n//move_uploaded_file($tmp_name, \"uploads/\".$filename);//文件夹应提前建立好，不然报错\r\n//方法二copy($src,$des)\r\n//以上两个函数都是成功返回真，否则返回false\r\n//copy($tmp_name, \"copies/\".$filename);\r\n//注意，不能两个方法都对临时文件进行操作，临时文件似乎操作完就没了，我们试试反过来</span>\r\n<span style=\"color: #008080;\">copy</span>(<span style=\"color: #800080;\">$tmp_name</span>, \"copies/\".<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span>, \"uploads/\".<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">能够实现，说明move那个函数基本上相当于剪切；copy就是copy，临时文件还在\r\n\r\n//另外，错误信息也是不一样的，遇到错误可以查看或者直接报告给用户</span>\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$error</span>==0<span style=\"color: #000000;\">) {\r\n    </span><span style=\"color: #0000ff;\">echo</span> \"上传成功！\"<span style=\"color: #000000;\">;\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">case</span> 1:\r\n            <span style=\"color: #0000ff;\">echo</span> \"超过了上传文件的最大值，请上传2M以下文件\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 2:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件过多，请一次上传20个及以下文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 3:\r\n            <span style=\"color: #0000ff;\">echo</span> \"文件并未完全上传，请再次尝试！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 4:\r\n            <span style=\"color: #0000ff;\">echo</span> \"未选择上传文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 5:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件为0\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p><span style=\"line-height: 1.5;\">先把print_r($_FILES)这个信息看一下</span></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #000000;\">Array\r\n(\r\n    [myFile] =&gt; Array\r\n        (\r\n            [name] =&gt; 梁博_简历.doc\r\n            [type] =&gt; application/msword\r\n            [tmp_name] =&gt; D:\\wamp\\tmp\\php1D78.tmp\r\n            [error] =&gt; 0\r\n            [size] =&gt; 75776\r\n        )\r\n\r\n)</span></pre>\r\n</div>\r\n<p>所以得到的是个二维数组，该怎么用，都是基本的东西（其实我喜欢降维再用）；</p>\r\n<p>基本是一眼就懂的东西，不罗嗦，关键有两个：<strong>tmp_name临时文件名；error报错信息（代号，后面可以利用）</strong>；</p>\r\n<p>然后这里看一下doAction后面一部分，利用报错信息来反馈给用户，需要说明的是为什么报错，和报错信息是什么都；</p>\r\n<p><strong>1.3 关于报错</strong></p>\r\n<p><strong>--报错原因</strong></p>\r\n<p>基本上都是超过或者不符合服务器关于上传文件的配置，那么服务器端<strong>配置</strong>有哪些呢？</p>\r\n<p>先考虑上传我们用了什么？POST，upload</p>\r\n<p>所以在php.ini中找这么几项：</p>\r\n<p>file_upload:On</p>\r\n<p>upload_tmp_dir=——临时文件保存目录；</p>\r\n<p>upload_max_filesize=2M</p>\r\n<p>max_file_uploads=20——允许一次上传的最大文件数量（注意和上面那个的区别，有没有size，别乱想）</p>\r\n<p>post_max_size=8M——post方式发送数据的最大值</p>\r\n<p>其他相关配置</p>\r\n<p>max_exectuion_time=-1——最大执行时间，避免程序不好占用服务器资源；</p>\r\n<p>max_input_time=60</p>\r\n<p>max_input_nesting_level=64——输入嵌套深度；</p>\r\n<p>memory_limit=128M——最大单线程的独立内存使用量</p>\r\n<p>总之都是有关资源的配置。</p>\r\n<p><strong>--错误号</strong></p>\r\n<p>以下（偷懒）引自http://blog.sina.com.cn/s/blog_3cdfaea201008utf.html</p>\r\n<p>UPLOAD_ERR_OK             值：0; 没有错误发生，文件上传成功。<br>  UPLOAD_ERR_INI_SIZE      \r\n值：1; 上传的文件超过了 php.ini 中 upload_max_filesize \r\n选项限制的值。<br>  UPLOAD_ERR_FORM_SIZE  值：2; 上传文件的大小超过了 HTML 表单中 \r\nMAX_FILE_SIZE \r\n选项指定的值。<br>  UPLOAD_ERR_PARTIAL          \r\n值：3; \r\n文件只有部分被上传。<br>  UPLOAD_ERR_NO_FILE          \r\n值：4; 没有文件被上传。  </p>\r\n<p>注意：这个错误信息是第一步上传的信息，也就是上传到临时文件夹的情况，而不是move或者copy的情况。 </p>\r\n<p><strong>二、上传相关限制</strong></p>\r\n<p><strong>2.1 客户端限制</strong></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction2.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"hidden\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"MAX_FILE_SIZE\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"101321\"</span> <span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：\r\n</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile\"</span><span style=\"color: #ff0000;\"> accept</span><span style=\"color: #0000ff;\">=\"image/jpeg,image/gif,text/html\"</span><span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这里用input的属性对上传文件的大小和类型进行了限制，但是个人感觉：一，html代码是“可见的”；二，常不起作用（没找到原因，但因为第一个我也想放弃它，知道就好。 </p>\r\n<p> 2.2 服务器端限制</p>\r\n<p>主要限制大小和类型，再有就是方式。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">接受文件，临时文件信息</span>\r\n<span style=\"color: #800080;\">$fileinfo</span>=<span style=\"color: #800080;\">$_FILES</span>[\"myFile\"];<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">降维操作</span>\r\n<span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$tmp_name</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"tmp_name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$size</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"size\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$error</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"error\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$type</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"type\"<span style=\"color: #000000;\">];\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">服务器端设定限制</span>\r\n<span style=\"color: #800080;\">$maxsize</span>=10485760;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">10M,10*1024*1024</span>\r\n<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'tif\');<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">允许上传的文件类型（拓展名</span>\r\n<span style=\"color: #800080;\">$ext</span>=<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$filename</span>,PATHINFO_EXTENSION);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">提取上传文件的拓展名\r\n\r\n//目的信息</span>\r\n<span style=\"color: #800080;\">$path</span>=\"uploads\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$path</span>)) {   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">当目录不存在，就创建目录</span>\r\n    <span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$path</span>,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n    </span><span style=\"color: #008080;\">chmod</span>(<span style=\"color: #800080;\">$path</span>, 0777<span style=\"color: #000000;\">);\r\n}\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$destination=$path.\"/\".$filename;\r\n//得到唯一的文件名！防止因为文件名相同而产生覆盖</span>\r\n<span style=\"color: #800080;\">$uniName</span>=<span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span>)).<span style=\"color: #800080;\">$ext</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">md5加密，uniqid产生唯一id，microtime做前缀</span>\r\n\r\n\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$error</span>==0<span style=\"color: #000000;\">) {\r\n    </span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$size</span>&gt;<span style=\"color: #800080;\">$maxsize</span><span style=\"color: #000000;\">) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传文件过大！\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$ext</span>, <span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"非法文件类型\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传方式有误，请使用post方式\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (@<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span>, <span style=\"color: #800080;\">$uniName</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">@错误抑制符，不让用户看到警告</span>\r\n        <span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传成功!\"<span style=\"color: #000000;\">;\r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传失败!\"<span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断是否为真实图片（防止伪装成图片的病毒一类的</span>\r\n    <span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$tmp_name</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">getimagesize真实返回数组，否则返回false</span>\r\n        <span style=\"color: #0000ff;\">exit</span>(\"不是真正的图片类型\"<span style=\"color: #000000;\">);\r\n    }\r\n\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">case</span> 1:\r\n            <span style=\"color: #0000ff;\">echo</span> \"超过了上传文件的最大值，请上传2M以下文件\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 2:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件过多，请一次上传20个及以下文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 3:\r\n            <span style=\"color: #0000ff;\">echo</span> \"文件并未完全上传，请再次尝试！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 4:\r\n            <span style=\"color: #0000ff;\">echo</span> \"未选择上传文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 7:\r\n            <span style=\"color: #0000ff;\">echo</span> \"没有临时文件夹\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这里，具体实现都有注释，每一步其实都可以自己试试的，很有趣。</p>\r\n<p>2.3 封装</p>\r\n<p>函数</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #0000ff;\">function</span> uploadFile(<span style=\"color: #800080;\">$fileInfo</span>,<span style=\"color: #800080;\">$path</span>,<span style=\"color: #800080;\">$allowExt</span>,<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">){\r\n\r\n</span><span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$tmp_name</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"tmp_name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$size</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"size\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$error</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"error\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$type</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"type\"<span style=\"color: #000000;\">];\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">服务器端设定限制</span>\r\n\r\n<span style=\"color: #800080;\">$ext</span>=<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$filename</span>,<span style=\"color: #000000;\">PATHINFO_EXTENSION);\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">目的信息</span>\r\n<span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$path</span><span style=\"color: #000000;\">)) {   \r\n    </span><span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$path</span>,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n    </span><span style=\"color: #008080;\">chmod</span>(<span style=\"color: #800080;\">$path</span>, 0777<span style=\"color: #000000;\">);\r\n}\r\n</span><span style=\"color: #800080;\">$uniName</span>=<span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span>)).\'.\'.<span style=\"color: #800080;\">$ext</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$destination</span>=<span style=\"color: #800080;\">$path</span>.\"/\".<span style=\"color: #800080;\">$uniName</span><span style=\"color: #000000;\">;\r\n\r\n\r\n</span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$error</span>==0<span style=\"color: #000000;\">) {\r\n    </span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$size</span>&gt;<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传文件过大！\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$ext</span>, <span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"非法文件类型\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传方式有误，请使用post方式\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断是否为真实图片（防止伪装成图片的病毒一类的</span>\r\n    <span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$tmp_name</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">getimagesize真实返回数组，否则返回false</span>\r\n        <span style=\"color: #0000ff;\">exit</span>(\"不是真正的图片类型\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (@<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span>, <span style=\"color: #800080;\">$destination</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">@错误抑制符，不让用户看到警告</span>\r\n        <span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传成功!\"<span style=\"color: #000000;\">;\r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传失败!\"<span style=\"color: #000000;\">;\r\n    }\r\n    \r\n\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">case</span> 1:\r\n            <span style=\"color: #0000ff;\">echo</span> \"超过了上传文件的最大值，请上传2M以下文件\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 2:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件过多，请一次上传20个及以下文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 3:\r\n            <span style=\"color: #0000ff;\">echo</span> \"文件并未完全上传，请再次尝试！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 4:\r\n            <span style=\"color: #0000ff;\">echo</span> \"未选择上传文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 7:\r\n            <span style=\"color: #0000ff;\">echo</span> \"没有临时文件夹\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n    }\r\n}\r\n</span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$destination</span><span style=\"color: #000000;\">;\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>调用</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$fileInfo</span>=<span style=\"color: #800080;\">$_FILES</span>[\"myFile\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$maxSize</span>=10485760;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">10M,10*1024*1024</span>\r\n<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'tif\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$path</span>=\"uploads\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">include_once</span> \'upFunc.php\'<span style=\"color: #000000;\">;\r\nuploadFile(</span><span style=\"color: #800080;\">$fileInfo</span>, <span style=\"color: #800080;\">$path</span>, <span style=\"color: #800080;\">$allowExt</span>, <span style=\"color: #800080;\">$maxSize</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong>三、多文件的上传实现</strong></p>\r\n<p><strong>3.1 利用单文件封装</strong></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction5.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile1\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile2\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile3\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile4\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">print_r($_FILES);</span>\r\n<span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #0000ff;\">include_once</span> \'upFunc.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$_FILES</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #800080;\">$file</span>[]=uploadFile(<span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">);\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这里的思路，从print_r($_FILES)中去找，打印出来看到是个二维数组，很简单，遍历去用就好了！ </p>\r\n<p>上面那个function的定义改一下，给定一些默认值</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span> uploadFile(<span style=\"color: #800080;\">$fileInfo</span>,<span style=\"color: #800080;\">$path</span>=\"uploads\",<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'tif\'),<span style=\"color: #800080;\">$maxSize</span>=10485760){</pre>\r\n</div>\r\n<p> </p>\r\n<p>这样子，简单是简单，但遇到一些问题。</p>\r\n<p>正常的上传4个图片是没问题，但要是中间激活了函数中的exit，就会立即停止，导致其他图片也无法上传。</p>\r\n<p><strong>3.2 升级版封装</strong></p>\r\n<p>旨在实现针对多个或单个文件上传的封装</p>\r\n<p>首先这样子写个静态文件</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction5.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>打印一下$_FILES</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #000000;\">Array\r\n(\r\n    [myFile] =&gt; Array\r\n        (\r\n            [name] =&gt; Array\r\n                (\r\n                    [0] =&gt; test32.png\r\n                    [1] =&gt; test32.png\r\n                    [2] =&gt; 333.png\r\n                    [3] =&gt; test41.png\r\n                )\r\n\r\n            [type] =&gt; Array\r\n                (\r\n                    [0] =&gt; image/png\r\n                    [1] =&gt; image/png\r\n                    [2] =&gt; image/png\r\n                    [3] =&gt; image/png\r\n                )\r\n\r\n            [tmp_name] =&gt; Array\r\n                (\r\n                    [0] =&gt; D:\\wamp\\tmp\\php831C.tmp\r\n                    [1] =&gt; D:\\wamp\\tmp\\php834C.tmp\r\n                    [2] =&gt; D:\\wamp\\tmp\\php837C.tmp\r\n                    [3] =&gt; D:\\wamp\\tmp\\php83BB.tmp\r\n                )\r\n\r\n            [error] =&gt; Array\r\n                (\r\n                    [0] =&gt; 0\r\n                    [1] =&gt; 0\r\n                    [2] =&gt; 0\r\n                    [3] =&gt; 0\r\n                )\r\n\r\n            [size] =&gt; Array\r\n                (\r\n                    [0] =&gt; 46174\r\n                    [1] =&gt; 46174\r\n                    [2] =&gt; 34196\r\n                    [3] =&gt; 38514\r\n                )\r\n\r\n        )\r\n\r\n)</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>可以得到一个三维数组。</p>\r\n<p>复杂是复杂了，但复杂的有规律，各项数值都在一起了，很方便我们取值！！</p>\r\n<p>所以先得到文件信息，<strong>变成单文件处理那种信息</strong></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getFiles(){\r\n    </span><span style=\"color: #800080;\">$i</span>=0<span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">foreach</span>(<span style=\"color: #800080;\">$_FILES</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$file</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #008080;\">is_string</span>(<span style=\"color: #800080;\">$file</span>[\'name\'])){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">单文件判定</span>\r\n            <span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>]=<span style=\"color: #800080;\">$file</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #800080;\">$i</span>++<span style=\"color: #000000;\">;\r\n        }</span><span style=\"color: #0000ff;\">elseif</span>(<span style=\"color: #008080;\">is_array</span>(<span style=\"color: #800080;\">$file</span>[\'name\'<span style=\"color: #000000;\">])){\r\n            </span><span style=\"color: #0000ff;\">foreach</span>(<span style=\"color: #800080;\">$file</span>[\'name\'] <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$key</span>=&gt;<span style=\"color: #800080;\">$val</span>){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">我的天，这个$key用的diao</span>\r\n                <span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'name\']=<span style=\"color: #800080;\">$file</span>[\'name\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'type\']=<span style=\"color: #800080;\">$file</span>[\'type\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'tmp_name\']=<span style=\"color: #800080;\">$file</span>[\'tmp_name\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'error\']=<span style=\"color: #800080;\">$file</span>[\'error\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'size\']=<span style=\"color: #800080;\">$file</span>[\'size\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$i</span>++<span style=\"color: #000000;\">;\r\n            }\r\n        }\r\n    }\r\n    </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$files</span><span style=\"color: #000000;\">;\r\n    \r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>然后之前的那种exit错误，就把exit改一下就好了，这里用res</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span> uploadFile(<span style=\"color: #800080;\">$fileInfo</span>,<span style=\"color: #800080;\">$path</span>=\'./uploads\',<span style=\"color: #800080;\">$flag</span>=<span style=\"color: #0000ff;\">true</span>,<span style=\"color: #800080;\">$maxSize</span>=1048576,<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'gif\'<span style=\"color: #000000;\">)){\r\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$flag=true;\r\n    //$allowExt=array(\'jpeg\',\'jpg\',\'gif\',\'png\');\r\n    //$maxSize=1048576;//1M\r\n    //判断错误号</span>\r\n    <span style=\"color: #800080;\">$res</span>=<span style=\"color: #0000ff;\">array</span><span style=\"color: #000000;\">();\r\n    </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'error\']===<span style=\"color: #000000;\">UPLOAD_ERR_OK){\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测上传得到小</span>\r\n        <span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'size\']&gt;<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'上传文件过大\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #800080;\">$ext</span>=getExt(<span style=\"color: #800080;\">$fileInfo</span>[\'name\'<span style=\"color: #000000;\">]);\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测上传文件的文件类型</span>\r\n        <span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$ext</span>,<span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">)){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'非法文件类型\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测是否是真实的图片类型</span>\r\n        <span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$flag</span><span style=\"color: #000000;\">){\r\n            </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n                </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'不是真实图片类型\'<span style=\"color: #000000;\">;\r\n            }\r\n        }\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测文件是否是通过HTTP POST上传上来的</span>\r\n        <span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'文件不是通过HTTP POST方式上传上来的\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$res</span>) <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$res</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$path=\'./uploads\';</span>\r\n        <span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$path</span><span style=\"color: #000000;\">)){\r\n            </span><span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$path</span>,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n            </span><span style=\"color: #008080;\">chmod</span>(<span style=\"color: #800080;\">$path</span>,0777<span style=\"color: #000000;\">);\r\n        }\r\n        </span><span style=\"color: #800080;\">$uniName</span>=<span style=\"color: #000000;\">getUniName();\r\n        </span><span style=\"color: #800080;\">$destination</span>=<span style=\"color: #800080;\">$path</span>.\'/\'.<span style=\"color: #800080;\">$uniName</span>.\'.\'.<span style=\"color: #800080;\">$ext</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'tmp_name\'],<span style=\"color: #800080;\">$destination</span><span style=\"color: #000000;\">)){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'文件移动失败\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'上传成功\'<span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$res</span>[\'dest\']=<span style=\"color: #800080;\">$destination</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$res</span><span style=\"color: #000000;\">;\r\n        \r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">匹配错误信息</span>\r\n        <span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$fileInfo</span> [\'error\'<span style=\"color: #000000;\">]) {\r\n            </span><span style=\"color: #0000ff;\">case</span> 1 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'上传文件超过了PHP配置文件中upload_max_filesize选项的值\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 2 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'超过了表单MAX_FILE_SIZE限制的大小\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 3 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'文件部分被上传\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 4 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'没有选择上传文件\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 6 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'没有找到临时目录\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 7 :\r\n            <span style=\"color: #0000ff;\">case</span> 8 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'系统错误\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$res</span><span style=\"color: #000000;\">;\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>里面封装了两个小的</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span> getExt(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">strtolower</span>(<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$filename</span>,<span style=\"color: #000000;\">PATHINFO_EXTENSION));\r\n}\r\n\r\n</span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n * 产生唯一字符串\r\n * @return string\r\n </span><span style=\"color: #008000;\">*/</span>\r\n<span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getUniName(){\r\n    </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">));\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>然后静态中，用multiple属性实现多个文件的输入；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction6.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"POST\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span><span style=\"color: #ff0000;\"> multiple</span><span style=\"color: #0000ff;\">=\'multiple\' </span><span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>doAction6</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">print_r($_FILES);</span>\r\n<span style=\"color: #008080;\">header</span>(\"content-type:text/html;charset=utf-8\"<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #0000ff;\">require_once</span> \'upFunc2.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">require_once</span> \'common.func.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$files</span>=<span style=\"color: #000000;\">getFiles();\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> print_r($files);</span>\r\n<span style=\"color: #0000ff;\">foreach</span>(<span style=\"color: #800080;\">$files</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #800080;\">$res</span>=uploadFile(<span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">);\r\n    </span><span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$res</span>[\'mes\'],\'&lt;br/&gt;\'<span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #800080;\">$uploadFiles</span>[]=@<span style=\"color: #800080;\">$res</span>[\'dest\'<span style=\"color: #000000;\">];\r\n}\r\n</span><span style=\"color: #800080;\">$uploadFiles</span>=<span style=\"color: #008080;\">array_values</span>(<span style=\"color: #008080;\">array_filter</span>(<span style=\"color: #800080;\">$uploadFiles</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">print_r($uploadFiles);</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这样子的几个文件，就实现比较强大的面向过程的上传文件的功能（学的叫一个心酸。。。）；</p>\r\n<p><strong>四、面向对象的文件上传</strong></p>\r\n<p> （不是很写的动了。。。先粘过来，再说吧。。。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> upload{\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$fileName</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$allowMime</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$uploadPath</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$imgFlag</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$ext</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * @param string $fileName\r\n     * @param string $uploadPath\r\n     * @param string $imgFlag\r\n     * @param number $maxSize\r\n     * @param array $allowExt\r\n     * @param array $allowMime\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __construct(<span style=\"color: #800080;\">$fileName</span>=\'myFile\',<span style=\"color: #800080;\">$uploadPath</span>=\'./uploads\',<span style=\"color: #800080;\">$imgFlag</span>=<span style=\"color: #0000ff;\">true</span>,<span style=\"color: #800080;\">$maxSize</span>=5242880,<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'gif\'),<span style=\"color: #800080;\">$allowMime</span>=<span style=\"color: #0000ff;\">array</span>(\'image/jpeg\',\'image/png\',\'image/gif\'<span style=\"color: #000000;\">)){\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;fileName=<span style=\"color: #800080;\">$fileName</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;maxSize=<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;allowMime=<span style=\"color: #800080;\">$allowMime</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;allowExt=<span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;uploadPath=<span style=\"color: #800080;\">$uploadPath</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;imgFlag=<span style=\"color: #800080;\">$imgFlag</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;fileInfo=<span style=\"color: #800080;\">$_FILES</span>[<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">fileName];\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测上传文件是否出错\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkError(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">is_null</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">fileInfo)){\r\n            </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'error\']&gt;0<span style=\"color: #000000;\">){\r\n                </span><span style=\"color: #0000ff;\">switch</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'error\'<span style=\"color: #000000;\">]){\r\n                    </span><span style=\"color: #0000ff;\">case</span> 1:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'超过了PHP配置文件中upload_max_filesize选项的值\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 2:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'超过了表单中MAX_FILE_SIZE设置的值\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 3:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'文件部分被上传\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 4:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'没有选择上传文件\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 6:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'没有找到临时目录\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 7:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'文件不可写\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 8:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'由于PHP的扩展程序中断文件上传\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                        \r\n                }\r\n                </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n            }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n                </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n            }\r\n        }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'文件上传出错\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测上传文件的大小\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkSize(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'size\']&gt;<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">maxSize){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'上传文件过大\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测扩展名\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkExt(){\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;ext=<span style=\"color: #008080;\">strtolower</span>(<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'name\'],<span style=\"color: #000000;\">PATHINFO_EXTENSION));\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$this</span>-&gt;ext,<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">allowExt)){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'不允许的扩展名\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测文件的类型\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkMime(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'type\'],<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">allowMime)){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'不允许的文件类型\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测是否是真实图片\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkTrueImg(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">imgFlag){\r\n            </span><span style=\"color: #0000ff;\">if</span>(!@<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n                </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'不是真实图片\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n            }\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n        }\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测是否通过HTTP POST方式上传上来的\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkHTTPPost(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'文件不是通过HTTP POST方式上传上来的\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     *显示错误 \r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> showError(){\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\'&lt;span style=\"color:red\"&gt;\'.<span style=\"color: #800080;\">$this</span>-&gt;error.\'&lt;/span&gt;\'<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测目录不存在则创建\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkUploadPath(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">uploadPath)){\r\n            </span><span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$this</span>-&gt;uploadPath,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n        }\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 产生唯一字符串\r\n     * @return string\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getUniName(){\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">));\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 上传文件\r\n     * @return string\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> uploadFile(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;checkError()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkSize()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkExt()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkMime()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkTrueImg()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">checkHTTPPost()){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">checkUploadPath();\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;uniName=<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">getUniName();\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;destination=<span style=\"color: #800080;\">$this</span>-&gt;uploadPath.\'/\'.<span style=\"color: #800080;\">$this</span>-&gt;uniName.\'.\'.<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">ext;\r\n            </span><span style=\"color: #0000ff;\">if</span>(@<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'tmp_name\'], <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">destination)){\r\n                </span><span style=\"color: #0000ff;\">return</span>  <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">destination;\r\n            }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n                </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'文件移动失败\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">showError();\r\n            }\r\n        }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">showError();\r\n        }\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p> </p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #0000ff;\">require_once</span> \'upload.class.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$upload</span>=<span style=\"color: #0000ff;\">new</span> upload(\'myFile1\',\'imooc\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$dest</span>=<span style=\"color: #800080;\">$upload</span>-&gt;<span style=\"color: #000000;\">uploadFile();\r\n</span><span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$dest</span>;</pre>\r\n</div>\r\n<p> </p>\r\n<p>四、下载</p>\r\n<p>对于浏览器不识别的，可以直接下载，但对于能识别的，需要多一两步</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html </span><span style=\"color: #ff0000;\">xmlns</span><span style=\"color: #0000ff;\">=\"http://www.w3.org/1999/xhtml\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span> <span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"1.rar\"</span><span style=\"color: #0000ff;\">&gt;</span>下载1.rar<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">br </span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"1.jpg\"</span><span style=\"color: #0000ff;\">&gt;</span>下载1.jpg<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">br </span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"doDownload.php?filename=1.jpg\"</span><span style=\"color: #0000ff;\">&gt;</span>通过程序下载1.jpg<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">br </span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"doDownload.php?filename=../upload/nv.jpg\"</span><span style=\"color: #0000ff;\">&gt;</span>下载nv.jpg<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">php\r\n\r\n</span><span style=\"color: #0000ff;\">?&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$_GET</span>[\'filename\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #008080;\">header</span>(\'content-disposition:attachment;filename=\'.<span style=\"color: #008080;\">basename</span>(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\">header</span>(\'content-length:\'.<span style=\"color: #008080;\">filesize</span>(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\">readfile</span>(<span style=\"color: #800080;\">$filename</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p>------------------总结-----------------------</p>\r\n<pre>&lt;form action=\"doAction.php\" method=\"post\" enctype=\"multipart/form-data\"&gt;</pre>\r\n<p> &lt;input type=\"file\" name=\"myFile\" /&gt;&lt;br/&gt;</p>\r\n<p> 二维数组的降维处理；</p>\r\n<p>$_FILES变量</p>\r\n<p>move_upload_file();copy();</p>\r\n<p>tmp_name临时文件；</p>\r\n<p>拓展名的提取；</p>\r\n<p>真实图片的验证；</p>\r\n<p>唯一文件名的生成；</p>\r\n<p>函数封装以及调用；</p>\r\n<p>利用单个文件函数实现多文件上传；</p>\r\n<p>小功能的封装；</p>\r\n<p>多文件的遍历；</p>\r\n<p>面向对象的开发过程；</p>\r\n<p>下载；</p>\r\n<p>----------------------------------------</p>\r\n<p>妈蛋啊。。。。。。。。。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3037', 'PHP&MySQL（二）——困也得啃书 ', '网络', '\n<p>madan，所有事情都敢赶在一起。。。以后每天中午去学车啊，好开心。。晚上好困，但是困也得啃书。。。。。。。。</p>\r\n<p>二、PHP脚本编程语言</p>\r\n<p>什么变量啊，数据类型啊，特别特别基本的不记录了，说点容易忽略的。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">define</span>(\"PI\", 3.1415926);  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">常量的定义</span>\r\n\r\n<span style=\"color: #0000ff;\">echo</span> \"圆周率=\".<span style=\"color: #008080;\">PI</span>.\"&lt;br/&gt;\";   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">.的链接作用，同样用于$var的赋值等</span>\r\n\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">PI</span>&lt;3&amp;&amp;<span style=\"color: #008080;\">PI</span>&gt;=2<span style=\"color: #000000;\">) {  \r\n    </span><span style=\"color: #800080;\">$var</span>=\"shit\"<span style=\"color: #000000;\">;\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">echo</span> \"f**k\".\"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n}\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 先判断PI&lt;3，如果不成立，就直接进入else——称为短路设计，加快程序速度；\r\n// 同理，为了实现程序的高效，把最容易出错的放前面，最复杂的计算放右边</span>\r\n\r\n<span style=\"color: #800080;\">$var</span>=\"asldkjflajdfklj\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$v2</span>=(<span style=\"color: #0000ff;\">boolean</span>)<span style=\"color: #800080;\">$var</span>;   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">强制类型转换</span>\r\n<span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$v2</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n\r\n</span><span style=\"color: #800080;\">$v_true</span>=<span style=\"color: #0000ff;\">true</span>;   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">boolean值也可以直接赋值</span>\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">is_bool</span>(<span style=\"color: #800080;\">$v2</span>)&amp;&amp;<span style=\"color: #800080;\">$v2</span>===<span style=\"color: #800080;\">$v_true</span>) {    <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">恒等===，可以判断数据类型是否相同；is_bool</span>\r\n    <span style=\"color: #0000ff;\">echo</span> \"Variables have the same value and type!\"<span style=\"color: #000000;\">;  \r\n    </span><span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n}\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">另外，非恒等仍然是!==</span>\r\n\r\n<span style=\"color: #800080;\">$lll</span>=\"dfa\"+333<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">echo</span> <span style=\"color: #008080;\">gettype</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">var_dump允许一次检查多个变量，同时提供信息；print_r多用来对数组和对象进行输出；</span>\r\n\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #0000ff;\">isset</span>(<span style=\"color: #800080;\">$lll</span>)&amp;&amp;!<span style=\"color: #0000ff;\">empty</span>(<span style=\"color: #800080;\">$v2</span>)) {  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断是否为空</span>\r\n    <span style=\"color: #0000ff;\">unset</span>(<span style=\"color: #800080;\">$lll</span><span style=\"color: #000000;\">);\r\n}\r\n</span><span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\";  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">会报错，但仍能输出null</span>\r\n\r\n<span style=\"color: #0000ff;\">function</span> doubleint(<span style=\"color: #800080;\">$var</span>){   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">自定义函数</span>\r\n    <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">is_int</span>(<span style=\"color: #800080;\">$var</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #800080;\">$var</span>=<span style=\"color: #800080;\">$var</span>*2<span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$var</span><span style=\"color: #000000;\">;\r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"Please enter a int data.\"<span style=\"color: #000000;\">;\r\n    }\r\n}\r\n\r\n</span><span style=\"color: #0000ff;\">echo</span> doubleint(<span style=\"color: #800080;\">$var</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">echo</span> doubleint(4);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">个人觉得，还是少用global和地址传递，逻辑上容易出错，程序没错，结果却不对\r\n\r\n// 关于include和require\r\n// 多用include吧\r\n// include失败了只是警告，后者则是错误然后中断程序\r\n// 同时推荐没事儿就写绝对路径，好读也不易出错</span></pre>\r\n</div>\r\n<p>要说的都在上面了，总结下就是：常量，连接符，自定义函数，类型转换，类型判断，文件引用，恒等符，短路设计，var_dump。</p>\r\n<p>比较乱。</p>\r\n<p>最后举个例子吧，自制乘法表</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Chapter 2\'s example which is a chengfabiao</span>\r\n<span style=\"color: #0000ff;\">function</span> chengfabiao(<span style=\"color: #800080;\">$var</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #0000ff;\">for</span> (<span style=\"color: #800080;\">$row</span>=1;<span style=\"color: #800080;\">$row</span>&lt;=<span style=\"color: #800080;\">$var</span>;<span style=\"color: #800080;\">$row</span>++<span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">for</span>(<span style=\"color: #800080;\">$queue</span>=1;<span style=\"color: #800080;\">$queue</span>&lt;=<span style=\"color: #800080;\">$var</span>;<span style=\"color: #800080;\">$queue</span>++<span style=\"color: #000000;\">){\r\n            </span><span style=\"color: #800080;\">$answer</span>=<span style=\"color: #800080;\">$row</span>*<span style=\"color: #800080;\">$queue</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">echo</span> \"<span style=\"color: #800080;\">$row</span>*<span style=\"color: #800080;\">$queue</span>=\".<span style=\"color: #800080;\">$answer</span>.\"  \"<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n    }        \r\n}\r\n</span><span style=\"color: #800080;\">$var</span>=9<span style=\"color: #000000;\">;\r\nchengfabiao(</span><span style=\"color: #800080;\">$var</span>);</pre>\r\n</div>\r\n<p><br>自己改着玩吧。基础的东西也得常常拿出来温习下，我是这么认为的。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3038', '一起来啃书——PHP看书 ', '网络', '\n<p>形式所迫，不得不开展android的学习，PHP这边也开始了啃书的日子。两部500+的书，45天够不，有点忙有点忙。。。</p>\r\n<p>早上的胃胀，简直是一记闷棍，长点儿记性吧。。。。。。。。</p>\r\n<p>1、PHP+MYSQL开发指南（一）</p>\r\n<p>一、数据库应用程序与web</p>\r\n<p>1、本书中</p>\r\n<p>PHP+PEAR函数库；</p>\r\n<p>2、三层体系结构</p>\r\n<p>底层/数据库层——》中间层/程序逻辑层——》用户层/浏览器；</p>\r\n<p>MySQL（一种数据库管理系统DBMS）——》PHP程序/web脚本程序——》强化浏览器能力（Javascript）</p>\r\n<p>根据流量等指标调整每一层的安排。</p>\r\n<p>3、PHP优点</p>\r\n<p>老生常谈，但还是得知道，为了就是最大限度的发挥其特性。</p>\r\n<p>灵活——与HTML的集合；</p>\r\n<p>多功能实现；</p>\r\n<p>函数库/源码丰富；</p>\r\n<p>多平台的可移植。</p>\r\n<p>-----------------------------------------</p>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3039', 'I am back-电商网站开发&jQuery ', '网络', '\n<p>　　hi</p>\r\n<p>之前有将近两周的时间没有更新，除了懒就是其他的事情耽误了。现在好了，回家了，虽然家里停水，外面又有积雪，天寒地冻的，但诸多不便，都比不过有点闲的好。</p>\r\n<p>开搞每个学PHP的必经之路——电商网站的开发。</p>\r\n<p><strong>1、电商网站开发——前端</strong></p>\r\n<p><strong>一、首页制作</strong></p>\r\n<p><strong>1.1 概况&amp;准备</strong></p>\r\n<p>整个电商网站包括什么呢，就是首页信息，后面的分类信息页，商品详情页，购物页面，售后页面等等，所以就一步步做。自己做的时候可以简单的画个概况图来指导开发，免得逻辑搞混。</p>\r\n<p>准备：项目文件夹，其中要有images（图片素材），js（javascript），style（css）三个子文件夹中。工具的话，看个人爱好，不过涉及的是前端，一般上习惯用DS的多，我比较懒，直接用zend+浏览器算求。</p>\r\n<p>其中准备中有一部是实现reset.css，也就是清零/清除css效果。css我基本算是个白痴，找个源码贴出来，侵删：</p>\r\n<p>@charset \"utf-8\";<br>/* CSS Document */<br>body,ul,ol,li,p,h1,h2,h3,h4,h5,h6,form,fieldset,table,td,img,div,dl,dt,dd,input{margin:0;padding:0;}<br>body{font-size:12px;}<br>img{border:none;}<br>li{list-style:none;}<br>input,select,textarea{outline:none;border:none; background:none;}<br>textarea{resize:none;}<br>a{text-decoration:none; color:#656565;}</p>\r\n<p>/*清浮动*/<br>.clearfix:after{content:\"\";display:block;clear:both;}<br>.clearfix{zoom:1;}<br>.fl{float:left;}<br>.fr{float:right;}</p>\r\n<p>1.2 顶部结构</p>\r\n<p> 用fireworks做，我还不会，先去学习下。</p>\r\n<p>--------真是蛋疼，做个开头就发现自己naive，先完成web进阶的jQuery吧----------</p>\r\n<p><strong>2、jQuery</strong></p>\r\n<p><strong>十二、jQuery在线聊天室</strong></p>\r\n<p><strong>12.1 基本功能介绍</strong></p>\r\n<p>登陆后才能进入（用于基本信息的在线显示）；</p>\r\n<p>动态显示交流后的内容；</p>\r\n<p>文字和表情的沟通实现（表情也是字符代号编码）</p>\r\n<p><strong>技术重点</strong>：<strong>ajax</strong>的无刷新技术展示数据</p>\r\n<p><strong>12.2 实现效果</strong></p>\r\n<p>利用jq中的ajax函数（比如$.ajax等）实现登陆，登陆时，显示登陆中，正确或失败，有相应的动作；</p>\r\n<p>聊天室就是聊天内容区域，输入区域，人员显示区域。</p>\r\n<p><strong>12.3 流程</strong></p>\r\n<p>登录页面——》向服务器请求登录信息（用户名和密码信息）——》成功：跳转到聊天主页；否则，跳回登录页面。</p>\r\n<p>聊天页面——》请求聊天数据——》获取聊天数据；</p>\r\n<p>在线人员信息——》请求——》获取；</p>\r\n<p>所以，可以简单作图，这里我掠过了，然后清楚的看到需要做的页面数量，请求和响应的逻辑和对应关系。</p>\r\n<p><strong>12.4 登录页面开发login</strong></p>\r\n<p>--功能</p>\r\n<p>验证登录信息；</p>\r\n<p>进入聊天室；</p>\r\n<p>--代码</p>\r\n<p>以前在PDO中讲过的一种，直接用POST方法传递表格参数的方法：</p>\r\n<p>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html;chraset=UTF-8\"&gt;<br>&lt;title&gt;登录&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;form action=\'login.php\' method=\'post\'&gt;<br>用户名：&lt;input type=\'text\' name=\'username\'/&gt;&lt;br/&gt;<br>密     码：&lt;input type=\'password\' name=\'password\'/&gt;&lt;br/&gt;<br>&lt;input type=\'submit\' value=\'登录\'/&gt;<br>&lt;/form&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>然后后续工作在login.php中实现就好了；</p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>$username=$_POST[\'username\'];<br>$password=$_POST[\'password\'];<br>try {<br>	$pdo=new PDO(\'mysql:host=localhost;dbname=imooc\',\'root\',\'\');<br>	$pdo-&gt;exec(\'use imooc_pdo\');<br>	$sql=\"select * from user where username=? and password=?\";<br>	$stmt=$pdo-&gt;prepare($sql);<br>	$stmt-&gt;execute(array($username,$password));<br>	//$stmt=$pdo-&gt;query($sql);<br><br>	$shit=$stmt-&gt;rowCount();//显示结果集statement对象中的行数<br>	echo $shit;<br>	if($shit == 1){<br>		//$url=\"ChatMain.html\";<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"alert(\\\"登录成功\\\")\";<br>		echo \"&lt;/script&gt;\";<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"document.location=\\\"ChatMain.html\\\"\";<br>		echo \"&lt;/script&gt;\";<br>	}else{	<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"alert(\\\"用户名或密码错误\\\")\";<br>		echo \"&lt;/script&gt;\";<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"document.location=\\\"login2.html\\\"\";<br>		echo \"&lt;/script&gt;\";<br>	}</p>\r\n<p>} catch (PDOException $e) {<br>	echo $e-&gt;getMessage();<br>}</p>\r\n<p>----------------------------------------------</p>\r\n<p>我们在这里想要的是jQuery实现方法：换一种实现，同时把登录做的稍微好看一点点哈（我觉得好看，一个在于对应的css文件的编写，另一个在html中实现，DS工具实现要方便一点，有时间也得整着学一下）；</p>\r\n<p>&lt;!DOCTYPE html&gt;<br>&lt;HTML&gt;<br>&lt;head&gt;<br>&lt;TITLE&gt;登录&lt;/TITLE&gt;<br>  &lt;SCRIPT type=\"text/javascript\" src=\"jq/jquery-1.8.2.min.js\"&gt;&lt;/SCRIPT&gt;<br>  &lt;SCRIPT type=\"text/javascript\" src=\"js/jsLogin.js\"&gt;&lt;/SCRIPT&gt;<br>  &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"style/cssLogin.css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>  &lt;div id=\"divLogin\"&gt;<br>    &lt;h3&gt;用户登录&lt;/h3&gt;<br>      &lt;div class=\"content\"&gt;<br>        &lt;div&gt;用户：&lt;input id=\"txtName\" type=\"text\" class=\"txt\" /&gt;&lt;/div&gt;<br>        &lt;div&gt;密码：&lt;input id=\"txtPass\" type=\"text\" class=\"txt\" /&gt;&lt;/div&gt;<br>        &lt;div class=\"btnCenter\"&gt;<br>          &lt;input id=\"Button1\" type=\"button\" value=\"登录\" class=\"btn\" /&gt;<br>          &amp;nbsp;&amp;nbsp;<br>          &lt;input id=\"Button2\" type=\"button\" value=\"取消\" class=\"btn\" /&gt;<br>        &lt;/div&gt;<br>        &lt;span id=\"divMsg\" class=\"clsTip\"&gt;&lt;/span&gt;<br>      &lt;/div&gt;<br>  &lt;/div&gt;<br>&lt;/body&gt;<br>&lt;/HTML&gt;</p>\r\n<p>其中，js是javascript逻辑控制文件；jq是jquery实现文件；css是css文件；后面的span标签，是为了实现某些功能暂时留下的。</p>\r\n<p>$(function(){<br>	//元素绑定全局ajaxStart事件<br>	//这里就是用到span的标签，给出过程<br>	$(\"#divMsg\").ajaxStart(function(){<br>		$(this).show().html(\"正在发送登录请求...\");<br>	})<br>	$(\"#divMsg\").ajaxStop(function(){<br>		$(this).html(\"请求处理已完成！\").hide();<br>	})<br>	$(\"#Button1\").click(function(){<br>		var $name=$(\"#txtName\");<br>		var $pass=$(\"#txtPass\");<br>		if($name.val() !== \"\" &amp;&amp; $pass.val()!==\"\"){<br>			UserLogin($name.val(),$pass.val());<br>		}else{<br>			if($name.val()==\"\"){<br>				alert(\"用户名不能为空！\");<br>				$name.focus();<br>				return false;  // 阻止进一步的动作，很重要的一步<br>			}else{<br>				alert(\"密码不能为空！\");<br>				$pass.focus();<br>				return false;<br>			}<br>		}<br>	})<br>});</p>\r\n<p>function UserLogin(name,pass){<br>	$.ajax({<br>		type: \"GET\",  //提交方式<br>		url: \"index.php\",   //提交对象<br>		data:\"action=Login&amp;d=\"+new Date()+\"&amp;name=\"+name+\"&amp;pass=\"+pass, //提交数据<br>		success:function(data){<br>			if(data==\"1\"){<br>			window.location=\"ChatMain.html\";<br>		}else{<br>			alert(\"用户名或密码错误！\");<br>			return false;<br>		}<br>	}<br>	});<br>} </p>\r\n<p>其实这里面还是有错误的，实现起来感觉没有第一种实现方法简单明了，希望了解的兄弟们指点下，两种方法的优缺点。</p>\r\n<p>我还是稍微完善了下第一种PDO方法，直接在html中post表格数据，与数据库进行比对，然后返回信息。</p>\r\n<p> 当然呢，第二种，也就是本来应该采用的这种方式，很明显的优点在于其模块化实现，对于开发人员来说也是清晰明了。但，私以为，小型任务中，如果没有统一规划好的名称啊，什么的，这样子模块化是不是显得冗余，毕竟还需要看模块是否匹配啊什么的，不知道理解的对不对。</p>\r\n<p><strong>12.5 聊天室页面ChatMain</strong></p>\r\n<p>从页面本身来说，就是head包含jq文件，js文件，css文件；body实现当前页面的效果，也有接口功能的实现；</p>\r\n<p>从布局来说，就是聊天窗口的样子，三个框框搞定（可是尼玛老子不会用css啊！！！！）；</p>\r\n<p> -----晚上不一定还会写，先发了吧-----</p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3040', '这回真的是挤时间了-PHP基础（三） ', '网络', '\n<p>　　hi</p>\r\n<p>刚看了唐人街探案，5星好评啊亲。由于是早就约好的，也不好推辞（虽然是和男的..），但该写的还是得挤时间写。明天早上老师的项目结题，虽然和我关系不大，但不要添乱就好！！</p>\r\n<p><strong>1、PHP </strong></p>\r\n<p><strong>一、PHP基础（三）</strong><br><strong>1.3.2 Int</strong></p>\r\n<p>整型。</p>\r\n<p>几个点：<strong>进制问题</strong>（2，8，16）；</p>\r\n<p>溢出——溢出后自动转为float型；</p>\r\n<p>整除；</p>\r\n<p>float转为int——向下取整；</p>\r\n<p>例子给出</p>\r\n<p><strong>$shi=123;</strong><br><strong>$bin=0b100001;</strong><br><strong>$ba=0123;</strong><br><strong>$shiliu=0x1234555;</strong></p>\r\n<p>function show($a){<br>	echo \"Truth is:\";<br>	var_dump($a);<br>	echo \"&lt;br/&gt;\";<br>}</p>\r\n<p>show($shiliu);<br>show($ba);<br>show($bin);</p>\r\n<p><strong>$qiguaideba=01237823;  //八进制的“溢出”,会截断，只输出01237</strong></p>\r\n<p>show($qiguaideba);</p>\r\n<p>function zhengchu($a,$b){<br>	$c=$a/$b;<br>	if(is_float($c)){<br><strong>var_dump(round($c));   //用round控制输出结果</strong><br>	}else{<br>		var_dump($c);<br>	}<br>}</p>\r\n<p>zhengchu($shiliu , $ba);</p>\r\n<p><strong>1.3.3 float</strong></p>\r\n<p>php版本不同，浮点型的精确度似乎是有变化的；而且坑爹的是，<strong>由于PHP内部机制的问题，也许会出现：</strong></p>\r\n<p><strong>var_dump(floor((0.1+0.7)*10));</strong></p>\r\n<p><strong>返回的往往是7而不是期望中的8....</strong></p>\r\n<p>使用高精度的话，<strong>用gmp函数</strong>，请自行去了解...</p>\r\n<p>然后真想比较的话，不妨<strong>设置一个最小值</strong>来比较：</p>\r\n<p>$bijiao1=0.232342342;<br>$bijiao2=0.232342323;<br><strong>$esp=0.000001;</strong><br>if(abs($bijiao1-$bijiao2)&lt;=$esp){<br>	echo \"True\".\"&lt;br/&gt;\";<br>}else{<br>	echo \"F**k\".\"&lt;br/&gt;\";<br>}</p>\r\n<p><strong>1.3.4 字符串</strong></p>\r\n<p>单双引号括起来的就是了~</p>\r\n<p>然后只想说一点的就是heredoc：</p>\r\n<p><strong>$str= &lt;&lt;&lt; EOF</strong><br>alsidjflja<br>akjsdhflkj<br>dfjlkj.<br><strong>EOF;</strong></p>\r\n<p>echo $str;</p>\r\n<p>基本就是这么个样子，但是注意，<strong>最后一行那个EOF;是必须要和分号紧紧相依的，而且分号后面必须是换行，EOF前面不能出现包括空格的一切东西；</strong></p>\r\n<p>然后heredoc还可以用在传递参数，初始化静态值等等；</p>\r\n<p>当然，heredoc中也可以调用参数啊属性的什么的——把EOF看成是大大的双引号就好了。</p>\r\n<p>其他的字符串相关，比如我经常用到的.做连接符什么的，比较基础，但是好用，去看一下视频就很明了。</p>\r\n<p>nowdoc也是一种比较新的方式，不太熟悉，然后似乎相当于单引号。</p>\r\n<p><strong>1.4 变量</strong></p>\r\n<p>变量好用，变量灵活，变量难用——一般就是渐渐的这么认为的。</p>\r\n<p>第一，PHP中不强调赋初值，不需要声明，但是<strong>推荐还是赋初值，养成好习惯</strong>；不赋初值，变量值为其类型的默认值；</p>\r\n<p>第二，引用赋值要知道，$b=&amp;$a;  只能对变量名进行操作；</p>\r\n<p>第三，赋值一次更新一次：</p>\r\n<p>$shit=\"asdf\";<br>$s=123;</p>\r\n<p>echo $shit;</p>\r\n<p>$shit=$s;<br>echo $shit;</p>\r\n<p><strong>2、GD库实现图片水印与缩略图</strong></p>\r\n<p><strong>一、简介</strong></p>\r\n<p>使用PHP中自带的GD库制作图片的水印。</p>\r\n<p>适合大批量的图片的简单处理。</p>\r\n<p>学习基本的方法，然后封装为一个工具类。 </p>\r\n<p> </p>\r\n<p>这周末除了看星球大战，就来补过补过，知道错了。。。。。</p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3041', '好好写，好好干-PHP基础（二） ', '网络', '\n<p>　　hi</p>\r\n<p>好久没写，昨儿一写，感觉还是有人看的，至少是有一两个评论的~~好好干！</p>\r\n<p>每天需要坚持的就那么4件事儿：写这个，学一点法语，看会儿书，锻炼。单身狗也有好处。</p>\r\n<p><strong>1、PHP</strong></p>\r\n<p><strong>一、PHP基础（二）</strong></p>\r\n<p><strong>1.3 数据类型</strong></p>\r\n<p><strong>8种——4种标量：布尔boolean，整型integer，浮点float/双精度double，字符串string；2种复合：数组array，对象object；2种特殊：资源resource，NULL无；</strong></p>\r\n<p>推荐记住英文，在学习的过程中，变量通常都是这么来命名的。</p>\r\n<p><strong>php是弱类型语言</strong>，也就是说，不需要提前声明变量的类型。</p>\r\n<p>查看变量的类型：gettype()；</p>\r\n<p>判断类型：is_*()，其中*为各种数据类型的简写。</p>\r\n<p><strong>1.3.1 Boolean</strong></p>\r\n<p>true或false，不区分大小写，习惯上（我）写全小写。</p>\r\n<p><strong>一般不需要强制转换为布尔值，系统自动判断；（见下例）</strong></p>\r\n<p><strong>这些都被认为为false：false；0；0.0；空字符串以及字符串\"0\"；空数组；NULL；从空标记生成的SimpleXML对象（我也不是很理解还，主要是还没有涉及XML）；</strong></p>\r\n<p>相对应的是其他都认为为true——<strong>注意，-1，也是true；</strong></p>\r\n<p>&lt;?php</p>\r\n<p>$boola=true;<br>$boolb=false;<br>$boolc=null;<br>$boold=-1;<br>$boole=\"sdkljf\";</p>\r\n<p>echo gettype($boola).\"&lt;hr/&gt;\";</p>\r\n<p>function isbool($bool){<br>	if(<strong>is_bool($bool)</strong>){<br>		echo \"You are damn right.It is boolean.\".\"&lt;br/&gt;\";<br>	}else{<br>		echo \"Sorry, it is not this type.Please try again.\".\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>isbool($boola);<br>isbool($boolc);<br>isbool($boold);<br>isbool($boole);</p>\r\n<p>function booluse($bool){<br><strong>if($bool)</strong>{<br>		echo \"It is equal to TRUE.\".\"&lt;br/&gt;\";<br>	}else{<br>		echo \"It is equal to FALSE.\".\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>booluse($boola);<br>booluse($boolc);<br>booluse($boold);</p>\r\n<p> 在上述例子中注意，如果直接判断是否为boolean，一般的数据类型是不会强制转换的，只有当用在if等判断中时，才会自动的、强制的转换为boolean使用。 </p>\r\n<p>1.3.2 Int</p>\r\n<p>整型。</p>\r\n<p> </p>\r\n<p> 我错了。。。写一半被老板召唤加班，明天保证完成该系列第一部分（说明晚要看唐人街的嘛。。）。</p>\r\n<p>晚安，看书去了</p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3042', '自罚一杯-PHP基础（一） ', '网络', '\n<p>　　hi</p>\r\n<p>懒癌是最可怕的癌了吧，在即将迎来本命年时，给自己定下每天必干的几件成习惯的事情，望不再鸽！！</p>\r\n<p>php是我一直在学习的东西，但总以为php简单，难点在需要掌握大量的相关知识，其实并不完全对，php也是有算法好吧，php也值得认真对待，既然决定学了，拿点样子出来啊，是男人吧。</p>\r\n<p><strong>1、PHP</strong></p>\r\n<p><strong>一、PHP基础（一）</strong></p>\r\n<p><strong>1.1 简介</strong></p>\r\n<p>PHP=Hypertext Preprocessor=超文本预处理语言；</p>\r\n<p><strong>脚本语言；</strong></p>\r\n<p><strong>执行效率高（就是速度快）；</strong></p>\r\n<p>可大可小，大网站往往不只使用它一种语言，比如淘宝，前p后j好像是；</p>\r\n<p>俗语：电子商务三大宝——上线，支付宝，php；</p>\r\n<p>版本问题：目前最新为PHP 7.0.0；我一般还在用PHP5。</p>\r\n<p>环境问题：windows各种集成环境，wamp，xampp，或者自行百度自助搭建；linux我前面的博文中有说，其实就几行命令的问题，当然系统版本不同，可能命令有所不同，大同小异，举一反三~</p>\r\n<p><strong>1.2 基础语法</strong></p>\r\n<p><strong>--PHP标记</strong></p>\r\n<p>&lt;?php和?&gt;；</p>\r\n<p>天生为html而生，嵌套其中；</p>\r\n<p><strong>一般在编译器中，不要写?&gt;，因为容易在结束标记前有不希望输出的空格等内容；直接删掉就行了，会自动结束的；</strong></p>\r\n<p>--从HTML中分离</p>\r\n<p><strong>&lt;?php if ($expression==true): ?&gt;</strong><br><strong> aaaaaaaaa</strong><br><strong> &lt;?php else: ?&gt;</strong><br><strong> bbbbbb</strong><br><strong> &lt;?php endif;?&gt;</strong></p>\r\n<p>一般情况下，php标记能很好的从HTML中分离，但上述例子情况例外——<strong>使用条件的高级分离方法</strong>；</p>\r\n<p>当解释器遇到未完成的条件语句时，会跳过标记寻找相应的东西（比如else）；</p>\r\n<p><strong>适用于输出大段文本，比echo等更有效率。</strong></p>\r\n<p>另外，开始结束的标记也可以用其他的，但推荐&lt;?php；</p>\r\n<p><span style=\"line-height: 1.5;\">--其他</span></p>\r\n<p><span style=\"line-height: 1.5;\">注释：//单行，/*多行；</span></p>\r\n<p><span style=\"line-height: 1.5;\">指令分隔符：分号</span></p>\r\n<p> </p>\r\n<p>把憋了一个月的电影去看了，时间挤啊挤，才有a杯那么一点，明天继续！</p>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3043', '睡觉问题早晚成为我顶头疼的问题。。。-PHP ', '网络', '\n<p>　　hi</p>\r\n<p>昨晚又作自己，睡不好整个人都不好。。。</p>\r\n<p><strong>1、PHP实现页面静态化</strong></p>\r\n<p><strong>二、纯静态化</strong></p>\r\n<p><strong>2.2 实现页面纯静态化的原理</strong></p>\r\n<p><strong>--基本方式</strong></p>\r\n<p>file_put_contents()函数；</p>\r\n<p>使用php内置缓存机制，output_buffering.</p>\r\n<p>具体信息可以去php手册中查找。重点看函数格式，参数，返回值。</p>\r\n<p><strong>--栗子file_put_contents()</strong></p>\r\n<p>&lt;?php<br>/*<br> * 写入函数<br> */</p>\r\n<p><strong>file_put_contents(\'index.shtml\',\'asdklfj\');</strong></p>\r\n<p>运行http://localhost/phpJingtaihua/index.shtml，得到结果。很简单的一个函数。</p>\r\n<p><strong>--栗子output_buffering</strong></p>\r\n<p>有内置函数，<strong>ob（output_buffering)系列的。</strong></p>\r\n<p>主要涉及四个</p>\r\n<p>ob_start,打开输出控制缓冲；</p>\r\n<p>ob_get_contents,返回输出缓冲区内容；</p>\r\n<p>ob_clean,清空输出缓冲区；</p>\r\n<p>ob_get_clean，得到缓冲区内容并删除当前输出缓冲区。</p>\r\n<p><strong>ob_start(); //打开缓冲区</strong><br>echo 1234;<br><strong>echo ob_get_contents();</strong></p>\r\n<p>得到12341234的序列。也就是说，所有输出都要经过缓冲区——就像是水龙头上装了个滤嘴。</p>\r\n<p>ob_start(); //打开缓冲区<br>echo 111;echo \"&lt;br/&gt;\";<br>echo ob_get_contents();echo \"&lt;br/&gt;\";<br><strong>ob_clean();</strong><br>echo ob_get_contents();echo \"&lt;br/&gt;\";</p>\r\n<p>echo 222;echo \"&lt;br/&gt;\";</p>\r\n<p>echo ob_get_clean();echo \"&lt;br/&gt;\";</p>\r\n<p>这里呢，111因为缓冲区的清除，而不会再输出，即使是原始的echo语句也不行。</p>\r\n<p><strong>2.3 纯静态化案例实现简介</strong></p>\r\n<p>终极目的就是生成静态文件。</p>\r\n<p>其一，写入数据到静态文件。</p>\r\n<p>其二，利用ob机制，获取（可以写入到静态文件的）数据。</p>\r\n<p><strong>2.4 案例实现步骤</strong></p>\r\n<p>链接数据库，从数据库中获取数据——》把获取到的数据填充到模板文件中去——》把动态页面转化为静态页面，生成纯静态文件。</p>\r\n<p> </p>\r\n<p>-----------------</p>\r\n<p>先这样，晚上有时间再写。。。。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3044', '其实今天没有欲望..-MySQLi ', '网络', '\n<p>　　hi</p>\r\n<p>中午爽爽的游了会儿泳，但是下午把一拳超人看完了，竟然萌生不出学习的欲望了。。。强迫自己更新点东西吧，一会儿看书去。</p>\r\n<p><strong>1、MySQLi</strong></p>\r\n<p><strong>二、MySQLi基于OOP的编程</strong></p>\r\n<p><strong>2.1 使用解析</strong></p>\r\n<p>--基本</p>\r\n<p><strong>MySQLi是一个拓展类库，本质上是个类</strong>（？）。</p>\r\n<p>一般流程和MySQL一样：<strong>连接，选库，字符集设定，SQL语句执行，关闭连接</strong>。</p>\r\n<p><strong>--链接库例子</strong></p>\r\n<p>&lt;?php<br>/*<br> * <strong>连接和选库</strong><br> */<br><strong>$mysqli=new mysqli(\'localhost\', \'root\', \'\');</strong><br>print_r($mysqli);echo \"&lt;br/&gt;\";</p>\r\n<p>echo <strong>$mysqli-&gt;select_db</strong>(\'test\');echo \"&lt;br/&gt;\";</p>\r\n<p><strong>$mysqli2=new mysqli();</strong><br>print_r(<strong>$mysqli2-&gt;connect</strong>(\'localhost\', \'root\', \'\'));echo \"&lt;br/&gt;\";</p>\r\n<p>print_r(<strong>$mysqli3=new mysqli(\'localhost\', \'root\', \'\',\'test\')</strong>);echo \"&lt;br/&gt;\";</p>\r\n<p>三种不同的方法，这里的方法都是利用mysqli的类属性来做的；当然也可以利用mysqli的命令来链接；</p>\r\n<p>$con=mysqli_connect(HOST,USERNAME,PASSWORD)</p>\r\n<p>结果中有一些信息</p>\r\n<table><tbody>\n<tr>\n<td class=\"webkit-line-content\">mysqli Object</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">(</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[affected_rows] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[client_info] =&gt; mysqlnd 5.0.11-dev - 20120503 - $Id: bf9ad53b11c9a57efdb1057292d73b928b8c5c77 $</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[client_version] =&gt; 50011</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[connect_errno] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[connect_error] =&gt;</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[errno] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[error] =&gt;</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[error_list] =&gt; Array</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">(</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">)</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\"> </td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[field_count] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[host_info] =&gt; localhost via TCP/IP</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[info] =&gt;</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[insert_id] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[server_info] =&gt; 5.6.17</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[server_version] =&gt; 50617</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[stat] =&gt; Uptime: 968 Threads: 1 Questions: 24 Slow queries: 0 Opens: 70 Flush tables: 1 Open tables: 63 Queries per second avg: 0.024</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[sqlstate] =&gt; 00000</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[protocol_version] =&gt; 10</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[thread_id] =&gt; 11</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[warning_count] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">)</td>\r\n\r\n</tr>\n</tbody></table>\n<p>这些属性都是可以通过对象的属性来得到的，比如</p>\r\n<p>echo $mysqli-&gt;client_info;echo \"&lt;br/&gt;\";</p>\r\n<p>或者是通过相对应的方法得到，这些东西查手册可以看到。</p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>//1.建立到MySQL数据的连接<br>// $mysqli=new mysqli(\'localhost\',\'root\',\'root\');<br>// //print_r($mysqli);<br>// //2.打开指定的数据库<br>// $mysqli-&gt;select_db(\'test\');<br>// $mysqli=new mysqli();<br>// $mysqli-&gt;connect(\'127.0.0.1\',\'root\',\'root\');<br>// print_r($mysqli);</p>\r\n<p>//建立连接的同时打开指定数据库<br>$mysqli=@new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>//print_r($mysqli);<br>//$mysqli-&gt;connect_errno:得到连接产生的错误编号<br>//$mysqli-&gt;connect_error:得到连接产生的错误信息<br>if($mysqli-&gt;connect_errno){<br>	die(\'Connect Error:\'.$mysqli-&gt;connect_error);<br>}<br>print_r($mysqli);<br>echo \'&lt;hr color=\"red\"/&gt;\';<br>echo \'客户端的信息：\'.$mysqli-&gt;client_info.\'&lt;br/&gt;\';<br>echo $mysqli-&gt;get_client_info().\'&lt;br/&gt;\';<br>echo \'客户端的版本：\'.$mysqli-&gt;client_version.\'&lt;br/&gt;\';<br>echo \'&lt;hr/&gt;\';<br>echo \'服务器端信息：\'.$mysqli-&gt;server_info.\'&lt;br/&gt;\';<br>echo $mysqli-&gt;get_server_info();<br>echo \'&lt;hr/&gt;\';<br>echo \'服务器版本：\'.$mysqli-&gt;server_version.\'&lt;br/&gt;\';</p>\r\n<p>echo \'&lt;hr/&gt;\';</p>\r\n<p><strong>--字符集例子</strong></p>\r\n<p>&lt;?php<br>//1.建立到MySQL的连接<br>$mysqli=@new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'Connect Error:\'.$mysqli-&gt;connect_error);<br>}<br>//2.设置默认的客户端编码方式utf8<br><strong>$mysqli-&gt;set_charset(\'utf8\');</strong></p>\r\n<p>//3.执行SQL查询<br>$sql=&lt;&lt;&lt;EOF<br>	CREATE TABLE IF NOT EXISTS mysqli(<br>		id TINYINT UNSIGNED AUTO_INCREMENT KEY,<br>		username VARCHAR(20) NOT NULL<br>	);<br>EOF;<br>$res=$mysqli-&gt;query($sql);<br>var_dump($res);</p>\r\n<p>/*<br> SELECT/DESC/DESCRIBE/SHOW/EXPLAIN执行成功返回mysqli_result对象，执行失败返回false<br> 对于其它SQL语句的执行，执行成功返回true，否则返回false<br> */<br>//关闭连接<br>$mysqli-&gt;close();</p>\r\n<p>需要注意的是数据库中的是utf8，而不是utf-8；</p>\r\n<p><strong>2.2 插入记录操作</strong></p>\r\n<p>增。</p>\r\n<p><strong>--connect.php</strong></p>\r\n<p>因为连接数据库的一系列操作是常用的，对于这种，我们简便的方法就是<strong>封装起来，到处调用</strong></p>\r\n<p>require_once \'connect.php\';</p>\r\n<p>connect.php</p>\r\n<p>&lt;?php<br>/*<br> * <strong>连接和选库（头）文件</strong><br> */<br>$mysqli=new mysqli(\'localhost\', \'root\', \'\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'Connect Error:\'.$mysqli-&gt;connect_error);<br>}else{<br>	echo \'客户端的信息：\'.$mysqli-&gt;client_info.\'&lt;br/&gt;\';<br>}<br>$mysqli-&gt;set_charset(\'utf8\');</p>\r\n<p><strong>--增</strong></p>\r\n<p>&lt;?php<br>/*<br> * 数据库插入数据<br> */</p>\r\n<p><strong>require_once \'connect.php\';</strong></p>\r\n<p>$sql=\"insert mysqli(username) value(\'Tom\')\";<br><strong>echo $mysqli-&gt;query($sql);</strong></p>\r\n<p>这里执行的是单条的sql语句。</p>\r\n<p>或者完善一点，添加一个判断，并输出错误信息。</p>\r\n<p>if($res){<br>	echo $mysqli-&gt;insert_id; <br>}else{<br>	echo \'ERROR \'.$mysqli-&gt;error;<br>}</p>\r\n<p>或者，插入多条记录</p>\r\n<p>$sql=\"insert mysqli(username) value(\'Sdaf\'),(\'Andy\')\";</p>\r\n<p><strong>2.3 更新记录</strong></p>\r\n<p>更新。</p>\r\n<p>$sql=\"update test set id=id+10\";<br>$mysqli-&gt;query($sql);</p>\r\n<p><strong>2.4 删除</strong></p>\r\n<p>删</p>\r\n<p>$sql=\"delete from mysqli where id&gt;=2\";</p>\r\n<p>--</p>\r\n<p><strong>特别说明，affected_rows返回的情况有三种：</strong></p>\r\n<p><strong>-1  sql语句有问题；</strong></p>\r\n<p>0 没有受影响的语句；</p>\r\n<p>&gt;=0 受影响的条数。</p>\r\n<p><strong>--小结</strong></p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>$mysqli=new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'CONNECT ERROR:\'.$mysqli-&gt;connect_error);<br>}<br>$mysqli-&gt;set_charset(\'utf8\');</p>\r\n<p>//执行SQL查询<br>//添加记录<br>//执行单条SQL语句,只能执行一条SQL语句<br>// $sql=\"INSERT user(username,password) VALUES(\'king\',\'king\');\";<br>// $sql.=\"DROP TABLE user;\";<br>$sql=\"INSERT user(username,password) VALUES(\'queen1\',\'queen1\'),(\'queen2\',\'queen2\'),(\'queen3\',\'queen3\'),(\'queen4\',\'queen4\')\";<br>$res=$mysqli-&gt;query($sql);<br>if($res){<br>	//得到上一插入操作产生的AUTO_INCREMENT的值<br>	echo \'恭喜您注册成功，您是网站第\'.$mysqli-&gt;insert_id.\'位用户&lt;br/&gt;\';<br>	//得到上一步操作产生的受影响记录条数<br>	echo \'有\'.$mysqli-&gt;affected_rows.\'记录被影响\';<br>}else{<br>	//得到上一步操作产生的错误号和错误信息<br>	echo \'ERROR \'.$mysqli-&gt;errno.\':\'.$mysqli-&gt;error;<br>}<br>echo \'&lt;hr/&gt;\';</p>\r\n<p>//将表中年龄+10<br>$sql=\"UPDATE user SET age=age+10\";<br>$res=$mysqli-&gt;query($sql);<br>if($res){<br>	echo $mysqli-&gt;affected_rows.\'条记录被更新\';<br>}else{<br>	echo \"ERROR \".$mysqli-&gt;errno.\':\'.$mysqli-&gt;error;<br>}<br>echo \'&lt;hr/&gt;\';</p>\r\n<p>//将表中id&lt;=6的用户删除掉<br>$sql=\"DELETE FROM user WHERE id&lt;=6\";<br>$res=$mysqli-&gt;query($sql);<br>if($res){<br>	echo $mysqli-&gt;affected_rows.\'条记录被删除\';<br>}else{<br>	echo \"ERROR \".$mysqli-&gt;errno.\':\'.$mysqli-&gt;error;<br>}<br>//关闭到MySQL的连接<br>$mysqli-&gt;close();</p>\r\n<p><strong>2.5 查</strong></p>\r\n<p>需要注意的是，用的是select，所以返回的是结果集，是可以打印出来的print_r或var_dump。</p>\r\n<p>所以这里就要说一下，返回的结果集的选择了。</p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>$mysqli=new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'CONNECT ERROR:\'.$mysqli-&gt;connect_error);<br>}<br>$mysqli-&gt;set_charset(\'utf8\');<br>$sql=\"SELECT id,username,age FROM user\";<br><strong>$mysqli_result=$mysqli-&gt;query($sql);</strong><br>//var_dump($mysqli_result);<br>if($mysqli_result &amp;&amp; $mysqli_result-&gt;num_rows&gt;0){<br>	//echo $mysqli_result-&gt;num_rows;<br><strong>//$rows=$mysqli_result-&gt;fetch_all();//获取结果集中所有记录，默认返回的是二维的</strong><br>	//索引+索引的形式<br>	//$rows=$mysqli_result-&gt;fetch_all(MYSQLI_NUM);<br>	//$rows=$mysqli_result-&gt;fetch_all(MYSQLI_ASSOC);<br>	//$rows=$mysqli_result-&gt;fetch_all(MYSQLI_BOTH);<br><strong>// 	$row=$mysqli_result-&gt;fetch_row();//取得结果集中一条记录作为索引数组返回</strong><br>// 	print_r($row);<br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_assoc();//取得结果集中的一条记录作为关联数组返回</strong><br>// 	print_r($row);<br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_array();//二者都有的</strong><br>// 	print_r($row);<br><br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_array(MYSQLI_ASSOC);</strong><br>// 	print_r($row);<br><br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_object();</strong><br>// 	print_r($row);<br>// 	echo \'&lt;hr/&gt;\';<br>// 	//移动结果集内部指针<br>// 	$mysqli_result-&gt;data_seek(0);<br>// 	$row=$mysqli_result-&gt;fetch_assoc();<br>// 	print_r($row);<br><br>// 	print_r($rows);</p>\r\n<p>	while($row=$mysqli_result-&gt;fetch_assoc()){<br>		//print_r($row);<br>		//echo \'&lt;hr/&gt;\';<br>		$rows[]=$row;<br>	}<br>	print_r($rows);<br><br><strong>//释放结果集</strong><br><strong>	$mysqli_result-&gt;free();</strong><br><br><br>}else{<br>	echo \'查询错误或者结果集中没有记录\';<br>}<br>$mysqli-&gt;close();</p>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3045', '感觉没睡好就..-shenmedoumeixie.... ', '网络', '\n<p>　　hi</p>\r\n<p>昨晚没睡好，虽然梦很香，但睡不好没精神做科研啊。。。</p>\r\n<p><strong>1、jQuery</strong></p>\r\n<p><strong>十二、实现聊天室创建</strong></p>\r\n<p><strong>12.1 基本功能</strong></p>\r\n<p>登陆；</p>\r\n<p><strong>无刷新实时交流；</strong></p>\r\n<p>支持表情。</p>\r\n<p>12.2 大致效果</p>\r\n<p>登陆——》验证，打算用AJAX来做；</p>\r\n<p>聊天——》php实现具体功能就行。</p>\r\n<p>12.3 数据流分析</p>\r\n<p>登陆页面：获取用户名和密码请求登陆-返回聊天页面或失败信息以及登陆页面；</p>\r\n<p>聊天页面：聊天内容的请求和返回（实现无刷新的更新数据）；在线人员信息的请求和返回；处理发送内容的请求，写入聊天内容。</p>\r\n<p><strong>12.4 登陆页面开发</strong></p>\r\n<p> --------突然间发现需要AJAX的知识储备，但我今天不想看ajax，周末再来吧。。。-----------</p>\r\n<p><strong>2、PHP实现页面静态化（一）</strong></p>\r\n<p><strong>一、静态化简介</strong></p>\r\n<p><strong>1.1、动态页面和静态页面</strong></p>\r\n<p>动态：执行动态程序，php，jsp等；比如php，语法分析，编译再运行。</p>\r\n<p>静态：html等文件。</p>\r\n<p><strong>1.2、关于优化页面响应时间</strong></p>\r\n<p><span style=\"line-height: 1.5;\">--主要手段</span></p>\r\n<p><span style=\"line-height: 1.5;\">动态页面静态化——本节重点；</span></p>\r\n<p>优化数据库；</p>\r\n<p>使用负载均衡；</p>\r\n<p>使用缓存；</p>\r\n<p><strong>--动态页面静态化</strong></p>\r\n<p><strong>场景</strong>：页面中的一些内容不经常改动；</p>\r\n<p><strong>实质：生成静态的HTML文件</strong>；（减少了执行步骤，也就节省了时间）</p>\r\n<p>减少响应时间，<strong>重要的是减少服务器负担。</strong></p>\r\n<p>不适合微博等更新较快的。</p>\r\n<p><strong>1.3 关于动态URL地址设置静态形式</strong></p>\r\n<p>http://state.com/index.php?c=play&amp;a=index&amp;id=8123</p>\r\n<p>变为</p>\r\n<p>http://state.com/play/8123.shtml</p>\r\n<p>这个过程暂时还是伪静态（实际上还是动态文件，只是换了个马甲）。</p>\r\n<p><strong>1.4 PHP静态化</strong></p>\r\n<p><strong>--纯静态</strong></p>\r\n<p>通过php程序生成的真正的静态文件。</p>\r\n<p>又分为局部纯静态（/局部动态，实现方法可能是ajax的异步操作）和全局纯静态。</p>\r\n<p><strong>--伪静态</strong></p>\r\n<p>把URL地址转化为类似html的情况。</p>\r\n<p><strong>二、纯静态化案例实现</strong></p>\r\n<p><strong>2.1 buffer</strong></p>\r\n<p>--概述</p>\r\n<p><strong>其实就是缓冲区</strong>，一个内存地址空间，用于存储数据。</p>\r\n<p>实现静态化，要围绕buffer展开。</p>\r\n<p>比如说电脑系统中的buffer，就是当有数据要进行存储操作的时候，需要先把某个buffer存满，然后再写入磁盘。</p>\r\n<p><strong>--流程</strong></p>\r\n<p>内容——php buffer——tcp——终端</p>\r\n<p><strong>--使用</strong></p>\r\n<p>&lt;?php<br>echo 1;echo \"&lt;br/&gt;\";<br>echo ob_get_contents();</p>\r\n<p>如果没开启，要么改php.ini，要么加头文件</p>\r\n<p>ob_start();</p>\r\n<p>2.2 实现纯静态化</p>\r\n<p>--基本方式</p>\r\n<p>file_put_contents()</p>\r\n<p>output_buffering()</p>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3046', '周一干不干活-PHP+MySQLi ', '网络', '\n<p>hi</p>\r\n<p>本来是雄心壮志的要干活的，哪知天有不测，早上大阴天起不来，中午又回寝室折腾衣服（做女工啊，牛不牛）没睡午觉，这样的迷糊状态，怎么科研，写这个好了。</p>\r\n<p><strong>1、PHP的OOP编程</strong></p>\r\n<p><strong>4.7 多态</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>由于接口的方法实现有多种多样，这种特性称之为多态</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>function eat($obj){<br>  if($obj instanceof ICanEat){ <br>    $obj-&gt;eat(\"FOOD\"); // 不需要知道到底是Human还是Animal，直接吃就行了<br>  }else{<br>    echo \"Can\'t eat!\\n\";<br>  }<br>}</p>\r\n<p>$man = new Human();<br>$monkey = new Animal();</p>\r\n<p><strong>// 同样的代码，传入接口的不同实现类的时候，表现不同。这就是为什么成为多态的原因。</strong><br>eat($man);<br>eat($monkey);</p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 多态<br> * 1. 只要某个对象实现了接口（instanceof），就可以直接在对象上调用接口的方法<br> */</p>\r\n<p><strong>4.8 抽象类</strong></p>\r\n<p><strong>--问题</strong></p>\r\n<p>连接接口的类，某些方法都是相同的，那么是否能够允许类中不实现，而是在接口中实现。</p>\r\n<p>比如，人和动物吃东西不同，但呼吸相同。</p>\r\n<p><strong>--栗子</strong></p>\r\n<p><strong>abstract class ACanEat{ //关键字改变</strong><br><strong>abstract public function eat($food);//需要类自行实现的，前面加上abstract关键字</strong><br><br>	public function breath(){<br>		echo \"Breath use the air.&lt;br/&gt;\";<br>	}<br><br>}</p>\r\n<p>class Human extends ACanEat{       //实现接口用implenments，这里用extends<br>	public function eat($food){<br>		echo \"Human eating \".$food.\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class Animal <strong>extends</strong> ACanEat{       <strong>//实现接口用implenments，这里用extends</strong><br>	public function eat($food){<br>		echo \"Animal eating \".$food.\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>$xiaoming=new Human();<br>$xiaohei=new Animal();</p>\r\n<p>$xiaoming-&gt;breath();$xiaoming-&gt;eat(\"food\");<br>$xiaohei-&gt;breath();$xiaohei-&gt;eat(\"shit\");</p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 抽象类<br> * 1. 抽象类允许类里面的部分方法暂时没有具体实现，这些方法我们成为抽象方法<br> * 2. 一旦类里面有抽象方法，这个类就必须是抽象类<br> * 3. 抽象类跟接口一样，不能直接实例化为对象<br> */</p>\r\n<p><strong>五、魔术方法</strong></p>\r\n<p><strong>5.1 简介</strong></p>\r\n<p><strong>注意所有的魔术方法前面都是两个下划线__</strong></p>\r\n<p>PHP中的OOP特有的。</p>\r\n<p>比如构造函数和析构函数。</p>\r\n<p><strong>5.2 __tostring()和__invoke()</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>__tostring()，当对象被当作String使用时，这个方法会被自动调用；echo $obj;</p>\r\n<p>__invoke()，当对象被当作方法（函数）调用时，这个方法被自动调用；$obj(4);</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>&lt;?php<br>/*<br> * tostring()魔术方法<br> * invoke()魔术方法<br> */</p>\r\n<p>class MagicTest{<br>	public function __toString(){<br>	return \"This is the class magictest.\";<br>}<br>   public function __invoke($x){<br>   	echo \"&lt;br/&gt;\".$x;<br>   }<br>}<br>$obj=new MagicTest();<br>echo $obj;</p>\r\n<p>$obj(5);</p>\r\n<p>用法和构造函数析构函数类似。比较自动化（自动调用，即使没有声明也会调用），但同时<strong>比较容易出错，小心。</strong></p>\r\n<p><strong>5.3 __call()和__callStatic()或重载（overloading）</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>当对象访问不存在的方法名称时，__call()会被自动调用；</p>\r\n<p>当对象访问不存在的静态方法名称时，__callStatic()会被自动调用；</p>\r\n<p>这两个方法，又称为重载（不同于重写）；通过这两个方法，同一个方法的名称的调用可以对应不同的方法实现</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>&lt;?php<br>/*<br> * tostring()魔术方法<br> * invoke()魔术方法<br> */</p>\r\n<p>class MagicTest{<br>	public function __toString(){<br>	return \"This is the class magictest.\";<br>}<br>   public function __invoke($x){<br>   	echo \"&lt;br/&gt;\".$x.\"&lt;br/&gt;\";<br>   }<br><strong>public function __call($name,$arguments){    //__call的格式是固定的，第一个是方法名，第二个是方法内的参数</strong><br>   	  echo \"Calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br>   public <strong>static</strong> function __callstatic($name,$arguments){ <br>   	echo \"Static calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br>}<br>$obj=new MagicTest();<br>echo $obj;</p>\r\n<p>$obj(5);</p>\r\n<p>$obj-&gt;runTest(\"para1\",\"para2\");<br>$obj::runTest(\"para3\",\"para4\");</p>\r\n<p>注意这里要求定义方法的时候格式是固定的。</p>\r\n<p><strong>5.4 __get()__set()__isset()__unset</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>这几个方法也被称为<strong>属性重载</strong>的魔术方法。</p>\r\n<p>__set()，在给<strong>不可访问属性（一种是属性未定义，另一种是没有访问权限，如private）</strong>赋值时调用；</p>\r\n<p>__get()，读取不可访问属性的值时调用；</p>\r\n<p>__isset()，当对不可访问属性调用isset（）或empty（）时调用；</p>\r\n<p>__unset()，。。。。。。。。。unset（）。。。。。。。。。。</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>&lt;?php<br>/*<br> * tostring()魔术方法<br> * invoke()魔术方法<br> */</p>\r\n<p>class MagicTest{<br>	public function __toString(){<br>	return \"This is the class magictest.\";<br>}<br>   public function __invoke($x){<br>   	echo \"&lt;br/&gt;\".$x.\"&lt;br/&gt;\";<br>   }<br>   public function __call($name,$arguments){    //__call的格式是固定的，第一个是方法名，第二个是方法内的参数<br>   	  echo \"Calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br>   public static function __callstatic($name,$arguments){    <br>   	echo \"Static calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br><strong>public function __get($name){  //get要有name</strong><br>   	return \"Getting the property \".$name.\"&lt;br/&gt;\"; 	  	<br>   } <br><strong>public function __set($name,$value){   //set要有名有值</strong><br>   	echo \"Setting the property \".$name.\" to value \".$value.\".&lt;br/&gt;\";<br>   }<br><strong>public function __isset($name){    //判断是否定义了属性</strong><br>   	echo \"__isset invoked&lt;br/&gt;\";<br>   	return true;<br>   }<br><strong>public function __unset($name){   //撤销</strong><br>   	echo \"unsetting protery \".$name.\"&lt;br/&gt;\";<br>   	return true;<br>   }<br>}<br>$obj=new MagicTest();<br>echo $obj;</p>\r\n<p>$obj(5);</p>\r\n<p>$obj-&gt;runTest(\"para1\",\"para2\");<br>$obj::runTest(\"para3\",\"para4\");</p>\r\n<p>echo $obj-&gt;classname;<br>$obj-&gt;classname=\"shit\";</p>\r\n<p>echo isset($obj-&gt;classname).\"&lt;br/&gt;\";<br>unset($obj-&gt;classname);echo \"&lt;br/&gt;\";<br>echo empty($obj-&gt;classname).\"&lt;br/&gt;\";</p>\r\n<p>结果是</p>\r\n<p>This is the class magictest.<br>5<br>Calling runTest with parameters: para1,para2<br>Static calling runTest with parameters: para3,para4<br>Getting the property classname<br>Setting the property classname to value shit.<br>__isset invoked<br>1<br>unsetting protery classname<br><br>__isset invoked</p>\r\n<p>可以看到，<strong>其实isset和empty调用__isset时一对相反的操作。</strong></p>\r\n<p>然后，<strong>__set($name，$value)和__unset($name)</strong>是一对相反的操作，但所要元素不一样；</p>\r\n<p><strong>__isset($name),__get($name)</strong>都只需要名字（记住每个魔术方法的作用，理解了，就好记了）。</p>\r\n<p><strong>5.5 __clone()</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>就是克隆，或克隆</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>先给出<strong>clone关键字</strong>的用法。</p>\r\n<p>&lt;?php<br>/*<br> * 克隆魔术方法<br> */</p>\r\n<p>class  nbaPlayer{<br>	public $name;<br>}</p>\r\n<p>$james=new nbaPlayer();<br>$james-&gt;name=\'James\';<br>echo $james-&gt;name.\"&lt;br/&gt;\";</p>\r\n<p><strong>$kobe=clone $james;</strong><br>$kobe-&gt;name=\'Kobe\';<br>echo $kobe-&gt;name;</p>\r\n<p>clone后的，就是个单独的对象，对其操作不影响原对象。</p>\r\n<p><strong>加上__clone()</strong></p>\r\n<p>&lt;?php<br>/*<br> * 克隆魔术方法<br> */</p>\r\n<p>class  nbaPlayer{<br>	public $name;<br><br><strong>public function __clone(){</strong><br>		$this-&gt;name=\"shit\";<br>	}<br><br>}</p>\r\n<p>$james=new nbaPlayer();<br>$james-&gt;name=\'James\';<br>echo $james-&gt;name.\"&lt;br/&gt;\";</p>\r\n<p>$kobe=clone $james;<br><strong>echo $kobe-&gt;name.\"&lt;br/&gt;\";</strong><br>$kobe-&gt;name=\'Kobe\';<br>echo $kobe-&gt;name.\"&lt;br/&gt;\";</p>\r\n<p>一般来说，用处在于<strong>clone后的初始化</strong>；或者说，<strong>当复制后，不想透露的某些信息的掩盖。</strong></p>\r\n<p>在工作中常用到这一个，因为常有<strong>对某个对象的操作，又不想影响原有数据</strong>，就克隆/复制一个出来。</p>\r\n<p>----------------------------------------</p>\r\n<p><strong>2、MySQLi扩展</strong></p>\r\n<p><strong>一、安装及下载</strong></p>\r\n<p>1.1 优势及简介</p>\r\n<p>更新更好，PHP5及以后推荐使用（或者PDO）。</p>\r\n<p><strong>--优点</strong></p>\r\n<p>基于OOP和面向过程的使用；</p>\r\n<p>支持预处理语句；</p>\r\n<p>支持事务。</p>\r\n<p>--其他</p>\r\n<p>速度更快。安全性更好</p>\r\n<p><strong>1.2 安装及配置</strong></p>\r\n<p>--安装</p>\r\n<p>配置php，开启php_mysqli.dll；</p>\r\n<p>配置extension_dir=\'ext目录位置\';</p>\r\n<p>重启服务器。</p>\r\n<p>（我用的是WAMP，直接打对勾就行）</p>\r\n<p><strong>--验证</strong></p>\r\n<p>&lt;?php<br>/*<br> * 验证mysqli是否开启<br> */</p>\r\n<p>//phpinfo();<br>//2.检测扩展是否已经加载<br>var_dump(extension_loaded(\'mysqli\'));<br>var_dump(extension_loaded(\'curl\'));<br>echo \'&lt;hr/&gt;\';<br>//3.检测函数是否存在<br>var_dump(function_exists(\'mysqli_connect\'));<br>echo \'&lt;hr/&gt;\';<br>//4.得到当前已经开启的扩展<br>print_r(get_loaded_extensions());<br>echo \'&lt;hr/&gt;\';</p>\r\n<p> </p>\r\n<p>---</p>\r\n<p>困了，回去洗洗睡觉。。。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3047', '荒芜的周六-PHP之面向对象（三） ', '网络', '\n<p>　　hi　　</p>\r\n<p>又是开森的周六了。积攒的两周的衣服，终于是差不多洗完了。大下午的才来学点东西~~</p>\r\n<p><strong>1、PHP面向对象（三）</strong></p>\r\n<p><strong>四、OOP的高级实践</strong></p>\r\n<p><strong>4.3 Static-静态成员</strong></p>\r\n<p>&lt;?php<br>date_default_timezone_set(\"PRC\");<br>/**<br> * 1. 类的定义以class关键字开始，后面跟着这个类的名称。类的名称命名通常每个单词的第一个字母大写。<br> * 2. 定义类的属性<br> * 3. 定义类的方法<br> * 4. 实例化类的对象<br> * 5. 使用对象的属性和方法<br> */</p>\r\n<p>class Human{<br>	public $name;<br>	public $height;<br>	public $weight;<br><br>	public function eat($food){<br>		echo $this-&gt;name.\"\'s eating \".$food.\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class Animal{<br>	public $kind;<br>	public $gender;<br>}</p>\r\n<p><br>class NbaPlayer extends Human{<br>    // 类的属性的定义<br>    public $name=\"Jordan\";// 定义属性<br>    public $height=\"198cm\";<br>    public $weight=\"98kg\";<br>    public $team=\"Bull\";<br>    public $playerNumber=\"23\";<br>    private $age=\"44\";<br>    public $president=\"David Stern\";<br><br><br><br>    // 类的方法的定义<br>    public function changePresident($newP){<br>    	$this-&gt;president=$newP;<br>    }<br><br>    public function run() {<br>        echo \"Running&lt;br/&gt;\";<br>    }</p>\r\n<p>    public function jump(){<br>        echo \"Jumping&lt;br/&gt;\";<br>    }<br><br>    public function dribble(){<br>        echo \"Dribbling&lt;br/&gt;\";<br>    }<br><br>    public function shoot(){<br>        echo \"Shooting&lt;br/&gt;\";<br>    }<br><br>    public function dunk(){<br>        echo \"Dunking&lt;br/&gt;\";<br>    }<br><br>    public function pass(){<br>        echo \"Passing&lt;br/&gt;\";<br>    }<br><br>    public function getAge(){<br>    	echo $this-&gt;name.\"\'s age is \".$this-&gt;age;<br>    }<br><br>    function __construct($name, $height, $weight, $team, $playerNumber){<br>    	print $name . \";\" . $height . \";\" . $weight . \";\" . $team . \";\" . $playerNumber.\"\\n\";<br>    	$this-&gt;name = $name; // $this是php里面的伪变量，表示对象自身<br>    	$this-&gt;height = $height; // 通过$this可以设置对象的属性值<br>    	$this-&gt;weight = $weight;<br>    	$this-&gt;team = $team;<br>    	$this-&gt;playerNumber = $playerNumber;<br>    }<br><br>}</p>\r\n<p><br>/**<br> * 1. 类实例化为对象时使用new关键字，new之后紧跟类的名称和一对括号。<br> * 2. 使用对象可以像使用其他值一样进行赋值操作<br> */<br>$jordan = new NbaPlayer(\"Jordan\", \"198cm\",\"98kg\",\"Bull\",\"23\");echo \"&lt;br/&gt;\";<br>$james=new NbaPlayer(\"James\", \"203cm\", \"120kg\", \"Heat\", \"6\");echo \"&lt;br/&gt;\";<br>// 访问对象的属性使用的语法是-&gt;符号，后面跟着属性的名称<br>echo $jordan-&gt;name.\"&lt;br/&gt;\";<br>// 调用对象的某个方法使用的语法是-&gt;符号，后面跟着方法的名称和一对括号<br>$jordan-&gt;run();<br>$jordan-&gt;pass();<br>//子类调用父类的方法<br>$jordan-&gt;eat(\"apple\");<br>//试着调用private,直接以及通过内部的public函数<br>//$jordan-&gt;age;<br>$jordan-&gt;getAge();echo \"&lt;br/&gt;\";</p>\r\n<p>$jordan-&gt;changePresident(\"Adam Silver\");<br>echo $jordan-&gt;president.\"&lt;br/&gt;\";<br>echo $james-&gt;president.\"&lt;br/&gt;\";</p>\r\n<p> 直接从上述例子开始吧。</p>\r\n<p>这里想得到的是，<strong>把两位对象的某一个变量同时变掉。——用static</strong></p>\r\n<p><strong> public static $president=\"David Stern\";</strong><br><br>    // 类的方法的定义<br>    public <strong>static</strong> function changePresident($newP){<br><strong>static::$president=$newP;//这里static换成self更符合规范</strong><br>    }</p>\r\n<p>注意这里static的位置，以及，方法内的::</p>\r\n<p>调用的方法也有所变动。</p>\r\n<p>echo <strong>NbaPlayer::$president;</strong>echo \"&lt;br/&gt;\";<br><strong>NbaPlayer::changePresident(\"Adam Silver\");</strong><br>echo NbaPlayer::$president;echo \"&lt;br/&gt;\";</p>\r\n<p>也就是像之前说的，<strong>静态成员就是个常量，所以不针对某个具体的对象（不受具体对象的约束）</strong>——基于此，定义&amp;赋值&amp;调用都不需要具体的对象参与。</p>\r\n<p><strong>内部调用要用self/static::$...</strong></p>\r\n<p><strong>外部调用，类名::</strong></p>\r\n<p>用处就是所有的对象共用的数据。</p>\r\n<p><strong>--如果内部调用时，变量在父类中</strong></p>\r\n<p>比如说，在上述例子中，父类human中写这么一句话</p>\r\n<p>public static $aaa=\"dafdfa\";</p>\r\n<p>然后在子类nbaplayer中，调用父类的静态成员时，要</p>\r\n<p>echo <strong>parent::$aaa;</strong></p>\r\n<p>而外部调用，按照上面说的，类名::，所以，直接父类类名即可</p>\r\n<p>echo Human::$aaa;</p>\r\n<p>--其他</p>\r\n<p><strong>在静态方法中，是无法访问其他变量的，也就是说，不能用$this-&gt;</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 静态成员<br> * 1. 静态属性用于保存类的公有数据<br> * 2. 静态方法里面只能访问静态属性<br> * 3. 静态成员不需要实例化对象就可以访问<br> * 4. 类内部，可以通过self或者static关键字访问自身的静态成员<br> * 5. 可以通过parent关键字访问父类的静态成员<br> * 6. 可以通过类名称在外部访问类的静态成员<br> */</p>\r\n<p><strong>4.4 Final成员</strong></p>\r\n<p><strong>--问题</strong></p>\r\n<p>不希望某个类拥有子类；</p>\r\n<p>不希望子类修改父类中的某个变量（避免重写？）</p>\r\n<p><strong>--final</strong></p>\r\n<p>》=php5版本</p>\r\n<p>举个例子</p>\r\n<p>class BaseClass{<br>	public  function test(){<br>		echo \"BaseClass::test called&lt;br/&gt;\";<br>	}<br><br>	public function test1(){<br>		echo \"BaseClass::test1 called&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class  ChildClass extends BaseClass{<br>	public function test(){<br>		echo \"ChildClass::test called&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>$obj=new ChildClass();<br>$obj-&gt;test();</p>\r\n<p>子类中编写跟父类中完全一致的方法名（内容可以不同），会完成对父类方法的<strong>重写</strong>！</p>\r\n<p><strong> 所以，不希望被重写的父类中的方法，写上final</strong></p>\r\n<p><strong><strong>final </strong>public function test(){</strong></p>\r\n<p>依此类推，对于不想有子类的父类，在类名那里写上final</p>\r\n<p><strong>final class BaseClass{</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 重写和Final<br> * 1. 子类中编写跟父类完全一致的方法可以完成对父类方法的重写<br> * 2. 对于不想被任何类继承的类可以在class之前添加final关键字<br> * 3. 对于不想被子类重写（overwrite, 修改）的方法，可以在方法定义前面添加final关键字<br> */</p>\r\n<p><strong>4.5 数据访问</strong></p>\r\n<p>先把final都去掉</p>\r\n<p>--parent</p>\r\n<p>然后再子类中的方法中写</p>\r\n<p>parent::test();</p>\r\n<p>运行后会发现，依然可以<strong>通过parent的关键字调用父类中，即使是被重写的数据</strong></p>\r\n<p>--self</p>\r\n<p>然后在父类中的方法test中写</p>\r\n<p><span class=\"Apple-tab-span\"> self::test1();</span></p>\r\n<p>运行后，发现<strong>self可以调用同一个类中的数据（其他方法/静态变量/常量const）</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 数据访问补充<br> * 1. parent关键字可以用于调用父类被重写的类成员<br> * 2. self关键字可以用于访问类自身的成员方法，也可以用于访问自身的静态成员和类常量；不能用于访问类自身的属性；访问类常量时不用在常量名称前面加$符号<br> * 3. static关键字用于访问类自身定义的静态成员，访问静态属性时需要在属性名前面添加$符号<br> */</p>\r\n<p><strong>4.6 对象接口</strong></p>\r\n<p>非常重要！！！</p>\r\n<p><strong>--问题</strong></p>\r\n<p>不同的类，有着相同的行为，但相同的行为又有着不同的实现方法。</p>\r\n<p>比如人和动物都会吃东西，但吃的方式方法又不太一样。</p>\r\n<p>--定义</p>\r\n<p><strong>接口就是把不同类的共同行为进行了定义，然后在不同的类里面实现不同的功能。</strong></p>\r\n<p><strong>--栗子 </strong></p>\r\n<p>//定义一个接口<br><strong>interface ICanEat{</strong><br>	public function eat($food);<br>}</p>\r\n<p>可以看到，接口中并没有方法的具体实现，但必须有方法！</p>\r\n<p>那么，下面是，“人类会吃”</p>\r\n<p>//具体对象，连接到接口<br><strong>class Human implements ICanEat{</strong><br><br>	public function eat($food){<br>		echo \"Human eating \".$food.\".&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>$obj=new Human();<br>$obj-&gt;eat(\"shit\");</p>\r\n<p>请忽略我给出的“食物”。</p>\r\n<p>注意，<strong>不再用extends，而是implements。然后，同样是方法名的完全相同。然后，对象必须/最好实现方法。</strong></p>\r\n<p>继续</p>\r\n<p>interface ICanEat{<br>	public function eat($food);<br>}</p>\r\n<p>//具体对象，连接到接口<br>class Human implements ICanEat{<br>public function eat($food){<br>		echo \"Human eating \".$food.\".&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class Animal implements ICanEat{<br>    public function eat($food){<br>		echo \"Animal eating \".$food.\".&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p><br>$obj=new Human();<br>$obj-&gt;eat(\"shit\");</p>\r\n<p>$monkey=new Animal();<br>$monkey-&gt;eat(\"banana\");</p>\r\n<p>让动物也吃起来！</p>\r\n<p><strong>--逆向操作</strong></p>\r\n<p>判断某个对象是否连接了某个接口。</p>\r\n<p>var_dump($obj<strong> instanceof</strong> ICanEat);</p>\r\n<p>会返回boolean值。</p>\r\n<p><strong>--更多的栗子</strong></p>\r\n<p><strong>interface ICanPee extends ICanEat{</strong><br>	public function pee();<br>}</p>\r\n<p>class Demon implements ICanPee{<br>	public function pee(){<br>		echo \"Can demon pee?\";<br>	}<br>	public function eat($food){<br>		echo \"Can demon eat \".$food;<br>	}<br>}</p>\r\n<p>$ghost=new Demon();<br>$ghost-&gt;pee();<br>$ghost-&gt;eat(\"shit\");</p>\r\n<p><strong>接口本质上也是类，可以被继承/继承，但是使用继承接口的接口，所有父类、“爷类”的方法都要有具体实现。</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 接口<br> * 1. 接口的基本概念和基本使用方法<br> * 2. 接口里面的方法没有具体的实现<br> * 3. 实现了某个接口的类必须提供接口中定义的方法<br> * 4. 不能用接口创建对象，但是能够判断某个对象是否实现了某个接口<br> * 5. 接口可以继承接口（interface extends interface）<br> * 6. 接口中定义的所有方法都必须是公有，这是接口的特性。<br> */</p>\r\n<p> </p>\r\n<p>aaaaaaaaaaaaaa</p>\r\n<p>bu xiang xie le....................</p>\r\n<p>ming tian yao ge ..............</p>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3048', '周五了啦啦啦啦-LAMP+PHP‘s OOP ', '网络', '\n<p>　　hi</p>\r\n<p>周五咯~~</p>\r\n<p><strong>1、LAMP配置完结篇</strong></p>\r\n<p><strong>五、LAMP配置环境优化</strong></p>\r\n<p><strong>5.4 虚拟主机工作原理</strong></p>\r\n<p>apache的虚拟主机。virtual-host</p>\r\n<p>用不同的域名访问不同的目录——手动模拟dns</p>\r\n<p>修改host文件即可实现。具体就是主机地址 域名</p>\r\n<p><strong>复习</strong></p>\r\n<p>liang@liang-andy:~$ sudo apt-get install apache2</p>\r\n<p>liang@liang-andy:~$ sudo apt-get install php5<br>然后加载/检查php5.load这个php实现对apache2操作的模块<strong>（LAMP的互相，就是模块的启动/连接）</strong><br>liang@liang-andy:~$ cat /etc/apache2/mods-enabled/php5.load<br>liang@liang-andy:~$ sudo apt-get install mysql-server</p>\r\n<p>sudo apt-get install apache2 php5 mysql-server php5-mysql</p>\r\n<p>liang@liang-andy:~$ sudo service mysql restart<br>liang@liang-andy:~$ sudo service apache2 restart</p>\r\n<p>----创建phpinfo探针</p>\r\n<p>先装vim</p>\r\n<p>sudo apt-get install vim</p>\r\n<p>再切换到php的www文件夹，用cd命令</p>\r\n<p>cd /var/www/html（14.4版本）</p>\r\n<p>然后在这里创建一个php文件</p>\r\n<p>sudo vim info.php</p>\r\n<p>写php代码</p>\r\n<p>&lt;?php<br>echo mysql_connect(\'localhost\',\'root\',\'hanhan123\') ? \'Hoho\' : \'WTF\';<br><br>phpinfo();<br>然后esc键，输入:wq保存退出</p>\r\n<p>http://192.168.1.100/info.php 浏览器输入验证结果</p>\r\n<p><strong>复习结束</strong></p>\r\n<p><strong>5.5 安装phpmyadmin</strong></p>\r\n<p>--</p>\r\n<p><strong>apt-get命令</strong></p>\r\n<p>sudo apt-get install phpmyadmin</p>\r\n<p>sudo ln -s /usr/share/phpmyadmin/ /var/www/pma</p>\r\n<p><strong> 六、服务器集群了解</strong></p>\r\n<p>国内外有很多著名的巨型服务器集群。</p>\r\n<p>用于同时处理大批量的请求</p>\r\n<p>-----------------------------------</p>\r\n<p><strong>2、PHP的OOP编程</strong></p>\r\n<p><strong>四、OOP的高级实践</strong></p>\r\n<p><strong>程序准备</strong></p>\r\n<p>&lt;?php<br>date_default_timezone_set(\"PRC\");<br>/**<br> * 1. 类的定义以class关键字开始，后面跟着这个类的名称。类的名称命名通常每个单词的第一个字母大写。<br> * 2. 定义类的属性<br> * 3. 定义类的方法<br> * 4. 实例化类的对象<br> * 5. 使用对象的属性和方法<br> */<br>class NbaPlayer<br>{<br>    // 类的属性的定义<br>    public $name=\"Jordan\";// 定义属性<br>    public $height=\"198cm\";<br>    public $weight=\"98kg\";<br>    public $team=\"Bull\";<br>    public $playerNumber=\"23\";</p>\r\n<p>    // 类的方法的定义<br>    public function run() {<br>        echo \"Running\\n\";<br>    }</p>\r\n<p>    public function jump(){<br>        echo \"Jumping\\n\";<br>    }<br>    public function dribble(){<br>        echo \"Dribbling\\n\";<br>    }<br>    public function shoot(){<br>        echo \"Shooting\\n\";<br>    }<br>    public function dunk(){<br>        echo \"Dunking\\n\";<br>    }<br>    public function pass(){<br>        echo \"Passing\\n\";<br>    }<br>}</p>\r\n<p>/**<br> * 1. 类实例化为对象时使用new关键字，new之后紧跟类的名称和一对括号。<br> * 2. 使用对象可以像使用其他值一样进行赋值操作<br> */<br>$jordan = new NbaPlayer();<br>// 访问对象的属性使用的语法是-&gt;符号，后面跟着属性的名称<br>echo $jordan-&gt;name.\"\\n\";<br>// 调用对象的某个方法使用的语法是-&gt;符号，后面跟着方法的名称和一对括号<br>$jordan-&gt;run();<br>$jordan-&gt;pass();</p>\r\n<p>?&gt;</p>\r\n<p><strong> 4.1 继承</strong></p>\r\n<p>也就是对象相似的部分，可以多处使用——避免代码冗余，开发效率提高。</p>\r\n<p>优点：父类中定义的了，子类中无需再次定义——效率高；对于外部，表现一致（父类是一样的）；重写，来修改子类。</p>\r\n<p>举个栗子</p>\r\n<p>class Human{<br>	public $name;<br>	public $height;<br>	public $weight;<br><br>	public function eat($food){<br>		echo $this-&gt;name.\"\'s eating\".$food.\"\\n\";<br>	}<br>}</p>\r\n<p>人类作为父类，然后nba球员作为子类</p>\r\n<p><strong>class NbaPlayer extends Human{</strong></p>\r\n<p>试着直接通过子类调用父类中的function</p>\r\n<p>$jordan-&gt;eat(\"apple\");</p>\r\n<p>输出</p>\r\n<p>Jordan\'s eating apple</p>\r\n<p>没有问题！<strong>子类是可以直接调用父类的属性和方法的！！（在子类的对象上可以直接访问父类中定义的方法和属性）</strong></p>\r\n<p>毕竟从它的意思来看，子类就是父类的延伸。</p>\r\n<p>另外，<strong>父类中的属性可以在子类中进行访问（实际上，简单的理解就是，所有的子类都是大于等于父类的对象，想象一下文氏图）</strong></p>\r\n<p>类的继承，用extends，<strong>只能跟一个“爸爸”——php的单继承原则</strong></p>\r\n<p><strong>4.2 访问控制</strong></p>\r\n<p>所有的属性和方法都有访问权限的选择——选择可以被谁访问</p>\r\n<p><strong>public：公有，任何地方</strong></p>\r\n<p><strong>protected：受保护的，被自身以及其子类</strong></p>\r\n<p><strong>private：私有，只能被自身访问</strong></p>\r\n<p>举个private的栗子</p>\r\n<p>在Nbaplayer这个子类中，新增加定义</p>\r\n<p>    private $age=\"44\";</p>\r\n<p> public function getAge(){<br>    	echo $this-&gt;name.\"\'s age is \".$this-&gt;age;<br>    }</p>\r\n<p>//试着调用private,直接以及通过内部的public函数<br>//$jordan-&gt;age;<br>$jordan-&gt;getAge();</p>\r\n<p>然后，<strong>关于protected，范围紧紧的限制在了父类中和子类中，也就是说，出了子类的定义那个大括号就失效了！</strong></p>\r\n<p><strong>4.3 静态成员</strong></p>\r\n<p>可以简单的理解为常量（？）</p>\r\n<p>static</p>\r\n<p> </p>\r\n<p> </p>\r\n<p>bu xiang xie le </p>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3049', '敲-PHP与MySQL，JSON ', '网络', '\n<p>hi</p>\r\n<p>敲代码~</p>\r\n<p><strong>1、php与mysql</strong></p>\r\n<p><strong>5.4 修改界面</strong></p>\r\n<p>同样是界面和程序。</p>\r\n<p><strong>界面article.modify.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	//读取旧信息<br>	$id = $_GET[\'id\'];<br>	$query = mysqli_query($con,\"select * from article where id=$id\");<br>	$data = mysqli_fetch_assoc($query);<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"213\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;      &lt;a href=\"article.add.php\"&gt;&lt;/a&gt;&lt;/td&gt;<br>    &lt;td width=\"854\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;&lt;form id=\"form1\" name=\"form1\" method=\"post\" action=\"article.modify.handle.php\"&gt;<br>    	&lt;input type=\"hidden\" name=\"id\" value=\"&lt;?php echo $data[\'id\']?&gt;\" /&gt;<br>      &lt;table width=\"590\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\"&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"center\"&gt;修改文章&lt;/td&gt;<br>          &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td width=\"119\"&gt;标题&lt;/td&gt;<br>          &lt;td width=\"437\"&gt;&lt;label for=\"title\"&gt;&lt;/label&gt;<br>            &lt;input type=\"text\" name=\"title\" id=\"title\" value=\"&lt;?php echo $data[\'title\']?&gt;\"/&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;作者&lt;/td&gt;<br>          &lt;td&gt;&lt;input type=\"text\" name=\"author\" id=\"author\"  value=\"&lt;?php echo $data[\'author\']?&gt;\"/&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;简介&lt;/td&gt;<br>          &lt;td&gt;&lt;label for=\"description\"&gt;&lt;/label&gt;<br>            &lt;textarea name=\"description\" id=\"description\" cols=\"60\" rows=\"5\"&gt;&lt;?php echo $data[\'description\']?&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;内容&lt;/td&gt;<br>          &lt;td&gt;&lt;textarea name=\"content\" cols=\"60\" rows=\"20\" id=\"content\"&gt;&lt;?php echo $data[\'content\']?&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"right\"&gt;&lt;input type=\"submit\" name=\"button\" id=\"button\" value=\"提交\" /&gt;&lt;/td&gt;<br>          &lt;/tr&gt;<br>      &lt;/table&gt;<br>    &lt;/form&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>关键点在于php的读取，以及在html中value的php调用。</p>\r\n<p><strong>修改程序article.modify.handle.php</strong></p>\r\n<p>&lt;?php <br>//和数据库有关的，无条件写上这么一句话<br>	require_once(\'../connect.php\');<br><br>	//接受修改后的数据（表单传递）<br>	$id = $_POST[\'id\'];<br>	$title = $_POST[\'title\'];<br>	$author = $_POST[\'author\'];<br>	$description = $_POST[\'description\'];<br>	$content = $_POST[\'content\'];<br>	$dateline =  time();<br><br>	//写sql修改语句，并做成功与否的判断，并跳回修改界面<br>	$updatesql = \"update article set title=\'$title\',author=\'$author\',description=\'$description\',content=\'$content\',dateline=$dateline where id=$id\";<br>	if(mysqli_query($con,$updatesql)){<br>		echo \"&lt;script&gt;alert(\'修改文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'修改文章失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p><strong>5.5 文章删除</strong></p>\r\n<p>先做需求的分析：同上面几个略有区别，<strong>删除文章不需要界面，只需要一个删除按钮来掉要就行了</strong>。所以只有一个文件。而关键的sql语句只有一句</p>\r\n<p><strong>$delsql=\"delete from article where id=$id\";</strong></p>\r\n<p><strong>aritcle.del.handle.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');</p>\r\n<p>//读取id号。不像其他的是有传递值的<br>	$id = $_GET[\'id\'];<br>	$deletesql = \"delete from article where id=$id\";<br>	if(mysql_query($deletesql)){<br>		echo \"&lt;script&gt;alert(\'删除文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'删除文章失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p><strong>5.6 文章管理列表</strong></p>\r\n<p>需求分析：列表显示出所有的文章，然后后面有两个按钮，删除（链接至上一节的删除模块）和修改（链接至之前的模块）</p>\r\n<p>所以，只需要一个文件，显示模块就好</p>\r\n<p><strong>article.manage.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	$sql = \"select * from article order by dateline desc\";<br>	$query  = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row =mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}else{<br>		$data = array();<br>	}</p>\r\n<p>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"156\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;<br>    &lt;td width=\"837\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;&lt;table width=\"743\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>      &lt;tr&gt;<br>        &lt;td colspan=\"3\" align=\"center\" bgcolor=\"#FFFFFF\"&gt;文章管理列表&lt;/td&gt;<br>        &lt;/tr&gt;<br>      &lt;tr&gt;<br>        &lt;td width=\"37\" bgcolor=\"#FFFFFF\"&gt;编号&lt;/td&gt;<br>        &lt;td width=\"572\" bgcolor=\"#FFFFFF\"&gt;标题&lt;/td&gt;<br>        &lt;td width=\"82\" bgcolor=\"#FFFFFF\"&gt;操作&lt;/td&gt;<br>      &lt;/tr&gt;<br>	&lt;?php <br>		if(!empty($data)){<br>			foreach($data as $value){<br>	?&gt;<br>      &lt;tr&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&amp;nbsp;&lt;?php echo $value[\'id\']?&gt;&lt;/td&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&amp;nbsp;&lt;?php echo $value[\'title\']?&gt;&lt;/td&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&lt;a href=\"article.del.handle.php?id=&lt;?php echo $value[\'id\']?&gt;\"&gt;删除&lt;/a&gt; &lt;a href=\"article.modify.php?id=&lt;?php echo $value[\'id\']?&gt;\"&gt;修改&lt;/a&gt;&lt;/td&gt;<br>      &lt;/tr&gt;<br>    &lt;/table&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>5.7 函数总结</strong></p>\r\n<p>mysqli_connect()</p>\r\n<p>mysqli_select_db()</p>\r\n<p>mysqli_query()</p>\r\n<p>mysqli_error()</p>\r\n<p>mysqli_fetch_assoc()</p>\r\n<p>mysqli_num_rows()</p>\r\n<p><strong>六、前台管理界面的开发</strong></p>\r\n<p><strong>6.1 文章列表</strong></p>\r\n<p><strong>article.list.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from article order by dateline desc\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row = mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>	&lt;?php<br>		if(empty($data)){	<br>			echo \"当前没有文章，请管理员在后台添加文章\";<br>		}else{<br>			foreach($data as $value){<br>	?&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;?php echo $value[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $value[\'author\']?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $value[\'description\']?&gt;<br>			&lt;/div&gt;<br>			&lt;div class=\"meta\"&gt;<br>				&lt;p class=\"links\"&gt;&lt;a href=\"article.show.php?id=&lt;?php echo $value[\'id\']?&gt;\" class=\"more\"&gt;查看详细&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;raquo;&amp;nbsp;&amp;nbsp;&lt;/p&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;?php<br>			}<br>		}<br>	?&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"article.search.php\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"key\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.2 文章详情页</strong></p>\r\n<p><strong>article.show.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$id = intval($_GET[\'id\']);<br>	$sql = \"select * from article where id=$id\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		$row = mysqli_fetch_assoc($query);<br>	}else{<br>		echo \"这篇文章不存在\";<br>		exit;<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"#\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"#\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"#\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;!--文章标题放置到这里--&gt;&lt;?php echo $row[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $row[\'author\'];?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;!--文章内容放置到这里--&gt;<br>				&lt;?php echo $row[\'content\']?&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.3 检索</strong></p>\r\n<p>article.search.php</p>\r\n<p>这里的查询的是根据题目来查询。</p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$key = $_GET[\'key\'];<br>	$sql = \"select * from article where title like \'%$key%\' order by dateline desc\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row = mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>	&lt;?php<br>		if(empty($data)){	<br>			echo \"当前没有文章，请管理员在后台添加文章\";<br>		}else{<br>			foreach($data as $value){<br>	?&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;?php echo $value[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $value[\'author\']?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $value[\'description\']?&gt;<br>			&lt;/div&gt;<br>			&lt;div class=\"meta\"&gt;<br>				&lt;p class=\"links\"&gt;&lt;a href=\"article.show.php?id=&lt;?php echo $value[\'id\']?&gt;\" class=\"more\"&gt;查看详细&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;raquo;&amp;nbsp;&amp;nbsp;&lt;/p&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;?php<br>			}<br>		}<br>	?&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.4 关于我们和联系我们</strong></p>\r\n<p><strong>about.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from  introduce\";<br>	$query = mysqli_query($con,$sql);<br>	//if($query&amp;&amp;mysqli_num_rows($query)){<br>		$about = \"啦啦啦\";<br>	//}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br><br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;关于我们&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $about?&gt;<br>			&lt;/div&gt;<br><br>		&lt;/div&gt;<br><br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>contact.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from  introduce\";<br>	$query = mysqli_query($con,$sql);<br>	//$arr=mysqli_fetch_array($query, MYSQL_ASSOC);<br>	//if($query&amp;&amp;mysqli_num_rows($query)){<br>		$contact = \"asdfadf\";<br>	//}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br><br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;联系我们&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $contact?&gt;<br>			&lt;/div&gt;<br><br>		&lt;/div&gt;<br><br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;</p>\r\n<p>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p> ------------------------------------------</p>\r\n<p><strong>2、JSON基础</strong></p>\r\n<p><strong>1.2 JSON的使用</strong></p>\r\n<p>--<strong>JSON与serialize</strong>数据格式的异同和使用</p>\r\n<p>相同点：把其他数据类型转换为一个可以传输的字符串；都是结构性数据；</p>\r\n<p>不同点：s序列化之后，保存数据原有类型——适用于存储带有加密方式的数据串；JSON更简洁——适合数据量大，不要求数据类型保存的情况</p>\r\n<p>举个栗子</p>\r\n<p>&lt;?php<br>//输出模块<br>function createHtmlTag($tag=\"\"){<br>	echo \"&lt;h1&gt;$tag&lt;/h1&gt;&lt;br/&gt;\";<br>}<br>createHtmlTag(\"Hello!\");<br>createHtmlTag(\"JSON和serialize的对比\");</p>\r\n<p>//测试用数组<br>$member=array(\"username\",\"age\");<br>var_dump($member);</p>\r\n<p><br>$jsonObj=json_encode($member);</p>\r\n<p>$serializeObj=serialize($member);</p>\r\n<p>createHtmlTag($jsonObj);<br>createHtmlTag($serializeObj);</p>\r\n<p>结果</p>\r\n<h1>Hello!</h1>\r\n<p> </p>\r\n<h1>JSON和serialize的对比</h1>\r\n<p> </p>\r\n<pre class=\"xdebug-var-dump\"><strong>array</strong> <em>(size=2)</em>\r\n  0 <span style=\"color: #888a85;\">=&gt;</span> </pre>\r\n<p><small>string</small></p>\r\n<pre class=\"xdebug-var-dump\"> <span style=\"color: #cc0000;\">\'username\'</span> <em>(length=8)</em>\r\n  1 <span style=\"color: #888a85;\">=&gt;</span> </pre>\r\n<p><small>string</small></p>\r\n<pre class=\"xdebug-var-dump\"> <span style=\"color: #cc0000;\">\'age\'</span> <em>(length=3)</em>\r\n</pre>\r\n<h1>[\"username\",\"age\"]</h1>\r\n<p> </p>\r\n<h1>a:2:{i:0;s:8:\"username\";i:1;s:3:\"age\";}</h1>\r\n<p><strong>--常用JSON函数</strong></p>\r\n<p>json_encode()——JSON加密</p>\r\n<p>json_decode()——解密</p>\r\n<p><strong>1.3 JSON实例讲解</strong></p>\r\n<p> </p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3050', '挤点时间写博客-php&MySQL实践 ', '网络', '\n<p>　　hi</p>\r\n<p>晚上要吃火锅的嘛，挤点时间写点东西吧，别被老板发现哦</p>\r\n<p>1、PHP与MySQL</p>\r\n<p><strong>五、文章发布系统之后台</strong></p>\r\n<p><strong>5.2 创建配置文件和初始化文件</strong></p>\r\n<p>为了统一配置以及管理方便，还有就是减少代码的冗余。</p>\r\n<p>分别为config.php和connect.php</p>\r\n<p><strong>config.php</strong></p>\r\n<p>&lt;?php<br>/*<br> * 配置文件<br> */<br>//配置数据库的相关信息<br>//由于是常量，直接用define<br>define(\'HOST\', \'127.0.0.1\');<br>define(\'USERNAME\', \'root\');<br>define(\'PASSWORD\', \'\');</p>\r\n<p> </p>\r\n<p><strong>connect.php</strong></p>\r\n<p>&lt;?php<br>/*<br> * 链接到数据库的文件<br> * 主要是链接到数据库服务器，然后选择数据库。<br> * 特殊的是设置字符集。<br> * 然后希望对每个操作进行判断<br> */</p>\r\n<p> </p>\r\n<p>//包含配置文件<br>require_once \'config.php\';</p>\r\n<p>//连库<br>if(!$con=mysqli_connect(HOST,USERNAME,PASSWORD)){<br>	echo mysqli_error($con);<br>}</p>\r\n<p>//选库<br>if(mysqli_select_db($con, \'info\')){<br>	echo mysqli_error($con);<br>}</p>\r\n<p>//字符集<br>if(mysqli_query($con,\'set names utf8\')){<br>	echo mysqli_error($con);<br>}</p>\r\n<p>完成后测试一下链接文件就ok了。这里的mysqli和mysql都可以，只要格式正确就行。</p>\r\n<p><strong>5.3 发布文章</strong></p>\r\n<p><strong>文章发布界面article.add.php</strong></p>\r\n<p>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"156\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;      &lt;a href=\"article.add.php\"&gt;&lt;/a&gt;&lt;/td&gt;<br>    &lt;td width=\"837\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;<br>    &lt;form id=\"form1\" name=\"form1\" method=\"post\" action=\"article.add.handle.php\"&gt;<br>      &lt;table width=\"779\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\"&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"center\"&gt;发布文章&lt;/td&gt;<br>          &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td width=\"119\"&gt;标题&lt;/td&gt;<br>          &lt;td width=\"625\"&gt;&lt;label for=\"title\"&gt;&lt;/label&gt;<br>            &lt;input type=\"text\" name=\"title\" id=\"title\" /&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;作者&lt;/td&gt;<br>          &lt;td&gt;&lt;input type=\"text\" name=\"author\" id=\"author\" /&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;简介&lt;/td&gt;<br>          &lt;td&gt;&lt;label for=\"description\"&gt;&lt;/label&gt;<br>            &lt;textarea name=\"description\" id=\"description\" cols=\"60\" rows=\"5\"&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;内容&lt;/td&gt;<br>          &lt;td&gt;&lt;textarea name=\"content\" cols=\"60\" rows=\"15\" id=\"content\"&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"right\"&gt;&lt;input type=\"submit\" name=\"button\" id=\"button\" value=\"提交\" /&gt;&lt;/td&gt;<br>          &lt;/tr&gt;<br>      &lt;/table&gt;<br>    &lt;/form&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>不是很漂亮就是了，学习嘛</p>\r\n<p> </p>\r\n<p>文章发布处理程序article.add.handle.php</p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	//把传递过来的信息入库,在入库之前对所有的信息进行校验。<br>	if(!(isset($_POST[\'title\'])&amp;&amp;(!empty($_POST[\'title\'])))){<br>		echo \"&lt;script&gt;alert(\'标题不能为空\');window.location.href=\'article.add.php\';&lt;/script&gt;\";<br>	}<br>	$title = $_POST[\'title\'];<br>	$author = $_POST[\'author\'];<br>	$description = $_POST[\'description\'];<br>	$content = $_POST[\'content\'];<br>	$dateline =  time();<br>	$insertsql = \"insert into article(title, author, description, content, dateline) values(\'$title\', \'$author\', \'$description\', \'$content\', $dateline)\";<br>	if(mysqli_query($con,$insertsql)){<br>		echo \"&lt;script&gt;alert(\'发布文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'发布失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p>注意两者的功能和连接，就是add页面把东西传给handle处理</p>\r\n<p> ------------------------</p>\r\n<p>由于我遇到了前所未见的乱码问题。。。跪着解决中。。。。望大家不吝赐教（wamp环境，mysql，zend，浏览器都已经设置为utf8，apache配置文件中添加了AddDefaultCharset UTF-8，问题依然存在，我晕啊。。。。）</p>\n ', '2016-04-28 20:05:07', '2016-04-28 20:05:07', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3051', '突然发现这周有点忙。。着玩-PHP进阶 ', '网络', '\n<p>　　hi</p>\r\n<p>周二才，不过我突然意识到这周有点忙着玩的感觉，还是很期待的——今天下午去市里，晚上回来看电影，明晚聚餐吃火锅，后天下午拍短片，晚上可能要打球，周五，嗯，就到周五了。虽然这样下去连怎么写（bian）周报都不知道，但还是来做这个的好。</p>\r\n<p><strong>1、PHP进阶完结篇</strong></p>\r\n<p><strong>十一、数据库操作</strong></p>\r\n<p><strong>11.1 PHP支持哪些数据库</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP通过安装相应的扩展来实现数据库操作，现代应用程序的设计离不开数据库的应用，当前主流的数据库有MsSQL，MySQL，Sybase，Db2，Oracle，PostgreSQL，Access等，这些数据库PHP都能够安装扩展来支持，一般情况下常说的LAMP架构指的是：Linux、Apache、Mysql、PHP，因此Mysql数据库在PHP中的应用非常广泛，我们会在本章中简单的了解Mysql的操作方法。</p>\r\n</div>\r\n</div>\r\n<p><strong>11.2 数据库扩展</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP中一个数据库可能有一个或者多个扩展，其中既有官方的，也有第三方提供的。像Mysql常用的扩展有原生的mysql库，也可以使用增强版的mysqli扩展，还可以使用PDO进行连接与操作。</p>\r\n<p>不同的扩展提供基本相近的操作方法，不同的是可能具备一些新特性，以及操作性能可能会有所不同。</p>\r\n<p>mysql扩展进行数据库连接的方法：</p>\r\n<pre class=\"code\">$link = mysql_connect(\'mysql_host\', \'mysql_user\', \'mysql_password\');</pre>\r\n<p>mysqli扩展：</p>\r\n<pre class=\"code\">$link = mysqli_connect(\'mysql_host\', \'mysql_user\', \'mysql_password\');</pre>\r\n<p>PDO扩展</p>\r\n<pre class=\"code\">$dsn = \'mysql:dbname=testdb;host=127.0.0.1\';\r\n$user = \'dbuser\';\r\n$password = \'dbpass\';\r\n$dbh = new PDO($dsn, $user, $password);</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>$link = mysql_connect(\'127.0.0.1\', \'code1\', \'\') or die(\'数据库连接失败\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>$result = mysql_query(\'select * from user limit 1\');<br>$row = mysql_fetch_assoc($result);<br>print_r($row);</p>\r\n<p><strong>11.3 连接MySQL数据库</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP要对数据库进行操作，首先要做的是与数据库建立连接，通常我们使用mysql_connect函数进行数据库连接，该函数需要指定数据库的地址，用户名及密码。</p>\r\n<pre class=\"code\">$host = \'localhost\';\r\n$user = \'code1\';\r\n$pass = \'\';\r\n$link = mysql_connect($host, $user, $pass);</pre>\r\n<p>PHP连接数据库的方式类似于直接在命令行下通过进行连接，类似：<code class=\"marker\">mysql -hlocalhost -ucode1 -p</code>，当连接成功以后，我们需要选择一个操作的数据库，通过mysql_select_db函数来选择数据库。</p>\r\n<pre class=\"code\">mysql_select_db(\'code1\');</pre>\r\n<p>通常我们会先设置一下当前连接使用的字符编码，一般的我们会使用utf8编码。</p>\r\n<pre class=\"code\">mysql_query(\"set names \'utf8\'\");</pre>\r\n<p>通过上面的步骤，我们就与数据库建立了连接，可以进行数据操作了。</p>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>$host = \'127.0.0.1\';<br>$user = \'code1\';<br>$pass = \'\';<br>//在这里编写数据库连接代码<br>mysql_connect($host,$user,$pass);<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");</p>\r\n<p><strong> 11.4 执行MySQL查询</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>在数据库建立连接以后就可以进行查询，采用mysql_query加sql语句的形式向数据库发送查询指令。</p>\r\n<pre class=\"code\">$res = mysql_query(\'select * from user limit 1\');</pre>\r\n<p>对于查询类的语句会返回一个资源句柄（resource），可以通过该资源获取查询结果集中的数据。</p>\r\n<pre class=\"code\">$row = mysql_fetch_array($res);\r\nvar_dump($row);</pre>\r\n<p>默认的，PHP使用最近的数据库连接执行查询，但如果存在多个连接的情况，则可以通过参数指令从那个连接中进行查询。</p>\r\n<pre class=\"code\">$link1 = mysql_connect(\'127.0.0.1\', \'code1\', \'\');\r\n$link2 = mysql_connect(\'127.0.0.1\', \'code1\', \'\', true); //开启一个新的连接\r\n$res = mysql_query(\'select * from user limit 1\', $link1); //从第一个连接中查询数据</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//在这里进行数据查询<br>$arr=mysql_query(\"select * from user limit 1\");<br>$row=mysql_fetch_row($arr);<br>print_r($row);<br>echo $row[0];</p>\r\n<p>11.5 插入新数据到MySQL中</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>当我们了解了如何使用mysql_query进行数据查询以后，那么类似的，插入数据其实也是通过执行一个sql语句来实现，例如：</p>\r\n<pre class=\"code\">$sql = \"insert into user(name, age, class) values(\'李四\', 18, \'高三一班\')\";\r\nmysql_query($sql); //执行插入语句</pre>\r\n<p>通常数据都是存储在变量或者数组中，因此sql语句需要先进行字符串拼接得到。</p>\r\n<pre class=\"code\">$name = \'李四\';\r\n$age = 18;\r\n$class = \'高三一班\';\r\n$sql = \"insert into user(name, age, class) values(\'$name\', \'$age\', \'$class\')\";\r\nmysql_query($sql); //执行插入语句</pre>\r\n<p>在mysql中，执行插入语句以后，可以得到自增的主键id,通过PHP的mysql_insert_id函数可以获取该id。</p>\r\n<pre class=\"code\">$uid = mysql_insert_id();</pre>\r\n<p>这个id的作用非常大，通常可以用来判断是否插入成功，或者作为关联ID进行其他的数据操作。</p>\r\n</div>\r\n</div>\r\n<p><strong>11.6 取得数据查询结果</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>通过前面的章节，我们发现PHP操作数据库跟MySql客户端上操作极为相似，先进行连接，然后执行sql语句，再然后获取我们想要的结果集。</p>\r\n<p>PHP有多个函数可以获取数据集中的一行数据，最常用的是mysql_fetch_array，可以通过设定参数来更改行数据的下标，默认的会包含数字索引的下标以及字段名的关联索引下标。</p>\r\n<pre class=\"code\">$sql = \"select * from user limit 1\";\r\n$result = mysql_query($sql);\r\n$row = mysql_fetch_array($result);</pre>\r\n<p>可以通过设定参数MYSQL_NUM只获取数字索引数组，等同于mysql_fetch_row函数，如果设定参数为MYSQL_ASSOC则只获取关联索引数组，等同于mysql_fetch_assoc函数。</p>\r\n<pre class=\"code\">$row = mysql_fetch_row($result);\r\n$row = mysql_fetch_array($result, MYSQL_NUM); //这两个方法获取的数据是一样的</pre>\r\n<pre class=\"code\">$row = mysql_fetch_assoc($result);\r\n$row = mysql_fetch_array($result, MYSQL_ASSOC);</pre>\r\n<p>如果要获取数据集中的所有数据，我们通过循环来遍历整个结果集。</p>\r\n<pre class=\"code\">$data = array();\r\nwhile ($row = mysql_fetch_array($result)) {\r\n    $data[] = $row;\r\n}</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//数据预处理 防止查询不到数据<br>mysql_query(\"insert into user(name, age, class) values(\'王二\', 19, \'高三五班\')\");<br>//进行数据查询<br>$sql = \"select * from user limit 1\";<br>$result = mysql_query($sql);</p>\r\n<p>//在这里获取一行数据<br>$row=mysql_fetch_assoc($result);</p>\r\n<p>echo \'&lt;pre&gt;\';<br>print_r($row);<br>echo \'&lt;/pre&gt;\';</p>\r\n<p><strong>11.7 查询分页数据</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>上一节中，我们了解到通过循环可以获取一个查询的所有数据，在实际应用中，我们并不希望一次性获取数据表中的所有数据，那样性能会非常的低，因此会使用翻页功能，每页仅显示10条或者20条数据。</p>\r\n<p>通过mysql的limit可以很容易的实现分页，limit m,n表示从m行后取n行数据，在PHP中我们需要构造m与n来实现获取某一页的所有数据。</p>\r\n<p>假定当前页为$page，每页显示$n条数据，那么m为当前页前面所有的数据，既$m = ($page-1) * $n，在知道了翻页原理以后，那么我们很容易通过构造SQL语句在PHP中实现数据翻页。</p>\r\n<pre class=\"code\">$page = 2;\r\n$n = 2;\r\n$m = ($page - 1) * $n;\r\n$sql = \"select * from user limit $m, $n\";\r\n$result = mysql_query($sql);\r\n//循环获取当前页的数据\r\n$data = array();\r\nwhile ($row = mysql_fetch_assoc($result)) {\r\n    $data[] = $row;\r\n}\r\n</pre>\r\n<p>在上面的例子中，我们使用了$m与$n变量来表示偏移量与每页数据条数，但我们推荐使用更有意义的变量名来表示，比如$pagesize, $start, $offset等，这样更容易理解，有助于团队协作开发。</p>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//预设翻页参数<br>$page = 2;<br>$pagesize = 2;<br>//在这里构建分页查询<br>$start=($page-1)*$pagesize;</p>\r\n<p>$sql=\"SELECT * FROM user LIMIT $start,$pagesize\";</p>\r\n<p>//获取翻页数据<br>$result = mysql_query($sql);<br>$data = array();<br>while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {<br>    $data[] = $row;<br>}<br>echo \'&lt;pre&gt;\';<br>print_r($data);<br>echo \'&lt;/pre&gt;\';</p>\r\n<p>11.8 更新与删除数据</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>数据的更新与删除相对比较简单，只需要构建好相应的sql语句，然后调用mysql_query执行就能完成相应的更新与删除操作。</p>\r\n<pre class=\"code\">$sql = \"update user set name = \'曹操\' where id=2 limit 1\";\r\nif (mysql_query($sql)) {\r\n    echo \'更新成功\';\r\n}</pre>\r\n<p>同样的删除可以使用类似以下的代码：</p>\r\n<pre class=\"code\">$sql = \"delete from user where id=2 limit 1\";\r\nif (mysql_query($sql)) {\r\n    echo \'删除成功\';\r\n}</pre>\r\n<p>对于删除与更新操作，可以通过mysql_affected_rows函数来获取更新过的数据行数，如果数据没有变化，则结果为0。</p>\r\n<pre class=\"code\">$sql = \"update user set name = \'曹操\' where id=2 limit 1\";\r\nif (mysql_query($sql)) {\r\n    echo mysql_affected_rows();\r\n}</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//预设数据以便进行更新操作<br>mysql_query(\"insert into user(name, age, class) values(\'王二\', 19, \'高三五班\')\");<br>$id = mysql_insert_id();<br>//在这里更新id为$id的行的名字为李白<br>$sql=\"update user set name=\'李白\' where id=$id limit 1\";<br>mysql_query($sql);<br>//输出更新数据条数<br>echo \'数据更新行数：\'.mysql_affected_rows();<br>mysql_query(\"delete from user where id=\'$id\'\");</p>\r\n<p><strong>11.9 关闭MySQL连接</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>当数据库操作完成以后，可以使用mysql_close关闭数据库连接，默认的，当PHP执行完毕以后，会自动的关闭数据库连接。</p>\r\n<pre class=\"code\">mysql_close();</pre>\r\n<p>虽然PHP会自动关闭数据库连接，一般情况下已经满足需求，但是在对性能要求比较高的情况下，可以在进行完数据库操作之后尽快关闭数据库连接，以节省资源，提高性能。</p>\r\n<p>在存在多个数据库连接的情况下，可以设定连接资源参数来关闭指定的数据库连接。</p>\r\n<pre class=\"code\">$link = mysql_connect($host, $user, $pass);\r\nmysql_close($link);</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>$con=mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//在这里关闭数据库连接</p>\r\n<p>mysql_close($con);</p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n\r\n</div>\r\n\r\n</div>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3052', 'PHP_Bibel阅读笔记（二）——脸黑的一天（？一年） ', '网络', '\n<p>　　一早上起来把50包开了，一张橙卡。。。就问还有谁。。。。。。。。。。。本命年啊，我去买红内裤还不行么。。。。</p>\r\n<p>实时更新，老哥的号的30包什么都没有。。。。不过中午又开了5包，皇帝，好评啊！！！</p>\r\n<p><strong>五、代码重用与函数编写</strong></p>\r\n<p>include警告与require的错误；</p>\r\n<p>大量的包含实现，可以改ini文件中的：auto_prepend_file和auto_append_file;</p>\r\n<p>global关键字也是可以用在函数内的参数的；</p>\r\n<p>参数的引用传递和return</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">1</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\FunctionUse;\r\n</span><span style=\"color: #008080;\">2</span> \r\n<span style=\"color: #008080;\">3</span> <span style=\"color: #0000ff;\">include_once</span> \'index.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">4</span> <span style=\"color: #800080;\">$value</span>=10<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">5</span> increment1(<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">6</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$value</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">7</span> <span style=\"color: #800080;\">$value2</span>=100<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">8</span> <span style=\"color: #800080;\">$value2</span>=increment2(<span style=\"color: #800080;\">$value2</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">9</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$value2</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\";</pre>\r\n</div>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #0000ff;\">function</span> increment1(&amp;<span style=\"color: #800080;\">$value</span>,<span style=\"color: #800080;\">$mount</span>=1<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\"> 4</span>     <span style=\"color: #800080;\">$value</span>=<span style=\"color: #800080;\">$value</span>+<span style=\"color: #800080;\">$mount</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 6</span> \r\n<span style=\"color: #008080;\"> 7</span> <span style=\"color: #0000ff;\">function</span> increment2(<span style=\"color: #800080;\">$value</span>,<span style=\"color: #800080;\">$mount</span>=1<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\"> 9</span>     <span style=\"color: #800080;\">$value</span>=<span style=\"color: #800080;\">$value</span>+<span style=\"color: #800080;\">$mount</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">11</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>递归函数比循环慢且占用更多内存，虽然很多循环都可以用递归来代替；（在应用领域中基本不用它</p>\r\n<p><strong>六、面向对象</strong></p>\r\n<p>好玩的代码，学到些东西！</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">  1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">  2</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\ObjectPage;\r\n</span><span style=\"color: #008080;\">  3</span> \r\n<span style=\"color: #008080;\">  4</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Chapter6.P132</span>\r\n<span style=\"color: #008080;\">  5</span> \r\n<span style=\"color: #008080;\">  6</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> Page\r\n</span><span style=\"color: #008080;\">  7</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">  8</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$content</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  9</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$title</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 10</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$keyword</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 11</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$button</span>=<span style=\"color: #0000ff;\">array</span>(\"Home\"=&gt;\"http://115.159.201.78/wordpress/\",\r\n<span style=\"color: #008080;\"> 12</span>         \"Basic\"=&gt;\"Section1.php\"\r\n<span style=\"color: #008080;\"> 13</span> <span style=\"color: #000000;\">    );\r\n</span><span style=\"color: #008080;\"> 14</span>     \r\n<span style=\"color: #008080;\"> 15</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __set(<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 16</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 17</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #800080;\">$name</span>=<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 18</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 19</span>     \r\n<span style=\"color: #008080;\"> 20</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> Display()\r\n</span><span style=\"color: #008080;\"> 21</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 22</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;html&gt;\\n&lt;head&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 23</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayTitle();\r\n</span><span style=\"color: #008080;\"> 24</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayKeywords();\r\n</span><span style=\"color: #008080;\"> 25</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayStyles();\r\n</span><span style=\"color: #008080;\"> 26</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/head&gt;\\n&lt;body&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 27</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayHeader();\r\n</span><span style=\"color: #008080;\"> 28</span>         <span style=\"color: #800080;\">$this</span>-&gt;DisplayMenu(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">button);\r\n</span><span style=\"color: #008080;\"> 29</span>         <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">content;\r\n</span><span style=\"color: #008080;\"> 30</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayFooter();\r\n</span><span style=\"color: #008080;\"> 31</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/body&gt;\\n&lt;/html&gt;\\n\"<span style=\"color: #000000;\">;   \r\n</span><span style=\"color: #008080;\"> 32</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 33</span>     \r\n<span style=\"color: #008080;\"> 34</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayTitle()\r\n</span><span style=\"color: #008080;\"> 35</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 36</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;title&gt;\".<span style=\"color: #800080;\">$this</span>-&gt;title.\"&lt;/title&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 37</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 38</span>     \r\n<span style=\"color: #008080;\"> 39</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayKeywords()\r\n</span><span style=\"color: #008080;\"> 40</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 41</span>         <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$this</span>-&gt;keyword <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$words</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 42</span>             <span style=\"color: #0000ff;\">echo</span> \"&lt;meta name=\\\"keywords\\\" content=\\\"\".<span style=\"color: #800080;\">$words</span>.\"\\\"/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 43</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\"> 44</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 45</span>     \r\n<span style=\"color: #008080;\"> 46</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayStyles()\r\n</span><span style=\"color: #008080;\"> 47</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 48</span>    ?&gt;\r\n<span style=\"color: #008080;\"> 49</span>      &lt;style&gt;\r\n<span style=\"color: #008080;\"> 50</span> <span style=\"color: #000000;\">      h1 {\r\n</span><span style=\"color: #008080;\"> 51</span>             color:white; font-size:24pt; text-align:<span style=\"color: #000000;\">center;\r\n</span><span style=\"color: #008080;\"> 52</span>             font-family:arial,sans-<span style=\"color: #000000;\">serif\r\n</span><span style=\"color: #008080;\"> 53</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 54</span>     .<span style=\"color: #000000;\">menu {\r\n</span><span style=\"color: #008080;\"> 55</span>         color:white; font-size:12pt; text-align:<span style=\"color: #000000;\">center;\r\n</span><span style=\"color: #008080;\"> 56</span>         font-family:arial,sans-serif; font-weight:<span style=\"color: #000000;\">bold\r\n</span><span style=\"color: #008080;\"> 57</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 58</span> <span style=\"color: #000000;\">    td {\r\n</span><span style=\"color: #008080;\"> 59</span>         background:<span style=\"color: #000000;\">black\r\n</span><span style=\"color: #008080;\"> 60</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 61</span> <span style=\"color: #000000;\">    p {\r\n</span><span style=\"color: #008080;\"> 62</span>         color:black; font-size:12pt; text-align:<span style=\"color: #000000;\">justify;\r\n</span><span style=\"color: #008080;\"> 63</span>         font-family:arial,sans-<span style=\"color: #000000;\">serif\r\n</span><span style=\"color: #008080;\"> 64</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 65</span>     p.<span style=\"color: #000000;\">foot {\r\n</span><span style=\"color: #008080;\"> 66</span>         color:white; font-size:12pt; text-align:<span style=\"color: #000000;\">center;\r\n</span><span style=\"color: #008080;\"> 67</span>         font-family:arial,sans-serif; font-weight:<span style=\"color: #000000;\">bold\r\n</span><span style=\"color: #008080;\"> 68</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 69</span>     a:link,a:visited,a:<span style=\"color: #000000;\">active {\r\n</span><span style=\"color: #008080;\"> 70</span>         color:<span style=\"color: #000000;\">white\r\n</span><span style=\"color: #008080;\"> 71</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 72</span>     &lt;/style&gt;\r\n<span style=\"color: #008080;\"> 73</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 74</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 75</span>     \r\n<span style=\"color: #008080;\"> 76</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayHeader()\r\n</span><span style=\"color: #008080;\"> 77</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 78</span> ?&gt;\r\n<span style=\"color: #008080;\"> 79</span>   &lt;table width=\"100%\" cellpadding=\"12\" \r\n<span style=\"color: #008080;\"> 80</span>          cellspacing=\"0\" border=\"0\"&gt;\r\n<span style=\"color: #008080;\"> 81</span>   &lt;tr bgcolor=\"black\"&gt;\r\n<span style=\"color: #008080;\"> 82</span>     &lt;td align=\"left\"&gt;&lt;img alt=\"img\" src=\"logo.png\"&gt;&lt;/td&gt;\r\n<span style=\"color: #008080;\"> 83</span>     &lt;td&gt;&lt;h1&gt;The OOP page&lt;/h1&gt;&lt;/td&gt;\r\n<span style=\"color: #008080;\"> 84</span>   &lt;/tr&gt;\r\n<span style=\"color: #008080;\"> 85</span> &lt;/table&gt;\r\n<span style=\"color: #008080;\"> 86</span> &lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #008080;\"> 87</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 88</span>     \r\n<span style=\"color: #008080;\"> 89</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span> DisplayMenu(<span style=\"color: #800080;\">$button</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 90</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 91</span>         <span style=\"color: #0000ff;\">echo</span> \"<span style=\"color: #000000;\">&lt;table width=\\\"100%\\\" bgcolor=\\\"white\\\"\r\n</span><span style=\"color: #008080;\"> 92</span>               cellpadding=\\\"4\\\"    cellsapcing=\\\"4\\\"&gt;\\n \"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 93</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;tr&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 94</span>         <span style=\"color: #800080;\">$width</span>=100/<span style=\"color: #008080;\">count</span>(<span style=\"color: #800080;\">$button</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 95</span>         <span style=\"color: #0000ff;\">while</span> (<span style=\"color: #0000ff;\">list</span>(<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$url</span>)=<span style=\"color: #008080;\">each</span>(<span style=\"color: #800080;\">$button</span><span style=\"color: #000000;\">)) {\r\n</span><span style=\"color: #008080;\"> 96</span>             <span style=\"color: #800080;\">$this</span>-&gt;DisplayButton(<span style=\"color: #800080;\">$width</span>,<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$url</span>,\r\n<span style=\"color: #008080;\"> 97</span>                 !<span style=\"color: #800080;\">$this</span>-&gt;IsURLCurrentPage(<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 98</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\"> 99</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/tr&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">100</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/table&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">101</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">102</span>     \r\n<span style=\"color: #008080;\">103</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span> IsURLCurrentPage(<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">104</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">105</span>         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">strpos</span>(<span style=\"color: #800080;\">$_SERVER</span>[\'PHP_SELF\'], <span style=\"color: #800080;\">$url</span>)==<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">106</span>             <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">107</span>         } <span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">108</span>             <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">109</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\">110</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">111</span>     \r\n<span style=\"color: #008080;\">112</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span> DisplayButton(<span style=\"color: #800080;\">$width</span>,<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$url</span>,<span style=\"color: #800080;\">$active</span>=<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">113</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">114</span>         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$active</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">115</span>             <span style=\"color: #0000ff;\">echo</span> \"&lt;td width=\\\"\".<span style=\"color: #800080;\">$width</span>.\"<span style=\"color: #000000;\">%\\\"&gt;\r\n</span><span style=\"color: #008080;\">116</span>             &lt;a href=\\\"\".<span style=\"color: #800080;\">$url</span>.\"<span style=\"color: #000000;\">\\\" onclick=\\\"blank\\\"&gt;\r\n</span><span style=\"color: #008080;\">117</span>             &lt;img src=\\\"w-logo-blue.png\\\" alt=\\\"\".<span style=\"color: #800080;\">$name</span>.\"<span style=\"color: #000000;\">\\\" border=\\\"0\\\" /&gt;&lt;/a&gt;\r\n</span><span style=\"color: #008080;\">118</span>             &lt;a href=\\\"\".<span style=\"color: #800080;\">$url</span>.\"\\\"&gt;&lt;span class=\\\"menu\\\"&gt;\".<span style=\"color: #800080;\">$name</span>.\"<span style=\"color: #000000;\">&lt;/span&gt;&lt;/a&gt;\r\n</span><span style=\"color: #008080;\">119</span>                 &lt;/td&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">120</span>         } <span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">121</span>             <span style=\"color: #0000ff;\">echo</span> \"&lt;td width=\\\"\".<span style=\"color: #800080;\">$width</span>.\"<span style=\"color: #000000;\">%\\\"&gt;\r\n</span><span style=\"color: #008080;\">122</span> <span style=\"color: #000000;\">            &lt;img src=\\\"w-logo-white.png\\\"&gt;\r\n</span><span style=\"color: #008080;\">123</span>             &lt;span class=\\\"menu\\\"&gt;\".<span style=\"color: #800080;\">$name</span>.\"&lt;/span&gt;&lt;/td&gt;\"<span style=\"color: #000000;\">;            \r\n</span><span style=\"color: #008080;\">124</span> <span style=\"color: #000000;\">        }        \r\n</span><span style=\"color: #008080;\">125</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">126</span>     \r\n<span style=\"color: #008080;\">127</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayFooter()\r\n</span><span style=\"color: #008080;\">128</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">129</span> ?&gt;\r\n<span style=\"color: #008080;\">130</span>   &lt;table width=\"100%\" bgcolor=\"black\" cellpadding=\"12\" border=\"0\"&gt;\r\n<span style=\"color: #008080;\">131</span>   &lt;tr&gt;\r\n<span style=\"color: #008080;\">132</span>     &lt;td&gt;\r\n<span style=\"color: #008080;\">133</span>     &lt;p <span style=\"color: #0000ff;\">class</span>=\"foot\"&gt;&amp;<span style=\"color: #008080;\">copy</span>; Andy Liang.&lt;/p&gt;\r\n<span style=\"color: #008080;\">134</span>     &lt;p <span style=\"color: #0000ff;\">class</span>=\"foot\"&gt;Please visit my own site:&lt;a href=\"http://115.159.201.78/wordpress/\"&gt;Andy\'<span style=\"color: #000000;\">s Learning Diary&lt;/a&gt;&lt;/p&gt;\r\n</span><span style=\"color: #008080;\">135</span> <span style=\"color: #000000;\">    &lt;/td&gt;\r\n</span><span style=\"color: #008080;\">136</span> <span style=\"color: #000000;\">  &lt;/tr&gt;\r\n</span><span style=\"color: #008080;\">137</span> <span style=\"color: #000000;\">&lt;/table&gt;\r\n</span><span style=\"color: #008080;\">138</span> <span style=\"color: #000000;\">&lt;?php \r\n</span><span style=\"color: #008080;\">139</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">140</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">141</span> \r\n<span style=\"color: #008080;\">142</span> <span style=\"color: #000000;\">$homepage=new Page();\r\n</span><span style=\"color: #008080;\">143</span> <span style=\"color: #000000;\">$homepage-&gt;content=\"&lt;p&gt;\".\"I do not know what to write down, how about this?\".\"&lt;/p&gt;\";\r\n</span><span style=\"color: #008080;\">144</span> <span style=\"color: #000000;\">$homepage-&gt;title=\"You have to try OO.\";\r\n</span><span style=\"color: #008080;\">145</span> <span style=\"color: #000000;\">$homepage-&gt;keyword=array(\"SAR\",\"MRF\");\r\n</span><span style=\"color: #008080;\">146</span> $homepage-&gt;Display();</pre>\r\n</div>\r\n<p> </p>\r\n<p>就是个默认网页的生成对象，还是有改进空间的。</p>\r\n<p>然后，php写html，有点繁琐，但写完了一身爽。</p>\r\n<p>&lt;?php ?&gt;标记的活用有点厉害啊，套路~</p>\r\n<p>PS:上面代码中的链接不要乱点~会吓到你的。</p>\r\n<p>当然，其实这种得到页面在应用中是不推荐的，只是试着练下手。</p>\r\n<p><strong>七、错误和异常处理</strong></p>\r\n<p>try{ throw new Exception() }  catch{  }</p>\r\n<p>PHP中，异常必须手动抛出；</p>\r\n<p>try代码块和catch代码块是“绑定的”，每个try一定要有一个catch！</p>\r\n<p>一个try可以有多个catch</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Session1.Chapter7.P146</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\ExceptionTry;\r\n</span><span style=\"color: #008080;\"> 4</span> \r\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\r\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> \\ErrorException(\"A serious wrong has occured!\", 14<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #0000ff;\">catch</span> (\\ErrorException <span style=\"color: #800080;\">$e</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 9</span>     <span style=\"color: #0000ff;\">echo</span> \"Exceotion\".<span style=\"color: #800080;\">$e</span>-&gt;getCode().\":\".<span style=\"color: #800080;\">$e</span>-&gt;getMessage().\"&lt;br/&gt;\"\r\n<span style=\"color: #008080;\">10</span>         .\"File:\".<span style=\"color: #800080;\">$e</span>-&gt;getFile().\"at Line:\".<span style=\"color: #800080;\">$e</span>-&gt;getLine().\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">11</span>     <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$e</span><span style=\"color: #000000;\">;    \r\n</span><span style=\"color: #008080;\">12</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>应用中，希望可以<strong>自定义异常处理</strong>：继承已有的Exception类就好，需要注意的是，一般的getMessage等是final的，不能进行重载的，只有_tostring这一个方法可以重载；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">class</span> MyException <span style=\"color: #0000ff;\">extends</span><span style=\"color: #000000;\"> \\ErrorException\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\"> 3</span>     <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> _tostring()\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 5</span>         <span style=\"color: #0000ff;\">return</span> \"Fatal error,sorry!\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\r\n</span><span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> MyException(\"OH\", 14<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #0000ff;\">catch</span> (MyException <span style=\"color: #800080;\">$e</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">13</span>     <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$e</span>-&gt;<span style=\"color: #000000;\">_tostring();\r\n</span><span style=\"color: #008080;\">14</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>应用中，<strong>常常把异常处理用在最容易出错的I/O部分</strong>；格式一般都是</p>\r\n<p>try{ if(!...) throw...} catch(){}</p>\r\n<p> </p>\r\n<p>Session 2</p>\r\n<p>（二） 使用MySQL</p>\r\n<p>八、设计Web数据库</p>\r\n<p> </p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3053', 'PHP_Bibel阅读学习（一）——看书看经典，写文写代码 ', '网络', '\n<p>　　基础快速再看一下，然后每天有新的好玩的看。</p>\r\n<p>这本书，反正好评不少，就是`PHP和MySQL Web开发`，机械工业出版社，澳洲人写的，红皮，有兴趣的可以看一下。</p>\r\n<p> </p>\r\n<p><strong>第一篇 使用PHP</strong></p>\r\n<p><strong>一、入门</strong></p>\r\n<p>5分钟翻一下，两个点吧。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//From Bible\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Session1 Based\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//Chapter1-Use</span>\r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\Using;\r\n</span><span style=\"color: #008080;\">10</span> \r\n<span style=\"color: #008080;\">11</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">引用操作符\r\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #008000;\">//这样子赋值的变量享有同一个空间</span>\r\n<span style=\"color: #008080;\">13</span> <span style=\"color: #800080;\">$a</span>=3<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$a</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #800080;\">$b</span>=&amp;<span style=\"color: #800080;\">$a</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">16</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$b</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">17</span> <span style=\"color: #800080;\">$b</span>=3333<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">18</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$a</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">19</span> \r\n<span style=\"color: #008080;\">20</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">执行操作符\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #008000;\">//``</span>\r\n<span style=\"color: #008080;\">22</span> <span style=\"color: #800080;\">$out</span>=`ls -<span style=\"color: #000000;\">la`;\r\n</span><span style=\"color: #008080;\">23</span> <span style=\"color: #0000ff;\">echo</span> \'&lt;pre&gt;\'.<span style=\"color: #800080;\">$out</span>.\'&lt;/pre&gt;\';</pre>\r\n</div>\r\n<p><strong> 二、数据的存储与检索（文件直接操作</strong></p>\r\n<p>想说的都在代码里了。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\DataUsing;\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断文件是否存在——打开文件——锁定文件——读取文件——写入数据——解锁——关闭文件</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #800080;\">$filename</span>=\'test.txt\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">)) {\r\n</span><span style=\"color: #008080;\"> 5</span>     <span style=\"color: #0000ff;\">echo</span> \'The file you want to visit is not exist!\';<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">exit</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #800080;\">$fp</span>=@<span style=\"color: #008080;\">fopen</span>(<span style=\"color: #800080;\">$filename</span>,\'r+\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008080;\">flock</span>(<span style=\"color: #800080;\">$fp</span>, LOCK_EX);  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">锁定文件，只允许一个写入</span>\r\n<span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">while</span> (!<span style=\"color: #008080;\">feof</span>(<span style=\"color: #800080;\">$fp</span>)){   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">按行读取文件内容</span>\r\n<span style=\"color: #008080;\">11</span>     <span style=\"color: #800080;\">$content</span>=<span style=\"color: #008080;\">fgets</span>(<span style=\"color: #800080;\">$fp</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">12</span>     <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$content</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #800080;\">$writeContent</span>=\'I have something to write into\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #008080;\">fwrite</span>(<span style=\"color: #800080;\">$fp</span>, <span style=\"color: #800080;\">$writeContent</span>,<span style=\"color: #008080;\">strlen</span>(<span style=\"color: #800080;\">$writeContent</span>));  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">控制写入长度，兼容性考虑</span>\r\n<span style=\"color: #008080;\">16</span> <span style=\"color: #008080;\">flock</span>(<span style=\"color: #800080;\">$fp</span>, LOCK_UN);  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">释放锁定</span>\r\n<span style=\"color: #008080;\">17</span> <span style=\"color: #008080;\">fclose</span>(<span style=\"color: #800080;\">$fp</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong>三、数组</strong></p>\r\n<p>其他的都老生常谈，大概查一下随便用，就是熟练度的问题，但还是得知道哈。</p>\r\n<p>然后学到了usort（用户自定义排序）的妙处：</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Chapter3.Array</span>\r\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\ArrayUsort;\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多维数组的排序</span>\r\n<span style=\"color: #008080;\"> 4</span> <span style=\"color: #800080;\">$array1</span>=<span style=\"color: #0000ff;\">array</span>(54654,545,668<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #800080;\">$array2</span>=<span style=\"color: #0000ff;\">array</span>(5454,88,37,54<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #800080;\">$array3</span>=<span style=\"color: #0000ff;\">array</span>(123,4444,5453<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #800080;\">$arrayAll</span>=<span style=\"color: #0000ff;\">array</span>(<span style=\"color: #800080;\">$array1</span>,<span style=\"color: #800080;\">$array2</span>,<span style=\"color: #800080;\">$array3</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$arrayAll</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 9</span> \r\n<span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">function</span> dimensionsCompare(<span style=\"color: #800080;\">$x</span>,<span style=\"color: #800080;\">$y</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">12</span>     <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$x</span>[1]==<span style=\"color: #800080;\">$y</span>[1<span style=\"color: #000000;\">]){\r\n</span><span style=\"color: #008080;\">13</span>         <span style=\"color: #0000ff;\">return</span> 0<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">14</span>     }<span style=\"color: #0000ff;\">elseif</span> (<span style=\"color: #800080;\">$x</span>[1]&lt;<span style=\"color: #800080;\">$y</span>[1<span style=\"color: #000000;\">]){\r\n</span><span style=\"color: #008080;\">15</span>         <span style=\"color: #0000ff;\">return</span> -1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">16</span>     }<span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">17</span>         <span style=\"color: #0000ff;\">return</span> 1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">20</span> @<span style=\"color: #008080;\">usort</span>(<span style=\"color: #800080;\">$arrayAll</span>, \"dimensionsCompare\"<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$arrayAll</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p>其他什么的explode还是有点好玩的。</p>\r\n<p><strong>四、字符串操作和正则表达式</strong></p>\r\n<p>字符串整理</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">1</span> <span style=\"color: #800080;\">$name</span>=<span style=\"color: #008080;\">trim</span>(<span style=\"color: #800080;\">$_POST</span>[\'name\'<span style=\"color: #000000;\">]);\r\n</span><span style=\"color: #008080;\">2</span> <span style=\"color: #800080;\">$email</span>=<span style=\"color: #008080;\">rtrim</span>(<span style=\"color: #800080;\">$_POST</span>[\'email\'<span style=\"color: #000000;\">]);\r\n</span><span style=\"color: #008080;\">3</span> <span style=\"color: #800080;\">$feedback</span>=<span style=\"color: #008080;\">chop</span>(<span style=\"color: #800080;\">$_POST</span>[\'feedback\']);</pre>\r\n</div>\r\n<p> </p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3054', 'MordenPHP阅读笔记（一）——先跑再说，跑累了再走 ', '网络', '\n<p>---恢复内容开始---</p>\r\n<p>　　后台一大堆半成品，或者是几乎不成的。。。</p>\r\n<p>这本书不错，起码是别人推荐的，然后也是比较新的东西，学哪本不是学嘛，关键是得看。</p>\r\n<p>今儿个网不好，科研所需的代码下不到，看书做笔记吧。</p>\r\n<p>这本书基本将的是5.4版本后的一些新变化，写的浅显易懂，虽然鄙人走的还不顺溜，跑一跑也摔不到哪儿去，跑累了我有的是走的机会~~</p>\r\n<p><strong>（一）特性</strong></p>\r\n<p><strong>一、命名空间</strong></p>\r\n<p>一个文件一个类，用了命名空间方便互相调用；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//Namespace\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 4</span> <span style=\"color: #000000;\">namespace ModernPHP\\feature\\mingmingkongjian;\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #0000ff;\">function</span> <span style=\"color: #008080;\">var_dump</span><span style=\"color: #000000;\">(){\r\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">echo</span> \"Shit!\".\"&lt;/br&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #800080;\">$test</span>=\"OK\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$test</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">11</span> \\ModernPHP\\feature\\mingmingkongjian\\<span style=\"color: #008080;\">var_dump</span><span style=\"color: #000000;\">();\r\n</span><span style=\"color: #008080;\">12</span> \r\n<span style=\"color: #008080;\">13</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">命名空间必须顶头，但一个文件中可以有很多命名空间，然后也可以有子空间\r\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #008000;\">//厂商的命名空间是最顶层的命名空间，用于识别品牌\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #008000;\">//旨在解决命名冲突的问题，当然现在应该有比较灵活的其他用法\r\n</span><span style=\"color: #008080;\">16</span> \r\n<span style=\"color: #008080;\">17</span> <span style=\"color: #008000;\">//一个比较实用的点：导入和别名\r\n</span><span style=\"color: #008080;\">18</span> <span style=\"color: #008000;\">//导入另一个文件夹下的类定义，直接用</span>\r\n<span style=\"color: #008080;\">19</span> <span style=\"color: #0000ff;\">require</span> \'index.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">20</span> <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> a\\aaa;\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #800080;\">$daoru</span>=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> aaa;\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #800080;\">$daoru</span>-&gt;<span style=\"color: #000000;\">send();\r\n</span><span style=\"color: #008080;\">23</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">use是导入，然后在use中设置最懒的别名\r\n</span><span style=\"color: #008080;\">24</span> <span style=\"color: #008000;\">//另外，5.6版本后可以实现use 函数\r\n</span><span style=\"color: #008080;\">25</span> <span style=\"color: #008000;\">// use func a\\call;\r\n</span><span style=\"color: #008080;\">26</span> <span style=\"color: #008000;\">// \\a\\call();</span></pre>\r\n</div>\r\n<p>index.php</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">namespace a;\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> aaa{\r\n</span><span style=\"color: #008080;\"> 4</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> send(){\r\n</span><span style=\"color: #008080;\"> 5</span>         <span style=\"color: #0000ff;\">echo</span> \"ok\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> call(){\r\n</span><span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">echo</span> \"func_use is successful.\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">11</span> }</pre>\r\n</div>\r\n<p><strong>二、使用接口</strong></p>\r\n<p>接口，本来没太懂，看懂了之后简直了，牛逼啊！</p>\r\n<p>一个接口，大家只要遵守接口规定，就都能用，就这么个意思。</p>\r\n<p>下面是一个获得内容的接口示例，还可以写更多基于此接口的模块；（其中，模块中getContent的我基本都不会。。。哭）</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">\r\n//Chapter2.P19\r\n//Feature_Interface\r\n//</span>\r\n<span style=\"color: #000000;\">namespace ModernPHP\\feature\\jiekou;\r\n\r\n\r\n\r\n</span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> DocumentStore{\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$data</span>=<span style=\"color: #000000;\">[];\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> addDocument(Documentable <span style=\"color: #800080;\">$document</span>){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">这里注明只能使用接口的参数</span>\r\n        <span style=\"color: #800080;\">$key</span>=<span style=\"color: #800080;\">$document</span>-&gt;<span style=\"color: #000000;\">getID();\r\n        </span><span style=\"color: #800080;\">$value</span>=<span style=\"color: #800080;\">$document</span>-&gt;<span style=\"color: #000000;\">getContent();\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;data[<span style=\"color: #800080;\">$key</span>]=<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">;\r\n    }\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getDocuments(){\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">data;\r\n    }\r\n}\r\n\r\n</span><span style=\"color: #0000ff;\">interface</span> Documentable{     <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">定义接口，说白了就是定规矩，其他地方要用，就得说一声</span>\r\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getId();\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getContent();\r\n}\r\n\r\n</span><span style=\"color: #0000ff;\">class</span> HtmlDocument <span style=\"color: #0000ff;\">implements</span> Documentable{   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">声明要用接口；这个是获得url的内容的</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">;\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __construct(<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;url=<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">;\r\n    }\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getId(){\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">url;\r\n    }\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getContent(){\r\n        </span><span style=\"color: #800080;\">$ch</span>=curl_init();   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">这里的curl是针对url进行操作一个库（相当于）。这个命令是开启一个curl对话，所以下面这些都是一个对话</span>\r\n        curl_setopt(<span style=\"color: #800080;\">$ch</span>, CURLOPT_URL, <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">url);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>, CURLOPT_RETURNTRANSFER, 1<span style=\"color: #000000;\">);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>,CURLOPT_CONNECTTIMEOUT,3<span style=\"color: #000000;\">);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>,CURLOPT_FOLLOWLOCATION,1<span style=\"color: #000000;\">);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>,CURLOPT_MAXREDIRS,3<span style=\"color: #000000;\">);\r\n        </span><span style=\"color: #800080;\">$html</span>=curl_exec(<span style=\"color: #800080;\">$ch</span>);   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">由这个命令执行刚才的对话</span>\r\n        curl_close(<span style=\"color: #800080;\">$ch</span><span style=\"color: #000000;\">);\r\n        \r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$html</span><span style=\"color: #000000;\">;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n</span><span style=\"color: #800080;\">$documentStore</span>=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> DocumentStore();\r\n\r\n</span><span style=\"color: #800080;\">$htmlDoc</span>=<span style=\"color: #0000ff;\">new</span> HtmlDocument(\'http://www.baidu.com\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$documentStore</span>-&gt;addDocument(<span style=\"color: #800080;\">$htmlDoc</span><span style=\"color: #000000;\">);\r\n\r\n\r\n\r\n</span><span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$documentStore</span>-&gt;getDocuments());</pre>\r\n</div>\r\n<p> 另一个模块</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">class</span> StreamDocument <span style=\"color: #0000ff;\">implements</span> Documentable{  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">流媒体</span>\r\n<span style=\"color: #008080;\"> 2</span>     <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$resource</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 3</span>     <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$buffer</span>;   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">缓冲区大小</span>\r\n<span style=\"color: #008080;\"> 4</span>     \r\n<span style=\"color: #008080;\"> 5</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __construct(<span style=\"color: #800080;\">$resource</span>,<span style=\"color: #800080;\">$buffer</span>=4096<span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 6</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>=<span style=\"color: #800080;\">$resource</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 7</span>         <span style=\"color: #800080;\">$this</span>-&gt;buffer=<span style=\"color: #800080;\">$buffer</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 9</span>     \r\n<span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getId(){\r\n</span><span style=\"color: #008080;\">11</span>         <span style=\"color: #0000ff;\">return</span> \'resource-\'.(int)<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">13</span>     \r\n<span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getContent(){\r\n</span><span style=\"color: #008080;\">15</span>         <span style=\"color: #800080;\">$streamContent</span>=\'\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">16</span>         <span style=\"color: #008080;\">rewind</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>); <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">rewind() 函数将文件指针的位置倒回文件的开头</span>\r\n<span style=\"color: #008080;\">17</span>         <span style=\"color: #0000ff;\">while</span> (<span style=\"color: #008080;\">feof</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>)===<span style=\"color: #0000ff;\">false</span>){    <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">feof() 函数检测是否已到达文件末尾 (eof)。</span>\r\n<span style=\"color: #008080;\">18</span>             <span style=\"color: #800080;\">$streamContent</span>.=<span style=\"color: #008080;\">fread</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>,<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">buffer);\r\n</span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\">20</span>         \r\n<span style=\"color: #008080;\">21</span>         <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$streamContent</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">23</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong> 三、性状</strong></p>\r\n<p>奇怪的东西。。。</p>\r\n<p>其实就是为了多重继承或者一对多个不同的类别吧</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter2.P23\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Feature_Trait\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//性状\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//前面说的接口，是针对同类型的东西，实现相同的功能的；\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\">//这里的性状是针对不同的东西，实现相同的功能\r\n</span><span style=\"color: #008080;\">10</span> \r\n<span style=\"color: #008080;\">11</span> <span style=\"color: #008000;\">//基本用法如下</span>\r\n<span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">trait traitName{\r\n</span><span style=\"color: #008080;\">13</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> testThis(){\r\n</span><span style=\"color: #008080;\">14</span>         <span style=\"color: #0000ff;\">echo</span> \"This is how trait works.\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">16</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">17</span> \r\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">trait traitMore{\r\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> testAgain(){\r\n</span><span style=\"color: #008080;\">20</span>         <span style=\"color: #0000ff;\">echo</span> \"This is multiple use.\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">23</span> \r\n<span style=\"color: #008080;\">24</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> className{\r\n</span><span style=\"color: #008080;\">25</span>     <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> traitName;\r\n</span><span style=\"color: #008080;\">26</span>     <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> traitMore;\r\n</span><span style=\"color: #008080;\">27</span>     \r\n<span style=\"color: #008080;\">28</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">29</span> \r\n<span style=\"color: #008080;\">30</span> <span style=\"color: #800080;\">$classMine</span>=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> className();\r\n</span><span style=\"color: #008080;\">31</span> <span style=\"color: #800080;\">$classMine</span>-&gt;<span style=\"color: #000000;\">testThis();\r\n</span><span style=\"color: #008080;\">32</span> <span style=\"color: #800080;\">$classMine</span>-&gt;testAgain();</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong> 四、生成器</strong></p>\r\n<p>直接上代码</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter2.P26\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Feature_Generator\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//生成器\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//其实就是在函数中使用了yield语句的东西\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\">//优点在于节省了内存使用情况\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #008000;\">//方法是通过动态分配内存进行循环操作\r\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #008000;\">//典型用处是处理csv类数据文件</span>\r\n<span style=\"color: #008080;\">12</span> \r\n<span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">namespace ModernPHP\\feature\\shengchegnqi;\r\n</span><span style=\"color: #008080;\">14</span> \r\n<span style=\"color: #008080;\">15</span> <span style=\"color: #0000ff;\">function</span> getRows(<span style=\"color: #800080;\">$file</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">16</span>     <span style=\"color: #800080;\">$handle</span>=<span style=\"color: #008080;\">fopen</span>(<span style=\"color: #800080;\">$file</span>,\'rb\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">17</span>     <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$handle</span>===<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">18</span>         <span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> <span style=\"color: #0000ff;\">Exception</span>();  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">抛出错误原因</span>\r\n<span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">20</span>     <span style=\"color: #0000ff;\">while</span> (<span style=\"color: #008080;\">feof</span>(<span style=\"color: #800080;\">$handle</span>)===<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">) {\r\n</span><span style=\"color: #008080;\">21</span>         yield <span style=\"color: #008080;\">fgetcsv</span>(<span style=\"color: #800080;\">$handle</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">23</span>     <span style=\"color: #008080;\">fclose</span>(<span style=\"color: #800080;\">$handle</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">24</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">25</span> \r\n<span style=\"color: #008080;\">26</span> <span style=\"color: #0000ff;\">foreach</span> (getRows(\'data.csv\') <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$row</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">27</span>     <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$row</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">28</span>     <span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">30</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">当数据文件很大时，效果尤其明显</span></pre>\r\n</div>\r\n<p> </p>\r\n<p><strong> 五、闭包</strong></p>\r\n<p>这里闭包基本等于匿名函数</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter2.P29\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Feature_ClosePatch\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//闭包或匿名函数\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//把函数当作是变量\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\">//然后它就可以像变量一样用来用去了。。\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #008000;\">//常用做函数和方法的回调</span>\r\n<span style=\"color: #008080;\">11</span> \r\n<span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">namespace ModernPHP\\feature\\bibao;\r\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #800080;\">$var</span>=<span style=\"color: #0000ff;\">function</span> (<span style=\"color: #800080;\">$name</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">sprintf</span>(\'Hello %s\',<span style=\"color: #800080;\">$name</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">};\r\n</span><span style=\"color: #008080;\">16</span> \r\n<span style=\"color: #008080;\">17</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$var</span>(\'Andy\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">18</span> \r\n<span style=\"color: #008080;\">19</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">做回调</span>\r\n<span style=\"color: #008080;\">20</span> <span style=\"color: #800080;\">$array</span>=[2,3,4<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #800080;\">$num</span>=<span style=\"color: #008080;\">array_map</span>(<span style=\"color: #0000ff;\">function</span> (<span style=\"color: #800080;\">$number</span>){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">array_map,将函数作用到数组中的每个值上，每个值都乘以本身，并返回带有新值的数组</span>\r\n<span style=\"color: #008080;\">22</span>     <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$number</span>+1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">23</span> },<span style=\"color: #800080;\">$array</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">24</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$num</span>);</pre>\r\n</div>\r\n<p> 六、附加状态</p>\r\n<p>这个没搞懂。。。</p>\r\n<p>（二）标准</p>\r\n<p>PHP-FIG的一些约定俗成；</p>\r\n<p>---类名称，驼峰式，ShitHappens</p>\r\n<p>---方法名称，驼峰式，但首字母小写，shitHappens</p>\r\n<p>---缩进统一为4个空格</p>\r\n<p>---不写?&gt;结束符号；</p>\r\n<p>---{另起一行；</p>\r\n<p>---命名空间要有空格；</p>\r\n<p>---类中属性和方法必须有可见性声明；</p>\r\n<p>---if等控制性结构后面有空格；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter3.P44\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//PHP-FIG puts PSRs\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 6</span> \r\n<span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">namespace ModernPHP\\standard\\realize;\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> ModernPHP\\feature\\bibao;\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> ModernPHP\\feature\\fujiazhuangtai;\r\n</span><span style=\"color: #008080;\">11</span> \r\n<span style=\"color: #008080;\">12</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> ShitHappens\r\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$a</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span>     \r\n<span style=\"color: #008080;\">16</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> suck()\r\n</span><span style=\"color: #008080;\">17</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">18</span>         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$this</span>-&gt;a===<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">19</span>             <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">20</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">22</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>----------------------</p>\r\n<p>后面的都是讲述的东西，有需要的我再写吧。 </p>\r\n<p> </p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3055', 'PHP&MySQL（三）——数组 ', '网络', '\n<p>　　前一段忙着比赛忙着找实习，最后一地鸡毛，就是长长教训罢了。。。。</p>\r\n<p>看书还是多必须的，试着高效的、踏实的做吧！！</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">  1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">  2</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">PHP数组其实能创建很多种数据结构，列表，堆栈，队列，树等\r\n</span><span style=\"color: #008080;\">  3</span> <span style=\"color: #008000;\">//数组创建array_fill</span>\r\n<span style=\"color: #008080;\">  4</span> <span style=\"color: #800080;\">$start_index</span>=1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  5</span> <span style=\"color: #800080;\">$num</span>=10<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  6</span> <span style=\"color: #800080;\">$value</span>=\"fuck\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  7</span> <span style=\"color: #800080;\">$array1</span>=<span style=\"color: #008080;\">array_fill</span>(<span style=\"color: #800080;\">$start_index</span>, <span style=\"color: #800080;\">$num</span>, <span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">); \r\n</span><span style=\"color: #008080;\">  8</span> \r\n<span style=\"color: #008080;\">  9</span> \r\n<span style=\"color: #008080;\"> 10</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array1</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 11</span> \r\n<span style=\"color: #008080;\"> 12</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #008080;\">count</span>(<span style=\"color: #800080;\">$array1</span>); <span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"; <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">count计数实现，返回一个数，代表数组长度\r\n</span><span style=\"color: #008080;\"> 13</span> <span style=\"color: #008000;\">//print_r(array_count_values($array1));\r\n</span><span style=\"color: #008080;\"> 14</span> \r\n<span style=\"color: #008080;\"> 15</span> <span style=\"color: #008000;\">//移除元素</span>\r\n<span style=\"color: #008080;\"> 16</span> <span style=\"color: #0000ff;\">unset</span>(<span style=\"color: #800080;\">$array1</span>[3<span style=\"color: #000000;\">]);\r\n</span><span style=\"color: #008080;\"> 17</span> <span style=\"color: #800080;\">$array2</span>=<span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 18</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">unset($array1);</span>\r\n<span style=\"color: #008080;\"> 19</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array1</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 20</span> \r\n<span style=\"color: #008080;\"> 21</span> <span style=\"color: #800080;\">$start</span>=\"a\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 22</span> <span style=\"color: #800080;\">$limit</span>=\"z\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 23</span> <span style=\"color: #800080;\">$array_letters</span>=<span style=\"color: #008080;\">range</span>(<span style=\"color: #800080;\">$start</span>, <span style=\"color: #800080;\">$limit</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 24</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array_letters</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 25</span> \r\n<span style=\"color: #008080;\"> 26</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">异构数组，即数组中有各种类型的</span>\r\n<span style=\"color: #008080;\"> 27</span> <span style=\"color: #800080;\">$array_yigou</span>=<span style=\"color: #0000ff;\">array</span>(\"fuck\",1,23.343,<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 28</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 29</span> \r\n<span style=\"color: #008080;\"> 30</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多维数组</span>\r\n<span style=\"color: #008080;\"> 31</span> <span style=\"color: #800080;\">$array_dimensions</span>=<span style=\"color: #0000ff;\">array</span>(<span style=\"color: #800080;\">$array1</span>,<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 32</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_dimensions</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 33</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$array_dimensions</span>[1][2];<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 34</span> \r\n<span style=\"color: #008080;\"> 35</span> <span style=\"color: #800080;\">$array_complicated</span>=<span style=\"color: #0000ff;\">array</span>(<span style=\"color: #800080;\">$array_dimensions</span>,<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 36</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_complicated</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 37</span> \r\n<span style=\"color: #008080;\"> 38</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">foreach,一开始我理解上有点问题，foreach本来就是一个循环了！！！</span>\r\n<span style=\"color: #008080;\"> 39</span> <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$array1</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$person</span> =&gt; <span style=\"color: #800080;\">$saying</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 40</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 41</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 42</span> \r\n<span style=\"color: #008080;\"> 43</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">比较适合foreach理解的一种方式</span>\r\n<span style=\"color: #008080;\"> 44</span> <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$array1</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$person</span> =&gt; <span style=\"color: #800080;\">$saying</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 45</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" said \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 46</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 47</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 48</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 49</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 50</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 51</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 52</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 53</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 54</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 55</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 56</span> \r\n<span style=\"color: #008080;\"> 57</span> <span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 58</span> \r\n<span style=\"color: #008080;\"> 59</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">数组计数\r\n</span><span style=\"color: #008080;\"> 60</span> <span style=\"color: #008000;\">//array_count_values返回一个数组,统计（！！）每个value的个数</span>\r\n<span style=\"color: #008080;\"> 61</span> <span style=\"color: #800080;\">$array1Value</span>=<span style=\"color: #008080;\">array_count_values</span>(<span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 62</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array1</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 63</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #800080;\">$array1Value</span>[\"fuck\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #008080;\"> 64</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">count计数的是“个体”的数目吧</span>\r\n<span style=\"color: #008080;\"> 65</span> <span style=\"color: #0000ff;\">print</span> \"There is \".<span style=\"color: #008080;\">count</span>(<span style=\"color: #800080;\">$array_letters</span>).\" letters.\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 66</span> \r\n<span style=\"color: #008080;\"> 67</span> <span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 68</span> \r\n<span style=\"color: #008080;\"> 69</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">神奇的explode和implode\r\n</span><span style=\"color: #008080;\"> 70</span> <span style=\"color: #008000;\">//就是字符串的拆解和安装\r\n</span><span style=\"color: #008080;\"> 71</span> <span style=\"color: #008000;\">//注意一定要有glue或者什么，不能不输入</span>\r\n<span style=\"color: #008080;\"> 72</span> <span style=\"color: #800080;\">$sentence</span>=\"What is your name?\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 73</span> <span style=\"color: #800080;\">$explode_demo</span>=<span style=\"color: #008080;\">explode</span>(\" \", <span style=\"color: #800080;\">$sentence</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 74</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$explode_demo</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 75</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">implode</span>(\" \", <span style=\"color: #800080;\">$explode_demo</span>));<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 76</span> \r\n<span style=\"color: #008080;\"> 77</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">数组元素搜索判断\r\n</span><span style=\"color: #008080;\"> 78</span> <span style=\"color: #008000;\">//in_array判断是否存在,array_search返回在哪里</span>\r\n<span style=\"color: #008080;\"> 79</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #008080;\">in_array</span>(\"fuck\", <span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 80</span> <span style=\"color: #800080;\">$check_list</span>=\"fuck you\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 81</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$check_list</span>, <span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 82</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">in_array第三个参数为严格检查类型，默认为false</span>\r\n<span style=\"color: #008080;\"> 83</span> <span style=\"color: #800080;\">$check_list2</span>=\"1 is in here\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 84</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$check_list2</span>, <span style=\"color: #800080;\">$array_yigou</span>,<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 85</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$check_list2</span>, <span style=\"color: #800080;\">$array_yigou</span>,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 86</span> \r\n<span style=\"color: #008080;\"> 87</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #008080;\">array_search</span>(\"fuck\", <span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 88</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #008080;\">array_search</span>(1, <span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 89</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">array_key_exists判断key是不是存在</span>\r\n<span style=\"color: #008080;\"> 90</span> <span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 91</span> \r\n<span style=\"color: #008080;\"> 92</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">直接利用key或value</span>\r\n<span style=\"color: #008080;\"> 93</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">array_keys</span>(<span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 94</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">array_values</span>(<span style=\"color: #800080;\">$array_dimensions</span>));<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 95</span> \r\n<span style=\"color: #008080;\"> 96</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">implode和array_merge</span>\r\n<span style=\"color: #008080;\"> 97</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">implode</span>(\" \", <span style=\"color: #800080;\">$array1</span>));<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 98</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">array_merge</span>(<span style=\"color: #800080;\">$array1</span>,<span style=\"color: #800080;\">$array_letters</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 99</span> \r\n<span style=\"color: #008080;\">100</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">数组排序\r\n</span><span style=\"color: #008080;\">101</span> <span style=\"color: #008000;\">//注意排序之后，直接改变/返回到原数组\r\n</span><span style=\"color: #008080;\">102</span> <span style=\"color: #008000;\">//sort升rsort降\r\n</span><span style=\"color: #008080;\">103</span> <span style=\"color: #008000;\">//这里也是我第一次对PHP语言有理解的地方，各种封装好的函数，需要的就是多用，知道，然后熟练的调用\r\n</span><span style=\"color: #008080;\">104</span> <span style=\"color: #008000;\">//自己编写的排序函数，往往没有其自带的/现成的函数效率/效果好</span>\r\n<span style=\"color: #008080;\">105</span> <span style=\"color: #800080;\">$array_num</span>=<span style=\"color: #008080;\">range</span>(2, 123,3<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">106</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array_num</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">107</span> <span style=\"color: #008080;\">rsort</span>(<span style=\"color: #800080;\">$array_num</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">108</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array_num</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">109</span> <span style=\"color: #008080;\">sort</span>(<span style=\"color: #800080;\">$array_letters</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">110</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_dimensions</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">111</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">关联数组，若想保持键值的关系不变，应该用asort</span>\r\n<span style=\"color: #008080;\">112</span> <span style=\"color: #008080;\">sort</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">113</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">114</span> <span style=\"color: #008080;\">rsort</span>(<span style=\"color: #800080;\">$array_yigou</span>,<span style=\"color: #000000;\">SORT_NUMERIC);\r\n</span><span style=\"color: #008080;\">115</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">116</span> <span style=\"color: #008080;\">asort</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">117</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">118</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">ksort是根据key值来排序的\r\n</span><span style=\"color: #008080;\">119</span> \r\n<span style=\"color: #008080;\">120</span> <span style=\"color: #008000;\">//总结_数组\r\n</span><span style=\"color: #008080;\">121</span> <span style=\"color: #008000;\">//数组创建——array(),array_fill(),range()\r\n</span><span style=\"color: #008080;\">122</span> <span style=\"color: #008000;\">//数组输出——var_dump,print_r\r\n</span><span style=\"color: #008080;\">123</span> <span style=\"color: #008000;\">//数组种类——索引数组，关联数组；异构数组，多维数组\r\n</span><span style=\"color: #008080;\">124</span> <span style=\"color: #008000;\">//数组排序——sort(),rsort(),asort(),ksort()\r\n</span><span style=\"color: #008080;\">125</span> <span style=\"color: #008000;\">//foreach的使用\r\n</span><span style=\"color: #008080;\">126</span> <span style=\"color: #008000;\">//implode(),explode()\r\n</span><span style=\"color: #008080;\">127</span> <span style=\"color: #008000;\">//is_array,in_array,array_search\r\n</span><span style=\"color: #008080;\">128</span> <span style=\"color: #008000;\">//array_count_values,count</span></pre>\r\n</div>\r\n<p> </p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3056', 'PHP实现文件上传下载——心在忙而已 ', '网络', '\n<p>　　这一周都没有写什么东西，是啊，一周时间都没有学习太多新的东西，除了开车。</p>\r\n<p>妈蛋啊，天天中午去学车然后两周没有午觉的日子还是很崩溃的，加上之后工作压力带来的心忙，宝宝不开心啊。</p>\r\n<p>不过，也是自己不是那么能吃苦吧。那天看到的那句话怎么说的来着，我痛恨自己，在简单和困难之前，选择了前者；在什么什么面前，balabala，不是很鸡汤，但有点触动，愿少点矫情和娇气。</p>\r\n<p><strong>PHP实现文件上传与下载——来自mooc网</strong></p>\r\n<p><strong>一、上传原理与配置</strong></p>\r\n<p><strong>1.1 原理</strong></p>\r\n<p>将客户端文件<strong>上传到服务器端</strong>，再将服务器端的文件（<strong>临时文件）移动到指定目录</strong>即可。</p>\r\n<p><strong>1.2 客户端配置</strong></p>\r\n<p>所需：<strong>表单</strong>页面（选择上传文件）；</p>\r\n<p>具体而言：<strong>发送方式为POST，添加enctype=\"multipart/form-data\"属性</strong>，两者缺一不可（但是，优缺点并存，这里也限定了上传的方式和上传的文件之后的调用等方面，后面会说到）</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：\r\n</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">php\r\n\r\n</span><span style=\"color: #0000ff;\">?&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p>先是表单页面（请自动忽略前端问题。。。），关键就是form的属性；另外就是<strong>input 中用到了type=\"file\"这一点</strong>（体现到php的强大的拓展等等）。</p>\r\n<p>然后是doAction</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$_FILES:文件上传变量\r\n//print_r($_FILES);</span>\r\n<span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'name\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$type</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'type\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$tmp_name</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'tmp_name\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$size</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'size\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$error</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'error\'<span style=\"color: #000000;\">];\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">将服务器上的临时文件移动到指定位置\r\n//方法一move_upload_file($tmp_name,$destination)\r\n//move_uploaded_file($tmp_name, \"uploads/\".$filename);//文件夹应提前建立好，不然报错\r\n//方法二copy($src,$des)\r\n//以上两个函数都是成功返回真，否则返回false\r\n//copy($tmp_name, \"copies/\".$filename);\r\n//注意，不能两个方法都对临时文件进行操作，临时文件似乎操作完就没了，我们试试反过来</span>\r\n<span style=\"color: #008080;\">copy</span>(<span style=\"color: #800080;\">$tmp_name</span>, \"copies/\".<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span>, \"uploads/\".<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">能够实现，说明move那个函数基本上相当于剪切；copy就是copy，临时文件还在\r\n\r\n//另外，错误信息也是不一样的，遇到错误可以查看或者直接报告给用户</span>\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$error</span>==0<span style=\"color: #000000;\">) {\r\n    </span><span style=\"color: #0000ff;\">echo</span> \"上传成功！\"<span style=\"color: #000000;\">;\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">case</span> 1:\r\n            <span style=\"color: #0000ff;\">echo</span> \"超过了上传文件的最大值，请上传2M以下文件\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 2:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件过多，请一次上传20个及以下文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 3:\r\n            <span style=\"color: #0000ff;\">echo</span> \"文件并未完全上传，请再次尝试！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 4:\r\n            <span style=\"color: #0000ff;\">echo</span> \"未选择上传文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 5:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件为0\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p><span style=\"line-height: 1.5;\">先把print_r($_FILES)这个信息看一下</span></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #000000;\">Array\r\n(\r\n    [myFile] =&gt; Array\r\n        (\r\n            [name] =&gt; 梁博_简历.doc\r\n            [type] =&gt; application/msword\r\n            [tmp_name] =&gt; D:\\wamp\\tmp\\php1D78.tmp\r\n            [error] =&gt; 0\r\n            [size] =&gt; 75776\r\n        )\r\n\r\n)</span></pre>\r\n</div>\r\n<p>所以得到的是个二维数组，该怎么用，都是基本的东西（其实我喜欢降维再用）；</p>\r\n<p>基本是一眼就懂的东西，不罗嗦，关键有两个：<strong>tmp_name临时文件名；error报错信息（代号，后面可以利用）</strong>；</p>\r\n<p>然后这里看一下doAction后面一部分，利用报错信息来反馈给用户，需要说明的是为什么报错，和报错信息是什么都；</p>\r\n<p><strong>1.3 关于报错</strong></p>\r\n<p><strong>--报错原因</strong></p>\r\n<p>基本上都是超过或者不符合服务器关于上传文件的配置，那么服务器端<strong>配置</strong>有哪些呢？</p>\r\n<p>先考虑上传我们用了什么？POST，upload</p>\r\n<p>所以在php.ini中找这么几项：</p>\r\n<p>file_upload:On</p>\r\n<p>upload_tmp_dir=——临时文件保存目录；</p>\r\n<p>upload_max_filesize=2M</p>\r\n<p>max_file_uploads=20——允许一次上传的最大文件数量（注意和上面那个的区别，有没有size，别乱想）</p>\r\n<p>post_max_size=8M——post方式发送数据的最大值</p>\r\n<p>其他相关配置</p>\r\n<p>max_exectuion_time=-1——最大执行时间，避免程序不好占用服务器资源；</p>\r\n<p>max_input_time=60</p>\r\n<p>max_input_nesting_level=64——输入嵌套深度；</p>\r\n<p>memory_limit=128M——最大单线程的独立内存使用量</p>\r\n<p>总之都是有关资源的配置。</p>\r\n<p><strong>--错误号</strong></p>\r\n<p>以下（偷懒）引自http://blog.sina.com.cn/s/blog_3cdfaea201008utf.html</p>\r\n<p>UPLOAD_ERR_OK             值：0; 没有错误发生，文件上传成功。<br>  UPLOAD_ERR_INI_SIZE      \r\n值：1; 上传的文件超过了 php.ini 中 upload_max_filesize \r\n选项限制的值。<br>  UPLOAD_ERR_FORM_SIZE  值：2; 上传文件的大小超过了 HTML 表单中 \r\nMAX_FILE_SIZE \r\n选项指定的值。<br>  UPLOAD_ERR_PARTIAL          \r\n值：3; \r\n文件只有部分被上传。<br>  UPLOAD_ERR_NO_FILE          \r\n值：4; 没有文件被上传。  </p>\r\n<p>注意：这个错误信息是第一步上传的信息，也就是上传到临时文件夹的情况，而不是move或者copy的情况。 </p>\r\n<p><strong>二、上传相关限制</strong></p>\r\n<p><strong>2.1 客户端限制</strong></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction2.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"hidden\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"MAX_FILE_SIZE\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"101321\"</span> <span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：\r\n</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile\"</span><span style=\"color: #ff0000;\"> accept</span><span style=\"color: #0000ff;\">=\"image/jpeg,image/gif,text/html\"</span><span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这里用input的属性对上传文件的大小和类型进行了限制，但是个人感觉：一，html代码是“可见的”；二，常不起作用（没找到原因，但因为第一个我也想放弃它，知道就好。 </p>\r\n<p> 2.2 服务器端限制</p>\r\n<p>主要限制大小和类型，再有就是方式。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">接受文件，临时文件信息</span>\r\n<span style=\"color: #800080;\">$fileinfo</span>=<span style=\"color: #800080;\">$_FILES</span>[\"myFile\"];<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">降维操作</span>\r\n<span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$tmp_name</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"tmp_name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$size</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"size\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$error</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"error\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$type</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"type\"<span style=\"color: #000000;\">];\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">服务器端设定限制</span>\r\n<span style=\"color: #800080;\">$maxsize</span>=10485760;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">10M,10*1024*1024</span>\r\n<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'tif\');<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">允许上传的文件类型（拓展名</span>\r\n<span style=\"color: #800080;\">$ext</span>=<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$filename</span>,PATHINFO_EXTENSION);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">提取上传文件的拓展名\r\n\r\n//目的信息</span>\r\n<span style=\"color: #800080;\">$path</span>=\"uploads\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$path</span>)) {   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">当目录不存在，就创建目录</span>\r\n    <span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$path</span>,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n    </span><span style=\"color: #008080;\">chmod</span>(<span style=\"color: #800080;\">$path</span>, 0777<span style=\"color: #000000;\">);\r\n}\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$destination=$path.\"/\".$filename;\r\n//得到唯一的文件名！防止因为文件名相同而产生覆盖</span>\r\n<span style=\"color: #800080;\">$uniName</span>=<span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span>)).<span style=\"color: #800080;\">$ext</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">md5加密，uniqid产生唯一id，microtime做前缀</span>\r\n\r\n\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$error</span>==0<span style=\"color: #000000;\">) {\r\n    </span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$size</span>&gt;<span style=\"color: #800080;\">$maxsize</span><span style=\"color: #000000;\">) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传文件过大！\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$ext</span>, <span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"非法文件类型\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传方式有误，请使用post方式\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (@<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span>, <span style=\"color: #800080;\">$uniName</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">@错误抑制符，不让用户看到警告</span>\r\n        <span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传成功!\"<span style=\"color: #000000;\">;\r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传失败!\"<span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断是否为真实图片（防止伪装成图片的病毒一类的</span>\r\n    <span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$tmp_name</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">getimagesize真实返回数组，否则返回false</span>\r\n        <span style=\"color: #0000ff;\">exit</span>(\"不是真正的图片类型\"<span style=\"color: #000000;\">);\r\n    }\r\n\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">case</span> 1:\r\n            <span style=\"color: #0000ff;\">echo</span> \"超过了上传文件的最大值，请上传2M以下文件\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 2:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件过多，请一次上传20个及以下文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 3:\r\n            <span style=\"color: #0000ff;\">echo</span> \"文件并未完全上传，请再次尝试！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 4:\r\n            <span style=\"color: #0000ff;\">echo</span> \"未选择上传文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 7:\r\n            <span style=\"color: #0000ff;\">echo</span> \"没有临时文件夹\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这里，具体实现都有注释，每一步其实都可以自己试试的，很有趣。</p>\r\n<p>2.3 封装</p>\r\n<p>函数</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #0000ff;\">function</span> uploadFile(<span style=\"color: #800080;\">$fileInfo</span>,<span style=\"color: #800080;\">$path</span>,<span style=\"color: #800080;\">$allowExt</span>,<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">){\r\n\r\n</span><span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$tmp_name</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"tmp_name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$size</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"size\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$error</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"error\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$type</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"type\"<span style=\"color: #000000;\">];\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">服务器端设定限制</span>\r\n\r\n<span style=\"color: #800080;\">$ext</span>=<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$filename</span>,<span style=\"color: #000000;\">PATHINFO_EXTENSION);\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">目的信息</span>\r\n<span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$path</span><span style=\"color: #000000;\">)) {   \r\n    </span><span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$path</span>,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n    </span><span style=\"color: #008080;\">chmod</span>(<span style=\"color: #800080;\">$path</span>, 0777<span style=\"color: #000000;\">);\r\n}\r\n</span><span style=\"color: #800080;\">$uniName</span>=<span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span>)).\'.\'.<span style=\"color: #800080;\">$ext</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$destination</span>=<span style=\"color: #800080;\">$path</span>.\"/\".<span style=\"color: #800080;\">$uniName</span><span style=\"color: #000000;\">;\r\n\r\n\r\n</span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$error</span>==0<span style=\"color: #000000;\">) {\r\n    </span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$size</span>&gt;<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传文件过大！\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$ext</span>, <span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"非法文件类型\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传方式有误，请使用post方式\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断是否为真实图片（防止伪装成图片的病毒一类的</span>\r\n    <span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$tmp_name</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">getimagesize真实返回数组，否则返回false</span>\r\n        <span style=\"color: #0000ff;\">exit</span>(\"不是真正的图片类型\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (@<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span>, <span style=\"color: #800080;\">$destination</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">@错误抑制符，不让用户看到警告</span>\r\n        <span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传成功!\"<span style=\"color: #000000;\">;\r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传失败!\"<span style=\"color: #000000;\">;\r\n    }\r\n    \r\n\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">case</span> 1:\r\n            <span style=\"color: #0000ff;\">echo</span> \"超过了上传文件的最大值，请上传2M以下文件\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 2:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件过多，请一次上传20个及以下文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 3:\r\n            <span style=\"color: #0000ff;\">echo</span> \"文件并未完全上传，请再次尝试！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 4:\r\n            <span style=\"color: #0000ff;\">echo</span> \"未选择上传文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 7:\r\n            <span style=\"color: #0000ff;\">echo</span> \"没有临时文件夹\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n    }\r\n}\r\n</span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$destination</span><span style=\"color: #000000;\">;\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>调用</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$fileInfo</span>=<span style=\"color: #800080;\">$_FILES</span>[\"myFile\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$maxSize</span>=10485760;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">10M,10*1024*1024</span>\r\n<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'tif\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$path</span>=\"uploads\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">include_once</span> \'upFunc.php\'<span style=\"color: #000000;\">;\r\nuploadFile(</span><span style=\"color: #800080;\">$fileInfo</span>, <span style=\"color: #800080;\">$path</span>, <span style=\"color: #800080;\">$allowExt</span>, <span style=\"color: #800080;\">$maxSize</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong>三、多文件的上传实现</strong></p>\r\n<p><strong>3.1 利用单文件封装</strong></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction5.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile1\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile2\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile3\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile4\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">print_r($_FILES);</span>\r\n<span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #0000ff;\">include_once</span> \'upFunc.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$_FILES</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #800080;\">$file</span>[]=uploadFile(<span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">);\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这里的思路，从print_r($_FILES)中去找，打印出来看到是个二维数组，很简单，遍历去用就好了！ </p>\r\n<p>上面那个function的定义改一下，给定一些默认值</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span> uploadFile(<span style=\"color: #800080;\">$fileInfo</span>,<span style=\"color: #800080;\">$path</span>=\"uploads\",<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'tif\'),<span style=\"color: #800080;\">$maxSize</span>=10485760){</pre>\r\n</div>\r\n<p> </p>\r\n<p>这样子，简单是简单，但遇到一些问题。</p>\r\n<p>正常的上传4个图片是没问题，但要是中间激活了函数中的exit，就会立即停止，导致其他图片也无法上传。</p>\r\n<p><strong>3.2 升级版封装</strong></p>\r\n<p>旨在实现针对多个或单个文件上传的封装</p>\r\n<p>首先这样子写个静态文件</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction5.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>打印一下$_FILES</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #000000;\">Array\r\n(\r\n    [myFile] =&gt; Array\r\n        (\r\n            [name] =&gt; Array\r\n                (\r\n                    [0] =&gt; test32.png\r\n                    [1] =&gt; test32.png\r\n                    [2] =&gt; 333.png\r\n                    [3] =&gt; test41.png\r\n                )\r\n\r\n            [type] =&gt; Array\r\n                (\r\n                    [0] =&gt; image/png\r\n                    [1] =&gt; image/png\r\n                    [2] =&gt; image/png\r\n                    [3] =&gt; image/png\r\n                )\r\n\r\n            [tmp_name] =&gt; Array\r\n                (\r\n                    [0] =&gt; D:\\wamp\\tmp\\php831C.tmp\r\n                    [1] =&gt; D:\\wamp\\tmp\\php834C.tmp\r\n                    [2] =&gt; D:\\wamp\\tmp\\php837C.tmp\r\n                    [3] =&gt; D:\\wamp\\tmp\\php83BB.tmp\r\n                )\r\n\r\n            [error] =&gt; Array\r\n                (\r\n                    [0] =&gt; 0\r\n                    [1] =&gt; 0\r\n                    [2] =&gt; 0\r\n                    [3] =&gt; 0\r\n                )\r\n\r\n            [size] =&gt; Array\r\n                (\r\n                    [0] =&gt; 46174\r\n                    [1] =&gt; 46174\r\n                    [2] =&gt; 34196\r\n                    [3] =&gt; 38514\r\n                )\r\n\r\n        )\r\n\r\n)</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>可以得到一个三维数组。</p>\r\n<p>复杂是复杂了，但复杂的有规律，各项数值都在一起了，很方便我们取值！！</p>\r\n<p>所以先得到文件信息，<strong>变成单文件处理那种信息</strong></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getFiles(){\r\n    </span><span style=\"color: #800080;\">$i</span>=0<span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">foreach</span>(<span style=\"color: #800080;\">$_FILES</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$file</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #008080;\">is_string</span>(<span style=\"color: #800080;\">$file</span>[\'name\'])){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">单文件判定</span>\r\n            <span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>]=<span style=\"color: #800080;\">$file</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #800080;\">$i</span>++<span style=\"color: #000000;\">;\r\n        }</span><span style=\"color: #0000ff;\">elseif</span>(<span style=\"color: #008080;\">is_array</span>(<span style=\"color: #800080;\">$file</span>[\'name\'<span style=\"color: #000000;\">])){\r\n            </span><span style=\"color: #0000ff;\">foreach</span>(<span style=\"color: #800080;\">$file</span>[\'name\'] <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$key</span>=&gt;<span style=\"color: #800080;\">$val</span>){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">我的天，这个$key用的diao</span>\r\n                <span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'name\']=<span style=\"color: #800080;\">$file</span>[\'name\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'type\']=<span style=\"color: #800080;\">$file</span>[\'type\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'tmp_name\']=<span style=\"color: #800080;\">$file</span>[\'tmp_name\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'error\']=<span style=\"color: #800080;\">$file</span>[\'error\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'size\']=<span style=\"color: #800080;\">$file</span>[\'size\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$i</span>++<span style=\"color: #000000;\">;\r\n            }\r\n        }\r\n    }\r\n    </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$files</span><span style=\"color: #000000;\">;\r\n    \r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>然后之前的那种exit错误，就把exit改一下就好了，这里用res</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span> uploadFile(<span style=\"color: #800080;\">$fileInfo</span>,<span style=\"color: #800080;\">$path</span>=\'./uploads\',<span style=\"color: #800080;\">$flag</span>=<span style=\"color: #0000ff;\">true</span>,<span style=\"color: #800080;\">$maxSize</span>=1048576,<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'gif\'<span style=\"color: #000000;\">)){\r\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$flag=true;\r\n    //$allowExt=array(\'jpeg\',\'jpg\',\'gif\',\'png\');\r\n    //$maxSize=1048576;//1M\r\n    //判断错误号</span>\r\n    <span style=\"color: #800080;\">$res</span>=<span style=\"color: #0000ff;\">array</span><span style=\"color: #000000;\">();\r\n    </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'error\']===<span style=\"color: #000000;\">UPLOAD_ERR_OK){\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测上传得到小</span>\r\n        <span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'size\']&gt;<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'上传文件过大\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #800080;\">$ext</span>=getExt(<span style=\"color: #800080;\">$fileInfo</span>[\'name\'<span style=\"color: #000000;\">]);\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测上传文件的文件类型</span>\r\n        <span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$ext</span>,<span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">)){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'非法文件类型\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测是否是真实的图片类型</span>\r\n        <span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$flag</span><span style=\"color: #000000;\">){\r\n            </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n                </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'不是真实图片类型\'<span style=\"color: #000000;\">;\r\n            }\r\n        }\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测文件是否是通过HTTP POST上传上来的</span>\r\n        <span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'文件不是通过HTTP POST方式上传上来的\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$res</span>) <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$res</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$path=\'./uploads\';</span>\r\n        <span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$path</span><span style=\"color: #000000;\">)){\r\n            </span><span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$path</span>,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n            </span><span style=\"color: #008080;\">chmod</span>(<span style=\"color: #800080;\">$path</span>,0777<span style=\"color: #000000;\">);\r\n        }\r\n        </span><span style=\"color: #800080;\">$uniName</span>=<span style=\"color: #000000;\">getUniName();\r\n        </span><span style=\"color: #800080;\">$destination</span>=<span style=\"color: #800080;\">$path</span>.\'/\'.<span style=\"color: #800080;\">$uniName</span>.\'.\'.<span style=\"color: #800080;\">$ext</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'tmp_name\'],<span style=\"color: #800080;\">$destination</span><span style=\"color: #000000;\">)){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'文件移动失败\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'上传成功\'<span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$res</span>[\'dest\']=<span style=\"color: #800080;\">$destination</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$res</span><span style=\"color: #000000;\">;\r\n        \r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">匹配错误信息</span>\r\n        <span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$fileInfo</span> [\'error\'<span style=\"color: #000000;\">]) {\r\n            </span><span style=\"color: #0000ff;\">case</span> 1 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'上传文件超过了PHP配置文件中upload_max_filesize选项的值\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 2 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'超过了表单MAX_FILE_SIZE限制的大小\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 3 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'文件部分被上传\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 4 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'没有选择上传文件\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 6 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'没有找到临时目录\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 7 :\r\n            <span style=\"color: #0000ff;\">case</span> 8 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'系统错误\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$res</span><span style=\"color: #000000;\">;\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>里面封装了两个小的</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span> getExt(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">strtolower</span>(<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$filename</span>,<span style=\"color: #000000;\">PATHINFO_EXTENSION));\r\n}\r\n\r\n</span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n * 产生唯一字符串\r\n * @return string\r\n </span><span style=\"color: #008000;\">*/</span>\r\n<span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getUniName(){\r\n    </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">));\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>然后静态中，用multiple属性实现多个文件的输入；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction6.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"POST\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span><span style=\"color: #ff0000;\"> multiple</span><span style=\"color: #0000ff;\">=\'multiple\' </span><span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>doAction6</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">print_r($_FILES);</span>\r\n<span style=\"color: #008080;\">header</span>(\"content-type:text/html;charset=utf-8\"<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #0000ff;\">require_once</span> \'upFunc2.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">require_once</span> \'common.func.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$files</span>=<span style=\"color: #000000;\">getFiles();\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> print_r($files);</span>\r\n<span style=\"color: #0000ff;\">foreach</span>(<span style=\"color: #800080;\">$files</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #800080;\">$res</span>=uploadFile(<span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">);\r\n    </span><span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$res</span>[\'mes\'],\'&lt;br/&gt;\'<span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #800080;\">$uploadFiles</span>[]=@<span style=\"color: #800080;\">$res</span>[\'dest\'<span style=\"color: #000000;\">];\r\n}\r\n</span><span style=\"color: #800080;\">$uploadFiles</span>=<span style=\"color: #008080;\">array_values</span>(<span style=\"color: #008080;\">array_filter</span>(<span style=\"color: #800080;\">$uploadFiles</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">print_r($uploadFiles);</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这样子的几个文件，就实现比较强大的面向过程的上传文件的功能（学的叫一个心酸。。。）；</p>\r\n<p><strong>四、面向对象的文件上传</strong></p>\r\n<p> （不是很写的动了。。。先粘过来，再说吧。。。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> upload{\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$fileName</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$allowMime</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$uploadPath</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$imgFlag</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$ext</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * @param string $fileName\r\n     * @param string $uploadPath\r\n     * @param string $imgFlag\r\n     * @param number $maxSize\r\n     * @param array $allowExt\r\n     * @param array $allowMime\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __construct(<span style=\"color: #800080;\">$fileName</span>=\'myFile\',<span style=\"color: #800080;\">$uploadPath</span>=\'./uploads\',<span style=\"color: #800080;\">$imgFlag</span>=<span style=\"color: #0000ff;\">true</span>,<span style=\"color: #800080;\">$maxSize</span>=5242880,<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'gif\'),<span style=\"color: #800080;\">$allowMime</span>=<span style=\"color: #0000ff;\">array</span>(\'image/jpeg\',\'image/png\',\'image/gif\'<span style=\"color: #000000;\">)){\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;fileName=<span style=\"color: #800080;\">$fileName</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;maxSize=<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;allowMime=<span style=\"color: #800080;\">$allowMime</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;allowExt=<span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;uploadPath=<span style=\"color: #800080;\">$uploadPath</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;imgFlag=<span style=\"color: #800080;\">$imgFlag</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;fileInfo=<span style=\"color: #800080;\">$_FILES</span>[<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">fileName];\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测上传文件是否出错\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkError(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">is_null</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">fileInfo)){\r\n            </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'error\']&gt;0<span style=\"color: #000000;\">){\r\n                </span><span style=\"color: #0000ff;\">switch</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'error\'<span style=\"color: #000000;\">]){\r\n                    </span><span style=\"color: #0000ff;\">case</span> 1:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'超过了PHP配置文件中upload_max_filesize选项的值\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 2:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'超过了表单中MAX_FILE_SIZE设置的值\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 3:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'文件部分被上传\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 4:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'没有选择上传文件\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 6:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'没有找到临时目录\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 7:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'文件不可写\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 8:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'由于PHP的扩展程序中断文件上传\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                        \r\n                }\r\n                </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n            }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n                </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n            }\r\n        }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'文件上传出错\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测上传文件的大小\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkSize(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'size\']&gt;<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">maxSize){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'上传文件过大\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测扩展名\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkExt(){\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;ext=<span style=\"color: #008080;\">strtolower</span>(<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'name\'],<span style=\"color: #000000;\">PATHINFO_EXTENSION));\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$this</span>-&gt;ext,<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">allowExt)){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'不允许的扩展名\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测文件的类型\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkMime(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'type\'],<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">allowMime)){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'不允许的文件类型\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测是否是真实图片\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkTrueImg(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">imgFlag){\r\n            </span><span style=\"color: #0000ff;\">if</span>(!@<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n                </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'不是真实图片\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n            }\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n        }\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测是否通过HTTP POST方式上传上来的\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkHTTPPost(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'文件不是通过HTTP POST方式上传上来的\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     *显示错误 \r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> showError(){\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\'&lt;span style=\"color:red\"&gt;\'.<span style=\"color: #800080;\">$this</span>-&gt;error.\'&lt;/span&gt;\'<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测目录不存在则创建\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkUploadPath(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">uploadPath)){\r\n            </span><span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$this</span>-&gt;uploadPath,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n        }\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 产生唯一字符串\r\n     * @return string\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getUniName(){\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">));\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 上传文件\r\n     * @return string\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> uploadFile(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;checkError()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkSize()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkExt()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkMime()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkTrueImg()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">checkHTTPPost()){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">checkUploadPath();\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;uniName=<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">getUniName();\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;destination=<span style=\"color: #800080;\">$this</span>-&gt;uploadPath.\'/\'.<span style=\"color: #800080;\">$this</span>-&gt;uniName.\'.\'.<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">ext;\r\n            </span><span style=\"color: #0000ff;\">if</span>(@<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'tmp_name\'], <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">destination)){\r\n                </span><span style=\"color: #0000ff;\">return</span>  <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">destination;\r\n            }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n                </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'文件移动失败\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">showError();\r\n            }\r\n        }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">showError();\r\n        }\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p> </p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #0000ff;\">require_once</span> \'upload.class.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$upload</span>=<span style=\"color: #0000ff;\">new</span> upload(\'myFile1\',\'imooc\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$dest</span>=<span style=\"color: #800080;\">$upload</span>-&gt;<span style=\"color: #000000;\">uploadFile();\r\n</span><span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$dest</span>;</pre>\r\n</div>\r\n<p> </p>\r\n<p>四、下载</p>\r\n<p>对于浏览器不识别的，可以直接下载，但对于能识别的，需要多一两步</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html </span><span style=\"color: #ff0000;\">xmlns</span><span style=\"color: #0000ff;\">=\"http://www.w3.org/1999/xhtml\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span> <span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"1.rar\"</span><span style=\"color: #0000ff;\">&gt;</span>下载1.rar<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">br </span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"1.jpg\"</span><span style=\"color: #0000ff;\">&gt;</span>下载1.jpg<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">br </span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"doDownload.php?filename=1.jpg\"</span><span style=\"color: #0000ff;\">&gt;</span>通过程序下载1.jpg<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">br </span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"doDownload.php?filename=../upload/nv.jpg\"</span><span style=\"color: #0000ff;\">&gt;</span>下载nv.jpg<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">php\r\n\r\n</span><span style=\"color: #0000ff;\">?&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$_GET</span>[\'filename\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #008080;\">header</span>(\'content-disposition:attachment;filename=\'.<span style=\"color: #008080;\">basename</span>(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\">header</span>(\'content-length:\'.<span style=\"color: #008080;\">filesize</span>(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\">readfile</span>(<span style=\"color: #800080;\">$filename</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p>------------------总结-----------------------</p>\r\n<pre>&lt;form action=\"doAction.php\" method=\"post\" enctype=\"multipart/form-data\"&gt;</pre>\r\n<p> &lt;input type=\"file\" name=\"myFile\" /&gt;&lt;br/&gt;</p>\r\n<p> 二维数组的降维处理；</p>\r\n<p>$_FILES变量</p>\r\n<p>move_upload_file();copy();</p>\r\n<p>tmp_name临时文件；</p>\r\n<p>拓展名的提取；</p>\r\n<p>真实图片的验证；</p>\r\n<p>唯一文件名的生成；</p>\r\n<p>函数封装以及调用；</p>\r\n<p>利用单个文件函数实现多文件上传；</p>\r\n<p>小功能的封装；</p>\r\n<p>多文件的遍历；</p>\r\n<p>面向对象的开发过程；</p>\r\n<p>下载；</p>\r\n<p>----------------------------------------</p>\r\n<p>妈蛋啊。。。。。。。。。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3057', 'PHP&MySQL（二）——困也得啃书 ', '网络', '\n<p>madan，所有事情都敢赶在一起。。。以后每天中午去学车啊，好开心。。晚上好困，但是困也得啃书。。。。。。。。</p>\r\n<p>二、PHP脚本编程语言</p>\r\n<p>什么变量啊，数据类型啊，特别特别基本的不记录了，说点容易忽略的。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">define</span>(\"PI\", 3.1415926);  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">常量的定义</span>\r\n\r\n<span style=\"color: #0000ff;\">echo</span> \"圆周率=\".<span style=\"color: #008080;\">PI</span>.\"&lt;br/&gt;\";   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">.的链接作用，同样用于$var的赋值等</span>\r\n\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">PI</span>&lt;3&amp;&amp;<span style=\"color: #008080;\">PI</span>&gt;=2<span style=\"color: #000000;\">) {  \r\n    </span><span style=\"color: #800080;\">$var</span>=\"shit\"<span style=\"color: #000000;\">;\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">echo</span> \"f**k\".\"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n}\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 先判断PI&lt;3，如果不成立，就直接进入else——称为短路设计，加快程序速度；\r\n// 同理，为了实现程序的高效，把最容易出错的放前面，最复杂的计算放右边</span>\r\n\r\n<span style=\"color: #800080;\">$var</span>=\"asldkjflajdfklj\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$v2</span>=(<span style=\"color: #0000ff;\">boolean</span>)<span style=\"color: #800080;\">$var</span>;   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">强制类型转换</span>\r\n<span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$v2</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n\r\n</span><span style=\"color: #800080;\">$v_true</span>=<span style=\"color: #0000ff;\">true</span>;   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">boolean值也可以直接赋值</span>\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">is_bool</span>(<span style=\"color: #800080;\">$v2</span>)&amp;&amp;<span style=\"color: #800080;\">$v2</span>===<span style=\"color: #800080;\">$v_true</span>) {    <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">恒等===，可以判断数据类型是否相同；is_bool</span>\r\n    <span style=\"color: #0000ff;\">echo</span> \"Variables have the same value and type!\"<span style=\"color: #000000;\">;  \r\n    </span><span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n}\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">另外，非恒等仍然是!==</span>\r\n\r\n<span style=\"color: #800080;\">$lll</span>=\"dfa\"+333<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">echo</span> <span style=\"color: #008080;\">gettype</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">var_dump允许一次检查多个变量，同时提供信息；print_r多用来对数组和对象进行输出；</span>\r\n\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #0000ff;\">isset</span>(<span style=\"color: #800080;\">$lll</span>)&amp;&amp;!<span style=\"color: #0000ff;\">empty</span>(<span style=\"color: #800080;\">$v2</span>)) {  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断是否为空</span>\r\n    <span style=\"color: #0000ff;\">unset</span>(<span style=\"color: #800080;\">$lll</span><span style=\"color: #000000;\">);\r\n}\r\n</span><span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\";  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">会报错，但仍能输出null</span>\r\n\r\n<span style=\"color: #0000ff;\">function</span> doubleint(<span style=\"color: #800080;\">$var</span>){   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">自定义函数</span>\r\n    <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">is_int</span>(<span style=\"color: #800080;\">$var</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #800080;\">$var</span>=<span style=\"color: #800080;\">$var</span>*2<span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$var</span><span style=\"color: #000000;\">;\r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"Please enter a int data.\"<span style=\"color: #000000;\">;\r\n    }\r\n}\r\n\r\n</span><span style=\"color: #0000ff;\">echo</span> doubleint(<span style=\"color: #800080;\">$var</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">echo</span> doubleint(4);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">个人觉得，还是少用global和地址传递，逻辑上容易出错，程序没错，结果却不对\r\n\r\n// 关于include和require\r\n// 多用include吧\r\n// include失败了只是警告，后者则是错误然后中断程序\r\n// 同时推荐没事儿就写绝对路径，好读也不易出错</span></pre>\r\n</div>\r\n<p>要说的都在上面了，总结下就是：常量，连接符，自定义函数，类型转换，类型判断，文件引用，恒等符，短路设计，var_dump。</p>\r\n<p>比较乱。</p>\r\n<p>最后举个例子吧，自制乘法表</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Chapter 2\'s example which is a chengfabiao</span>\r\n<span style=\"color: #0000ff;\">function</span> chengfabiao(<span style=\"color: #800080;\">$var</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #0000ff;\">for</span> (<span style=\"color: #800080;\">$row</span>=1;<span style=\"color: #800080;\">$row</span>&lt;=<span style=\"color: #800080;\">$var</span>;<span style=\"color: #800080;\">$row</span>++<span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">for</span>(<span style=\"color: #800080;\">$queue</span>=1;<span style=\"color: #800080;\">$queue</span>&lt;=<span style=\"color: #800080;\">$var</span>;<span style=\"color: #800080;\">$queue</span>++<span style=\"color: #000000;\">){\r\n            </span><span style=\"color: #800080;\">$answer</span>=<span style=\"color: #800080;\">$row</span>*<span style=\"color: #800080;\">$queue</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">echo</span> \"<span style=\"color: #800080;\">$row</span>*<span style=\"color: #800080;\">$queue</span>=\".<span style=\"color: #800080;\">$answer</span>.\"  \"<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n    }        \r\n}\r\n</span><span style=\"color: #800080;\">$var</span>=9<span style=\"color: #000000;\">;\r\nchengfabiao(</span><span style=\"color: #800080;\">$var</span>);</pre>\r\n</div>\r\n<p><br>自己改着玩吧。基础的东西也得常常拿出来温习下，我是这么认为的。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3058', '一起来啃书——PHP看书 ', '网络', '\n<p>形式所迫，不得不开展android的学习，PHP这边也开始了啃书的日子。两部500+的书，45天够不，有点忙有点忙。。。</p>\r\n<p>早上的胃胀，简直是一记闷棍，长点儿记性吧。。。。。。。。</p>\r\n<p>1、PHP+MYSQL开发指南（一）</p>\r\n<p>一、数据库应用程序与web</p>\r\n<p>1、本书中</p>\r\n<p>PHP+PEAR函数库；</p>\r\n<p>2、三层体系结构</p>\r\n<p>底层/数据库层——》中间层/程序逻辑层——》用户层/浏览器；</p>\r\n<p>MySQL（一种数据库管理系统DBMS）——》PHP程序/web脚本程序——》强化浏览器能力（Javascript）</p>\r\n<p>根据流量等指标调整每一层的安排。</p>\r\n<p>3、PHP优点</p>\r\n<p>老生常谈，但还是得知道，为了就是最大限度的发挥其特性。</p>\r\n<p>灵活——与HTML的集合；</p>\r\n<p>多功能实现；</p>\r\n<p>函数库/源码丰富；</p>\r\n<p>多平台的可移植。</p>\r\n<p>-----------------------------------------</p>\r\n<p> </p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3059', 'I am back-电商网站开发&jQuery ', '网络', '\n<p>　　hi</p>\r\n<p>之前有将近两周的时间没有更新，除了懒就是其他的事情耽误了。现在好了，回家了，虽然家里停水，外面又有积雪，天寒地冻的，但诸多不便，都比不过有点闲的好。</p>\r\n<p>开搞每个学PHP的必经之路——电商网站的开发。</p>\r\n<p><strong>1、电商网站开发——前端</strong></p>\r\n<p><strong>一、首页制作</strong></p>\r\n<p><strong>1.1 概况&amp;准备</strong></p>\r\n<p>整个电商网站包括什么呢，就是首页信息，后面的分类信息页，商品详情页，购物页面，售后页面等等，所以就一步步做。自己做的时候可以简单的画个概况图来指导开发，免得逻辑搞混。</p>\r\n<p>准备：项目文件夹，其中要有images（图片素材），js（javascript），style（css）三个子文件夹中。工具的话，看个人爱好，不过涉及的是前端，一般上习惯用DS的多，我比较懒，直接用zend+浏览器算求。</p>\r\n<p>其中准备中有一部是实现reset.css，也就是清零/清除css效果。css我基本算是个白痴，找个源码贴出来，侵删：</p>\r\n<p>@charset \"utf-8\";<br>/* CSS Document */<br>body,ul,ol,li,p,h1,h2,h3,h4,h5,h6,form,fieldset,table,td,img,div,dl,dt,dd,input{margin:0;padding:0;}<br>body{font-size:12px;}<br>img{border:none;}<br>li{list-style:none;}<br>input,select,textarea{outline:none;border:none; background:none;}<br>textarea{resize:none;}<br>a{text-decoration:none; color:#656565;}</p>\r\n<p>/*清浮动*/<br>.clearfix:after{content:\"\";display:block;clear:both;}<br>.clearfix{zoom:1;}<br>.fl{float:left;}<br>.fr{float:right;}</p>\r\n<p>1.2 顶部结构</p>\r\n<p> 用fireworks做，我还不会，先去学习下。</p>\r\n<p>--------真是蛋疼，做个开头就发现自己naive，先完成web进阶的jQuery吧----------</p>\r\n<p><strong>2、jQuery</strong></p>\r\n<p><strong>十二、jQuery在线聊天室</strong></p>\r\n<p><strong>12.1 基本功能介绍</strong></p>\r\n<p>登陆后才能进入（用于基本信息的在线显示）；</p>\r\n<p>动态显示交流后的内容；</p>\r\n<p>文字和表情的沟通实现（表情也是字符代号编码）</p>\r\n<p><strong>技术重点</strong>：<strong>ajax</strong>的无刷新技术展示数据</p>\r\n<p><strong>12.2 实现效果</strong></p>\r\n<p>利用jq中的ajax函数（比如$.ajax等）实现登陆，登陆时，显示登陆中，正确或失败，有相应的动作；</p>\r\n<p>聊天室就是聊天内容区域，输入区域，人员显示区域。</p>\r\n<p><strong>12.3 流程</strong></p>\r\n<p>登录页面——》向服务器请求登录信息（用户名和密码信息）——》成功：跳转到聊天主页；否则，跳回登录页面。</p>\r\n<p>聊天页面——》请求聊天数据——》获取聊天数据；</p>\r\n<p>在线人员信息——》请求——》获取；</p>\r\n<p>所以，可以简单作图，这里我掠过了，然后清楚的看到需要做的页面数量，请求和响应的逻辑和对应关系。</p>\r\n<p><strong>12.4 登录页面开发login</strong></p>\r\n<p>--功能</p>\r\n<p>验证登录信息；</p>\r\n<p>进入聊天室；</p>\r\n<p>--代码</p>\r\n<p>以前在PDO中讲过的一种，直接用POST方法传递表格参数的方法：</p>\r\n<p>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html;chraset=UTF-8\"&gt;<br>&lt;title&gt;登录&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;form action=\'login.php\' method=\'post\'&gt;<br>用户名：&lt;input type=\'text\' name=\'username\'/&gt;&lt;br/&gt;<br>密     码：&lt;input type=\'password\' name=\'password\'/&gt;&lt;br/&gt;<br>&lt;input type=\'submit\' value=\'登录\'/&gt;<br>&lt;/form&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>然后后续工作在login.php中实现就好了；</p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>$username=$_POST[\'username\'];<br>$password=$_POST[\'password\'];<br>try {<br>	$pdo=new PDO(\'mysql:host=localhost;dbname=imooc\',\'root\',\'\');<br>	$pdo-&gt;exec(\'use imooc_pdo\');<br>	$sql=\"select * from user where username=? and password=?\";<br>	$stmt=$pdo-&gt;prepare($sql);<br>	$stmt-&gt;execute(array($username,$password));<br>	//$stmt=$pdo-&gt;query($sql);<br><br>	$shit=$stmt-&gt;rowCount();//显示结果集statement对象中的行数<br>	echo $shit;<br>	if($shit == 1){<br>		//$url=\"ChatMain.html\";<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"alert(\\\"登录成功\\\")\";<br>		echo \"&lt;/script&gt;\";<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"document.location=\\\"ChatMain.html\\\"\";<br>		echo \"&lt;/script&gt;\";<br>	}else{	<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"alert(\\\"用户名或密码错误\\\")\";<br>		echo \"&lt;/script&gt;\";<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"document.location=\\\"login2.html\\\"\";<br>		echo \"&lt;/script&gt;\";<br>	}</p>\r\n<p>} catch (PDOException $e) {<br>	echo $e-&gt;getMessage();<br>}</p>\r\n<p>----------------------------------------------</p>\r\n<p>我们在这里想要的是jQuery实现方法：换一种实现，同时把登录做的稍微好看一点点哈（我觉得好看，一个在于对应的css文件的编写，另一个在html中实现，DS工具实现要方便一点，有时间也得整着学一下）；</p>\r\n<p>&lt;!DOCTYPE html&gt;<br>&lt;HTML&gt;<br>&lt;head&gt;<br>&lt;TITLE&gt;登录&lt;/TITLE&gt;<br>  &lt;SCRIPT type=\"text/javascript\" src=\"jq/jquery-1.8.2.min.js\"&gt;&lt;/SCRIPT&gt;<br>  &lt;SCRIPT type=\"text/javascript\" src=\"js/jsLogin.js\"&gt;&lt;/SCRIPT&gt;<br>  &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"style/cssLogin.css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>  &lt;div id=\"divLogin\"&gt;<br>    &lt;h3&gt;用户登录&lt;/h3&gt;<br>      &lt;div class=\"content\"&gt;<br>        &lt;div&gt;用户：&lt;input id=\"txtName\" type=\"text\" class=\"txt\" /&gt;&lt;/div&gt;<br>        &lt;div&gt;密码：&lt;input id=\"txtPass\" type=\"text\" class=\"txt\" /&gt;&lt;/div&gt;<br>        &lt;div class=\"btnCenter\"&gt;<br>          &lt;input id=\"Button1\" type=\"button\" value=\"登录\" class=\"btn\" /&gt;<br>          &amp;nbsp;&amp;nbsp;<br>          &lt;input id=\"Button2\" type=\"button\" value=\"取消\" class=\"btn\" /&gt;<br>        &lt;/div&gt;<br>        &lt;span id=\"divMsg\" class=\"clsTip\"&gt;&lt;/span&gt;<br>      &lt;/div&gt;<br>  &lt;/div&gt;<br>&lt;/body&gt;<br>&lt;/HTML&gt;</p>\r\n<p>其中，js是javascript逻辑控制文件；jq是jquery实现文件；css是css文件；后面的span标签，是为了实现某些功能暂时留下的。</p>\r\n<p>$(function(){<br>	//元素绑定全局ajaxStart事件<br>	//这里就是用到span的标签，给出过程<br>	$(\"#divMsg\").ajaxStart(function(){<br>		$(this).show().html(\"正在发送登录请求...\");<br>	})<br>	$(\"#divMsg\").ajaxStop(function(){<br>		$(this).html(\"请求处理已完成！\").hide();<br>	})<br>	$(\"#Button1\").click(function(){<br>		var $name=$(\"#txtName\");<br>		var $pass=$(\"#txtPass\");<br>		if($name.val() !== \"\" &amp;&amp; $pass.val()!==\"\"){<br>			UserLogin($name.val(),$pass.val());<br>		}else{<br>			if($name.val()==\"\"){<br>				alert(\"用户名不能为空！\");<br>				$name.focus();<br>				return false;  // 阻止进一步的动作，很重要的一步<br>			}else{<br>				alert(\"密码不能为空！\");<br>				$pass.focus();<br>				return false;<br>			}<br>		}<br>	})<br>});</p>\r\n<p>function UserLogin(name,pass){<br>	$.ajax({<br>		type: \"GET\",  //提交方式<br>		url: \"index.php\",   //提交对象<br>		data:\"action=Login&amp;d=\"+new Date()+\"&amp;name=\"+name+\"&amp;pass=\"+pass, //提交数据<br>		success:function(data){<br>			if(data==\"1\"){<br>			window.location=\"ChatMain.html\";<br>		}else{<br>			alert(\"用户名或密码错误！\");<br>			return false;<br>		}<br>	}<br>	});<br>} </p>\r\n<p>其实这里面还是有错误的，实现起来感觉没有第一种实现方法简单明了，希望了解的兄弟们指点下，两种方法的优缺点。</p>\r\n<p>我还是稍微完善了下第一种PDO方法，直接在html中post表格数据，与数据库进行比对，然后返回信息。</p>\r\n<p> 当然呢，第二种，也就是本来应该采用的这种方式，很明显的优点在于其模块化实现，对于开发人员来说也是清晰明了。但，私以为，小型任务中，如果没有统一规划好的名称啊，什么的，这样子模块化是不是显得冗余，毕竟还需要看模块是否匹配啊什么的，不知道理解的对不对。</p>\r\n<p><strong>12.5 聊天室页面ChatMain</strong></p>\r\n<p>从页面本身来说，就是head包含jq文件，js文件，css文件；body实现当前页面的效果，也有接口功能的实现；</p>\r\n<p>从布局来说，就是聊天窗口的样子，三个框框搞定（可是尼玛老子不会用css啊！！！！）；</p>\r\n<p> -----晚上不一定还会写，先发了吧-----</p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3060', '这回真的是挤时间了-PHP基础（三） ', '网络', '\n<p>　　hi</p>\r\n<p>刚看了唐人街探案，5星好评啊亲。由于是早就约好的，也不好推辞（虽然是和男的..），但该写的还是得挤时间写。明天早上老师的项目结题，虽然和我关系不大，但不要添乱就好！！</p>\r\n<p><strong>1、PHP </strong></p>\r\n<p><strong>一、PHP基础（三）</strong><br><strong>1.3.2 Int</strong></p>\r\n<p>整型。</p>\r\n<p>几个点：<strong>进制问题</strong>（2，8，16）；</p>\r\n<p>溢出——溢出后自动转为float型；</p>\r\n<p>整除；</p>\r\n<p>float转为int——向下取整；</p>\r\n<p>例子给出</p>\r\n<p><strong>$shi=123;</strong><br><strong>$bin=0b100001;</strong><br><strong>$ba=0123;</strong><br><strong>$shiliu=0x1234555;</strong></p>\r\n<p>function show($a){<br>	echo \"Truth is:\";<br>	var_dump($a);<br>	echo \"&lt;br/&gt;\";<br>}</p>\r\n<p>show($shiliu);<br>show($ba);<br>show($bin);</p>\r\n<p><strong>$qiguaideba=01237823;  //八进制的“溢出”,会截断，只输出01237</strong></p>\r\n<p>show($qiguaideba);</p>\r\n<p>function zhengchu($a,$b){<br>	$c=$a/$b;<br>	if(is_float($c)){<br><strong>var_dump(round($c));   //用round控制输出结果</strong><br>	}else{<br>		var_dump($c);<br>	}<br>}</p>\r\n<p>zhengchu($shiliu , $ba);</p>\r\n<p><strong>1.3.3 float</strong></p>\r\n<p>php版本不同，浮点型的精确度似乎是有变化的；而且坑爹的是，<strong>由于PHP内部机制的问题，也许会出现：</strong></p>\r\n<p><strong>var_dump(floor((0.1+0.7)*10));</strong></p>\r\n<p><strong>返回的往往是7而不是期望中的8....</strong></p>\r\n<p>使用高精度的话，<strong>用gmp函数</strong>，请自行去了解...</p>\r\n<p>然后真想比较的话，不妨<strong>设置一个最小值</strong>来比较：</p>\r\n<p>$bijiao1=0.232342342;<br>$bijiao2=0.232342323;<br><strong>$esp=0.000001;</strong><br>if(abs($bijiao1-$bijiao2)&lt;=$esp){<br>	echo \"True\".\"&lt;br/&gt;\";<br>}else{<br>	echo \"F**k\".\"&lt;br/&gt;\";<br>}</p>\r\n<p><strong>1.3.4 字符串</strong></p>\r\n<p>单双引号括起来的就是了~</p>\r\n<p>然后只想说一点的就是heredoc：</p>\r\n<p><strong>$str= &lt;&lt;&lt; EOF</strong><br>alsidjflja<br>akjsdhflkj<br>dfjlkj.<br><strong>EOF;</strong></p>\r\n<p>echo $str;</p>\r\n<p>基本就是这么个样子，但是注意，<strong>最后一行那个EOF;是必须要和分号紧紧相依的，而且分号后面必须是换行，EOF前面不能出现包括空格的一切东西；</strong></p>\r\n<p>然后heredoc还可以用在传递参数，初始化静态值等等；</p>\r\n<p>当然，heredoc中也可以调用参数啊属性的什么的——把EOF看成是大大的双引号就好了。</p>\r\n<p>其他的字符串相关，比如我经常用到的.做连接符什么的，比较基础，但是好用，去看一下视频就很明了。</p>\r\n<p>nowdoc也是一种比较新的方式，不太熟悉，然后似乎相当于单引号。</p>\r\n<p><strong>1.4 变量</strong></p>\r\n<p>变量好用，变量灵活，变量难用——一般就是渐渐的这么认为的。</p>\r\n<p>第一，PHP中不强调赋初值，不需要声明，但是<strong>推荐还是赋初值，养成好习惯</strong>；不赋初值，变量值为其类型的默认值；</p>\r\n<p>第二，引用赋值要知道，$b=&amp;$a;  只能对变量名进行操作；</p>\r\n<p>第三，赋值一次更新一次：</p>\r\n<p>$shit=\"asdf\";<br>$s=123;</p>\r\n<p>echo $shit;</p>\r\n<p>$shit=$s;<br>echo $shit;</p>\r\n<p><strong>2、GD库实现图片水印与缩略图</strong></p>\r\n<p><strong>一、简介</strong></p>\r\n<p>使用PHP中自带的GD库制作图片的水印。</p>\r\n<p>适合大批量的图片的简单处理。</p>\r\n<p>学习基本的方法，然后封装为一个工具类。 </p>\r\n<p> </p>\r\n<p>这周末除了看星球大战，就来补过补过，知道错了。。。。。</p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3061', '好好写，好好干-PHP基础（二） ', '网络', '\n<p>　　hi</p>\r\n<p>好久没写，昨儿一写，感觉还是有人看的，至少是有一两个评论的~~好好干！</p>\r\n<p>每天需要坚持的就那么4件事儿：写这个，学一点法语，看会儿书，锻炼。单身狗也有好处。</p>\r\n<p><strong>1、PHP</strong></p>\r\n<p><strong>一、PHP基础（二）</strong></p>\r\n<p><strong>1.3 数据类型</strong></p>\r\n<p><strong>8种——4种标量：布尔boolean，整型integer，浮点float/双精度double，字符串string；2种复合：数组array，对象object；2种特殊：资源resource，NULL无；</strong></p>\r\n<p>推荐记住英文，在学习的过程中，变量通常都是这么来命名的。</p>\r\n<p><strong>php是弱类型语言</strong>，也就是说，不需要提前声明变量的类型。</p>\r\n<p>查看变量的类型：gettype()；</p>\r\n<p>判断类型：is_*()，其中*为各种数据类型的简写。</p>\r\n<p><strong>1.3.1 Boolean</strong></p>\r\n<p>true或false，不区分大小写，习惯上（我）写全小写。</p>\r\n<p><strong>一般不需要强制转换为布尔值，系统自动判断；（见下例）</strong></p>\r\n<p><strong>这些都被认为为false：false；0；0.0；空字符串以及字符串\"0\"；空数组；NULL；从空标记生成的SimpleXML对象（我也不是很理解还，主要是还没有涉及XML）；</strong></p>\r\n<p>相对应的是其他都认为为true——<strong>注意，-1，也是true；</strong></p>\r\n<p>&lt;?php</p>\r\n<p>$boola=true;<br>$boolb=false;<br>$boolc=null;<br>$boold=-1;<br>$boole=\"sdkljf\";</p>\r\n<p>echo gettype($boola).\"&lt;hr/&gt;\";</p>\r\n<p>function isbool($bool){<br>	if(<strong>is_bool($bool)</strong>){<br>		echo \"You are damn right.It is boolean.\".\"&lt;br/&gt;\";<br>	}else{<br>		echo \"Sorry, it is not this type.Please try again.\".\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>isbool($boola);<br>isbool($boolc);<br>isbool($boold);<br>isbool($boole);</p>\r\n<p>function booluse($bool){<br><strong>if($bool)</strong>{<br>		echo \"It is equal to TRUE.\".\"&lt;br/&gt;\";<br>	}else{<br>		echo \"It is equal to FALSE.\".\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>booluse($boola);<br>booluse($boolc);<br>booluse($boold);</p>\r\n<p> 在上述例子中注意，如果直接判断是否为boolean，一般的数据类型是不会强制转换的，只有当用在if等判断中时，才会自动的、强制的转换为boolean使用。 </p>\r\n<p>1.3.2 Int</p>\r\n<p>整型。</p>\r\n<p> </p>\r\n<p> 我错了。。。写一半被老板召唤加班，明天保证完成该系列第一部分（说明晚要看唐人街的嘛。。）。</p>\r\n<p>晚安，看书去了</p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3062', '自罚一杯-PHP基础（一） ', '网络', '\n<p>　　hi</p>\r\n<p>懒癌是最可怕的癌了吧，在即将迎来本命年时，给自己定下每天必干的几件成习惯的事情，望不再鸽！！</p>\r\n<p>php是我一直在学习的东西，但总以为php简单，难点在需要掌握大量的相关知识，其实并不完全对，php也是有算法好吧，php也值得认真对待，既然决定学了，拿点样子出来啊，是男人吧。</p>\r\n<p><strong>1、PHP</strong></p>\r\n<p><strong>一、PHP基础（一）</strong></p>\r\n<p><strong>1.1 简介</strong></p>\r\n<p>PHP=Hypertext Preprocessor=超文本预处理语言；</p>\r\n<p><strong>脚本语言；</strong></p>\r\n<p><strong>执行效率高（就是速度快）；</strong></p>\r\n<p>可大可小，大网站往往不只使用它一种语言，比如淘宝，前p后j好像是；</p>\r\n<p>俗语：电子商务三大宝——上线，支付宝，php；</p>\r\n<p>版本问题：目前最新为PHP 7.0.0；我一般还在用PHP5。</p>\r\n<p>环境问题：windows各种集成环境，wamp，xampp，或者自行百度自助搭建；linux我前面的博文中有说，其实就几行命令的问题，当然系统版本不同，可能命令有所不同，大同小异，举一反三~</p>\r\n<p><strong>1.2 基础语法</strong></p>\r\n<p><strong>--PHP标记</strong></p>\r\n<p>&lt;?php和?&gt;；</p>\r\n<p>天生为html而生，嵌套其中；</p>\r\n<p><strong>一般在编译器中，不要写?&gt;，因为容易在结束标记前有不希望输出的空格等内容；直接删掉就行了，会自动结束的；</strong></p>\r\n<p>--从HTML中分离</p>\r\n<p><strong>&lt;?php if ($expression==true): ?&gt;</strong><br><strong> aaaaaaaaa</strong><br><strong> &lt;?php else: ?&gt;</strong><br><strong> bbbbbb</strong><br><strong> &lt;?php endif;?&gt;</strong></p>\r\n<p>一般情况下，php标记能很好的从HTML中分离，但上述例子情况例外——<strong>使用条件的高级分离方法</strong>；</p>\r\n<p>当解释器遇到未完成的条件语句时，会跳过标记寻找相应的东西（比如else）；</p>\r\n<p><strong>适用于输出大段文本，比echo等更有效率。</strong></p>\r\n<p>另外，开始结束的标记也可以用其他的，但推荐&lt;?php；</p>\r\n<p><span style=\"line-height: 1.5;\">--其他</span></p>\r\n<p><span style=\"line-height: 1.5;\">注释：//单行，/*多行；</span></p>\r\n<p><span style=\"line-height: 1.5;\">指令分隔符：分号</span></p>\r\n<p> </p>\r\n<p>把憋了一个月的电影去看了，时间挤啊挤，才有a杯那么一点，明天继续！</p>\r\n<p> </p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3063', '睡觉问题早晚成为我顶头疼的问题。。。-PHP ', '网络', '\n<p>　　hi</p>\r\n<p>昨晚又作自己，睡不好整个人都不好。。。</p>\r\n<p><strong>1、PHP实现页面静态化</strong></p>\r\n<p><strong>二、纯静态化</strong></p>\r\n<p><strong>2.2 实现页面纯静态化的原理</strong></p>\r\n<p><strong>--基本方式</strong></p>\r\n<p>file_put_contents()函数；</p>\r\n<p>使用php内置缓存机制，output_buffering.</p>\r\n<p>具体信息可以去php手册中查找。重点看函数格式，参数，返回值。</p>\r\n<p><strong>--栗子file_put_contents()</strong></p>\r\n<p>&lt;?php<br>/*<br> * 写入函数<br> */</p>\r\n<p><strong>file_put_contents(\'index.shtml\',\'asdklfj\');</strong></p>\r\n<p>运行http://localhost/phpJingtaihua/index.shtml，得到结果。很简单的一个函数。</p>\r\n<p><strong>--栗子output_buffering</strong></p>\r\n<p>有内置函数，<strong>ob（output_buffering)系列的。</strong></p>\r\n<p>主要涉及四个</p>\r\n<p>ob_start,打开输出控制缓冲；</p>\r\n<p>ob_get_contents,返回输出缓冲区内容；</p>\r\n<p>ob_clean,清空输出缓冲区；</p>\r\n<p>ob_get_clean，得到缓冲区内容并删除当前输出缓冲区。</p>\r\n<p><strong>ob_start(); //打开缓冲区</strong><br>echo 1234;<br><strong>echo ob_get_contents();</strong></p>\r\n<p>得到12341234的序列。也就是说，所有输出都要经过缓冲区——就像是水龙头上装了个滤嘴。</p>\r\n<p>ob_start(); //打开缓冲区<br>echo 111;echo \"&lt;br/&gt;\";<br>echo ob_get_contents();echo \"&lt;br/&gt;\";<br><strong>ob_clean();</strong><br>echo ob_get_contents();echo \"&lt;br/&gt;\";</p>\r\n<p>echo 222;echo \"&lt;br/&gt;\";</p>\r\n<p>echo ob_get_clean();echo \"&lt;br/&gt;\";</p>\r\n<p>这里呢，111因为缓冲区的清除，而不会再输出，即使是原始的echo语句也不行。</p>\r\n<p><strong>2.3 纯静态化案例实现简介</strong></p>\r\n<p>终极目的就是生成静态文件。</p>\r\n<p>其一，写入数据到静态文件。</p>\r\n<p>其二，利用ob机制，获取（可以写入到静态文件的）数据。</p>\r\n<p><strong>2.4 案例实现步骤</strong></p>\r\n<p>链接数据库，从数据库中获取数据——》把获取到的数据填充到模板文件中去——》把动态页面转化为静态页面，生成纯静态文件。</p>\r\n<p> </p>\r\n<p>-----------------</p>\r\n<p>先这样，晚上有时间再写。。。。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3064', '其实今天没有欲望..-MySQLi ', '网络', '\n<p>　　hi</p>\r\n<p>中午爽爽的游了会儿泳，但是下午把一拳超人看完了，竟然萌生不出学习的欲望了。。。强迫自己更新点东西吧，一会儿看书去。</p>\r\n<p><strong>1、MySQLi</strong></p>\r\n<p><strong>二、MySQLi基于OOP的编程</strong></p>\r\n<p><strong>2.1 使用解析</strong></p>\r\n<p>--基本</p>\r\n<p><strong>MySQLi是一个拓展类库，本质上是个类</strong>（？）。</p>\r\n<p>一般流程和MySQL一样：<strong>连接，选库，字符集设定，SQL语句执行，关闭连接</strong>。</p>\r\n<p><strong>--链接库例子</strong></p>\r\n<p>&lt;?php<br>/*<br> * <strong>连接和选库</strong><br> */<br><strong>$mysqli=new mysqli(\'localhost\', \'root\', \'\');</strong><br>print_r($mysqli);echo \"&lt;br/&gt;\";</p>\r\n<p>echo <strong>$mysqli-&gt;select_db</strong>(\'test\');echo \"&lt;br/&gt;\";</p>\r\n<p><strong>$mysqli2=new mysqli();</strong><br>print_r(<strong>$mysqli2-&gt;connect</strong>(\'localhost\', \'root\', \'\'));echo \"&lt;br/&gt;\";</p>\r\n<p>print_r(<strong>$mysqli3=new mysqli(\'localhost\', \'root\', \'\',\'test\')</strong>);echo \"&lt;br/&gt;\";</p>\r\n<p>三种不同的方法，这里的方法都是利用mysqli的类属性来做的；当然也可以利用mysqli的命令来链接；</p>\r\n<p>$con=mysqli_connect(HOST,USERNAME,PASSWORD)</p>\r\n<p>结果中有一些信息</p>\r\n<table><tbody>\n<tr>\n<td class=\"webkit-line-content\">mysqli Object</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">(</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[affected_rows] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[client_info] =&gt; mysqlnd 5.0.11-dev - 20120503 - $Id: bf9ad53b11c9a57efdb1057292d73b928b8c5c77 $</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[client_version] =&gt; 50011</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[connect_errno] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[connect_error] =&gt;</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[errno] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[error] =&gt;</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[error_list] =&gt; Array</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">(</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">)</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\"> </td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[field_count] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[host_info] =&gt; localhost via TCP/IP</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[info] =&gt;</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[insert_id] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[server_info] =&gt; 5.6.17</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[server_version] =&gt; 50617</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[stat] =&gt; Uptime: 968 Threads: 1 Questions: 24 Slow queries: 0 Opens: 70 Flush tables: 1 Open tables: 63 Queries per second avg: 0.024</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[sqlstate] =&gt; 00000</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[protocol_version] =&gt; 10</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[thread_id] =&gt; 11</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[warning_count] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">)</td>\r\n\r\n</tr>\n</tbody></table>\n<p>这些属性都是可以通过对象的属性来得到的，比如</p>\r\n<p>echo $mysqli-&gt;client_info;echo \"&lt;br/&gt;\";</p>\r\n<p>或者是通过相对应的方法得到，这些东西查手册可以看到。</p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>//1.建立到MySQL数据的连接<br>// $mysqli=new mysqli(\'localhost\',\'root\',\'root\');<br>// //print_r($mysqli);<br>// //2.打开指定的数据库<br>// $mysqli-&gt;select_db(\'test\');<br>// $mysqli=new mysqli();<br>// $mysqli-&gt;connect(\'127.0.0.1\',\'root\',\'root\');<br>// print_r($mysqli);</p>\r\n<p>//建立连接的同时打开指定数据库<br>$mysqli=@new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>//print_r($mysqli);<br>//$mysqli-&gt;connect_errno:得到连接产生的错误编号<br>//$mysqli-&gt;connect_error:得到连接产生的错误信息<br>if($mysqli-&gt;connect_errno){<br>	die(\'Connect Error:\'.$mysqli-&gt;connect_error);<br>}<br>print_r($mysqli);<br>echo \'&lt;hr color=\"red\"/&gt;\';<br>echo \'客户端的信息：\'.$mysqli-&gt;client_info.\'&lt;br/&gt;\';<br>echo $mysqli-&gt;get_client_info().\'&lt;br/&gt;\';<br>echo \'客户端的版本：\'.$mysqli-&gt;client_version.\'&lt;br/&gt;\';<br>echo \'&lt;hr/&gt;\';<br>echo \'服务器端信息：\'.$mysqli-&gt;server_info.\'&lt;br/&gt;\';<br>echo $mysqli-&gt;get_server_info();<br>echo \'&lt;hr/&gt;\';<br>echo \'服务器版本：\'.$mysqli-&gt;server_version.\'&lt;br/&gt;\';</p>\r\n<p>echo \'&lt;hr/&gt;\';</p>\r\n<p><strong>--字符集例子</strong></p>\r\n<p>&lt;?php<br>//1.建立到MySQL的连接<br>$mysqli=@new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'Connect Error:\'.$mysqli-&gt;connect_error);<br>}<br>//2.设置默认的客户端编码方式utf8<br><strong>$mysqli-&gt;set_charset(\'utf8\');</strong></p>\r\n<p>//3.执行SQL查询<br>$sql=&lt;&lt;&lt;EOF<br>	CREATE TABLE IF NOT EXISTS mysqli(<br>		id TINYINT UNSIGNED AUTO_INCREMENT KEY,<br>		username VARCHAR(20) NOT NULL<br>	);<br>EOF;<br>$res=$mysqli-&gt;query($sql);<br>var_dump($res);</p>\r\n<p>/*<br> SELECT/DESC/DESCRIBE/SHOW/EXPLAIN执行成功返回mysqli_result对象，执行失败返回false<br> 对于其它SQL语句的执行，执行成功返回true，否则返回false<br> */<br>//关闭连接<br>$mysqli-&gt;close();</p>\r\n<p>需要注意的是数据库中的是utf8，而不是utf-8；</p>\r\n<p><strong>2.2 插入记录操作</strong></p>\r\n<p>增。</p>\r\n<p><strong>--connect.php</strong></p>\r\n<p>因为连接数据库的一系列操作是常用的，对于这种，我们简便的方法就是<strong>封装起来，到处调用</strong></p>\r\n<p>require_once \'connect.php\';</p>\r\n<p>connect.php</p>\r\n<p>&lt;?php<br>/*<br> * <strong>连接和选库（头）文件</strong><br> */<br>$mysqli=new mysqli(\'localhost\', \'root\', \'\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'Connect Error:\'.$mysqli-&gt;connect_error);<br>}else{<br>	echo \'客户端的信息：\'.$mysqli-&gt;client_info.\'&lt;br/&gt;\';<br>}<br>$mysqli-&gt;set_charset(\'utf8\');</p>\r\n<p><strong>--增</strong></p>\r\n<p>&lt;?php<br>/*<br> * 数据库插入数据<br> */</p>\r\n<p><strong>require_once \'connect.php\';</strong></p>\r\n<p>$sql=\"insert mysqli(username) value(\'Tom\')\";<br><strong>echo $mysqli-&gt;query($sql);</strong></p>\r\n<p>这里执行的是单条的sql语句。</p>\r\n<p>或者完善一点，添加一个判断，并输出错误信息。</p>\r\n<p>if($res){<br>	echo $mysqli-&gt;insert_id; <br>}else{<br>	echo \'ERROR \'.$mysqli-&gt;error;<br>}</p>\r\n<p>或者，插入多条记录</p>\r\n<p>$sql=\"insert mysqli(username) value(\'Sdaf\'),(\'Andy\')\";</p>\r\n<p><strong>2.3 更新记录</strong></p>\r\n<p>更新。</p>\r\n<p>$sql=\"update test set id=id+10\";<br>$mysqli-&gt;query($sql);</p>\r\n<p><strong>2.4 删除</strong></p>\r\n<p>删</p>\r\n<p>$sql=\"delete from mysqli where id&gt;=2\";</p>\r\n<p>--</p>\r\n<p><strong>特别说明，affected_rows返回的情况有三种：</strong></p>\r\n<p><strong>-1  sql语句有问题；</strong></p>\r\n<p>0 没有受影响的语句；</p>\r\n<p>&gt;=0 受影响的条数。</p>\r\n<p><strong>--小结</strong></p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>$mysqli=new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'CONNECT ERROR:\'.$mysqli-&gt;connect_error);<br>}<br>$mysqli-&gt;set_charset(\'utf8\');</p>\r\n<p>//执行SQL查询<br>//添加记录<br>//执行单条SQL语句,只能执行一条SQL语句<br>// $sql=\"INSERT user(username,password) VALUES(\'king\',\'king\');\";<br>// $sql.=\"DROP TABLE user;\";<br>$sql=\"INSERT user(username,password) VALUES(\'queen1\',\'queen1\'),(\'queen2\',\'queen2\'),(\'queen3\',\'queen3\'),(\'queen4\',\'queen4\')\";<br>$res=$mysqli-&gt;query($sql);<br>if($res){<br>	//得到上一插入操作产生的AUTO_INCREMENT的值<br>	echo \'恭喜您注册成功，您是网站第\'.$mysqli-&gt;insert_id.\'位用户&lt;br/&gt;\';<br>	//得到上一步操作产生的受影响记录条数<br>	echo \'有\'.$mysqli-&gt;affected_rows.\'记录被影响\';<br>}else{<br>	//得到上一步操作产生的错误号和错误信息<br>	echo \'ERROR \'.$mysqli-&gt;errno.\':\'.$mysqli-&gt;error;<br>}<br>echo \'&lt;hr/&gt;\';</p>\r\n<p>//将表中年龄+10<br>$sql=\"UPDATE user SET age=age+10\";<br>$res=$mysqli-&gt;query($sql);<br>if($res){<br>	echo $mysqli-&gt;affected_rows.\'条记录被更新\';<br>}else{<br>	echo \"ERROR \".$mysqli-&gt;errno.\':\'.$mysqli-&gt;error;<br>}<br>echo \'&lt;hr/&gt;\';</p>\r\n<p>//将表中id&lt;=6的用户删除掉<br>$sql=\"DELETE FROM user WHERE id&lt;=6\";<br>$res=$mysqli-&gt;query($sql);<br>if($res){<br>	echo $mysqli-&gt;affected_rows.\'条记录被删除\';<br>}else{<br>	echo \"ERROR \".$mysqli-&gt;errno.\':\'.$mysqli-&gt;error;<br>}<br>//关闭到MySQL的连接<br>$mysqli-&gt;close();</p>\r\n<p><strong>2.5 查</strong></p>\r\n<p>需要注意的是，用的是select，所以返回的是结果集，是可以打印出来的print_r或var_dump。</p>\r\n<p>所以这里就要说一下，返回的结果集的选择了。</p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>$mysqli=new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'CONNECT ERROR:\'.$mysqli-&gt;connect_error);<br>}<br>$mysqli-&gt;set_charset(\'utf8\');<br>$sql=\"SELECT id,username,age FROM user\";<br><strong>$mysqli_result=$mysqli-&gt;query($sql);</strong><br>//var_dump($mysqli_result);<br>if($mysqli_result &amp;&amp; $mysqli_result-&gt;num_rows&gt;0){<br>	//echo $mysqli_result-&gt;num_rows;<br><strong>//$rows=$mysqli_result-&gt;fetch_all();//获取结果集中所有记录，默认返回的是二维的</strong><br>	//索引+索引的形式<br>	//$rows=$mysqli_result-&gt;fetch_all(MYSQLI_NUM);<br>	//$rows=$mysqli_result-&gt;fetch_all(MYSQLI_ASSOC);<br>	//$rows=$mysqli_result-&gt;fetch_all(MYSQLI_BOTH);<br><strong>// 	$row=$mysqli_result-&gt;fetch_row();//取得结果集中一条记录作为索引数组返回</strong><br>// 	print_r($row);<br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_assoc();//取得结果集中的一条记录作为关联数组返回</strong><br>// 	print_r($row);<br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_array();//二者都有的</strong><br>// 	print_r($row);<br><br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_array(MYSQLI_ASSOC);</strong><br>// 	print_r($row);<br><br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_object();</strong><br>// 	print_r($row);<br>// 	echo \'&lt;hr/&gt;\';<br>// 	//移动结果集内部指针<br>// 	$mysqli_result-&gt;data_seek(0);<br>// 	$row=$mysqli_result-&gt;fetch_assoc();<br>// 	print_r($row);<br><br>// 	print_r($rows);</p>\r\n<p>	while($row=$mysqli_result-&gt;fetch_assoc()){<br>		//print_r($row);<br>		//echo \'&lt;hr/&gt;\';<br>		$rows[]=$row;<br>	}<br>	print_r($rows);<br><br><strong>//释放结果集</strong><br><strong>	$mysqli_result-&gt;free();</strong><br><br><br>}else{<br>	echo \'查询错误或者结果集中没有记录\';<br>}<br>$mysqli-&gt;close();</p>\r\n<p> </p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3065', '感觉没睡好就..-shenmedoumeixie.... ', '网络', '\n<p>　　hi</p>\r\n<p>昨晚没睡好，虽然梦很香，但睡不好没精神做科研啊。。。</p>\r\n<p><strong>1、jQuery</strong></p>\r\n<p><strong>十二、实现聊天室创建</strong></p>\r\n<p><strong>12.1 基本功能</strong></p>\r\n<p>登陆；</p>\r\n<p><strong>无刷新实时交流；</strong></p>\r\n<p>支持表情。</p>\r\n<p>12.2 大致效果</p>\r\n<p>登陆——》验证，打算用AJAX来做；</p>\r\n<p>聊天——》php实现具体功能就行。</p>\r\n<p>12.3 数据流分析</p>\r\n<p>登陆页面：获取用户名和密码请求登陆-返回聊天页面或失败信息以及登陆页面；</p>\r\n<p>聊天页面：聊天内容的请求和返回（实现无刷新的更新数据）；在线人员信息的请求和返回；处理发送内容的请求，写入聊天内容。</p>\r\n<p><strong>12.4 登陆页面开发</strong></p>\r\n<p> --------突然间发现需要AJAX的知识储备，但我今天不想看ajax，周末再来吧。。。-----------</p>\r\n<p><strong>2、PHP实现页面静态化（一）</strong></p>\r\n<p><strong>一、静态化简介</strong></p>\r\n<p><strong>1.1、动态页面和静态页面</strong></p>\r\n<p>动态：执行动态程序，php，jsp等；比如php，语法分析，编译再运行。</p>\r\n<p>静态：html等文件。</p>\r\n<p><strong>1.2、关于优化页面响应时间</strong></p>\r\n<p><span style=\"line-height: 1.5;\">--主要手段</span></p>\r\n<p><span style=\"line-height: 1.5;\">动态页面静态化——本节重点；</span></p>\r\n<p>优化数据库；</p>\r\n<p>使用负载均衡；</p>\r\n<p>使用缓存；</p>\r\n<p><strong>--动态页面静态化</strong></p>\r\n<p><strong>场景</strong>：页面中的一些内容不经常改动；</p>\r\n<p><strong>实质：生成静态的HTML文件</strong>；（减少了执行步骤，也就节省了时间）</p>\r\n<p>减少响应时间，<strong>重要的是减少服务器负担。</strong></p>\r\n<p>不适合微博等更新较快的。</p>\r\n<p><strong>1.3 关于动态URL地址设置静态形式</strong></p>\r\n<p>http://state.com/index.php?c=play&amp;a=index&amp;id=8123</p>\r\n<p>变为</p>\r\n<p>http://state.com/play/8123.shtml</p>\r\n<p>这个过程暂时还是伪静态（实际上还是动态文件，只是换了个马甲）。</p>\r\n<p><strong>1.4 PHP静态化</strong></p>\r\n<p><strong>--纯静态</strong></p>\r\n<p>通过php程序生成的真正的静态文件。</p>\r\n<p>又分为局部纯静态（/局部动态，实现方法可能是ajax的异步操作）和全局纯静态。</p>\r\n<p><strong>--伪静态</strong></p>\r\n<p>把URL地址转化为类似html的情况。</p>\r\n<p><strong>二、纯静态化案例实现</strong></p>\r\n<p><strong>2.1 buffer</strong></p>\r\n<p>--概述</p>\r\n<p><strong>其实就是缓冲区</strong>，一个内存地址空间，用于存储数据。</p>\r\n<p>实现静态化，要围绕buffer展开。</p>\r\n<p>比如说电脑系统中的buffer，就是当有数据要进行存储操作的时候，需要先把某个buffer存满，然后再写入磁盘。</p>\r\n<p><strong>--流程</strong></p>\r\n<p>内容——php buffer——tcp——终端</p>\r\n<p><strong>--使用</strong></p>\r\n<p>&lt;?php<br>echo 1;echo \"&lt;br/&gt;\";<br>echo ob_get_contents();</p>\r\n<p>如果没开启，要么改php.ini，要么加头文件</p>\r\n<p>ob_start();</p>\r\n<p>2.2 实现纯静态化</p>\r\n<p>--基本方式</p>\r\n<p>file_put_contents()</p>\r\n<p>output_buffering()</p>\r\n<p> </p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3066', '周一干不干活-PHP+MySQLi ', '网络', '\n<p>hi</p>\r\n<p>本来是雄心壮志的要干活的，哪知天有不测，早上大阴天起不来，中午又回寝室折腾衣服（做女工啊，牛不牛）没睡午觉，这样的迷糊状态，怎么科研，写这个好了。</p>\r\n<p><strong>1、PHP的OOP编程</strong></p>\r\n<p><strong>4.7 多态</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>由于接口的方法实现有多种多样，这种特性称之为多态</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>function eat($obj){<br>  if($obj instanceof ICanEat){ <br>    $obj-&gt;eat(\"FOOD\"); // 不需要知道到底是Human还是Animal，直接吃就行了<br>  }else{<br>    echo \"Can\'t eat!\\n\";<br>  }<br>}</p>\r\n<p>$man = new Human();<br>$monkey = new Animal();</p>\r\n<p><strong>// 同样的代码，传入接口的不同实现类的时候，表现不同。这就是为什么成为多态的原因。</strong><br>eat($man);<br>eat($monkey);</p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 多态<br> * 1. 只要某个对象实现了接口（instanceof），就可以直接在对象上调用接口的方法<br> */</p>\r\n<p><strong>4.8 抽象类</strong></p>\r\n<p><strong>--问题</strong></p>\r\n<p>连接接口的类，某些方法都是相同的，那么是否能够允许类中不实现，而是在接口中实现。</p>\r\n<p>比如，人和动物吃东西不同，但呼吸相同。</p>\r\n<p><strong>--栗子</strong></p>\r\n<p><strong>abstract class ACanEat{ //关键字改变</strong><br><strong>abstract public function eat($food);//需要类自行实现的，前面加上abstract关键字</strong><br><br>	public function breath(){<br>		echo \"Breath use the air.&lt;br/&gt;\";<br>	}<br><br>}</p>\r\n<p>class Human extends ACanEat{       //实现接口用implenments，这里用extends<br>	public function eat($food){<br>		echo \"Human eating \".$food.\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class Animal <strong>extends</strong> ACanEat{       <strong>//实现接口用implenments，这里用extends</strong><br>	public function eat($food){<br>		echo \"Animal eating \".$food.\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>$xiaoming=new Human();<br>$xiaohei=new Animal();</p>\r\n<p>$xiaoming-&gt;breath();$xiaoming-&gt;eat(\"food\");<br>$xiaohei-&gt;breath();$xiaohei-&gt;eat(\"shit\");</p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 抽象类<br> * 1. 抽象类允许类里面的部分方法暂时没有具体实现，这些方法我们成为抽象方法<br> * 2. 一旦类里面有抽象方法，这个类就必须是抽象类<br> * 3. 抽象类跟接口一样，不能直接实例化为对象<br> */</p>\r\n<p><strong>五、魔术方法</strong></p>\r\n<p><strong>5.1 简介</strong></p>\r\n<p><strong>注意所有的魔术方法前面都是两个下划线__</strong></p>\r\n<p>PHP中的OOP特有的。</p>\r\n<p>比如构造函数和析构函数。</p>\r\n<p><strong>5.2 __tostring()和__invoke()</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>__tostring()，当对象被当作String使用时，这个方法会被自动调用；echo $obj;</p>\r\n<p>__invoke()，当对象被当作方法（函数）调用时，这个方法被自动调用；$obj(4);</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>&lt;?php<br>/*<br> * tostring()魔术方法<br> * invoke()魔术方法<br> */</p>\r\n<p>class MagicTest{<br>	public function __toString(){<br>	return \"This is the class magictest.\";<br>}<br>   public function __invoke($x){<br>   	echo \"&lt;br/&gt;\".$x;<br>   }<br>}<br>$obj=new MagicTest();<br>echo $obj;</p>\r\n<p>$obj(5);</p>\r\n<p>用法和构造函数析构函数类似。比较自动化（自动调用，即使没有声明也会调用），但同时<strong>比较容易出错，小心。</strong></p>\r\n<p><strong>5.3 __call()和__callStatic()或重载（overloading）</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>当对象访问不存在的方法名称时，__call()会被自动调用；</p>\r\n<p>当对象访问不存在的静态方法名称时，__callStatic()会被自动调用；</p>\r\n<p>这两个方法，又称为重载（不同于重写）；通过这两个方法，同一个方法的名称的调用可以对应不同的方法实现</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>&lt;?php<br>/*<br> * tostring()魔术方法<br> * invoke()魔术方法<br> */</p>\r\n<p>class MagicTest{<br>	public function __toString(){<br>	return \"This is the class magictest.\";<br>}<br>   public function __invoke($x){<br>   	echo \"&lt;br/&gt;\".$x.\"&lt;br/&gt;\";<br>   }<br><strong>public function __call($name,$arguments){    //__call的格式是固定的，第一个是方法名，第二个是方法内的参数</strong><br>   	  echo \"Calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br>   public <strong>static</strong> function __callstatic($name,$arguments){ <br>   	echo \"Static calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br>}<br>$obj=new MagicTest();<br>echo $obj;</p>\r\n<p>$obj(5);</p>\r\n<p>$obj-&gt;runTest(\"para1\",\"para2\");<br>$obj::runTest(\"para3\",\"para4\");</p>\r\n<p>注意这里要求定义方法的时候格式是固定的。</p>\r\n<p><strong>5.4 __get()__set()__isset()__unset</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>这几个方法也被称为<strong>属性重载</strong>的魔术方法。</p>\r\n<p>__set()，在给<strong>不可访问属性（一种是属性未定义，另一种是没有访问权限，如private）</strong>赋值时调用；</p>\r\n<p>__get()，读取不可访问属性的值时调用；</p>\r\n<p>__isset()，当对不可访问属性调用isset（）或empty（）时调用；</p>\r\n<p>__unset()，。。。。。。。。。unset（）。。。。。。。。。。</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>&lt;?php<br>/*<br> * tostring()魔术方法<br> * invoke()魔术方法<br> */</p>\r\n<p>class MagicTest{<br>	public function __toString(){<br>	return \"This is the class magictest.\";<br>}<br>   public function __invoke($x){<br>   	echo \"&lt;br/&gt;\".$x.\"&lt;br/&gt;\";<br>   }<br>   public function __call($name,$arguments){    //__call的格式是固定的，第一个是方法名，第二个是方法内的参数<br>   	  echo \"Calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br>   public static function __callstatic($name,$arguments){    <br>   	echo \"Static calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br><strong>public function __get($name){  //get要有name</strong><br>   	return \"Getting the property \".$name.\"&lt;br/&gt;\"; 	  	<br>   } <br><strong>public function __set($name,$value){   //set要有名有值</strong><br>   	echo \"Setting the property \".$name.\" to value \".$value.\".&lt;br/&gt;\";<br>   }<br><strong>public function __isset($name){    //判断是否定义了属性</strong><br>   	echo \"__isset invoked&lt;br/&gt;\";<br>   	return true;<br>   }<br><strong>public function __unset($name){   //撤销</strong><br>   	echo \"unsetting protery \".$name.\"&lt;br/&gt;\";<br>   	return true;<br>   }<br>}<br>$obj=new MagicTest();<br>echo $obj;</p>\r\n<p>$obj(5);</p>\r\n<p>$obj-&gt;runTest(\"para1\",\"para2\");<br>$obj::runTest(\"para3\",\"para4\");</p>\r\n<p>echo $obj-&gt;classname;<br>$obj-&gt;classname=\"shit\";</p>\r\n<p>echo isset($obj-&gt;classname).\"&lt;br/&gt;\";<br>unset($obj-&gt;classname);echo \"&lt;br/&gt;\";<br>echo empty($obj-&gt;classname).\"&lt;br/&gt;\";</p>\r\n<p>结果是</p>\r\n<p>This is the class magictest.<br>5<br>Calling runTest with parameters: para1,para2<br>Static calling runTest with parameters: para3,para4<br>Getting the property classname<br>Setting the property classname to value shit.<br>__isset invoked<br>1<br>unsetting protery classname<br><br>__isset invoked</p>\r\n<p>可以看到，<strong>其实isset和empty调用__isset时一对相反的操作。</strong></p>\r\n<p>然后，<strong>__set($name，$value)和__unset($name)</strong>是一对相反的操作，但所要元素不一样；</p>\r\n<p><strong>__isset($name),__get($name)</strong>都只需要名字（记住每个魔术方法的作用，理解了，就好记了）。</p>\r\n<p><strong>5.5 __clone()</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>就是克隆，或克隆</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>先给出<strong>clone关键字</strong>的用法。</p>\r\n<p>&lt;?php<br>/*<br> * 克隆魔术方法<br> */</p>\r\n<p>class  nbaPlayer{<br>	public $name;<br>}</p>\r\n<p>$james=new nbaPlayer();<br>$james-&gt;name=\'James\';<br>echo $james-&gt;name.\"&lt;br/&gt;\";</p>\r\n<p><strong>$kobe=clone $james;</strong><br>$kobe-&gt;name=\'Kobe\';<br>echo $kobe-&gt;name;</p>\r\n<p>clone后的，就是个单独的对象，对其操作不影响原对象。</p>\r\n<p><strong>加上__clone()</strong></p>\r\n<p>&lt;?php<br>/*<br> * 克隆魔术方法<br> */</p>\r\n<p>class  nbaPlayer{<br>	public $name;<br><br><strong>public function __clone(){</strong><br>		$this-&gt;name=\"shit\";<br>	}<br><br>}</p>\r\n<p>$james=new nbaPlayer();<br>$james-&gt;name=\'James\';<br>echo $james-&gt;name.\"&lt;br/&gt;\";</p>\r\n<p>$kobe=clone $james;<br><strong>echo $kobe-&gt;name.\"&lt;br/&gt;\";</strong><br>$kobe-&gt;name=\'Kobe\';<br>echo $kobe-&gt;name.\"&lt;br/&gt;\";</p>\r\n<p>一般来说，用处在于<strong>clone后的初始化</strong>；或者说，<strong>当复制后，不想透露的某些信息的掩盖。</strong></p>\r\n<p>在工作中常用到这一个，因为常有<strong>对某个对象的操作，又不想影响原有数据</strong>，就克隆/复制一个出来。</p>\r\n<p>----------------------------------------</p>\r\n<p><strong>2、MySQLi扩展</strong></p>\r\n<p><strong>一、安装及下载</strong></p>\r\n<p>1.1 优势及简介</p>\r\n<p>更新更好，PHP5及以后推荐使用（或者PDO）。</p>\r\n<p><strong>--优点</strong></p>\r\n<p>基于OOP和面向过程的使用；</p>\r\n<p>支持预处理语句；</p>\r\n<p>支持事务。</p>\r\n<p>--其他</p>\r\n<p>速度更快。安全性更好</p>\r\n<p><strong>1.2 安装及配置</strong></p>\r\n<p>--安装</p>\r\n<p>配置php，开启php_mysqli.dll；</p>\r\n<p>配置extension_dir=\'ext目录位置\';</p>\r\n<p>重启服务器。</p>\r\n<p>（我用的是WAMP，直接打对勾就行）</p>\r\n<p><strong>--验证</strong></p>\r\n<p>&lt;?php<br>/*<br> * 验证mysqli是否开启<br> */</p>\r\n<p>//phpinfo();<br>//2.检测扩展是否已经加载<br>var_dump(extension_loaded(\'mysqli\'));<br>var_dump(extension_loaded(\'curl\'));<br>echo \'&lt;hr/&gt;\';<br>//3.检测函数是否存在<br>var_dump(function_exists(\'mysqli_connect\'));<br>echo \'&lt;hr/&gt;\';<br>//4.得到当前已经开启的扩展<br>print_r(get_loaded_extensions());<br>echo \'&lt;hr/&gt;\';</p>\r\n<p> </p>\r\n<p>---</p>\r\n<p>困了，回去洗洗睡觉。。。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3067', '荒芜的周六-PHP之面向对象（三） ', '网络', '\n<p>　　hi　　</p>\r\n<p>又是开森的周六了。积攒的两周的衣服，终于是差不多洗完了。大下午的才来学点东西~~</p>\r\n<p><strong>1、PHP面向对象（三）</strong></p>\r\n<p><strong>四、OOP的高级实践</strong></p>\r\n<p><strong>4.3 Static-静态成员</strong></p>\r\n<p>&lt;?php<br>date_default_timezone_set(\"PRC\");<br>/**<br> * 1. 类的定义以class关键字开始，后面跟着这个类的名称。类的名称命名通常每个单词的第一个字母大写。<br> * 2. 定义类的属性<br> * 3. 定义类的方法<br> * 4. 实例化类的对象<br> * 5. 使用对象的属性和方法<br> */</p>\r\n<p>class Human{<br>	public $name;<br>	public $height;<br>	public $weight;<br><br>	public function eat($food){<br>		echo $this-&gt;name.\"\'s eating \".$food.\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class Animal{<br>	public $kind;<br>	public $gender;<br>}</p>\r\n<p><br>class NbaPlayer extends Human{<br>    // 类的属性的定义<br>    public $name=\"Jordan\";// 定义属性<br>    public $height=\"198cm\";<br>    public $weight=\"98kg\";<br>    public $team=\"Bull\";<br>    public $playerNumber=\"23\";<br>    private $age=\"44\";<br>    public $president=\"David Stern\";<br><br><br><br>    // 类的方法的定义<br>    public function changePresident($newP){<br>    	$this-&gt;president=$newP;<br>    }<br><br>    public function run() {<br>        echo \"Running&lt;br/&gt;\";<br>    }</p>\r\n<p>    public function jump(){<br>        echo \"Jumping&lt;br/&gt;\";<br>    }<br><br>    public function dribble(){<br>        echo \"Dribbling&lt;br/&gt;\";<br>    }<br><br>    public function shoot(){<br>        echo \"Shooting&lt;br/&gt;\";<br>    }<br><br>    public function dunk(){<br>        echo \"Dunking&lt;br/&gt;\";<br>    }<br><br>    public function pass(){<br>        echo \"Passing&lt;br/&gt;\";<br>    }<br><br>    public function getAge(){<br>    	echo $this-&gt;name.\"\'s age is \".$this-&gt;age;<br>    }<br><br>    function __construct($name, $height, $weight, $team, $playerNumber){<br>    	print $name . \";\" . $height . \";\" . $weight . \";\" . $team . \";\" . $playerNumber.\"\\n\";<br>    	$this-&gt;name = $name; // $this是php里面的伪变量，表示对象自身<br>    	$this-&gt;height = $height; // 通过$this可以设置对象的属性值<br>    	$this-&gt;weight = $weight;<br>    	$this-&gt;team = $team;<br>    	$this-&gt;playerNumber = $playerNumber;<br>    }<br><br>}</p>\r\n<p><br>/**<br> * 1. 类实例化为对象时使用new关键字，new之后紧跟类的名称和一对括号。<br> * 2. 使用对象可以像使用其他值一样进行赋值操作<br> */<br>$jordan = new NbaPlayer(\"Jordan\", \"198cm\",\"98kg\",\"Bull\",\"23\");echo \"&lt;br/&gt;\";<br>$james=new NbaPlayer(\"James\", \"203cm\", \"120kg\", \"Heat\", \"6\");echo \"&lt;br/&gt;\";<br>// 访问对象的属性使用的语法是-&gt;符号，后面跟着属性的名称<br>echo $jordan-&gt;name.\"&lt;br/&gt;\";<br>// 调用对象的某个方法使用的语法是-&gt;符号，后面跟着方法的名称和一对括号<br>$jordan-&gt;run();<br>$jordan-&gt;pass();<br>//子类调用父类的方法<br>$jordan-&gt;eat(\"apple\");<br>//试着调用private,直接以及通过内部的public函数<br>//$jordan-&gt;age;<br>$jordan-&gt;getAge();echo \"&lt;br/&gt;\";</p>\r\n<p>$jordan-&gt;changePresident(\"Adam Silver\");<br>echo $jordan-&gt;president.\"&lt;br/&gt;\";<br>echo $james-&gt;president.\"&lt;br/&gt;\";</p>\r\n<p> 直接从上述例子开始吧。</p>\r\n<p>这里想得到的是，<strong>把两位对象的某一个变量同时变掉。——用static</strong></p>\r\n<p><strong> public static $president=\"David Stern\";</strong><br><br>    // 类的方法的定义<br>    public <strong>static</strong> function changePresident($newP){<br><strong>static::$president=$newP;//这里static换成self更符合规范</strong><br>    }</p>\r\n<p>注意这里static的位置，以及，方法内的::</p>\r\n<p>调用的方法也有所变动。</p>\r\n<p>echo <strong>NbaPlayer::$president;</strong>echo \"&lt;br/&gt;\";<br><strong>NbaPlayer::changePresident(\"Adam Silver\");</strong><br>echo NbaPlayer::$president;echo \"&lt;br/&gt;\";</p>\r\n<p>也就是像之前说的，<strong>静态成员就是个常量，所以不针对某个具体的对象（不受具体对象的约束）</strong>——基于此，定义&amp;赋值&amp;调用都不需要具体的对象参与。</p>\r\n<p><strong>内部调用要用self/static::$...</strong></p>\r\n<p><strong>外部调用，类名::</strong></p>\r\n<p>用处就是所有的对象共用的数据。</p>\r\n<p><strong>--如果内部调用时，变量在父类中</strong></p>\r\n<p>比如说，在上述例子中，父类human中写这么一句话</p>\r\n<p>public static $aaa=\"dafdfa\";</p>\r\n<p>然后在子类nbaplayer中，调用父类的静态成员时，要</p>\r\n<p>echo <strong>parent::$aaa;</strong></p>\r\n<p>而外部调用，按照上面说的，类名::，所以，直接父类类名即可</p>\r\n<p>echo Human::$aaa;</p>\r\n<p>--其他</p>\r\n<p><strong>在静态方法中，是无法访问其他变量的，也就是说，不能用$this-&gt;</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 静态成员<br> * 1. 静态属性用于保存类的公有数据<br> * 2. 静态方法里面只能访问静态属性<br> * 3. 静态成员不需要实例化对象就可以访问<br> * 4. 类内部，可以通过self或者static关键字访问自身的静态成员<br> * 5. 可以通过parent关键字访问父类的静态成员<br> * 6. 可以通过类名称在外部访问类的静态成员<br> */</p>\r\n<p><strong>4.4 Final成员</strong></p>\r\n<p><strong>--问题</strong></p>\r\n<p>不希望某个类拥有子类；</p>\r\n<p>不希望子类修改父类中的某个变量（避免重写？）</p>\r\n<p><strong>--final</strong></p>\r\n<p>》=php5版本</p>\r\n<p>举个例子</p>\r\n<p>class BaseClass{<br>	public  function test(){<br>		echo \"BaseClass::test called&lt;br/&gt;\";<br>	}<br><br>	public function test1(){<br>		echo \"BaseClass::test1 called&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class  ChildClass extends BaseClass{<br>	public function test(){<br>		echo \"ChildClass::test called&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>$obj=new ChildClass();<br>$obj-&gt;test();</p>\r\n<p>子类中编写跟父类中完全一致的方法名（内容可以不同），会完成对父类方法的<strong>重写</strong>！</p>\r\n<p><strong> 所以，不希望被重写的父类中的方法，写上final</strong></p>\r\n<p><strong><strong>final </strong>public function test(){</strong></p>\r\n<p>依此类推，对于不想有子类的父类，在类名那里写上final</p>\r\n<p><strong>final class BaseClass{</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 重写和Final<br> * 1. 子类中编写跟父类完全一致的方法可以完成对父类方法的重写<br> * 2. 对于不想被任何类继承的类可以在class之前添加final关键字<br> * 3. 对于不想被子类重写（overwrite, 修改）的方法，可以在方法定义前面添加final关键字<br> */</p>\r\n<p><strong>4.5 数据访问</strong></p>\r\n<p>先把final都去掉</p>\r\n<p>--parent</p>\r\n<p>然后再子类中的方法中写</p>\r\n<p>parent::test();</p>\r\n<p>运行后会发现，依然可以<strong>通过parent的关键字调用父类中，即使是被重写的数据</strong></p>\r\n<p>--self</p>\r\n<p>然后在父类中的方法test中写</p>\r\n<p><span class=\"Apple-tab-span\"> self::test1();</span></p>\r\n<p>运行后，发现<strong>self可以调用同一个类中的数据（其他方法/静态变量/常量const）</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 数据访问补充<br> * 1. parent关键字可以用于调用父类被重写的类成员<br> * 2. self关键字可以用于访问类自身的成员方法，也可以用于访问自身的静态成员和类常量；不能用于访问类自身的属性；访问类常量时不用在常量名称前面加$符号<br> * 3. static关键字用于访问类自身定义的静态成员，访问静态属性时需要在属性名前面添加$符号<br> */</p>\r\n<p><strong>4.6 对象接口</strong></p>\r\n<p>非常重要！！！</p>\r\n<p><strong>--问题</strong></p>\r\n<p>不同的类，有着相同的行为，但相同的行为又有着不同的实现方法。</p>\r\n<p>比如人和动物都会吃东西，但吃的方式方法又不太一样。</p>\r\n<p>--定义</p>\r\n<p><strong>接口就是把不同类的共同行为进行了定义，然后在不同的类里面实现不同的功能。</strong></p>\r\n<p><strong>--栗子 </strong></p>\r\n<p>//定义一个接口<br><strong>interface ICanEat{</strong><br>	public function eat($food);<br>}</p>\r\n<p>可以看到，接口中并没有方法的具体实现，但必须有方法！</p>\r\n<p>那么，下面是，“人类会吃”</p>\r\n<p>//具体对象，连接到接口<br><strong>class Human implements ICanEat{</strong><br><br>	public function eat($food){<br>		echo \"Human eating \".$food.\".&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>$obj=new Human();<br>$obj-&gt;eat(\"shit\");</p>\r\n<p>请忽略我给出的“食物”。</p>\r\n<p>注意，<strong>不再用extends，而是implements。然后，同样是方法名的完全相同。然后，对象必须/最好实现方法。</strong></p>\r\n<p>继续</p>\r\n<p>interface ICanEat{<br>	public function eat($food);<br>}</p>\r\n<p>//具体对象，连接到接口<br>class Human implements ICanEat{<br>public function eat($food){<br>		echo \"Human eating \".$food.\".&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class Animal implements ICanEat{<br>    public function eat($food){<br>		echo \"Animal eating \".$food.\".&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p><br>$obj=new Human();<br>$obj-&gt;eat(\"shit\");</p>\r\n<p>$monkey=new Animal();<br>$monkey-&gt;eat(\"banana\");</p>\r\n<p>让动物也吃起来！</p>\r\n<p><strong>--逆向操作</strong></p>\r\n<p>判断某个对象是否连接了某个接口。</p>\r\n<p>var_dump($obj<strong> instanceof</strong> ICanEat);</p>\r\n<p>会返回boolean值。</p>\r\n<p><strong>--更多的栗子</strong></p>\r\n<p><strong>interface ICanPee extends ICanEat{</strong><br>	public function pee();<br>}</p>\r\n<p>class Demon implements ICanPee{<br>	public function pee(){<br>		echo \"Can demon pee?\";<br>	}<br>	public function eat($food){<br>		echo \"Can demon eat \".$food;<br>	}<br>}</p>\r\n<p>$ghost=new Demon();<br>$ghost-&gt;pee();<br>$ghost-&gt;eat(\"shit\");</p>\r\n<p><strong>接口本质上也是类，可以被继承/继承，但是使用继承接口的接口，所有父类、“爷类”的方法都要有具体实现。</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 接口<br> * 1. 接口的基本概念和基本使用方法<br> * 2. 接口里面的方法没有具体的实现<br> * 3. 实现了某个接口的类必须提供接口中定义的方法<br> * 4. 不能用接口创建对象，但是能够判断某个对象是否实现了某个接口<br> * 5. 接口可以继承接口（interface extends interface）<br> * 6. 接口中定义的所有方法都必须是公有，这是接口的特性。<br> */</p>\r\n<p> </p>\r\n<p>aaaaaaaaaaaaaa</p>\r\n<p>bu xiang xie le....................</p>\r\n<p>ming tian yao ge ..............</p>\r\n<p> </p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3068', '周五了啦啦啦啦-LAMP+PHP‘s OOP ', '网络', '\n<p>　　hi</p>\r\n<p>周五咯~~</p>\r\n<p><strong>1、LAMP配置完结篇</strong></p>\r\n<p><strong>五、LAMP配置环境优化</strong></p>\r\n<p><strong>5.4 虚拟主机工作原理</strong></p>\r\n<p>apache的虚拟主机。virtual-host</p>\r\n<p>用不同的域名访问不同的目录——手动模拟dns</p>\r\n<p>修改host文件即可实现。具体就是主机地址 域名</p>\r\n<p><strong>复习</strong></p>\r\n<p>liang@liang-andy:~$ sudo apt-get install apache2</p>\r\n<p>liang@liang-andy:~$ sudo apt-get install php5<br>然后加载/检查php5.load这个php实现对apache2操作的模块<strong>（LAMP的互相，就是模块的启动/连接）</strong><br>liang@liang-andy:~$ cat /etc/apache2/mods-enabled/php5.load<br>liang@liang-andy:~$ sudo apt-get install mysql-server</p>\r\n<p>sudo apt-get install apache2 php5 mysql-server php5-mysql</p>\r\n<p>liang@liang-andy:~$ sudo service mysql restart<br>liang@liang-andy:~$ sudo service apache2 restart</p>\r\n<p>----创建phpinfo探针</p>\r\n<p>先装vim</p>\r\n<p>sudo apt-get install vim</p>\r\n<p>再切换到php的www文件夹，用cd命令</p>\r\n<p>cd /var/www/html（14.4版本）</p>\r\n<p>然后在这里创建一个php文件</p>\r\n<p>sudo vim info.php</p>\r\n<p>写php代码</p>\r\n<p>&lt;?php<br>echo mysql_connect(\'localhost\',\'root\',\'hanhan123\') ? \'Hoho\' : \'WTF\';<br><br>phpinfo();<br>然后esc键，输入:wq保存退出</p>\r\n<p>http://192.168.1.100/info.php 浏览器输入验证结果</p>\r\n<p><strong>复习结束</strong></p>\r\n<p><strong>5.5 安装phpmyadmin</strong></p>\r\n<p>--</p>\r\n<p><strong>apt-get命令</strong></p>\r\n<p>sudo apt-get install phpmyadmin</p>\r\n<p>sudo ln -s /usr/share/phpmyadmin/ /var/www/pma</p>\r\n<p><strong> 六、服务器集群了解</strong></p>\r\n<p>国内外有很多著名的巨型服务器集群。</p>\r\n<p>用于同时处理大批量的请求</p>\r\n<p>-----------------------------------</p>\r\n<p><strong>2、PHP的OOP编程</strong></p>\r\n<p><strong>四、OOP的高级实践</strong></p>\r\n<p><strong>程序准备</strong></p>\r\n<p>&lt;?php<br>date_default_timezone_set(\"PRC\");<br>/**<br> * 1. 类的定义以class关键字开始，后面跟着这个类的名称。类的名称命名通常每个单词的第一个字母大写。<br> * 2. 定义类的属性<br> * 3. 定义类的方法<br> * 4. 实例化类的对象<br> * 5. 使用对象的属性和方法<br> */<br>class NbaPlayer<br>{<br>    // 类的属性的定义<br>    public $name=\"Jordan\";// 定义属性<br>    public $height=\"198cm\";<br>    public $weight=\"98kg\";<br>    public $team=\"Bull\";<br>    public $playerNumber=\"23\";</p>\r\n<p>    // 类的方法的定义<br>    public function run() {<br>        echo \"Running\\n\";<br>    }</p>\r\n<p>    public function jump(){<br>        echo \"Jumping\\n\";<br>    }<br>    public function dribble(){<br>        echo \"Dribbling\\n\";<br>    }<br>    public function shoot(){<br>        echo \"Shooting\\n\";<br>    }<br>    public function dunk(){<br>        echo \"Dunking\\n\";<br>    }<br>    public function pass(){<br>        echo \"Passing\\n\";<br>    }<br>}</p>\r\n<p>/**<br> * 1. 类实例化为对象时使用new关键字，new之后紧跟类的名称和一对括号。<br> * 2. 使用对象可以像使用其他值一样进行赋值操作<br> */<br>$jordan = new NbaPlayer();<br>// 访问对象的属性使用的语法是-&gt;符号，后面跟着属性的名称<br>echo $jordan-&gt;name.\"\\n\";<br>// 调用对象的某个方法使用的语法是-&gt;符号，后面跟着方法的名称和一对括号<br>$jordan-&gt;run();<br>$jordan-&gt;pass();</p>\r\n<p>?&gt;</p>\r\n<p><strong> 4.1 继承</strong></p>\r\n<p>也就是对象相似的部分，可以多处使用——避免代码冗余，开发效率提高。</p>\r\n<p>优点：父类中定义的了，子类中无需再次定义——效率高；对于外部，表现一致（父类是一样的）；重写，来修改子类。</p>\r\n<p>举个栗子</p>\r\n<p>class Human{<br>	public $name;<br>	public $height;<br>	public $weight;<br><br>	public function eat($food){<br>		echo $this-&gt;name.\"\'s eating\".$food.\"\\n\";<br>	}<br>}</p>\r\n<p>人类作为父类，然后nba球员作为子类</p>\r\n<p><strong>class NbaPlayer extends Human{</strong></p>\r\n<p>试着直接通过子类调用父类中的function</p>\r\n<p>$jordan-&gt;eat(\"apple\");</p>\r\n<p>输出</p>\r\n<p>Jordan\'s eating apple</p>\r\n<p>没有问题！<strong>子类是可以直接调用父类的属性和方法的！！（在子类的对象上可以直接访问父类中定义的方法和属性）</strong></p>\r\n<p>毕竟从它的意思来看，子类就是父类的延伸。</p>\r\n<p>另外，<strong>父类中的属性可以在子类中进行访问（实际上，简单的理解就是，所有的子类都是大于等于父类的对象，想象一下文氏图）</strong></p>\r\n<p>类的继承，用extends，<strong>只能跟一个“爸爸”——php的单继承原则</strong></p>\r\n<p><strong>4.2 访问控制</strong></p>\r\n<p>所有的属性和方法都有访问权限的选择——选择可以被谁访问</p>\r\n<p><strong>public：公有，任何地方</strong></p>\r\n<p><strong>protected：受保护的，被自身以及其子类</strong></p>\r\n<p><strong>private：私有，只能被自身访问</strong></p>\r\n<p>举个private的栗子</p>\r\n<p>在Nbaplayer这个子类中，新增加定义</p>\r\n<p>    private $age=\"44\";</p>\r\n<p> public function getAge(){<br>    	echo $this-&gt;name.\"\'s age is \".$this-&gt;age;<br>    }</p>\r\n<p>//试着调用private,直接以及通过内部的public函数<br>//$jordan-&gt;age;<br>$jordan-&gt;getAge();</p>\r\n<p>然后，<strong>关于protected，范围紧紧的限制在了父类中和子类中，也就是说，出了子类的定义那个大括号就失效了！</strong></p>\r\n<p><strong>4.3 静态成员</strong></p>\r\n<p>可以简单的理解为常量（？）</p>\r\n<p>static</p>\r\n<p> </p>\r\n<p> </p>\r\n<p>bu xiang xie le </p>\r\n<p> </p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3069', '敲-PHP与MySQL，JSON ', '网络', '\n<p>hi</p>\r\n<p>敲代码~</p>\r\n<p><strong>1、php与mysql</strong></p>\r\n<p><strong>5.4 修改界面</strong></p>\r\n<p>同样是界面和程序。</p>\r\n<p><strong>界面article.modify.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	//读取旧信息<br>	$id = $_GET[\'id\'];<br>	$query = mysqli_query($con,\"select * from article where id=$id\");<br>	$data = mysqli_fetch_assoc($query);<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"213\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;      &lt;a href=\"article.add.php\"&gt;&lt;/a&gt;&lt;/td&gt;<br>    &lt;td width=\"854\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;&lt;form id=\"form1\" name=\"form1\" method=\"post\" action=\"article.modify.handle.php\"&gt;<br>    	&lt;input type=\"hidden\" name=\"id\" value=\"&lt;?php echo $data[\'id\']?&gt;\" /&gt;<br>      &lt;table width=\"590\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\"&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"center\"&gt;修改文章&lt;/td&gt;<br>          &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td width=\"119\"&gt;标题&lt;/td&gt;<br>          &lt;td width=\"437\"&gt;&lt;label for=\"title\"&gt;&lt;/label&gt;<br>            &lt;input type=\"text\" name=\"title\" id=\"title\" value=\"&lt;?php echo $data[\'title\']?&gt;\"/&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;作者&lt;/td&gt;<br>          &lt;td&gt;&lt;input type=\"text\" name=\"author\" id=\"author\"  value=\"&lt;?php echo $data[\'author\']?&gt;\"/&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;简介&lt;/td&gt;<br>          &lt;td&gt;&lt;label for=\"description\"&gt;&lt;/label&gt;<br>            &lt;textarea name=\"description\" id=\"description\" cols=\"60\" rows=\"5\"&gt;&lt;?php echo $data[\'description\']?&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;内容&lt;/td&gt;<br>          &lt;td&gt;&lt;textarea name=\"content\" cols=\"60\" rows=\"20\" id=\"content\"&gt;&lt;?php echo $data[\'content\']?&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"right\"&gt;&lt;input type=\"submit\" name=\"button\" id=\"button\" value=\"提交\" /&gt;&lt;/td&gt;<br>          &lt;/tr&gt;<br>      &lt;/table&gt;<br>    &lt;/form&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>关键点在于php的读取，以及在html中value的php调用。</p>\r\n<p><strong>修改程序article.modify.handle.php</strong></p>\r\n<p>&lt;?php <br>//和数据库有关的，无条件写上这么一句话<br>	require_once(\'../connect.php\');<br><br>	//接受修改后的数据（表单传递）<br>	$id = $_POST[\'id\'];<br>	$title = $_POST[\'title\'];<br>	$author = $_POST[\'author\'];<br>	$description = $_POST[\'description\'];<br>	$content = $_POST[\'content\'];<br>	$dateline =  time();<br><br>	//写sql修改语句，并做成功与否的判断，并跳回修改界面<br>	$updatesql = \"update article set title=\'$title\',author=\'$author\',description=\'$description\',content=\'$content\',dateline=$dateline where id=$id\";<br>	if(mysqli_query($con,$updatesql)){<br>		echo \"&lt;script&gt;alert(\'修改文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'修改文章失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p><strong>5.5 文章删除</strong></p>\r\n<p>先做需求的分析：同上面几个略有区别，<strong>删除文章不需要界面，只需要一个删除按钮来掉要就行了</strong>。所以只有一个文件。而关键的sql语句只有一句</p>\r\n<p><strong>$delsql=\"delete from article where id=$id\";</strong></p>\r\n<p><strong>aritcle.del.handle.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');</p>\r\n<p>//读取id号。不像其他的是有传递值的<br>	$id = $_GET[\'id\'];<br>	$deletesql = \"delete from article where id=$id\";<br>	if(mysql_query($deletesql)){<br>		echo \"&lt;script&gt;alert(\'删除文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'删除文章失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p><strong>5.6 文章管理列表</strong></p>\r\n<p>需求分析：列表显示出所有的文章，然后后面有两个按钮，删除（链接至上一节的删除模块）和修改（链接至之前的模块）</p>\r\n<p>所以，只需要一个文件，显示模块就好</p>\r\n<p><strong>article.manage.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	$sql = \"select * from article order by dateline desc\";<br>	$query  = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row =mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}else{<br>		$data = array();<br>	}</p>\r\n<p>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"156\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;<br>    &lt;td width=\"837\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;&lt;table width=\"743\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>      &lt;tr&gt;<br>        &lt;td colspan=\"3\" align=\"center\" bgcolor=\"#FFFFFF\"&gt;文章管理列表&lt;/td&gt;<br>        &lt;/tr&gt;<br>      &lt;tr&gt;<br>        &lt;td width=\"37\" bgcolor=\"#FFFFFF\"&gt;编号&lt;/td&gt;<br>        &lt;td width=\"572\" bgcolor=\"#FFFFFF\"&gt;标题&lt;/td&gt;<br>        &lt;td width=\"82\" bgcolor=\"#FFFFFF\"&gt;操作&lt;/td&gt;<br>      &lt;/tr&gt;<br>	&lt;?php <br>		if(!empty($data)){<br>			foreach($data as $value){<br>	?&gt;<br>      &lt;tr&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&amp;nbsp;&lt;?php echo $value[\'id\']?&gt;&lt;/td&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&amp;nbsp;&lt;?php echo $value[\'title\']?&gt;&lt;/td&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&lt;a href=\"article.del.handle.php?id=&lt;?php echo $value[\'id\']?&gt;\"&gt;删除&lt;/a&gt; &lt;a href=\"article.modify.php?id=&lt;?php echo $value[\'id\']?&gt;\"&gt;修改&lt;/a&gt;&lt;/td&gt;<br>      &lt;/tr&gt;<br>    &lt;/table&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>5.7 函数总结</strong></p>\r\n<p>mysqli_connect()</p>\r\n<p>mysqli_select_db()</p>\r\n<p>mysqli_query()</p>\r\n<p>mysqli_error()</p>\r\n<p>mysqli_fetch_assoc()</p>\r\n<p>mysqli_num_rows()</p>\r\n<p><strong>六、前台管理界面的开发</strong></p>\r\n<p><strong>6.1 文章列表</strong></p>\r\n<p><strong>article.list.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from article order by dateline desc\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row = mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>	&lt;?php<br>		if(empty($data)){	<br>			echo \"当前没有文章，请管理员在后台添加文章\";<br>		}else{<br>			foreach($data as $value){<br>	?&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;?php echo $value[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $value[\'author\']?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $value[\'description\']?&gt;<br>			&lt;/div&gt;<br>			&lt;div class=\"meta\"&gt;<br>				&lt;p class=\"links\"&gt;&lt;a href=\"article.show.php?id=&lt;?php echo $value[\'id\']?&gt;\" class=\"more\"&gt;查看详细&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;raquo;&amp;nbsp;&amp;nbsp;&lt;/p&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;?php<br>			}<br>		}<br>	?&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"article.search.php\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"key\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.2 文章详情页</strong></p>\r\n<p><strong>article.show.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$id = intval($_GET[\'id\']);<br>	$sql = \"select * from article where id=$id\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		$row = mysqli_fetch_assoc($query);<br>	}else{<br>		echo \"这篇文章不存在\";<br>		exit;<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"#\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"#\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"#\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;!--文章标题放置到这里--&gt;&lt;?php echo $row[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $row[\'author\'];?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;!--文章内容放置到这里--&gt;<br>				&lt;?php echo $row[\'content\']?&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.3 检索</strong></p>\r\n<p>article.search.php</p>\r\n<p>这里的查询的是根据题目来查询。</p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$key = $_GET[\'key\'];<br>	$sql = \"select * from article where title like \'%$key%\' order by dateline desc\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row = mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>	&lt;?php<br>		if(empty($data)){	<br>			echo \"当前没有文章，请管理员在后台添加文章\";<br>		}else{<br>			foreach($data as $value){<br>	?&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;?php echo $value[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $value[\'author\']?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $value[\'description\']?&gt;<br>			&lt;/div&gt;<br>			&lt;div class=\"meta\"&gt;<br>				&lt;p class=\"links\"&gt;&lt;a href=\"article.show.php?id=&lt;?php echo $value[\'id\']?&gt;\" class=\"more\"&gt;查看详细&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;raquo;&amp;nbsp;&amp;nbsp;&lt;/p&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;?php<br>			}<br>		}<br>	?&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.4 关于我们和联系我们</strong></p>\r\n<p><strong>about.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from  introduce\";<br>	$query = mysqli_query($con,$sql);<br>	//if($query&amp;&amp;mysqli_num_rows($query)){<br>		$about = \"啦啦啦\";<br>	//}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br><br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;关于我们&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $about?&gt;<br>			&lt;/div&gt;<br><br>		&lt;/div&gt;<br><br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>contact.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from  introduce\";<br>	$query = mysqli_query($con,$sql);<br>	//$arr=mysqli_fetch_array($query, MYSQL_ASSOC);<br>	//if($query&amp;&amp;mysqli_num_rows($query)){<br>		$contact = \"asdfadf\";<br>	//}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br><br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;联系我们&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $contact?&gt;<br>			&lt;/div&gt;<br><br>		&lt;/div&gt;<br><br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;</p>\r\n<p>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p> ------------------------------------------</p>\r\n<p><strong>2、JSON基础</strong></p>\r\n<p><strong>1.2 JSON的使用</strong></p>\r\n<p>--<strong>JSON与serialize</strong>数据格式的异同和使用</p>\r\n<p>相同点：把其他数据类型转换为一个可以传输的字符串；都是结构性数据；</p>\r\n<p>不同点：s序列化之后，保存数据原有类型——适用于存储带有加密方式的数据串；JSON更简洁——适合数据量大，不要求数据类型保存的情况</p>\r\n<p>举个栗子</p>\r\n<p>&lt;?php<br>//输出模块<br>function createHtmlTag($tag=\"\"){<br>	echo \"&lt;h1&gt;$tag&lt;/h1&gt;&lt;br/&gt;\";<br>}<br>createHtmlTag(\"Hello!\");<br>createHtmlTag(\"JSON和serialize的对比\");</p>\r\n<p>//测试用数组<br>$member=array(\"username\",\"age\");<br>var_dump($member);</p>\r\n<p><br>$jsonObj=json_encode($member);</p>\r\n<p>$serializeObj=serialize($member);</p>\r\n<p>createHtmlTag($jsonObj);<br>createHtmlTag($serializeObj);</p>\r\n<p>结果</p>\r\n<h1>Hello!</h1>\r\n<p> </p>\r\n<h1>JSON和serialize的对比</h1>\r\n<p> </p>\r\n<pre class=\"xdebug-var-dump\"><strong>array</strong> <em>(size=2)</em>\r\n  0 <span style=\"color: #888a85;\">=&gt;</span> </pre>\r\n<p><small>string</small></p>\r\n<pre class=\"xdebug-var-dump\"> <span style=\"color: #cc0000;\">\'username\'</span> <em>(length=8)</em>\r\n  1 <span style=\"color: #888a85;\">=&gt;</span> </pre>\r\n<p><small>string</small></p>\r\n<pre class=\"xdebug-var-dump\"> <span style=\"color: #cc0000;\">\'age\'</span> <em>(length=3)</em>\r\n</pre>\r\n<h1>[\"username\",\"age\"]</h1>\r\n<p> </p>\r\n<h1>a:2:{i:0;s:8:\"username\";i:1;s:3:\"age\";}</h1>\r\n<p><strong>--常用JSON函数</strong></p>\r\n<p>json_encode()——JSON加密</p>\r\n<p>json_decode()——解密</p>\r\n<p><strong>1.3 JSON实例讲解</strong></p>\r\n<p> </p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3070', '挤点时间写博客-php&MySQL实践 ', '网络', '\n<p>　　hi</p>\r\n<p>晚上要吃火锅的嘛，挤点时间写点东西吧，别被老板发现哦</p>\r\n<p>1、PHP与MySQL</p>\r\n<p><strong>五、文章发布系统之后台</strong></p>\r\n<p><strong>5.2 创建配置文件和初始化文件</strong></p>\r\n<p>为了统一配置以及管理方便，还有就是减少代码的冗余。</p>\r\n<p>分别为config.php和connect.php</p>\r\n<p><strong>config.php</strong></p>\r\n<p>&lt;?php<br>/*<br> * 配置文件<br> */<br>//配置数据库的相关信息<br>//由于是常量，直接用define<br>define(\'HOST\', \'127.0.0.1\');<br>define(\'USERNAME\', \'root\');<br>define(\'PASSWORD\', \'\');</p>\r\n<p> </p>\r\n<p><strong>connect.php</strong></p>\r\n<p>&lt;?php<br>/*<br> * 链接到数据库的文件<br> * 主要是链接到数据库服务器，然后选择数据库。<br> * 特殊的是设置字符集。<br> * 然后希望对每个操作进行判断<br> */</p>\r\n<p> </p>\r\n<p>//包含配置文件<br>require_once \'config.php\';</p>\r\n<p>//连库<br>if(!$con=mysqli_connect(HOST,USERNAME,PASSWORD)){<br>	echo mysqli_error($con);<br>}</p>\r\n<p>//选库<br>if(mysqli_select_db($con, \'info\')){<br>	echo mysqli_error($con);<br>}</p>\r\n<p>//字符集<br>if(mysqli_query($con,\'set names utf8\')){<br>	echo mysqli_error($con);<br>}</p>\r\n<p>完成后测试一下链接文件就ok了。这里的mysqli和mysql都可以，只要格式正确就行。</p>\r\n<p><strong>5.3 发布文章</strong></p>\r\n<p><strong>文章发布界面article.add.php</strong></p>\r\n<p>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"156\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;      &lt;a href=\"article.add.php\"&gt;&lt;/a&gt;&lt;/td&gt;<br>    &lt;td width=\"837\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;<br>    &lt;form id=\"form1\" name=\"form1\" method=\"post\" action=\"article.add.handle.php\"&gt;<br>      &lt;table width=\"779\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\"&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"center\"&gt;发布文章&lt;/td&gt;<br>          &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td width=\"119\"&gt;标题&lt;/td&gt;<br>          &lt;td width=\"625\"&gt;&lt;label for=\"title\"&gt;&lt;/label&gt;<br>            &lt;input type=\"text\" name=\"title\" id=\"title\" /&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;作者&lt;/td&gt;<br>          &lt;td&gt;&lt;input type=\"text\" name=\"author\" id=\"author\" /&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;简介&lt;/td&gt;<br>          &lt;td&gt;&lt;label for=\"description\"&gt;&lt;/label&gt;<br>            &lt;textarea name=\"description\" id=\"description\" cols=\"60\" rows=\"5\"&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;内容&lt;/td&gt;<br>          &lt;td&gt;&lt;textarea name=\"content\" cols=\"60\" rows=\"15\" id=\"content\"&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"right\"&gt;&lt;input type=\"submit\" name=\"button\" id=\"button\" value=\"提交\" /&gt;&lt;/td&gt;<br>          &lt;/tr&gt;<br>      &lt;/table&gt;<br>    &lt;/form&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>不是很漂亮就是了，学习嘛</p>\r\n<p> </p>\r\n<p>文章发布处理程序article.add.handle.php</p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	//把传递过来的信息入库,在入库之前对所有的信息进行校验。<br>	if(!(isset($_POST[\'title\'])&amp;&amp;(!empty($_POST[\'title\'])))){<br>		echo \"&lt;script&gt;alert(\'标题不能为空\');window.location.href=\'article.add.php\';&lt;/script&gt;\";<br>	}<br>	$title = $_POST[\'title\'];<br>	$author = $_POST[\'author\'];<br>	$description = $_POST[\'description\'];<br>	$content = $_POST[\'content\'];<br>	$dateline =  time();<br>	$insertsql = \"insert into article(title, author, description, content, dateline) values(\'$title\', \'$author\', \'$description\', \'$content\', $dateline)\";<br>	if(mysqli_query($con,$insertsql)){<br>		echo \"&lt;script&gt;alert(\'发布文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'发布失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p>注意两者的功能和连接，就是add页面把东西传给handle处理</p>\r\n<p> ------------------------</p>\r\n<p>由于我遇到了前所未见的乱码问题。。。跪着解决中。。。。望大家不吝赐教（wamp环境，mysql，zend，浏览器都已经设置为utf8，apache配置文件中添加了AddDefaultCharset UTF-8，问题依然存在，我晕啊。。。。）</p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3071', '突然发现这周有点忙。。着玩-PHP进阶 ', '网络', '\n<p>　　hi</p>\r\n<p>周二才，不过我突然意识到这周有点忙着玩的感觉，还是很期待的——今天下午去市里，晚上回来看电影，明晚聚餐吃火锅，后天下午拍短片，晚上可能要打球，周五，嗯，就到周五了。虽然这样下去连怎么写（bian）周报都不知道，但还是来做这个的好。</p>\r\n<p><strong>1、PHP进阶完结篇</strong></p>\r\n<p><strong>十一、数据库操作</strong></p>\r\n<p><strong>11.1 PHP支持哪些数据库</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP通过安装相应的扩展来实现数据库操作，现代应用程序的设计离不开数据库的应用，当前主流的数据库有MsSQL，MySQL，Sybase，Db2，Oracle，PostgreSQL，Access等，这些数据库PHP都能够安装扩展来支持，一般情况下常说的LAMP架构指的是：Linux、Apache、Mysql、PHP，因此Mysql数据库在PHP中的应用非常广泛，我们会在本章中简单的了解Mysql的操作方法。</p>\r\n</div>\r\n</div>\r\n<p><strong>11.2 数据库扩展</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP中一个数据库可能有一个或者多个扩展，其中既有官方的，也有第三方提供的。像Mysql常用的扩展有原生的mysql库，也可以使用增强版的mysqli扩展，还可以使用PDO进行连接与操作。</p>\r\n<p>不同的扩展提供基本相近的操作方法，不同的是可能具备一些新特性，以及操作性能可能会有所不同。</p>\r\n<p>mysql扩展进行数据库连接的方法：</p>\r\n<pre class=\"code\">$link = mysql_connect(\'mysql_host\', \'mysql_user\', \'mysql_password\');</pre>\r\n<p>mysqli扩展：</p>\r\n<pre class=\"code\">$link = mysqli_connect(\'mysql_host\', \'mysql_user\', \'mysql_password\');</pre>\r\n<p>PDO扩展</p>\r\n<pre class=\"code\">$dsn = \'mysql:dbname=testdb;host=127.0.0.1\';\r\n$user = \'dbuser\';\r\n$password = \'dbpass\';\r\n$dbh = new PDO($dsn, $user, $password);</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>$link = mysql_connect(\'127.0.0.1\', \'code1\', \'\') or die(\'数据库连接失败\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>$result = mysql_query(\'select * from user limit 1\');<br>$row = mysql_fetch_assoc($result);<br>print_r($row);</p>\r\n<p><strong>11.3 连接MySQL数据库</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP要对数据库进行操作，首先要做的是与数据库建立连接，通常我们使用mysql_connect函数进行数据库连接，该函数需要指定数据库的地址，用户名及密码。</p>\r\n<pre class=\"code\">$host = \'localhost\';\r\n$user = \'code1\';\r\n$pass = \'\';\r\n$link = mysql_connect($host, $user, $pass);</pre>\r\n<p>PHP连接数据库的方式类似于直接在命令行下通过进行连接，类似：<code class=\"marker\">mysql -hlocalhost -ucode1 -p</code>，当连接成功以后，我们需要选择一个操作的数据库，通过mysql_select_db函数来选择数据库。</p>\r\n<pre class=\"code\">mysql_select_db(\'code1\');</pre>\r\n<p>通常我们会先设置一下当前连接使用的字符编码，一般的我们会使用utf8编码。</p>\r\n<pre class=\"code\">mysql_query(\"set names \'utf8\'\");</pre>\r\n<p>通过上面的步骤，我们就与数据库建立了连接，可以进行数据操作了。</p>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>$host = \'127.0.0.1\';<br>$user = \'code1\';<br>$pass = \'\';<br>//在这里编写数据库连接代码<br>mysql_connect($host,$user,$pass);<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");</p>\r\n<p><strong> 11.4 执行MySQL查询</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>在数据库建立连接以后就可以进行查询，采用mysql_query加sql语句的形式向数据库发送查询指令。</p>\r\n<pre class=\"code\">$res = mysql_query(\'select * from user limit 1\');</pre>\r\n<p>对于查询类的语句会返回一个资源句柄（resource），可以通过该资源获取查询结果集中的数据。</p>\r\n<pre class=\"code\">$row = mysql_fetch_array($res);\r\nvar_dump($row);</pre>\r\n<p>默认的，PHP使用最近的数据库连接执行查询，但如果存在多个连接的情况，则可以通过参数指令从那个连接中进行查询。</p>\r\n<pre class=\"code\">$link1 = mysql_connect(\'127.0.0.1\', \'code1\', \'\');\r\n$link2 = mysql_connect(\'127.0.0.1\', \'code1\', \'\', true); //开启一个新的连接\r\n$res = mysql_query(\'select * from user limit 1\', $link1); //从第一个连接中查询数据</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//在这里进行数据查询<br>$arr=mysql_query(\"select * from user limit 1\");<br>$row=mysql_fetch_row($arr);<br>print_r($row);<br>echo $row[0];</p>\r\n<p>11.5 插入新数据到MySQL中</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>当我们了解了如何使用mysql_query进行数据查询以后，那么类似的，插入数据其实也是通过执行一个sql语句来实现，例如：</p>\r\n<pre class=\"code\">$sql = \"insert into user(name, age, class) values(\'李四\', 18, \'高三一班\')\";\r\nmysql_query($sql); //执行插入语句</pre>\r\n<p>通常数据都是存储在变量或者数组中，因此sql语句需要先进行字符串拼接得到。</p>\r\n<pre class=\"code\">$name = \'李四\';\r\n$age = 18;\r\n$class = \'高三一班\';\r\n$sql = \"insert into user(name, age, class) values(\'$name\', \'$age\', \'$class\')\";\r\nmysql_query($sql); //执行插入语句</pre>\r\n<p>在mysql中，执行插入语句以后，可以得到自增的主键id,通过PHP的mysql_insert_id函数可以获取该id。</p>\r\n<pre class=\"code\">$uid = mysql_insert_id();</pre>\r\n<p>这个id的作用非常大，通常可以用来判断是否插入成功，或者作为关联ID进行其他的数据操作。</p>\r\n</div>\r\n</div>\r\n<p><strong>11.6 取得数据查询结果</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>通过前面的章节，我们发现PHP操作数据库跟MySql客户端上操作极为相似，先进行连接，然后执行sql语句，再然后获取我们想要的结果集。</p>\r\n<p>PHP有多个函数可以获取数据集中的一行数据，最常用的是mysql_fetch_array，可以通过设定参数来更改行数据的下标，默认的会包含数字索引的下标以及字段名的关联索引下标。</p>\r\n<pre class=\"code\">$sql = \"select * from user limit 1\";\r\n$result = mysql_query($sql);\r\n$row = mysql_fetch_array($result);</pre>\r\n<p>可以通过设定参数MYSQL_NUM只获取数字索引数组，等同于mysql_fetch_row函数，如果设定参数为MYSQL_ASSOC则只获取关联索引数组，等同于mysql_fetch_assoc函数。</p>\r\n<pre class=\"code\">$row = mysql_fetch_row($result);\r\n$row = mysql_fetch_array($result, MYSQL_NUM); //这两个方法获取的数据是一样的</pre>\r\n<pre class=\"code\">$row = mysql_fetch_assoc($result);\r\n$row = mysql_fetch_array($result, MYSQL_ASSOC);</pre>\r\n<p>如果要获取数据集中的所有数据，我们通过循环来遍历整个结果集。</p>\r\n<pre class=\"code\">$data = array();\r\nwhile ($row = mysql_fetch_array($result)) {\r\n    $data[] = $row;\r\n}</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//数据预处理 防止查询不到数据<br>mysql_query(\"insert into user(name, age, class) values(\'王二\', 19, \'高三五班\')\");<br>//进行数据查询<br>$sql = \"select * from user limit 1\";<br>$result = mysql_query($sql);</p>\r\n<p>//在这里获取一行数据<br>$row=mysql_fetch_assoc($result);</p>\r\n<p>echo \'&lt;pre&gt;\';<br>print_r($row);<br>echo \'&lt;/pre&gt;\';</p>\r\n<p><strong>11.7 查询分页数据</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>上一节中，我们了解到通过循环可以获取一个查询的所有数据，在实际应用中，我们并不希望一次性获取数据表中的所有数据，那样性能会非常的低，因此会使用翻页功能，每页仅显示10条或者20条数据。</p>\r\n<p>通过mysql的limit可以很容易的实现分页，limit m,n表示从m行后取n行数据，在PHP中我们需要构造m与n来实现获取某一页的所有数据。</p>\r\n<p>假定当前页为$page，每页显示$n条数据，那么m为当前页前面所有的数据，既$m = ($page-1) * $n，在知道了翻页原理以后，那么我们很容易通过构造SQL语句在PHP中实现数据翻页。</p>\r\n<pre class=\"code\">$page = 2;\r\n$n = 2;\r\n$m = ($page - 1) * $n;\r\n$sql = \"select * from user limit $m, $n\";\r\n$result = mysql_query($sql);\r\n//循环获取当前页的数据\r\n$data = array();\r\nwhile ($row = mysql_fetch_assoc($result)) {\r\n    $data[] = $row;\r\n}\r\n</pre>\r\n<p>在上面的例子中，我们使用了$m与$n变量来表示偏移量与每页数据条数，但我们推荐使用更有意义的变量名来表示，比如$pagesize, $start, $offset等，这样更容易理解，有助于团队协作开发。</p>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//预设翻页参数<br>$page = 2;<br>$pagesize = 2;<br>//在这里构建分页查询<br>$start=($page-1)*$pagesize;</p>\r\n<p>$sql=\"SELECT * FROM user LIMIT $start,$pagesize\";</p>\r\n<p>//获取翻页数据<br>$result = mysql_query($sql);<br>$data = array();<br>while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {<br>    $data[] = $row;<br>}<br>echo \'&lt;pre&gt;\';<br>print_r($data);<br>echo \'&lt;/pre&gt;\';</p>\r\n<p>11.8 更新与删除数据</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>数据的更新与删除相对比较简单，只需要构建好相应的sql语句，然后调用mysql_query执行就能完成相应的更新与删除操作。</p>\r\n<pre class=\"code\">$sql = \"update user set name = \'曹操\' where id=2 limit 1\";\r\nif (mysql_query($sql)) {\r\n    echo \'更新成功\';\r\n}</pre>\r\n<p>同样的删除可以使用类似以下的代码：</p>\r\n<pre class=\"code\">$sql = \"delete from user where id=2 limit 1\";\r\nif (mysql_query($sql)) {\r\n    echo \'删除成功\';\r\n}</pre>\r\n<p>对于删除与更新操作，可以通过mysql_affected_rows函数来获取更新过的数据行数，如果数据没有变化，则结果为0。</p>\r\n<pre class=\"code\">$sql = \"update user set name = \'曹操\' where id=2 limit 1\";\r\nif (mysql_query($sql)) {\r\n    echo mysql_affected_rows();\r\n}</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//预设数据以便进行更新操作<br>mysql_query(\"insert into user(name, age, class) values(\'王二\', 19, \'高三五班\')\");<br>$id = mysql_insert_id();<br>//在这里更新id为$id的行的名字为李白<br>$sql=\"update user set name=\'李白\' where id=$id limit 1\";<br>mysql_query($sql);<br>//输出更新数据条数<br>echo \'数据更新行数：\'.mysql_affected_rows();<br>mysql_query(\"delete from user where id=\'$id\'\");</p>\r\n<p><strong>11.9 关闭MySQL连接</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>当数据库操作完成以后，可以使用mysql_close关闭数据库连接，默认的，当PHP执行完毕以后，会自动的关闭数据库连接。</p>\r\n<pre class=\"code\">mysql_close();</pre>\r\n<p>虽然PHP会自动关闭数据库连接，一般情况下已经满足需求，但是在对性能要求比较高的情况下，可以在进行完数据库操作之后尽快关闭数据库连接，以节省资源，提高性能。</p>\r\n<p>在存在多个数据库连接的情况下，可以设定连接资源参数来关闭指定的数据库连接。</p>\r\n<pre class=\"code\">$link = mysql_connect($host, $user, $pass);\r\nmysql_close($link);</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>$con=mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//在这里关闭数据库连接</p>\r\n<p>mysql_close($con);</p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n\r\n</div>\r\n\r\n</div>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3072', 'PHP_Bibel阅读笔记（二）——脸黑的一天（？一年） ', '网络', '\n<p>　　一早上起来把50包开了，一张橙卡。。。就问还有谁。。。。。。。。。。。本命年啊，我去买红内裤还不行么。。。。</p>\r\n<p>实时更新，老哥的号的30包什么都没有。。。。不过中午又开了5包，皇帝，好评啊！！！</p>\r\n<p><strong>五、代码重用与函数编写</strong></p>\r\n<p>include警告与require的错误；</p>\r\n<p>大量的包含实现，可以改ini文件中的：auto_prepend_file和auto_append_file;</p>\r\n<p>global关键字也是可以用在函数内的参数的；</p>\r\n<p>参数的引用传递和return</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">1</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\FunctionUse;\r\n</span><span style=\"color: #008080;\">2</span> \r\n<span style=\"color: #008080;\">3</span> <span style=\"color: #0000ff;\">include_once</span> \'index.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">4</span> <span style=\"color: #800080;\">$value</span>=10<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">5</span> increment1(<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">6</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$value</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">7</span> <span style=\"color: #800080;\">$value2</span>=100<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">8</span> <span style=\"color: #800080;\">$value2</span>=increment2(<span style=\"color: #800080;\">$value2</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">9</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$value2</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\";</pre>\r\n</div>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #0000ff;\">function</span> increment1(&amp;<span style=\"color: #800080;\">$value</span>,<span style=\"color: #800080;\">$mount</span>=1<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\"> 4</span>     <span style=\"color: #800080;\">$value</span>=<span style=\"color: #800080;\">$value</span>+<span style=\"color: #800080;\">$mount</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 6</span> \r\n<span style=\"color: #008080;\"> 7</span> <span style=\"color: #0000ff;\">function</span> increment2(<span style=\"color: #800080;\">$value</span>,<span style=\"color: #800080;\">$mount</span>=1<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\"> 9</span>     <span style=\"color: #800080;\">$value</span>=<span style=\"color: #800080;\">$value</span>+<span style=\"color: #800080;\">$mount</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">11</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>递归函数比循环慢且占用更多内存，虽然很多循环都可以用递归来代替；（在应用领域中基本不用它</p>\r\n<p><strong>六、面向对象</strong></p>\r\n<p>好玩的代码，学到些东西！</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">  1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">  2</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\ObjectPage;\r\n</span><span style=\"color: #008080;\">  3</span> \r\n<span style=\"color: #008080;\">  4</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Chapter6.P132</span>\r\n<span style=\"color: #008080;\">  5</span> \r\n<span style=\"color: #008080;\">  6</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> Page\r\n</span><span style=\"color: #008080;\">  7</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">  8</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$content</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  9</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$title</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 10</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$keyword</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 11</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$button</span>=<span style=\"color: #0000ff;\">array</span>(\"Home\"=&gt;\"http://115.159.201.78/wordpress/\",\r\n<span style=\"color: #008080;\"> 12</span>         \"Basic\"=&gt;\"Section1.php\"\r\n<span style=\"color: #008080;\"> 13</span> <span style=\"color: #000000;\">    );\r\n</span><span style=\"color: #008080;\"> 14</span>     \r\n<span style=\"color: #008080;\"> 15</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __set(<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 16</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 17</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #800080;\">$name</span>=<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 18</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 19</span>     \r\n<span style=\"color: #008080;\"> 20</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> Display()\r\n</span><span style=\"color: #008080;\"> 21</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 22</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;html&gt;\\n&lt;head&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 23</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayTitle();\r\n</span><span style=\"color: #008080;\"> 24</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayKeywords();\r\n</span><span style=\"color: #008080;\"> 25</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayStyles();\r\n</span><span style=\"color: #008080;\"> 26</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/head&gt;\\n&lt;body&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 27</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayHeader();\r\n</span><span style=\"color: #008080;\"> 28</span>         <span style=\"color: #800080;\">$this</span>-&gt;DisplayMenu(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">button);\r\n</span><span style=\"color: #008080;\"> 29</span>         <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">content;\r\n</span><span style=\"color: #008080;\"> 30</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayFooter();\r\n</span><span style=\"color: #008080;\"> 31</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/body&gt;\\n&lt;/html&gt;\\n\"<span style=\"color: #000000;\">;   \r\n</span><span style=\"color: #008080;\"> 32</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 33</span>     \r\n<span style=\"color: #008080;\"> 34</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayTitle()\r\n</span><span style=\"color: #008080;\"> 35</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 36</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;title&gt;\".<span style=\"color: #800080;\">$this</span>-&gt;title.\"&lt;/title&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 37</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 38</span>     \r\n<span style=\"color: #008080;\"> 39</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayKeywords()\r\n</span><span style=\"color: #008080;\"> 40</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 41</span>         <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$this</span>-&gt;keyword <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$words</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 42</span>             <span style=\"color: #0000ff;\">echo</span> \"&lt;meta name=\\\"keywords\\\" content=\\\"\".<span style=\"color: #800080;\">$words</span>.\"\\\"/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 43</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\"> 44</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 45</span>     \r\n<span style=\"color: #008080;\"> 46</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayStyles()\r\n</span><span style=\"color: #008080;\"> 47</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 48</span>    ?&gt;\r\n<span style=\"color: #008080;\"> 49</span>      &lt;style&gt;\r\n<span style=\"color: #008080;\"> 50</span> <span style=\"color: #000000;\">      h1 {\r\n</span><span style=\"color: #008080;\"> 51</span>             color:white; font-size:24pt; text-align:<span style=\"color: #000000;\">center;\r\n</span><span style=\"color: #008080;\"> 52</span>             font-family:arial,sans-<span style=\"color: #000000;\">serif\r\n</span><span style=\"color: #008080;\"> 53</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 54</span>     .<span style=\"color: #000000;\">menu {\r\n</span><span style=\"color: #008080;\"> 55</span>         color:white; font-size:12pt; text-align:<span style=\"color: #000000;\">center;\r\n</span><span style=\"color: #008080;\"> 56</span>         font-family:arial,sans-serif; font-weight:<span style=\"color: #000000;\">bold\r\n</span><span style=\"color: #008080;\"> 57</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 58</span> <span style=\"color: #000000;\">    td {\r\n</span><span style=\"color: #008080;\"> 59</span>         background:<span style=\"color: #000000;\">black\r\n</span><span style=\"color: #008080;\"> 60</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 61</span> <span style=\"color: #000000;\">    p {\r\n</span><span style=\"color: #008080;\"> 62</span>         color:black; font-size:12pt; text-align:<span style=\"color: #000000;\">justify;\r\n</span><span style=\"color: #008080;\"> 63</span>         font-family:arial,sans-<span style=\"color: #000000;\">serif\r\n</span><span style=\"color: #008080;\"> 64</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 65</span>     p.<span style=\"color: #000000;\">foot {\r\n</span><span style=\"color: #008080;\"> 66</span>         color:white; font-size:12pt; text-align:<span style=\"color: #000000;\">center;\r\n</span><span style=\"color: #008080;\"> 67</span>         font-family:arial,sans-serif; font-weight:<span style=\"color: #000000;\">bold\r\n</span><span style=\"color: #008080;\"> 68</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 69</span>     a:link,a:visited,a:<span style=\"color: #000000;\">active {\r\n</span><span style=\"color: #008080;\"> 70</span>         color:<span style=\"color: #000000;\">white\r\n</span><span style=\"color: #008080;\"> 71</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 72</span>     &lt;/style&gt;\r\n<span style=\"color: #008080;\"> 73</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 74</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 75</span>     \r\n<span style=\"color: #008080;\"> 76</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayHeader()\r\n</span><span style=\"color: #008080;\"> 77</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 78</span> ?&gt;\r\n<span style=\"color: #008080;\"> 79</span>   &lt;table width=\"100%\" cellpadding=\"12\" \r\n<span style=\"color: #008080;\"> 80</span>          cellspacing=\"0\" border=\"0\"&gt;\r\n<span style=\"color: #008080;\"> 81</span>   &lt;tr bgcolor=\"black\"&gt;\r\n<span style=\"color: #008080;\"> 82</span>     &lt;td align=\"left\"&gt;&lt;img alt=\"img\" src=\"logo.png\"&gt;&lt;/td&gt;\r\n<span style=\"color: #008080;\"> 83</span>     &lt;td&gt;&lt;h1&gt;The OOP page&lt;/h1&gt;&lt;/td&gt;\r\n<span style=\"color: #008080;\"> 84</span>   &lt;/tr&gt;\r\n<span style=\"color: #008080;\"> 85</span> &lt;/table&gt;\r\n<span style=\"color: #008080;\"> 86</span> &lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #008080;\"> 87</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 88</span>     \r\n<span style=\"color: #008080;\"> 89</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span> DisplayMenu(<span style=\"color: #800080;\">$button</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 90</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 91</span>         <span style=\"color: #0000ff;\">echo</span> \"<span style=\"color: #000000;\">&lt;table width=\\\"100%\\\" bgcolor=\\\"white\\\"\r\n</span><span style=\"color: #008080;\"> 92</span>               cellpadding=\\\"4\\\"    cellsapcing=\\\"4\\\"&gt;\\n \"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 93</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;tr&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 94</span>         <span style=\"color: #800080;\">$width</span>=100/<span style=\"color: #008080;\">count</span>(<span style=\"color: #800080;\">$button</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 95</span>         <span style=\"color: #0000ff;\">while</span> (<span style=\"color: #0000ff;\">list</span>(<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$url</span>)=<span style=\"color: #008080;\">each</span>(<span style=\"color: #800080;\">$button</span><span style=\"color: #000000;\">)) {\r\n</span><span style=\"color: #008080;\"> 96</span>             <span style=\"color: #800080;\">$this</span>-&gt;DisplayButton(<span style=\"color: #800080;\">$width</span>,<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$url</span>,\r\n<span style=\"color: #008080;\"> 97</span>                 !<span style=\"color: #800080;\">$this</span>-&gt;IsURLCurrentPage(<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 98</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\"> 99</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/tr&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">100</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/table&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">101</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">102</span>     \r\n<span style=\"color: #008080;\">103</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span> IsURLCurrentPage(<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">104</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">105</span>         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">strpos</span>(<span style=\"color: #800080;\">$_SERVER</span>[\'PHP_SELF\'], <span style=\"color: #800080;\">$url</span>)==<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">106</span>             <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">107</span>         } <span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">108</span>             <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">109</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\">110</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">111</span>     \r\n<span style=\"color: #008080;\">112</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span> DisplayButton(<span style=\"color: #800080;\">$width</span>,<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$url</span>,<span style=\"color: #800080;\">$active</span>=<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">113</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">114</span>         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$active</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">115</span>             <span style=\"color: #0000ff;\">echo</span> \"&lt;td width=\\\"\".<span style=\"color: #800080;\">$width</span>.\"<span style=\"color: #000000;\">%\\\"&gt;\r\n</span><span style=\"color: #008080;\">116</span>             &lt;a href=\\\"\".<span style=\"color: #800080;\">$url</span>.\"<span style=\"color: #000000;\">\\\" onclick=\\\"blank\\\"&gt;\r\n</span><span style=\"color: #008080;\">117</span>             &lt;img src=\\\"w-logo-blue.png\\\" alt=\\\"\".<span style=\"color: #800080;\">$name</span>.\"<span style=\"color: #000000;\">\\\" border=\\\"0\\\" /&gt;&lt;/a&gt;\r\n</span><span style=\"color: #008080;\">118</span>             &lt;a href=\\\"\".<span style=\"color: #800080;\">$url</span>.\"\\\"&gt;&lt;span class=\\\"menu\\\"&gt;\".<span style=\"color: #800080;\">$name</span>.\"<span style=\"color: #000000;\">&lt;/span&gt;&lt;/a&gt;\r\n</span><span style=\"color: #008080;\">119</span>                 &lt;/td&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">120</span>         } <span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">121</span>             <span style=\"color: #0000ff;\">echo</span> \"&lt;td width=\\\"\".<span style=\"color: #800080;\">$width</span>.\"<span style=\"color: #000000;\">%\\\"&gt;\r\n</span><span style=\"color: #008080;\">122</span> <span style=\"color: #000000;\">            &lt;img src=\\\"w-logo-white.png\\\"&gt;\r\n</span><span style=\"color: #008080;\">123</span>             &lt;span class=\\\"menu\\\"&gt;\".<span style=\"color: #800080;\">$name</span>.\"&lt;/span&gt;&lt;/td&gt;\"<span style=\"color: #000000;\">;            \r\n</span><span style=\"color: #008080;\">124</span> <span style=\"color: #000000;\">        }        \r\n</span><span style=\"color: #008080;\">125</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">126</span>     \r\n<span style=\"color: #008080;\">127</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayFooter()\r\n</span><span style=\"color: #008080;\">128</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">129</span> ?&gt;\r\n<span style=\"color: #008080;\">130</span>   &lt;table width=\"100%\" bgcolor=\"black\" cellpadding=\"12\" border=\"0\"&gt;\r\n<span style=\"color: #008080;\">131</span>   &lt;tr&gt;\r\n<span style=\"color: #008080;\">132</span>     &lt;td&gt;\r\n<span style=\"color: #008080;\">133</span>     &lt;p <span style=\"color: #0000ff;\">class</span>=\"foot\"&gt;&amp;<span style=\"color: #008080;\">copy</span>; Andy Liang.&lt;/p&gt;\r\n<span style=\"color: #008080;\">134</span>     &lt;p <span style=\"color: #0000ff;\">class</span>=\"foot\"&gt;Please visit my own site:&lt;a href=\"http://115.159.201.78/wordpress/\"&gt;Andy\'<span style=\"color: #000000;\">s Learning Diary&lt;/a&gt;&lt;/p&gt;\r\n</span><span style=\"color: #008080;\">135</span> <span style=\"color: #000000;\">    &lt;/td&gt;\r\n</span><span style=\"color: #008080;\">136</span> <span style=\"color: #000000;\">  &lt;/tr&gt;\r\n</span><span style=\"color: #008080;\">137</span> <span style=\"color: #000000;\">&lt;/table&gt;\r\n</span><span style=\"color: #008080;\">138</span> <span style=\"color: #000000;\">&lt;?php \r\n</span><span style=\"color: #008080;\">139</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">140</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">141</span> \r\n<span style=\"color: #008080;\">142</span> <span style=\"color: #000000;\">$homepage=new Page();\r\n</span><span style=\"color: #008080;\">143</span> <span style=\"color: #000000;\">$homepage-&gt;content=\"&lt;p&gt;\".\"I do not know what to write down, how about this?\".\"&lt;/p&gt;\";\r\n</span><span style=\"color: #008080;\">144</span> <span style=\"color: #000000;\">$homepage-&gt;title=\"You have to try OO.\";\r\n</span><span style=\"color: #008080;\">145</span> <span style=\"color: #000000;\">$homepage-&gt;keyword=array(\"SAR\",\"MRF\");\r\n</span><span style=\"color: #008080;\">146</span> $homepage-&gt;Display();</pre>\r\n</div>\r\n<p> </p>\r\n<p>就是个默认网页的生成对象，还是有改进空间的。</p>\r\n<p>然后，php写html，有点繁琐，但写完了一身爽。</p>\r\n<p>&lt;?php ?&gt;标记的活用有点厉害啊，套路~</p>\r\n<p>PS:上面代码中的链接不要乱点~会吓到你的。</p>\r\n<p>当然，其实这种得到页面在应用中是不推荐的，只是试着练下手。</p>\r\n<p><strong>七、错误和异常处理</strong></p>\r\n<p>try{ throw new Exception() }  catch{  }</p>\r\n<p>PHP中，异常必须手动抛出；</p>\r\n<p>try代码块和catch代码块是“绑定的”，每个try一定要有一个catch！</p>\r\n<p>一个try可以有多个catch</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Session1.Chapter7.P146</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\ExceptionTry;\r\n</span><span style=\"color: #008080;\"> 4</span> \r\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\r\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> \\ErrorException(\"A serious wrong has occured!\", 14<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #0000ff;\">catch</span> (\\ErrorException <span style=\"color: #800080;\">$e</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 9</span>     <span style=\"color: #0000ff;\">echo</span> \"Exceotion\".<span style=\"color: #800080;\">$e</span>-&gt;getCode().\":\".<span style=\"color: #800080;\">$e</span>-&gt;getMessage().\"&lt;br/&gt;\"\r\n<span style=\"color: #008080;\">10</span>         .\"File:\".<span style=\"color: #800080;\">$e</span>-&gt;getFile().\"at Line:\".<span style=\"color: #800080;\">$e</span>-&gt;getLine().\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">11</span>     <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$e</span><span style=\"color: #000000;\">;    \r\n</span><span style=\"color: #008080;\">12</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>应用中，希望可以<strong>自定义异常处理</strong>：继承已有的Exception类就好，需要注意的是，一般的getMessage等是final的，不能进行重载的，只有_tostring这一个方法可以重载；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">class</span> MyException <span style=\"color: #0000ff;\">extends</span><span style=\"color: #000000;\"> \\ErrorException\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\"> 3</span>     <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> _tostring()\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 5</span>         <span style=\"color: #0000ff;\">return</span> \"Fatal error,sorry!\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\r\n</span><span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> MyException(\"OH\", 14<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #0000ff;\">catch</span> (MyException <span style=\"color: #800080;\">$e</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">13</span>     <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$e</span>-&gt;<span style=\"color: #000000;\">_tostring();\r\n</span><span style=\"color: #008080;\">14</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>应用中，<strong>常常把异常处理用在最容易出错的I/O部分</strong>；格式一般都是</p>\r\n<p>try{ if(!...) throw...} catch(){}</p>\r\n<p> </p>\r\n<p>Session 2</p>\r\n<p>（二） 使用MySQL</p>\r\n<p>八、设计Web数据库</p>\r\n<p> </p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3073', 'PHP_Bibel阅读学习（一）——看书看经典，写文写代码 ', '网络', '\n<p>　　基础快速再看一下，然后每天有新的好玩的看。</p>\r\n<p>这本书，反正好评不少，就是`PHP和MySQL Web开发`，机械工业出版社，澳洲人写的，红皮，有兴趣的可以看一下。</p>\r\n<p> </p>\r\n<p><strong>第一篇 使用PHP</strong></p>\r\n<p><strong>一、入门</strong></p>\r\n<p>5分钟翻一下，两个点吧。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//From Bible\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Session1 Based\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//Chapter1-Use</span>\r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\Using;\r\n</span><span style=\"color: #008080;\">10</span> \r\n<span style=\"color: #008080;\">11</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">引用操作符\r\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #008000;\">//这样子赋值的变量享有同一个空间</span>\r\n<span style=\"color: #008080;\">13</span> <span style=\"color: #800080;\">$a</span>=3<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$a</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #800080;\">$b</span>=&amp;<span style=\"color: #800080;\">$a</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">16</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$b</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">17</span> <span style=\"color: #800080;\">$b</span>=3333<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">18</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$a</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">19</span> \r\n<span style=\"color: #008080;\">20</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">执行操作符\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #008000;\">//``</span>\r\n<span style=\"color: #008080;\">22</span> <span style=\"color: #800080;\">$out</span>=`ls -<span style=\"color: #000000;\">la`;\r\n</span><span style=\"color: #008080;\">23</span> <span style=\"color: #0000ff;\">echo</span> \'&lt;pre&gt;\'.<span style=\"color: #800080;\">$out</span>.\'&lt;/pre&gt;\';</pre>\r\n</div>\r\n<p><strong> 二、数据的存储与检索（文件直接操作</strong></p>\r\n<p>想说的都在代码里了。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\DataUsing;\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断文件是否存在——打开文件——锁定文件——读取文件——写入数据——解锁——关闭文件</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #800080;\">$filename</span>=\'test.txt\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">)) {\r\n</span><span style=\"color: #008080;\"> 5</span>     <span style=\"color: #0000ff;\">echo</span> \'The file you want to visit is not exist!\';<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">exit</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #800080;\">$fp</span>=@<span style=\"color: #008080;\">fopen</span>(<span style=\"color: #800080;\">$filename</span>,\'r+\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008080;\">flock</span>(<span style=\"color: #800080;\">$fp</span>, LOCK_EX);  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">锁定文件，只允许一个写入</span>\r\n<span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">while</span> (!<span style=\"color: #008080;\">feof</span>(<span style=\"color: #800080;\">$fp</span>)){   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">按行读取文件内容</span>\r\n<span style=\"color: #008080;\">11</span>     <span style=\"color: #800080;\">$content</span>=<span style=\"color: #008080;\">fgets</span>(<span style=\"color: #800080;\">$fp</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">12</span>     <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$content</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #800080;\">$writeContent</span>=\'I have something to write into\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #008080;\">fwrite</span>(<span style=\"color: #800080;\">$fp</span>, <span style=\"color: #800080;\">$writeContent</span>,<span style=\"color: #008080;\">strlen</span>(<span style=\"color: #800080;\">$writeContent</span>));  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">控制写入长度，兼容性考虑</span>\r\n<span style=\"color: #008080;\">16</span> <span style=\"color: #008080;\">flock</span>(<span style=\"color: #800080;\">$fp</span>, LOCK_UN);  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">释放锁定</span>\r\n<span style=\"color: #008080;\">17</span> <span style=\"color: #008080;\">fclose</span>(<span style=\"color: #800080;\">$fp</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong>三、数组</strong></p>\r\n<p>其他的都老生常谈，大概查一下随便用，就是熟练度的问题，但还是得知道哈。</p>\r\n<p>然后学到了usort（用户自定义排序）的妙处：</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Chapter3.Array</span>\r\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\ArrayUsort;\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多维数组的排序</span>\r\n<span style=\"color: #008080;\"> 4</span> <span style=\"color: #800080;\">$array1</span>=<span style=\"color: #0000ff;\">array</span>(54654,545,668<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #800080;\">$array2</span>=<span style=\"color: #0000ff;\">array</span>(5454,88,37,54<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #800080;\">$array3</span>=<span style=\"color: #0000ff;\">array</span>(123,4444,5453<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #800080;\">$arrayAll</span>=<span style=\"color: #0000ff;\">array</span>(<span style=\"color: #800080;\">$array1</span>,<span style=\"color: #800080;\">$array2</span>,<span style=\"color: #800080;\">$array3</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$arrayAll</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 9</span> \r\n<span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">function</span> dimensionsCompare(<span style=\"color: #800080;\">$x</span>,<span style=\"color: #800080;\">$y</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">12</span>     <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$x</span>[1]==<span style=\"color: #800080;\">$y</span>[1<span style=\"color: #000000;\">]){\r\n</span><span style=\"color: #008080;\">13</span>         <span style=\"color: #0000ff;\">return</span> 0<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">14</span>     }<span style=\"color: #0000ff;\">elseif</span> (<span style=\"color: #800080;\">$x</span>[1]&lt;<span style=\"color: #800080;\">$y</span>[1<span style=\"color: #000000;\">]){\r\n</span><span style=\"color: #008080;\">15</span>         <span style=\"color: #0000ff;\">return</span> -1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">16</span>     }<span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">17</span>         <span style=\"color: #0000ff;\">return</span> 1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">20</span> @<span style=\"color: #008080;\">usort</span>(<span style=\"color: #800080;\">$arrayAll</span>, \"dimensionsCompare\"<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$arrayAll</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p>其他什么的explode还是有点好玩的。</p>\r\n<p><strong>四、字符串操作和正则表达式</strong></p>\r\n<p>字符串整理</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">1</span> <span style=\"color: #800080;\">$name</span>=<span style=\"color: #008080;\">trim</span>(<span style=\"color: #800080;\">$_POST</span>[\'name\'<span style=\"color: #000000;\">]);\r\n</span><span style=\"color: #008080;\">2</span> <span style=\"color: #800080;\">$email</span>=<span style=\"color: #008080;\">rtrim</span>(<span style=\"color: #800080;\">$_POST</span>[\'email\'<span style=\"color: #000000;\">]);\r\n</span><span style=\"color: #008080;\">3</span> <span style=\"color: #800080;\">$feedback</span>=<span style=\"color: #008080;\">chop</span>(<span style=\"color: #800080;\">$_POST</span>[\'feedback\']);</pre>\r\n</div>\r\n<p> </p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3074', 'MordenPHP阅读笔记（一）——先跑再说，跑累了再走 ', '网络', '\n<p>---恢复内容开始---</p>\r\n<p>　　后台一大堆半成品，或者是几乎不成的。。。</p>\r\n<p>这本书不错，起码是别人推荐的，然后也是比较新的东西，学哪本不是学嘛，关键是得看。</p>\r\n<p>今儿个网不好，科研所需的代码下不到，看书做笔记吧。</p>\r\n<p>这本书基本将的是5.4版本后的一些新变化，写的浅显易懂，虽然鄙人走的还不顺溜，跑一跑也摔不到哪儿去，跑累了我有的是走的机会~~</p>\r\n<p><strong>（一）特性</strong></p>\r\n<p><strong>一、命名空间</strong></p>\r\n<p>一个文件一个类，用了命名空间方便互相调用；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//Namespace\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 4</span> <span style=\"color: #000000;\">namespace ModernPHP\\feature\\mingmingkongjian;\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #0000ff;\">function</span> <span style=\"color: #008080;\">var_dump</span><span style=\"color: #000000;\">(){\r\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">echo</span> \"Shit!\".\"&lt;/br&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #800080;\">$test</span>=\"OK\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$test</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">11</span> \\ModernPHP\\feature\\mingmingkongjian\\<span style=\"color: #008080;\">var_dump</span><span style=\"color: #000000;\">();\r\n</span><span style=\"color: #008080;\">12</span> \r\n<span style=\"color: #008080;\">13</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">命名空间必须顶头，但一个文件中可以有很多命名空间，然后也可以有子空间\r\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #008000;\">//厂商的命名空间是最顶层的命名空间，用于识别品牌\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #008000;\">//旨在解决命名冲突的问题，当然现在应该有比较灵活的其他用法\r\n</span><span style=\"color: #008080;\">16</span> \r\n<span style=\"color: #008080;\">17</span> <span style=\"color: #008000;\">//一个比较实用的点：导入和别名\r\n</span><span style=\"color: #008080;\">18</span> <span style=\"color: #008000;\">//导入另一个文件夹下的类定义，直接用</span>\r\n<span style=\"color: #008080;\">19</span> <span style=\"color: #0000ff;\">require</span> \'index.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">20</span> <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> a\\aaa;\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #800080;\">$daoru</span>=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> aaa;\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #800080;\">$daoru</span>-&gt;<span style=\"color: #000000;\">send();\r\n</span><span style=\"color: #008080;\">23</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">use是导入，然后在use中设置最懒的别名\r\n</span><span style=\"color: #008080;\">24</span> <span style=\"color: #008000;\">//另外，5.6版本后可以实现use 函数\r\n</span><span style=\"color: #008080;\">25</span> <span style=\"color: #008000;\">// use func a\\call;\r\n</span><span style=\"color: #008080;\">26</span> <span style=\"color: #008000;\">// \\a\\call();</span></pre>\r\n</div>\r\n<p>index.php</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">namespace a;\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> aaa{\r\n</span><span style=\"color: #008080;\"> 4</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> send(){\r\n</span><span style=\"color: #008080;\"> 5</span>         <span style=\"color: #0000ff;\">echo</span> \"ok\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> call(){\r\n</span><span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">echo</span> \"func_use is successful.\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">11</span> }</pre>\r\n</div>\r\n<p><strong>二、使用接口</strong></p>\r\n<p>接口，本来没太懂，看懂了之后简直了，牛逼啊！</p>\r\n<p>一个接口，大家只要遵守接口规定，就都能用，就这么个意思。</p>\r\n<p>下面是一个获得内容的接口示例，还可以写更多基于此接口的模块；（其中，模块中getContent的我基本都不会。。。哭）</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">\r\n//Chapter2.P19\r\n//Feature_Interface\r\n//</span>\r\n<span style=\"color: #000000;\">namespace ModernPHP\\feature\\jiekou;\r\n\r\n\r\n\r\n</span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> DocumentStore{\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$data</span>=<span style=\"color: #000000;\">[];\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> addDocument(Documentable <span style=\"color: #800080;\">$document</span>){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">这里注明只能使用接口的参数</span>\r\n        <span style=\"color: #800080;\">$key</span>=<span style=\"color: #800080;\">$document</span>-&gt;<span style=\"color: #000000;\">getID();\r\n        </span><span style=\"color: #800080;\">$value</span>=<span style=\"color: #800080;\">$document</span>-&gt;<span style=\"color: #000000;\">getContent();\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;data[<span style=\"color: #800080;\">$key</span>]=<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">;\r\n    }\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getDocuments(){\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">data;\r\n    }\r\n}\r\n\r\n</span><span style=\"color: #0000ff;\">interface</span> Documentable{     <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">定义接口，说白了就是定规矩，其他地方要用，就得说一声</span>\r\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getId();\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getContent();\r\n}\r\n\r\n</span><span style=\"color: #0000ff;\">class</span> HtmlDocument <span style=\"color: #0000ff;\">implements</span> Documentable{   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">声明要用接口；这个是获得url的内容的</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">;\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __construct(<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;url=<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">;\r\n    }\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getId(){\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">url;\r\n    }\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getContent(){\r\n        </span><span style=\"color: #800080;\">$ch</span>=curl_init();   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">这里的curl是针对url进行操作一个库（相当于）。这个命令是开启一个curl对话，所以下面这些都是一个对话</span>\r\n        curl_setopt(<span style=\"color: #800080;\">$ch</span>, CURLOPT_URL, <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">url);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>, CURLOPT_RETURNTRANSFER, 1<span style=\"color: #000000;\">);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>,CURLOPT_CONNECTTIMEOUT,3<span style=\"color: #000000;\">);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>,CURLOPT_FOLLOWLOCATION,1<span style=\"color: #000000;\">);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>,CURLOPT_MAXREDIRS,3<span style=\"color: #000000;\">);\r\n        </span><span style=\"color: #800080;\">$html</span>=curl_exec(<span style=\"color: #800080;\">$ch</span>);   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">由这个命令执行刚才的对话</span>\r\n        curl_close(<span style=\"color: #800080;\">$ch</span><span style=\"color: #000000;\">);\r\n        \r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$html</span><span style=\"color: #000000;\">;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n</span><span style=\"color: #800080;\">$documentStore</span>=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> DocumentStore();\r\n\r\n</span><span style=\"color: #800080;\">$htmlDoc</span>=<span style=\"color: #0000ff;\">new</span> HtmlDocument(\'http://www.baidu.com\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$documentStore</span>-&gt;addDocument(<span style=\"color: #800080;\">$htmlDoc</span><span style=\"color: #000000;\">);\r\n\r\n\r\n\r\n</span><span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$documentStore</span>-&gt;getDocuments());</pre>\r\n</div>\r\n<p> 另一个模块</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">class</span> StreamDocument <span style=\"color: #0000ff;\">implements</span> Documentable{  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">流媒体</span>\r\n<span style=\"color: #008080;\"> 2</span>     <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$resource</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 3</span>     <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$buffer</span>;   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">缓冲区大小</span>\r\n<span style=\"color: #008080;\"> 4</span>     \r\n<span style=\"color: #008080;\"> 5</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __construct(<span style=\"color: #800080;\">$resource</span>,<span style=\"color: #800080;\">$buffer</span>=4096<span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 6</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>=<span style=\"color: #800080;\">$resource</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 7</span>         <span style=\"color: #800080;\">$this</span>-&gt;buffer=<span style=\"color: #800080;\">$buffer</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 9</span>     \r\n<span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getId(){\r\n</span><span style=\"color: #008080;\">11</span>         <span style=\"color: #0000ff;\">return</span> \'resource-\'.(int)<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">13</span>     \r\n<span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getContent(){\r\n</span><span style=\"color: #008080;\">15</span>         <span style=\"color: #800080;\">$streamContent</span>=\'\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">16</span>         <span style=\"color: #008080;\">rewind</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>); <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">rewind() 函数将文件指针的位置倒回文件的开头</span>\r\n<span style=\"color: #008080;\">17</span>         <span style=\"color: #0000ff;\">while</span> (<span style=\"color: #008080;\">feof</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>)===<span style=\"color: #0000ff;\">false</span>){    <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">feof() 函数检测是否已到达文件末尾 (eof)。</span>\r\n<span style=\"color: #008080;\">18</span>             <span style=\"color: #800080;\">$streamContent</span>.=<span style=\"color: #008080;\">fread</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>,<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">buffer);\r\n</span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\">20</span>         \r\n<span style=\"color: #008080;\">21</span>         <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$streamContent</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">23</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong> 三、性状</strong></p>\r\n<p>奇怪的东西。。。</p>\r\n<p>其实就是为了多重继承或者一对多个不同的类别吧</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter2.P23\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Feature_Trait\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//性状\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//前面说的接口，是针对同类型的东西，实现相同的功能的；\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\">//这里的性状是针对不同的东西，实现相同的功能\r\n</span><span style=\"color: #008080;\">10</span> \r\n<span style=\"color: #008080;\">11</span> <span style=\"color: #008000;\">//基本用法如下</span>\r\n<span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">trait traitName{\r\n</span><span style=\"color: #008080;\">13</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> testThis(){\r\n</span><span style=\"color: #008080;\">14</span>         <span style=\"color: #0000ff;\">echo</span> \"This is how trait works.\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">16</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">17</span> \r\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">trait traitMore{\r\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> testAgain(){\r\n</span><span style=\"color: #008080;\">20</span>         <span style=\"color: #0000ff;\">echo</span> \"This is multiple use.\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">23</span> \r\n<span style=\"color: #008080;\">24</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> className{\r\n</span><span style=\"color: #008080;\">25</span>     <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> traitName;\r\n</span><span style=\"color: #008080;\">26</span>     <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> traitMore;\r\n</span><span style=\"color: #008080;\">27</span>     \r\n<span style=\"color: #008080;\">28</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">29</span> \r\n<span style=\"color: #008080;\">30</span> <span style=\"color: #800080;\">$classMine</span>=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> className();\r\n</span><span style=\"color: #008080;\">31</span> <span style=\"color: #800080;\">$classMine</span>-&gt;<span style=\"color: #000000;\">testThis();\r\n</span><span style=\"color: #008080;\">32</span> <span style=\"color: #800080;\">$classMine</span>-&gt;testAgain();</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong> 四、生成器</strong></p>\r\n<p>直接上代码</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter2.P26\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Feature_Generator\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//生成器\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//其实就是在函数中使用了yield语句的东西\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\">//优点在于节省了内存使用情况\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #008000;\">//方法是通过动态分配内存进行循环操作\r\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #008000;\">//典型用处是处理csv类数据文件</span>\r\n<span style=\"color: #008080;\">12</span> \r\n<span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">namespace ModernPHP\\feature\\shengchegnqi;\r\n</span><span style=\"color: #008080;\">14</span> \r\n<span style=\"color: #008080;\">15</span> <span style=\"color: #0000ff;\">function</span> getRows(<span style=\"color: #800080;\">$file</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">16</span>     <span style=\"color: #800080;\">$handle</span>=<span style=\"color: #008080;\">fopen</span>(<span style=\"color: #800080;\">$file</span>,\'rb\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">17</span>     <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$handle</span>===<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">18</span>         <span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> <span style=\"color: #0000ff;\">Exception</span>();  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">抛出错误原因</span>\r\n<span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">20</span>     <span style=\"color: #0000ff;\">while</span> (<span style=\"color: #008080;\">feof</span>(<span style=\"color: #800080;\">$handle</span>)===<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">) {\r\n</span><span style=\"color: #008080;\">21</span>         yield <span style=\"color: #008080;\">fgetcsv</span>(<span style=\"color: #800080;\">$handle</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">23</span>     <span style=\"color: #008080;\">fclose</span>(<span style=\"color: #800080;\">$handle</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">24</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">25</span> \r\n<span style=\"color: #008080;\">26</span> <span style=\"color: #0000ff;\">foreach</span> (getRows(\'data.csv\') <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$row</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">27</span>     <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$row</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">28</span>     <span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">30</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">当数据文件很大时，效果尤其明显</span></pre>\r\n</div>\r\n<p> </p>\r\n<p><strong> 五、闭包</strong></p>\r\n<p>这里闭包基本等于匿名函数</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter2.P29\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Feature_ClosePatch\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//闭包或匿名函数\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//把函数当作是变量\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\">//然后它就可以像变量一样用来用去了。。\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #008000;\">//常用做函数和方法的回调</span>\r\n<span style=\"color: #008080;\">11</span> \r\n<span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">namespace ModernPHP\\feature\\bibao;\r\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #800080;\">$var</span>=<span style=\"color: #0000ff;\">function</span> (<span style=\"color: #800080;\">$name</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">sprintf</span>(\'Hello %s\',<span style=\"color: #800080;\">$name</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">};\r\n</span><span style=\"color: #008080;\">16</span> \r\n<span style=\"color: #008080;\">17</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$var</span>(\'Andy\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">18</span> \r\n<span style=\"color: #008080;\">19</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">做回调</span>\r\n<span style=\"color: #008080;\">20</span> <span style=\"color: #800080;\">$array</span>=[2,3,4<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #800080;\">$num</span>=<span style=\"color: #008080;\">array_map</span>(<span style=\"color: #0000ff;\">function</span> (<span style=\"color: #800080;\">$number</span>){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">array_map,将函数作用到数组中的每个值上，每个值都乘以本身，并返回带有新值的数组</span>\r\n<span style=\"color: #008080;\">22</span>     <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$number</span>+1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">23</span> },<span style=\"color: #800080;\">$array</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">24</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$num</span>);</pre>\r\n</div>\r\n<p> 六、附加状态</p>\r\n<p>这个没搞懂。。。</p>\r\n<p>（二）标准</p>\r\n<p>PHP-FIG的一些约定俗成；</p>\r\n<p>---类名称，驼峰式，ShitHappens</p>\r\n<p>---方法名称，驼峰式，但首字母小写，shitHappens</p>\r\n<p>---缩进统一为4个空格</p>\r\n<p>---不写?&gt;结束符号；</p>\r\n<p>---{另起一行；</p>\r\n<p>---命名空间要有空格；</p>\r\n<p>---类中属性和方法必须有可见性声明；</p>\r\n<p>---if等控制性结构后面有空格；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter3.P44\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//PHP-FIG puts PSRs\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 6</span> \r\n<span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">namespace ModernPHP\\standard\\realize;\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> ModernPHP\\feature\\bibao;\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> ModernPHP\\feature\\fujiazhuangtai;\r\n</span><span style=\"color: #008080;\">11</span> \r\n<span style=\"color: #008080;\">12</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> ShitHappens\r\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$a</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span>     \r\n<span style=\"color: #008080;\">16</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> suck()\r\n</span><span style=\"color: #008080;\">17</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">18</span>         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$this</span>-&gt;a===<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">19</span>             <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">20</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">22</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>----------------------</p>\r\n<p>后面的都是讲述的东西，有需要的我再写吧。 </p>\r\n<p> </p>\n ', '2016-04-28 20:05:08', '2016-04-28 20:05:08', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3075', 'PHP&MySQL（三）——数组 ', '网络', '\n<p>　　前一段忙着比赛忙着找实习，最后一地鸡毛，就是长长教训罢了。。。。</p>\r\n<p>看书还是多必须的，试着高效的、踏实的做吧！！</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">  1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">  2</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">PHP数组其实能创建很多种数据结构，列表，堆栈，队列，树等\r\n</span><span style=\"color: #008080;\">  3</span> <span style=\"color: #008000;\">//数组创建array_fill</span>\r\n<span style=\"color: #008080;\">  4</span> <span style=\"color: #800080;\">$start_index</span>=1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  5</span> <span style=\"color: #800080;\">$num</span>=10<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  6</span> <span style=\"color: #800080;\">$value</span>=\"fuck\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  7</span> <span style=\"color: #800080;\">$array1</span>=<span style=\"color: #008080;\">array_fill</span>(<span style=\"color: #800080;\">$start_index</span>, <span style=\"color: #800080;\">$num</span>, <span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">); \r\n</span><span style=\"color: #008080;\">  8</span> \r\n<span style=\"color: #008080;\">  9</span> \r\n<span style=\"color: #008080;\"> 10</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array1</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 11</span> \r\n<span style=\"color: #008080;\"> 12</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #008080;\">count</span>(<span style=\"color: #800080;\">$array1</span>); <span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"; <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">count计数实现，返回一个数，代表数组长度\r\n</span><span style=\"color: #008080;\"> 13</span> <span style=\"color: #008000;\">//print_r(array_count_values($array1));\r\n</span><span style=\"color: #008080;\"> 14</span> \r\n<span style=\"color: #008080;\"> 15</span> <span style=\"color: #008000;\">//移除元素</span>\r\n<span style=\"color: #008080;\"> 16</span> <span style=\"color: #0000ff;\">unset</span>(<span style=\"color: #800080;\">$array1</span>[3<span style=\"color: #000000;\">]);\r\n</span><span style=\"color: #008080;\"> 17</span> <span style=\"color: #800080;\">$array2</span>=<span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 18</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">unset($array1);</span>\r\n<span style=\"color: #008080;\"> 19</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array1</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 20</span> \r\n<span style=\"color: #008080;\"> 21</span> <span style=\"color: #800080;\">$start</span>=\"a\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 22</span> <span style=\"color: #800080;\">$limit</span>=\"z\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 23</span> <span style=\"color: #800080;\">$array_letters</span>=<span style=\"color: #008080;\">range</span>(<span style=\"color: #800080;\">$start</span>, <span style=\"color: #800080;\">$limit</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 24</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array_letters</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 25</span> \r\n<span style=\"color: #008080;\"> 26</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">异构数组，即数组中有各种类型的</span>\r\n<span style=\"color: #008080;\"> 27</span> <span style=\"color: #800080;\">$array_yigou</span>=<span style=\"color: #0000ff;\">array</span>(\"fuck\",1,23.343,<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 28</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 29</span> \r\n<span style=\"color: #008080;\"> 30</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多维数组</span>\r\n<span style=\"color: #008080;\"> 31</span> <span style=\"color: #800080;\">$array_dimensions</span>=<span style=\"color: #0000ff;\">array</span>(<span style=\"color: #800080;\">$array1</span>,<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 32</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_dimensions</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 33</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$array_dimensions</span>[1][2];<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 34</span> \r\n<span style=\"color: #008080;\"> 35</span> <span style=\"color: #800080;\">$array_complicated</span>=<span style=\"color: #0000ff;\">array</span>(<span style=\"color: #800080;\">$array_dimensions</span>,<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 36</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_complicated</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 37</span> \r\n<span style=\"color: #008080;\"> 38</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">foreach,一开始我理解上有点问题，foreach本来就是一个循环了！！！</span>\r\n<span style=\"color: #008080;\"> 39</span> <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$array1</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$person</span> =&gt; <span style=\"color: #800080;\">$saying</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 40</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 41</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 42</span> \r\n<span style=\"color: #008080;\"> 43</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">比较适合foreach理解的一种方式</span>\r\n<span style=\"color: #008080;\"> 44</span> <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$array1</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$person</span> =&gt; <span style=\"color: #800080;\">$saying</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 45</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" said \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 46</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 47</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 48</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 49</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 50</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 51</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 52</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 53</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 54</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 55</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 56</span> \r\n<span style=\"color: #008080;\"> 57</span> <span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 58</span> \r\n<span style=\"color: #008080;\"> 59</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">数组计数\r\n</span><span style=\"color: #008080;\"> 60</span> <span style=\"color: #008000;\">//array_count_values返回一个数组,统计（！！）每个value的个数</span>\r\n<span style=\"color: #008080;\"> 61</span> <span style=\"color: #800080;\">$array1Value</span>=<span style=\"color: #008080;\">array_count_values</span>(<span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 62</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array1</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 63</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #800080;\">$array1Value</span>[\"fuck\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #008080;\"> 64</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">count计数的是“个体”的数目吧</span>\r\n<span style=\"color: #008080;\"> 65</span> <span style=\"color: #0000ff;\">print</span> \"There is \".<span style=\"color: #008080;\">count</span>(<span style=\"color: #800080;\">$array_letters</span>).\" letters.\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 66</span> \r\n<span style=\"color: #008080;\"> 67</span> <span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 68</span> \r\n<span style=\"color: #008080;\"> 69</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">神奇的explode和implode\r\n</span><span style=\"color: #008080;\"> 70</span> <span style=\"color: #008000;\">//就是字符串的拆解和安装\r\n</span><span style=\"color: #008080;\"> 71</span> <span style=\"color: #008000;\">//注意一定要有glue或者什么，不能不输入</span>\r\n<span style=\"color: #008080;\"> 72</span> <span style=\"color: #800080;\">$sentence</span>=\"What is your name?\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 73</span> <span style=\"color: #800080;\">$explode_demo</span>=<span style=\"color: #008080;\">explode</span>(\" \", <span style=\"color: #800080;\">$sentence</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 74</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$explode_demo</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 75</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">implode</span>(\" \", <span style=\"color: #800080;\">$explode_demo</span>));<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 76</span> \r\n<span style=\"color: #008080;\"> 77</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">数组元素搜索判断\r\n</span><span style=\"color: #008080;\"> 78</span> <span style=\"color: #008000;\">//in_array判断是否存在,array_search返回在哪里</span>\r\n<span style=\"color: #008080;\"> 79</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #008080;\">in_array</span>(\"fuck\", <span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 80</span> <span style=\"color: #800080;\">$check_list</span>=\"fuck you\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 81</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$check_list</span>, <span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 82</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">in_array第三个参数为严格检查类型，默认为false</span>\r\n<span style=\"color: #008080;\"> 83</span> <span style=\"color: #800080;\">$check_list2</span>=\"1 is in here\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 84</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$check_list2</span>, <span style=\"color: #800080;\">$array_yigou</span>,<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 85</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$check_list2</span>, <span style=\"color: #800080;\">$array_yigou</span>,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 86</span> \r\n<span style=\"color: #008080;\"> 87</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #008080;\">array_search</span>(\"fuck\", <span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 88</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #008080;\">array_search</span>(1, <span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 89</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">array_key_exists判断key是不是存在</span>\r\n<span style=\"color: #008080;\"> 90</span> <span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 91</span> \r\n<span style=\"color: #008080;\"> 92</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">直接利用key或value</span>\r\n<span style=\"color: #008080;\"> 93</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">array_keys</span>(<span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 94</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">array_values</span>(<span style=\"color: #800080;\">$array_dimensions</span>));<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 95</span> \r\n<span style=\"color: #008080;\"> 96</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">implode和array_merge</span>\r\n<span style=\"color: #008080;\"> 97</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">implode</span>(\" \", <span style=\"color: #800080;\">$array1</span>));<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 98</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">array_merge</span>(<span style=\"color: #800080;\">$array1</span>,<span style=\"color: #800080;\">$array_letters</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 99</span> \r\n<span style=\"color: #008080;\">100</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">数组排序\r\n</span><span style=\"color: #008080;\">101</span> <span style=\"color: #008000;\">//注意排序之后，直接改变/返回到原数组\r\n</span><span style=\"color: #008080;\">102</span> <span style=\"color: #008000;\">//sort升rsort降\r\n</span><span style=\"color: #008080;\">103</span> <span style=\"color: #008000;\">//这里也是我第一次对PHP语言有理解的地方，各种封装好的函数，需要的就是多用，知道，然后熟练的调用\r\n</span><span style=\"color: #008080;\">104</span> <span style=\"color: #008000;\">//自己编写的排序函数，往往没有其自带的/现成的函数效率/效果好</span>\r\n<span style=\"color: #008080;\">105</span> <span style=\"color: #800080;\">$array_num</span>=<span style=\"color: #008080;\">range</span>(2, 123,3<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">106</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array_num</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">107</span> <span style=\"color: #008080;\">rsort</span>(<span style=\"color: #800080;\">$array_num</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">108</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array_num</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">109</span> <span style=\"color: #008080;\">sort</span>(<span style=\"color: #800080;\">$array_letters</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">110</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_dimensions</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">111</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">关联数组，若想保持键值的关系不变，应该用asort</span>\r\n<span style=\"color: #008080;\">112</span> <span style=\"color: #008080;\">sort</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">113</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">114</span> <span style=\"color: #008080;\">rsort</span>(<span style=\"color: #800080;\">$array_yigou</span>,<span style=\"color: #000000;\">SORT_NUMERIC);\r\n</span><span style=\"color: #008080;\">115</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">116</span> <span style=\"color: #008080;\">asort</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">117</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">118</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">ksort是根据key值来排序的\r\n</span><span style=\"color: #008080;\">119</span> \r\n<span style=\"color: #008080;\">120</span> <span style=\"color: #008000;\">//总结_数组\r\n</span><span style=\"color: #008080;\">121</span> <span style=\"color: #008000;\">//数组创建——array(),array_fill(),range()\r\n</span><span style=\"color: #008080;\">122</span> <span style=\"color: #008000;\">//数组输出——var_dump,print_r\r\n</span><span style=\"color: #008080;\">123</span> <span style=\"color: #008000;\">//数组种类——索引数组，关联数组；异构数组，多维数组\r\n</span><span style=\"color: #008080;\">124</span> <span style=\"color: #008000;\">//数组排序——sort(),rsort(),asort(),ksort()\r\n</span><span style=\"color: #008080;\">125</span> <span style=\"color: #008000;\">//foreach的使用\r\n</span><span style=\"color: #008080;\">126</span> <span style=\"color: #008000;\">//implode(),explode()\r\n</span><span style=\"color: #008080;\">127</span> <span style=\"color: #008000;\">//is_array,in_array,array_search\r\n</span><span style=\"color: #008080;\">128</span> <span style=\"color: #008000;\">//array_count_values,count</span></pre>\r\n</div>\r\n<p> </p>\n ', '2016-04-28 20:05:09', '2016-04-28 20:05:09', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3076', 'PHP实现文件上传下载——心在忙而已 ', '网络', '\n<p>　　这一周都没有写什么东西，是啊，一周时间都没有学习太多新的东西，除了开车。</p>\r\n<p>妈蛋啊，天天中午去学车然后两周没有午觉的日子还是很崩溃的，加上之后工作压力带来的心忙，宝宝不开心啊。</p>\r\n<p>不过，也是自己不是那么能吃苦吧。那天看到的那句话怎么说的来着，我痛恨自己，在简单和困难之前，选择了前者；在什么什么面前，balabala，不是很鸡汤，但有点触动，愿少点矫情和娇气。</p>\r\n<p><strong>PHP实现文件上传与下载——来自mooc网</strong></p>\r\n<p><strong>一、上传原理与配置</strong></p>\r\n<p><strong>1.1 原理</strong></p>\r\n<p>将客户端文件<strong>上传到服务器端</strong>，再将服务器端的文件（<strong>临时文件）移动到指定目录</strong>即可。</p>\r\n<p><strong>1.2 客户端配置</strong></p>\r\n<p>所需：<strong>表单</strong>页面（选择上传文件）；</p>\r\n<p>具体而言：<strong>发送方式为POST，添加enctype=\"multipart/form-data\"属性</strong>，两者缺一不可（但是，优缺点并存，这里也限定了上传的方式和上传的文件之后的调用等方面，后面会说到）</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：\r\n</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">php\r\n\r\n</span><span style=\"color: #0000ff;\">?&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p>先是表单页面（请自动忽略前端问题。。。），关键就是form的属性；另外就是<strong>input 中用到了type=\"file\"这一点</strong>（体现到php的强大的拓展等等）。</p>\r\n<p>然后是doAction</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$_FILES:文件上传变量\r\n//print_r($_FILES);</span>\r\n<span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'name\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$type</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'type\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$tmp_name</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'tmp_name\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$size</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'size\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$error</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'error\'<span style=\"color: #000000;\">];\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">将服务器上的临时文件移动到指定位置\r\n//方法一move_upload_file($tmp_name,$destination)\r\n//move_uploaded_file($tmp_name, \"uploads/\".$filename);//文件夹应提前建立好，不然报错\r\n//方法二copy($src,$des)\r\n//以上两个函数都是成功返回真，否则返回false\r\n//copy($tmp_name, \"copies/\".$filename);\r\n//注意，不能两个方法都对临时文件进行操作，临时文件似乎操作完就没了，我们试试反过来</span>\r\n<span style=\"color: #008080;\">copy</span>(<span style=\"color: #800080;\">$tmp_name</span>, \"copies/\".<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span>, \"uploads/\".<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">能够实现，说明move那个函数基本上相当于剪切；copy就是copy，临时文件还在\r\n\r\n//另外，错误信息也是不一样的，遇到错误可以查看或者直接报告给用户</span>\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$error</span>==0<span style=\"color: #000000;\">) {\r\n    </span><span style=\"color: #0000ff;\">echo</span> \"上传成功！\"<span style=\"color: #000000;\">;\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">case</span> 1:\r\n            <span style=\"color: #0000ff;\">echo</span> \"超过了上传文件的最大值，请上传2M以下文件\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 2:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件过多，请一次上传20个及以下文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 3:\r\n            <span style=\"color: #0000ff;\">echo</span> \"文件并未完全上传，请再次尝试！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 4:\r\n            <span style=\"color: #0000ff;\">echo</span> \"未选择上传文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 5:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件为0\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p><span style=\"line-height: 1.5;\">先把print_r($_FILES)这个信息看一下</span></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #000000;\">Array\r\n(\r\n    [myFile] =&gt; Array\r\n        (\r\n            [name] =&gt; 梁博_简历.doc\r\n            [type] =&gt; application/msword\r\n            [tmp_name] =&gt; D:\\wamp\\tmp\\php1D78.tmp\r\n            [error] =&gt; 0\r\n            [size] =&gt; 75776\r\n        )\r\n\r\n)</span></pre>\r\n</div>\r\n<p>所以得到的是个二维数组，该怎么用，都是基本的东西（其实我喜欢降维再用）；</p>\r\n<p>基本是一眼就懂的东西，不罗嗦，关键有两个：<strong>tmp_name临时文件名；error报错信息（代号，后面可以利用）</strong>；</p>\r\n<p>然后这里看一下doAction后面一部分，利用报错信息来反馈给用户，需要说明的是为什么报错，和报错信息是什么都；</p>\r\n<p><strong>1.3 关于报错</strong></p>\r\n<p><strong>--报错原因</strong></p>\r\n<p>基本上都是超过或者不符合服务器关于上传文件的配置，那么服务器端<strong>配置</strong>有哪些呢？</p>\r\n<p>先考虑上传我们用了什么？POST，upload</p>\r\n<p>所以在php.ini中找这么几项：</p>\r\n<p>file_upload:On</p>\r\n<p>upload_tmp_dir=——临时文件保存目录；</p>\r\n<p>upload_max_filesize=2M</p>\r\n<p>max_file_uploads=20——允许一次上传的最大文件数量（注意和上面那个的区别，有没有size，别乱想）</p>\r\n<p>post_max_size=8M——post方式发送数据的最大值</p>\r\n<p>其他相关配置</p>\r\n<p>max_exectuion_time=-1——最大执行时间，避免程序不好占用服务器资源；</p>\r\n<p>max_input_time=60</p>\r\n<p>max_input_nesting_level=64——输入嵌套深度；</p>\r\n<p>memory_limit=128M——最大单线程的独立内存使用量</p>\r\n<p>总之都是有关资源的配置。</p>\r\n<p><strong>--错误号</strong></p>\r\n<p>以下（偷懒）引自http://blog.sina.com.cn/s/blog_3cdfaea201008utf.html</p>\r\n<p>UPLOAD_ERR_OK             值：0; 没有错误发生，文件上传成功。<br>  UPLOAD_ERR_INI_SIZE      \r\n值：1; 上传的文件超过了 php.ini 中 upload_max_filesize \r\n选项限制的值。<br>  UPLOAD_ERR_FORM_SIZE  值：2; 上传文件的大小超过了 HTML 表单中 \r\nMAX_FILE_SIZE \r\n选项指定的值。<br>  UPLOAD_ERR_PARTIAL          \r\n值：3; \r\n文件只有部分被上传。<br>  UPLOAD_ERR_NO_FILE          \r\n值：4; 没有文件被上传。  </p>\r\n<p>注意：这个错误信息是第一步上传的信息，也就是上传到临时文件夹的情况，而不是move或者copy的情况。 </p>\r\n<p><strong>二、上传相关限制</strong></p>\r\n<p><strong>2.1 客户端限制</strong></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction2.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"hidden\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"MAX_FILE_SIZE\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"101321\"</span> <span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：\r\n</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile\"</span><span style=\"color: #ff0000;\"> accept</span><span style=\"color: #0000ff;\">=\"image/jpeg,image/gif,text/html\"</span><span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这里用input的属性对上传文件的大小和类型进行了限制，但是个人感觉：一，html代码是“可见的”；二，常不起作用（没找到原因，但因为第一个我也想放弃它，知道就好。 </p>\r\n<p> 2.2 服务器端限制</p>\r\n<p>主要限制大小和类型，再有就是方式。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">接受文件，临时文件信息</span>\r\n<span style=\"color: #800080;\">$fileinfo</span>=<span style=\"color: #800080;\">$_FILES</span>[\"myFile\"];<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">降维操作</span>\r\n<span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$tmp_name</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"tmp_name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$size</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"size\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$error</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"error\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$type</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"type\"<span style=\"color: #000000;\">];\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">服务器端设定限制</span>\r\n<span style=\"color: #800080;\">$maxsize</span>=10485760;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">10M,10*1024*1024</span>\r\n<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'tif\');<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">允许上传的文件类型（拓展名</span>\r\n<span style=\"color: #800080;\">$ext</span>=<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$filename</span>,PATHINFO_EXTENSION);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">提取上传文件的拓展名\r\n\r\n//目的信息</span>\r\n<span style=\"color: #800080;\">$path</span>=\"uploads\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$path</span>)) {   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">当目录不存在，就创建目录</span>\r\n    <span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$path</span>,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n    </span><span style=\"color: #008080;\">chmod</span>(<span style=\"color: #800080;\">$path</span>, 0777<span style=\"color: #000000;\">);\r\n}\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$destination=$path.\"/\".$filename;\r\n//得到唯一的文件名！防止因为文件名相同而产生覆盖</span>\r\n<span style=\"color: #800080;\">$uniName</span>=<span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span>)).<span style=\"color: #800080;\">$ext</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">md5加密，uniqid产生唯一id，microtime做前缀</span>\r\n\r\n\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$error</span>==0<span style=\"color: #000000;\">) {\r\n    </span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$size</span>&gt;<span style=\"color: #800080;\">$maxsize</span><span style=\"color: #000000;\">) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传文件过大！\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$ext</span>, <span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"非法文件类型\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传方式有误，请使用post方式\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (@<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span>, <span style=\"color: #800080;\">$uniName</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">@错误抑制符，不让用户看到警告</span>\r\n        <span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传成功!\"<span style=\"color: #000000;\">;\r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传失败!\"<span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断是否为真实图片（防止伪装成图片的病毒一类的</span>\r\n    <span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$tmp_name</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">getimagesize真实返回数组，否则返回false</span>\r\n        <span style=\"color: #0000ff;\">exit</span>(\"不是真正的图片类型\"<span style=\"color: #000000;\">);\r\n    }\r\n\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">case</span> 1:\r\n            <span style=\"color: #0000ff;\">echo</span> \"超过了上传文件的最大值，请上传2M以下文件\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 2:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件过多，请一次上传20个及以下文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 3:\r\n            <span style=\"color: #0000ff;\">echo</span> \"文件并未完全上传，请再次尝试！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 4:\r\n            <span style=\"color: #0000ff;\">echo</span> \"未选择上传文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 7:\r\n            <span style=\"color: #0000ff;\">echo</span> \"没有临时文件夹\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这里，具体实现都有注释，每一步其实都可以自己试试的，很有趣。</p>\r\n<p>2.3 封装</p>\r\n<p>函数</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #0000ff;\">function</span> uploadFile(<span style=\"color: #800080;\">$fileInfo</span>,<span style=\"color: #800080;\">$path</span>,<span style=\"color: #800080;\">$allowExt</span>,<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">){\r\n\r\n</span><span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$tmp_name</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"tmp_name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$size</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"size\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$error</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"error\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$type</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"type\"<span style=\"color: #000000;\">];\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">服务器端设定限制</span>\r\n\r\n<span style=\"color: #800080;\">$ext</span>=<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$filename</span>,<span style=\"color: #000000;\">PATHINFO_EXTENSION);\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">目的信息</span>\r\n<span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$path</span><span style=\"color: #000000;\">)) {   \r\n    </span><span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$path</span>,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n    </span><span style=\"color: #008080;\">chmod</span>(<span style=\"color: #800080;\">$path</span>, 0777<span style=\"color: #000000;\">);\r\n}\r\n</span><span style=\"color: #800080;\">$uniName</span>=<span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span>)).\'.\'.<span style=\"color: #800080;\">$ext</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$destination</span>=<span style=\"color: #800080;\">$path</span>.\"/\".<span style=\"color: #800080;\">$uniName</span><span style=\"color: #000000;\">;\r\n\r\n\r\n</span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$error</span>==0<span style=\"color: #000000;\">) {\r\n    </span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$size</span>&gt;<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传文件过大！\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$ext</span>, <span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"非法文件类型\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传方式有误，请使用post方式\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断是否为真实图片（防止伪装成图片的病毒一类的</span>\r\n    <span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$tmp_name</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">getimagesize真实返回数组，否则返回false</span>\r\n        <span style=\"color: #0000ff;\">exit</span>(\"不是真正的图片类型\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (@<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span>, <span style=\"color: #800080;\">$destination</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">@错误抑制符，不让用户看到警告</span>\r\n        <span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传成功!\"<span style=\"color: #000000;\">;\r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传失败!\"<span style=\"color: #000000;\">;\r\n    }\r\n    \r\n\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">case</span> 1:\r\n            <span style=\"color: #0000ff;\">echo</span> \"超过了上传文件的最大值，请上传2M以下文件\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 2:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件过多，请一次上传20个及以下文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 3:\r\n            <span style=\"color: #0000ff;\">echo</span> \"文件并未完全上传，请再次尝试！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 4:\r\n            <span style=\"color: #0000ff;\">echo</span> \"未选择上传文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 7:\r\n            <span style=\"color: #0000ff;\">echo</span> \"没有临时文件夹\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n    }\r\n}\r\n</span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$destination</span><span style=\"color: #000000;\">;\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>调用</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$fileInfo</span>=<span style=\"color: #800080;\">$_FILES</span>[\"myFile\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$maxSize</span>=10485760;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">10M,10*1024*1024</span>\r\n<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'tif\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$path</span>=\"uploads\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">include_once</span> \'upFunc.php\'<span style=\"color: #000000;\">;\r\nuploadFile(</span><span style=\"color: #800080;\">$fileInfo</span>, <span style=\"color: #800080;\">$path</span>, <span style=\"color: #800080;\">$allowExt</span>, <span style=\"color: #800080;\">$maxSize</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong>三、多文件的上传实现</strong></p>\r\n<p><strong>3.1 利用单文件封装</strong></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction5.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile1\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile2\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile3\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile4\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">print_r($_FILES);</span>\r\n<span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #0000ff;\">include_once</span> \'upFunc.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$_FILES</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #800080;\">$file</span>[]=uploadFile(<span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">);\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这里的思路，从print_r($_FILES)中去找，打印出来看到是个二维数组，很简单，遍历去用就好了！ </p>\r\n<p>上面那个function的定义改一下，给定一些默认值</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span> uploadFile(<span style=\"color: #800080;\">$fileInfo</span>,<span style=\"color: #800080;\">$path</span>=\"uploads\",<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'tif\'),<span style=\"color: #800080;\">$maxSize</span>=10485760){</pre>\r\n</div>\r\n<p> </p>\r\n<p>这样子，简单是简单，但遇到一些问题。</p>\r\n<p>正常的上传4个图片是没问题，但要是中间激活了函数中的exit，就会立即停止，导致其他图片也无法上传。</p>\r\n<p><strong>3.2 升级版封装</strong></p>\r\n<p>旨在实现针对多个或单个文件上传的封装</p>\r\n<p>首先这样子写个静态文件</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction5.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>打印一下$_FILES</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #000000;\">Array\r\n(\r\n    [myFile] =&gt; Array\r\n        (\r\n            [name] =&gt; Array\r\n                (\r\n                    [0] =&gt; test32.png\r\n                    [1] =&gt; test32.png\r\n                    [2] =&gt; 333.png\r\n                    [3] =&gt; test41.png\r\n                )\r\n\r\n            [type] =&gt; Array\r\n                (\r\n                    [0] =&gt; image/png\r\n                    [1] =&gt; image/png\r\n                    [2] =&gt; image/png\r\n                    [3] =&gt; image/png\r\n                )\r\n\r\n            [tmp_name] =&gt; Array\r\n                (\r\n                    [0] =&gt; D:\\wamp\\tmp\\php831C.tmp\r\n                    [1] =&gt; D:\\wamp\\tmp\\php834C.tmp\r\n                    [2] =&gt; D:\\wamp\\tmp\\php837C.tmp\r\n                    [3] =&gt; D:\\wamp\\tmp\\php83BB.tmp\r\n                )\r\n\r\n            [error] =&gt; Array\r\n                (\r\n                    [0] =&gt; 0\r\n                    [1] =&gt; 0\r\n                    [2] =&gt; 0\r\n                    [3] =&gt; 0\r\n                )\r\n\r\n            [size] =&gt; Array\r\n                (\r\n                    [0] =&gt; 46174\r\n                    [1] =&gt; 46174\r\n                    [2] =&gt; 34196\r\n                    [3] =&gt; 38514\r\n                )\r\n\r\n        )\r\n\r\n)</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>可以得到一个三维数组。</p>\r\n<p>复杂是复杂了，但复杂的有规律，各项数值都在一起了，很方便我们取值！！</p>\r\n<p>所以先得到文件信息，<strong>变成单文件处理那种信息</strong></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getFiles(){\r\n    </span><span style=\"color: #800080;\">$i</span>=0<span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">foreach</span>(<span style=\"color: #800080;\">$_FILES</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$file</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #008080;\">is_string</span>(<span style=\"color: #800080;\">$file</span>[\'name\'])){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">单文件判定</span>\r\n            <span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>]=<span style=\"color: #800080;\">$file</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #800080;\">$i</span>++<span style=\"color: #000000;\">;\r\n        }</span><span style=\"color: #0000ff;\">elseif</span>(<span style=\"color: #008080;\">is_array</span>(<span style=\"color: #800080;\">$file</span>[\'name\'<span style=\"color: #000000;\">])){\r\n            </span><span style=\"color: #0000ff;\">foreach</span>(<span style=\"color: #800080;\">$file</span>[\'name\'] <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$key</span>=&gt;<span style=\"color: #800080;\">$val</span>){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">我的天，这个$key用的diao</span>\r\n                <span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'name\']=<span style=\"color: #800080;\">$file</span>[\'name\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'type\']=<span style=\"color: #800080;\">$file</span>[\'type\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'tmp_name\']=<span style=\"color: #800080;\">$file</span>[\'tmp_name\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'error\']=<span style=\"color: #800080;\">$file</span>[\'error\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'size\']=<span style=\"color: #800080;\">$file</span>[\'size\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$i</span>++<span style=\"color: #000000;\">;\r\n            }\r\n        }\r\n    }\r\n    </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$files</span><span style=\"color: #000000;\">;\r\n    \r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>然后之前的那种exit错误，就把exit改一下就好了，这里用res</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span> uploadFile(<span style=\"color: #800080;\">$fileInfo</span>,<span style=\"color: #800080;\">$path</span>=\'./uploads\',<span style=\"color: #800080;\">$flag</span>=<span style=\"color: #0000ff;\">true</span>,<span style=\"color: #800080;\">$maxSize</span>=1048576,<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'gif\'<span style=\"color: #000000;\">)){\r\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$flag=true;\r\n    //$allowExt=array(\'jpeg\',\'jpg\',\'gif\',\'png\');\r\n    //$maxSize=1048576;//1M\r\n    //判断错误号</span>\r\n    <span style=\"color: #800080;\">$res</span>=<span style=\"color: #0000ff;\">array</span><span style=\"color: #000000;\">();\r\n    </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'error\']===<span style=\"color: #000000;\">UPLOAD_ERR_OK){\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测上传得到小</span>\r\n        <span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'size\']&gt;<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'上传文件过大\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #800080;\">$ext</span>=getExt(<span style=\"color: #800080;\">$fileInfo</span>[\'name\'<span style=\"color: #000000;\">]);\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测上传文件的文件类型</span>\r\n        <span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$ext</span>,<span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">)){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'非法文件类型\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测是否是真实的图片类型</span>\r\n        <span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$flag</span><span style=\"color: #000000;\">){\r\n            </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n                </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'不是真实图片类型\'<span style=\"color: #000000;\">;\r\n            }\r\n        }\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测文件是否是通过HTTP POST上传上来的</span>\r\n        <span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'文件不是通过HTTP POST方式上传上来的\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$res</span>) <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$res</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$path=\'./uploads\';</span>\r\n        <span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$path</span><span style=\"color: #000000;\">)){\r\n            </span><span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$path</span>,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n            </span><span style=\"color: #008080;\">chmod</span>(<span style=\"color: #800080;\">$path</span>,0777<span style=\"color: #000000;\">);\r\n        }\r\n        </span><span style=\"color: #800080;\">$uniName</span>=<span style=\"color: #000000;\">getUniName();\r\n        </span><span style=\"color: #800080;\">$destination</span>=<span style=\"color: #800080;\">$path</span>.\'/\'.<span style=\"color: #800080;\">$uniName</span>.\'.\'.<span style=\"color: #800080;\">$ext</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'tmp_name\'],<span style=\"color: #800080;\">$destination</span><span style=\"color: #000000;\">)){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'文件移动失败\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'上传成功\'<span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$res</span>[\'dest\']=<span style=\"color: #800080;\">$destination</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$res</span><span style=\"color: #000000;\">;\r\n        \r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">匹配错误信息</span>\r\n        <span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$fileInfo</span> [\'error\'<span style=\"color: #000000;\">]) {\r\n            </span><span style=\"color: #0000ff;\">case</span> 1 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'上传文件超过了PHP配置文件中upload_max_filesize选项的值\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 2 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'超过了表单MAX_FILE_SIZE限制的大小\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 3 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'文件部分被上传\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 4 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'没有选择上传文件\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 6 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'没有找到临时目录\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 7 :\r\n            <span style=\"color: #0000ff;\">case</span> 8 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'系统错误\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$res</span><span style=\"color: #000000;\">;\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>里面封装了两个小的</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span> getExt(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">strtolower</span>(<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$filename</span>,<span style=\"color: #000000;\">PATHINFO_EXTENSION));\r\n}\r\n\r\n</span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n * 产生唯一字符串\r\n * @return string\r\n </span><span style=\"color: #008000;\">*/</span>\r\n<span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getUniName(){\r\n    </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">));\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>然后静态中，用multiple属性实现多个文件的输入；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction6.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"POST\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span><span style=\"color: #ff0000;\"> multiple</span><span style=\"color: #0000ff;\">=\'multiple\' </span><span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>doAction6</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">print_r($_FILES);</span>\r\n<span style=\"color: #008080;\">header</span>(\"content-type:text/html;charset=utf-8\"<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #0000ff;\">require_once</span> \'upFunc2.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">require_once</span> \'common.func.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$files</span>=<span style=\"color: #000000;\">getFiles();\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> print_r($files);</span>\r\n<span style=\"color: #0000ff;\">foreach</span>(<span style=\"color: #800080;\">$files</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #800080;\">$res</span>=uploadFile(<span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">);\r\n    </span><span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$res</span>[\'mes\'],\'&lt;br/&gt;\'<span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #800080;\">$uploadFiles</span>[]=@<span style=\"color: #800080;\">$res</span>[\'dest\'<span style=\"color: #000000;\">];\r\n}\r\n</span><span style=\"color: #800080;\">$uploadFiles</span>=<span style=\"color: #008080;\">array_values</span>(<span style=\"color: #008080;\">array_filter</span>(<span style=\"color: #800080;\">$uploadFiles</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">print_r($uploadFiles);</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这样子的几个文件，就实现比较强大的面向过程的上传文件的功能（学的叫一个心酸。。。）；</p>\r\n<p><strong>四、面向对象的文件上传</strong></p>\r\n<p> （不是很写的动了。。。先粘过来，再说吧。。。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> upload{\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$fileName</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$allowMime</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$uploadPath</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$imgFlag</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$ext</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * @param string $fileName\r\n     * @param string $uploadPath\r\n     * @param string $imgFlag\r\n     * @param number $maxSize\r\n     * @param array $allowExt\r\n     * @param array $allowMime\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __construct(<span style=\"color: #800080;\">$fileName</span>=\'myFile\',<span style=\"color: #800080;\">$uploadPath</span>=\'./uploads\',<span style=\"color: #800080;\">$imgFlag</span>=<span style=\"color: #0000ff;\">true</span>,<span style=\"color: #800080;\">$maxSize</span>=5242880,<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'gif\'),<span style=\"color: #800080;\">$allowMime</span>=<span style=\"color: #0000ff;\">array</span>(\'image/jpeg\',\'image/png\',\'image/gif\'<span style=\"color: #000000;\">)){\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;fileName=<span style=\"color: #800080;\">$fileName</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;maxSize=<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;allowMime=<span style=\"color: #800080;\">$allowMime</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;allowExt=<span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;uploadPath=<span style=\"color: #800080;\">$uploadPath</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;imgFlag=<span style=\"color: #800080;\">$imgFlag</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;fileInfo=<span style=\"color: #800080;\">$_FILES</span>[<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">fileName];\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测上传文件是否出错\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkError(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">is_null</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">fileInfo)){\r\n            </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'error\']&gt;0<span style=\"color: #000000;\">){\r\n                </span><span style=\"color: #0000ff;\">switch</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'error\'<span style=\"color: #000000;\">]){\r\n                    </span><span style=\"color: #0000ff;\">case</span> 1:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'超过了PHP配置文件中upload_max_filesize选项的值\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 2:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'超过了表单中MAX_FILE_SIZE设置的值\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 3:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'文件部分被上传\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 4:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'没有选择上传文件\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 6:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'没有找到临时目录\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 7:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'文件不可写\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 8:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'由于PHP的扩展程序中断文件上传\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                        \r\n                }\r\n                </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n            }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n                </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n            }\r\n        }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'文件上传出错\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测上传文件的大小\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkSize(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'size\']&gt;<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">maxSize){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'上传文件过大\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测扩展名\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkExt(){\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;ext=<span style=\"color: #008080;\">strtolower</span>(<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'name\'],<span style=\"color: #000000;\">PATHINFO_EXTENSION));\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$this</span>-&gt;ext,<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">allowExt)){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'不允许的扩展名\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测文件的类型\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkMime(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'type\'],<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">allowMime)){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'不允许的文件类型\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测是否是真实图片\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkTrueImg(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">imgFlag){\r\n            </span><span style=\"color: #0000ff;\">if</span>(!@<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n                </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'不是真实图片\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n            }\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n        }\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测是否通过HTTP POST方式上传上来的\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkHTTPPost(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'文件不是通过HTTP POST方式上传上来的\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     *显示错误 \r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> showError(){\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\'&lt;span style=\"color:red\"&gt;\'.<span style=\"color: #800080;\">$this</span>-&gt;error.\'&lt;/span&gt;\'<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测目录不存在则创建\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkUploadPath(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">uploadPath)){\r\n            </span><span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$this</span>-&gt;uploadPath,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n        }\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 产生唯一字符串\r\n     * @return string\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getUniName(){\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">));\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 上传文件\r\n     * @return string\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> uploadFile(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;checkError()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkSize()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkExt()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkMime()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkTrueImg()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">checkHTTPPost()){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">checkUploadPath();\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;uniName=<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">getUniName();\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;destination=<span style=\"color: #800080;\">$this</span>-&gt;uploadPath.\'/\'.<span style=\"color: #800080;\">$this</span>-&gt;uniName.\'.\'.<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">ext;\r\n            </span><span style=\"color: #0000ff;\">if</span>(@<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'tmp_name\'], <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">destination)){\r\n                </span><span style=\"color: #0000ff;\">return</span>  <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">destination;\r\n            }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n                </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'文件移动失败\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">showError();\r\n            }\r\n        }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">showError();\r\n        }\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p> </p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #0000ff;\">require_once</span> \'upload.class.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$upload</span>=<span style=\"color: #0000ff;\">new</span> upload(\'myFile1\',\'imooc\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$dest</span>=<span style=\"color: #800080;\">$upload</span>-&gt;<span style=\"color: #000000;\">uploadFile();\r\n</span><span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$dest</span>;</pre>\r\n</div>\r\n<p> </p>\r\n<p>四、下载</p>\r\n<p>对于浏览器不识别的，可以直接下载，但对于能识别的，需要多一两步</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html </span><span style=\"color: #ff0000;\">xmlns</span><span style=\"color: #0000ff;\">=\"http://www.w3.org/1999/xhtml\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span> <span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"1.rar\"</span><span style=\"color: #0000ff;\">&gt;</span>下载1.rar<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">br </span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"1.jpg\"</span><span style=\"color: #0000ff;\">&gt;</span>下载1.jpg<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">br </span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"doDownload.php?filename=1.jpg\"</span><span style=\"color: #0000ff;\">&gt;</span>通过程序下载1.jpg<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">br </span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"doDownload.php?filename=../upload/nv.jpg\"</span><span style=\"color: #0000ff;\">&gt;</span>下载nv.jpg<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">php\r\n\r\n</span><span style=\"color: #0000ff;\">?&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$_GET</span>[\'filename\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #008080;\">header</span>(\'content-disposition:attachment;filename=\'.<span style=\"color: #008080;\">basename</span>(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\">header</span>(\'content-length:\'.<span style=\"color: #008080;\">filesize</span>(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\">readfile</span>(<span style=\"color: #800080;\">$filename</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p>------------------总结-----------------------</p>\r\n<pre>&lt;form action=\"doAction.php\" method=\"post\" enctype=\"multipart/form-data\"&gt;</pre>\r\n<p> &lt;input type=\"file\" name=\"myFile\" /&gt;&lt;br/&gt;</p>\r\n<p> 二维数组的降维处理；</p>\r\n<p>$_FILES变量</p>\r\n<p>move_upload_file();copy();</p>\r\n<p>tmp_name临时文件；</p>\r\n<p>拓展名的提取；</p>\r\n<p>真实图片的验证；</p>\r\n<p>唯一文件名的生成；</p>\r\n<p>函数封装以及调用；</p>\r\n<p>利用单个文件函数实现多文件上传；</p>\r\n<p>小功能的封装；</p>\r\n<p>多文件的遍历；</p>\r\n<p>面向对象的开发过程；</p>\r\n<p>下载；</p>\r\n<p>----------------------------------------</p>\r\n<p>妈蛋啊。。。。。。。。。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:09', '2016-04-28 20:05:09', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3077', 'PHP&MySQL（二）——困也得啃书 ', '网络', '\n<p>madan，所有事情都敢赶在一起。。。以后每天中午去学车啊，好开心。。晚上好困，但是困也得啃书。。。。。。。。</p>\r\n<p>二、PHP脚本编程语言</p>\r\n<p>什么变量啊，数据类型啊，特别特别基本的不记录了，说点容易忽略的。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">define</span>(\"PI\", 3.1415926);  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">常量的定义</span>\r\n\r\n<span style=\"color: #0000ff;\">echo</span> \"圆周率=\".<span style=\"color: #008080;\">PI</span>.\"&lt;br/&gt;\";   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">.的链接作用，同样用于$var的赋值等</span>\r\n\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">PI</span>&lt;3&amp;&amp;<span style=\"color: #008080;\">PI</span>&gt;=2<span style=\"color: #000000;\">) {  \r\n    </span><span style=\"color: #800080;\">$var</span>=\"shit\"<span style=\"color: #000000;\">;\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">echo</span> \"f**k\".\"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n}\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 先判断PI&lt;3，如果不成立，就直接进入else——称为短路设计，加快程序速度；\r\n// 同理，为了实现程序的高效，把最容易出错的放前面，最复杂的计算放右边</span>\r\n\r\n<span style=\"color: #800080;\">$var</span>=\"asldkjflajdfklj\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$v2</span>=(<span style=\"color: #0000ff;\">boolean</span>)<span style=\"color: #800080;\">$var</span>;   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">强制类型转换</span>\r\n<span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$v2</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n\r\n</span><span style=\"color: #800080;\">$v_true</span>=<span style=\"color: #0000ff;\">true</span>;   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">boolean值也可以直接赋值</span>\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">is_bool</span>(<span style=\"color: #800080;\">$v2</span>)&amp;&amp;<span style=\"color: #800080;\">$v2</span>===<span style=\"color: #800080;\">$v_true</span>) {    <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">恒等===，可以判断数据类型是否相同；is_bool</span>\r\n    <span style=\"color: #0000ff;\">echo</span> \"Variables have the same value and type!\"<span style=\"color: #000000;\">;  \r\n    </span><span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n}\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">另外，非恒等仍然是!==</span>\r\n\r\n<span style=\"color: #800080;\">$lll</span>=\"dfa\"+333<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">echo</span> <span style=\"color: #008080;\">gettype</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">var_dump允许一次检查多个变量，同时提供信息；print_r多用来对数组和对象进行输出；</span>\r\n\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #0000ff;\">isset</span>(<span style=\"color: #800080;\">$lll</span>)&amp;&amp;!<span style=\"color: #0000ff;\">empty</span>(<span style=\"color: #800080;\">$v2</span>)) {  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断是否为空</span>\r\n    <span style=\"color: #0000ff;\">unset</span>(<span style=\"color: #800080;\">$lll</span><span style=\"color: #000000;\">);\r\n}\r\n</span><span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\";  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">会报错，但仍能输出null</span>\r\n\r\n<span style=\"color: #0000ff;\">function</span> doubleint(<span style=\"color: #800080;\">$var</span>){   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">自定义函数</span>\r\n    <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">is_int</span>(<span style=\"color: #800080;\">$var</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #800080;\">$var</span>=<span style=\"color: #800080;\">$var</span>*2<span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$var</span><span style=\"color: #000000;\">;\r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"Please enter a int data.\"<span style=\"color: #000000;\">;\r\n    }\r\n}\r\n\r\n</span><span style=\"color: #0000ff;\">echo</span> doubleint(<span style=\"color: #800080;\">$var</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">echo</span> doubleint(4);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">个人觉得，还是少用global和地址传递，逻辑上容易出错，程序没错，结果却不对\r\n\r\n// 关于include和require\r\n// 多用include吧\r\n// include失败了只是警告，后者则是错误然后中断程序\r\n// 同时推荐没事儿就写绝对路径，好读也不易出错</span></pre>\r\n</div>\r\n<p>要说的都在上面了，总结下就是：常量，连接符，自定义函数，类型转换，类型判断，文件引用，恒等符，短路设计，var_dump。</p>\r\n<p>比较乱。</p>\r\n<p>最后举个例子吧，自制乘法表</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Chapter 2\'s example which is a chengfabiao</span>\r\n<span style=\"color: #0000ff;\">function</span> chengfabiao(<span style=\"color: #800080;\">$var</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #0000ff;\">for</span> (<span style=\"color: #800080;\">$row</span>=1;<span style=\"color: #800080;\">$row</span>&lt;=<span style=\"color: #800080;\">$var</span>;<span style=\"color: #800080;\">$row</span>++<span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">for</span>(<span style=\"color: #800080;\">$queue</span>=1;<span style=\"color: #800080;\">$queue</span>&lt;=<span style=\"color: #800080;\">$var</span>;<span style=\"color: #800080;\">$queue</span>++<span style=\"color: #000000;\">){\r\n            </span><span style=\"color: #800080;\">$answer</span>=<span style=\"color: #800080;\">$row</span>*<span style=\"color: #800080;\">$queue</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">echo</span> \"<span style=\"color: #800080;\">$row</span>*<span style=\"color: #800080;\">$queue</span>=\".<span style=\"color: #800080;\">$answer</span>.\"  \"<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n    }        \r\n}\r\n</span><span style=\"color: #800080;\">$var</span>=9<span style=\"color: #000000;\">;\r\nchengfabiao(</span><span style=\"color: #800080;\">$var</span>);</pre>\r\n</div>\r\n<p><br>自己改着玩吧。基础的东西也得常常拿出来温习下，我是这么认为的。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:09', '2016-04-28 20:05:09', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3078', '一起来啃书——PHP看书 ', '网络', '\n<p>形式所迫，不得不开展android的学习，PHP这边也开始了啃书的日子。两部500+的书，45天够不，有点忙有点忙。。。</p>\r\n<p>早上的胃胀，简直是一记闷棍，长点儿记性吧。。。。。。。。</p>\r\n<p>1、PHP+MYSQL开发指南（一）</p>\r\n<p>一、数据库应用程序与web</p>\r\n<p>1、本书中</p>\r\n<p>PHP+PEAR函数库；</p>\r\n<p>2、三层体系结构</p>\r\n<p>底层/数据库层——》中间层/程序逻辑层——》用户层/浏览器；</p>\r\n<p>MySQL（一种数据库管理系统DBMS）——》PHP程序/web脚本程序——》强化浏览器能力（Javascript）</p>\r\n<p>根据流量等指标调整每一层的安排。</p>\r\n<p>3、PHP优点</p>\r\n<p>老生常谈，但还是得知道，为了就是最大限度的发挥其特性。</p>\r\n<p>灵活——与HTML的集合；</p>\r\n<p>多功能实现；</p>\r\n<p>函数库/源码丰富；</p>\r\n<p>多平台的可移植。</p>\r\n<p>-----------------------------------------</p>\r\n<p> </p>\n ', '2016-04-28 20:05:09', '2016-04-28 20:05:09', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3079', 'I am back-电商网站开发&jQuery ', '网络', '\n<p>　　hi</p>\r\n<p>之前有将近两周的时间没有更新，除了懒就是其他的事情耽误了。现在好了，回家了，虽然家里停水，外面又有积雪，天寒地冻的，但诸多不便，都比不过有点闲的好。</p>\r\n<p>开搞每个学PHP的必经之路——电商网站的开发。</p>\r\n<p><strong>1、电商网站开发——前端</strong></p>\r\n<p><strong>一、首页制作</strong></p>\r\n<p><strong>1.1 概况&amp;准备</strong></p>\r\n<p>整个电商网站包括什么呢，就是首页信息，后面的分类信息页，商品详情页，购物页面，售后页面等等，所以就一步步做。自己做的时候可以简单的画个概况图来指导开发，免得逻辑搞混。</p>\r\n<p>准备：项目文件夹，其中要有images（图片素材），js（javascript），style（css）三个子文件夹中。工具的话，看个人爱好，不过涉及的是前端，一般上习惯用DS的多，我比较懒，直接用zend+浏览器算求。</p>\r\n<p>其中准备中有一部是实现reset.css，也就是清零/清除css效果。css我基本算是个白痴，找个源码贴出来，侵删：</p>\r\n<p>@charset \"utf-8\";<br>/* CSS Document */<br>body,ul,ol,li,p,h1,h2,h3,h4,h5,h6,form,fieldset,table,td,img,div,dl,dt,dd,input{margin:0;padding:0;}<br>body{font-size:12px;}<br>img{border:none;}<br>li{list-style:none;}<br>input,select,textarea{outline:none;border:none; background:none;}<br>textarea{resize:none;}<br>a{text-decoration:none; color:#656565;}</p>\r\n<p>/*清浮动*/<br>.clearfix:after{content:\"\";display:block;clear:both;}<br>.clearfix{zoom:1;}<br>.fl{float:left;}<br>.fr{float:right;}</p>\r\n<p>1.2 顶部结构</p>\r\n<p> 用fireworks做，我还不会，先去学习下。</p>\r\n<p>--------真是蛋疼，做个开头就发现自己naive，先完成web进阶的jQuery吧----------</p>\r\n<p><strong>2、jQuery</strong></p>\r\n<p><strong>十二、jQuery在线聊天室</strong></p>\r\n<p><strong>12.1 基本功能介绍</strong></p>\r\n<p>登陆后才能进入（用于基本信息的在线显示）；</p>\r\n<p>动态显示交流后的内容；</p>\r\n<p>文字和表情的沟通实现（表情也是字符代号编码）</p>\r\n<p><strong>技术重点</strong>：<strong>ajax</strong>的无刷新技术展示数据</p>\r\n<p><strong>12.2 实现效果</strong></p>\r\n<p>利用jq中的ajax函数（比如$.ajax等）实现登陆，登陆时，显示登陆中，正确或失败，有相应的动作；</p>\r\n<p>聊天室就是聊天内容区域，输入区域，人员显示区域。</p>\r\n<p><strong>12.3 流程</strong></p>\r\n<p>登录页面——》向服务器请求登录信息（用户名和密码信息）——》成功：跳转到聊天主页；否则，跳回登录页面。</p>\r\n<p>聊天页面——》请求聊天数据——》获取聊天数据；</p>\r\n<p>在线人员信息——》请求——》获取；</p>\r\n<p>所以，可以简单作图，这里我掠过了，然后清楚的看到需要做的页面数量，请求和响应的逻辑和对应关系。</p>\r\n<p><strong>12.4 登录页面开发login</strong></p>\r\n<p>--功能</p>\r\n<p>验证登录信息；</p>\r\n<p>进入聊天室；</p>\r\n<p>--代码</p>\r\n<p>以前在PDO中讲过的一种，直接用POST方法传递表格参数的方法：</p>\r\n<p>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html;chraset=UTF-8\"&gt;<br>&lt;title&gt;登录&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;form action=\'login.php\' method=\'post\'&gt;<br>用户名：&lt;input type=\'text\' name=\'username\'/&gt;&lt;br/&gt;<br>密     码：&lt;input type=\'password\' name=\'password\'/&gt;&lt;br/&gt;<br>&lt;input type=\'submit\' value=\'登录\'/&gt;<br>&lt;/form&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>然后后续工作在login.php中实现就好了；</p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>$username=$_POST[\'username\'];<br>$password=$_POST[\'password\'];<br>try {<br>	$pdo=new PDO(\'mysql:host=localhost;dbname=imooc\',\'root\',\'\');<br>	$pdo-&gt;exec(\'use imooc_pdo\');<br>	$sql=\"select * from user where username=? and password=?\";<br>	$stmt=$pdo-&gt;prepare($sql);<br>	$stmt-&gt;execute(array($username,$password));<br>	//$stmt=$pdo-&gt;query($sql);<br><br>	$shit=$stmt-&gt;rowCount();//显示结果集statement对象中的行数<br>	echo $shit;<br>	if($shit == 1){<br>		//$url=\"ChatMain.html\";<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"alert(\\\"登录成功\\\")\";<br>		echo \"&lt;/script&gt;\";<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"document.location=\\\"ChatMain.html\\\"\";<br>		echo \"&lt;/script&gt;\";<br>	}else{	<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"alert(\\\"用户名或密码错误\\\")\";<br>		echo \"&lt;/script&gt;\";<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"document.location=\\\"login2.html\\\"\";<br>		echo \"&lt;/script&gt;\";<br>	}</p>\r\n<p>} catch (PDOException $e) {<br>	echo $e-&gt;getMessage();<br>}</p>\r\n<p>----------------------------------------------</p>\r\n<p>我们在这里想要的是jQuery实现方法：换一种实现，同时把登录做的稍微好看一点点哈（我觉得好看，一个在于对应的css文件的编写，另一个在html中实现，DS工具实现要方便一点，有时间也得整着学一下）；</p>\r\n<p>&lt;!DOCTYPE html&gt;<br>&lt;HTML&gt;<br>&lt;head&gt;<br>&lt;TITLE&gt;登录&lt;/TITLE&gt;<br>  &lt;SCRIPT type=\"text/javascript\" src=\"jq/jquery-1.8.2.min.js\"&gt;&lt;/SCRIPT&gt;<br>  &lt;SCRIPT type=\"text/javascript\" src=\"js/jsLogin.js\"&gt;&lt;/SCRIPT&gt;<br>  &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"style/cssLogin.css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>  &lt;div id=\"divLogin\"&gt;<br>    &lt;h3&gt;用户登录&lt;/h3&gt;<br>      &lt;div class=\"content\"&gt;<br>        &lt;div&gt;用户：&lt;input id=\"txtName\" type=\"text\" class=\"txt\" /&gt;&lt;/div&gt;<br>        &lt;div&gt;密码：&lt;input id=\"txtPass\" type=\"text\" class=\"txt\" /&gt;&lt;/div&gt;<br>        &lt;div class=\"btnCenter\"&gt;<br>          &lt;input id=\"Button1\" type=\"button\" value=\"登录\" class=\"btn\" /&gt;<br>          &amp;nbsp;&amp;nbsp;<br>          &lt;input id=\"Button2\" type=\"button\" value=\"取消\" class=\"btn\" /&gt;<br>        &lt;/div&gt;<br>        &lt;span id=\"divMsg\" class=\"clsTip\"&gt;&lt;/span&gt;<br>      &lt;/div&gt;<br>  &lt;/div&gt;<br>&lt;/body&gt;<br>&lt;/HTML&gt;</p>\r\n<p>其中，js是javascript逻辑控制文件；jq是jquery实现文件；css是css文件；后面的span标签，是为了实现某些功能暂时留下的。</p>\r\n<p>$(function(){<br>	//元素绑定全局ajaxStart事件<br>	//这里就是用到span的标签，给出过程<br>	$(\"#divMsg\").ajaxStart(function(){<br>		$(this).show().html(\"正在发送登录请求...\");<br>	})<br>	$(\"#divMsg\").ajaxStop(function(){<br>		$(this).html(\"请求处理已完成！\").hide();<br>	})<br>	$(\"#Button1\").click(function(){<br>		var $name=$(\"#txtName\");<br>		var $pass=$(\"#txtPass\");<br>		if($name.val() !== \"\" &amp;&amp; $pass.val()!==\"\"){<br>			UserLogin($name.val(),$pass.val());<br>		}else{<br>			if($name.val()==\"\"){<br>				alert(\"用户名不能为空！\");<br>				$name.focus();<br>				return false;  // 阻止进一步的动作，很重要的一步<br>			}else{<br>				alert(\"密码不能为空！\");<br>				$pass.focus();<br>				return false;<br>			}<br>		}<br>	})<br>});</p>\r\n<p>function UserLogin(name,pass){<br>	$.ajax({<br>		type: \"GET\",  //提交方式<br>		url: \"index.php\",   //提交对象<br>		data:\"action=Login&amp;d=\"+new Date()+\"&amp;name=\"+name+\"&amp;pass=\"+pass, //提交数据<br>		success:function(data){<br>			if(data==\"1\"){<br>			window.location=\"ChatMain.html\";<br>		}else{<br>			alert(\"用户名或密码错误！\");<br>			return false;<br>		}<br>	}<br>	});<br>} </p>\r\n<p>其实这里面还是有错误的，实现起来感觉没有第一种实现方法简单明了，希望了解的兄弟们指点下，两种方法的优缺点。</p>\r\n<p>我还是稍微完善了下第一种PDO方法，直接在html中post表格数据，与数据库进行比对，然后返回信息。</p>\r\n<p> 当然呢，第二种，也就是本来应该采用的这种方式，很明显的优点在于其模块化实现，对于开发人员来说也是清晰明了。但，私以为，小型任务中，如果没有统一规划好的名称啊，什么的，这样子模块化是不是显得冗余，毕竟还需要看模块是否匹配啊什么的，不知道理解的对不对。</p>\r\n<p><strong>12.5 聊天室页面ChatMain</strong></p>\r\n<p>从页面本身来说，就是head包含jq文件，js文件，css文件；body实现当前页面的效果，也有接口功能的实现；</p>\r\n<p>从布局来说，就是聊天窗口的样子，三个框框搞定（可是尼玛老子不会用css啊！！！！）；</p>\r\n<p> -----晚上不一定还会写，先发了吧-----</p>\n ', '2016-04-28 20:05:09', '2016-04-28 20:05:09', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3080', '这回真的是挤时间了-PHP基础（三） ', '网络', '\n<p>　　hi</p>\r\n<p>刚看了唐人街探案，5星好评啊亲。由于是早就约好的，也不好推辞（虽然是和男的..），但该写的还是得挤时间写。明天早上老师的项目结题，虽然和我关系不大，但不要添乱就好！！</p>\r\n<p><strong>1、PHP </strong></p>\r\n<p><strong>一、PHP基础（三）</strong><br><strong>1.3.2 Int</strong></p>\r\n<p>整型。</p>\r\n<p>几个点：<strong>进制问题</strong>（2，8，16）；</p>\r\n<p>溢出——溢出后自动转为float型；</p>\r\n<p>整除；</p>\r\n<p>float转为int——向下取整；</p>\r\n<p>例子给出</p>\r\n<p><strong>$shi=123;</strong><br><strong>$bin=0b100001;</strong><br><strong>$ba=0123;</strong><br><strong>$shiliu=0x1234555;</strong></p>\r\n<p>function show($a){<br>	echo \"Truth is:\";<br>	var_dump($a);<br>	echo \"&lt;br/&gt;\";<br>}</p>\r\n<p>show($shiliu);<br>show($ba);<br>show($bin);</p>\r\n<p><strong>$qiguaideba=01237823;  //八进制的“溢出”,会截断，只输出01237</strong></p>\r\n<p>show($qiguaideba);</p>\r\n<p>function zhengchu($a,$b){<br>	$c=$a/$b;<br>	if(is_float($c)){<br><strong>var_dump(round($c));   //用round控制输出结果</strong><br>	}else{<br>		var_dump($c);<br>	}<br>}</p>\r\n<p>zhengchu($shiliu , $ba);</p>\r\n<p><strong>1.3.3 float</strong></p>\r\n<p>php版本不同，浮点型的精确度似乎是有变化的；而且坑爹的是，<strong>由于PHP内部机制的问题，也许会出现：</strong></p>\r\n<p><strong>var_dump(floor((0.1+0.7)*10));</strong></p>\r\n<p><strong>返回的往往是7而不是期望中的8....</strong></p>\r\n<p>使用高精度的话，<strong>用gmp函数</strong>，请自行去了解...</p>\r\n<p>然后真想比较的话，不妨<strong>设置一个最小值</strong>来比较：</p>\r\n<p>$bijiao1=0.232342342;<br>$bijiao2=0.232342323;<br><strong>$esp=0.000001;</strong><br>if(abs($bijiao1-$bijiao2)&lt;=$esp){<br>	echo \"True\".\"&lt;br/&gt;\";<br>}else{<br>	echo \"F**k\".\"&lt;br/&gt;\";<br>}</p>\r\n<p><strong>1.3.4 字符串</strong></p>\r\n<p>单双引号括起来的就是了~</p>\r\n<p>然后只想说一点的就是heredoc：</p>\r\n<p><strong>$str= &lt;&lt;&lt; EOF</strong><br>alsidjflja<br>akjsdhflkj<br>dfjlkj.<br><strong>EOF;</strong></p>\r\n<p>echo $str;</p>\r\n<p>基本就是这么个样子，但是注意，<strong>最后一行那个EOF;是必须要和分号紧紧相依的，而且分号后面必须是换行，EOF前面不能出现包括空格的一切东西；</strong></p>\r\n<p>然后heredoc还可以用在传递参数，初始化静态值等等；</p>\r\n<p>当然，heredoc中也可以调用参数啊属性的什么的——把EOF看成是大大的双引号就好了。</p>\r\n<p>其他的字符串相关，比如我经常用到的.做连接符什么的，比较基础，但是好用，去看一下视频就很明了。</p>\r\n<p>nowdoc也是一种比较新的方式，不太熟悉，然后似乎相当于单引号。</p>\r\n<p><strong>1.4 变量</strong></p>\r\n<p>变量好用，变量灵活，变量难用——一般就是渐渐的这么认为的。</p>\r\n<p>第一，PHP中不强调赋初值，不需要声明，但是<strong>推荐还是赋初值，养成好习惯</strong>；不赋初值，变量值为其类型的默认值；</p>\r\n<p>第二，引用赋值要知道，$b=&amp;$a;  只能对变量名进行操作；</p>\r\n<p>第三，赋值一次更新一次：</p>\r\n<p>$shit=\"asdf\";<br>$s=123;</p>\r\n<p>echo $shit;</p>\r\n<p>$shit=$s;<br>echo $shit;</p>\r\n<p><strong>2、GD库实现图片水印与缩略图</strong></p>\r\n<p><strong>一、简介</strong></p>\r\n<p>使用PHP中自带的GD库制作图片的水印。</p>\r\n<p>适合大批量的图片的简单处理。</p>\r\n<p>学习基本的方法，然后封装为一个工具类。 </p>\r\n<p> </p>\r\n<p>这周末除了看星球大战，就来补过补过，知道错了。。。。。</p>\n ', '2016-04-28 20:05:09', '2016-04-28 20:05:09', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3081', '好好写，好好干-PHP基础（二） ', '网络', '\n<p>　　hi</p>\r\n<p>好久没写，昨儿一写，感觉还是有人看的，至少是有一两个评论的~~好好干！</p>\r\n<p>每天需要坚持的就那么4件事儿：写这个，学一点法语，看会儿书，锻炼。单身狗也有好处。</p>\r\n<p><strong>1、PHP</strong></p>\r\n<p><strong>一、PHP基础（二）</strong></p>\r\n<p><strong>1.3 数据类型</strong></p>\r\n<p><strong>8种——4种标量：布尔boolean，整型integer，浮点float/双精度double，字符串string；2种复合：数组array，对象object；2种特殊：资源resource，NULL无；</strong></p>\r\n<p>推荐记住英文，在学习的过程中，变量通常都是这么来命名的。</p>\r\n<p><strong>php是弱类型语言</strong>，也就是说，不需要提前声明变量的类型。</p>\r\n<p>查看变量的类型：gettype()；</p>\r\n<p>判断类型：is_*()，其中*为各种数据类型的简写。</p>\r\n<p><strong>1.3.1 Boolean</strong></p>\r\n<p>true或false，不区分大小写，习惯上（我）写全小写。</p>\r\n<p><strong>一般不需要强制转换为布尔值，系统自动判断；（见下例）</strong></p>\r\n<p><strong>这些都被认为为false：false；0；0.0；空字符串以及字符串\"0\"；空数组；NULL；从空标记生成的SimpleXML对象（我也不是很理解还，主要是还没有涉及XML）；</strong></p>\r\n<p>相对应的是其他都认为为true——<strong>注意，-1，也是true；</strong></p>\r\n<p>&lt;?php</p>\r\n<p>$boola=true;<br>$boolb=false;<br>$boolc=null;<br>$boold=-1;<br>$boole=\"sdkljf\";</p>\r\n<p>echo gettype($boola).\"&lt;hr/&gt;\";</p>\r\n<p>function isbool($bool){<br>	if(<strong>is_bool($bool)</strong>){<br>		echo \"You are damn right.It is boolean.\".\"&lt;br/&gt;\";<br>	}else{<br>		echo \"Sorry, it is not this type.Please try again.\".\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>isbool($boola);<br>isbool($boolc);<br>isbool($boold);<br>isbool($boole);</p>\r\n<p>function booluse($bool){<br><strong>if($bool)</strong>{<br>		echo \"It is equal to TRUE.\".\"&lt;br/&gt;\";<br>	}else{<br>		echo \"It is equal to FALSE.\".\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>booluse($boola);<br>booluse($boolc);<br>booluse($boold);</p>\r\n<p> 在上述例子中注意，如果直接判断是否为boolean，一般的数据类型是不会强制转换的，只有当用在if等判断中时，才会自动的、强制的转换为boolean使用。 </p>\r\n<p>1.3.2 Int</p>\r\n<p>整型。</p>\r\n<p> </p>\r\n<p> 我错了。。。写一半被老板召唤加班，明天保证完成该系列第一部分（说明晚要看唐人街的嘛。。）。</p>\r\n<p>晚安，看书去了</p>\n ', '2016-04-28 20:05:09', '2016-04-28 20:05:09', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3082', '自罚一杯-PHP基础（一） ', '网络', '\n<p>　　hi</p>\r\n<p>懒癌是最可怕的癌了吧，在即将迎来本命年时，给自己定下每天必干的几件成习惯的事情，望不再鸽！！</p>\r\n<p>php是我一直在学习的东西，但总以为php简单，难点在需要掌握大量的相关知识，其实并不完全对，php也是有算法好吧，php也值得认真对待，既然决定学了，拿点样子出来啊，是男人吧。</p>\r\n<p><strong>1、PHP</strong></p>\r\n<p><strong>一、PHP基础（一）</strong></p>\r\n<p><strong>1.1 简介</strong></p>\r\n<p>PHP=Hypertext Preprocessor=超文本预处理语言；</p>\r\n<p><strong>脚本语言；</strong></p>\r\n<p><strong>执行效率高（就是速度快）；</strong></p>\r\n<p>可大可小，大网站往往不只使用它一种语言，比如淘宝，前p后j好像是；</p>\r\n<p>俗语：电子商务三大宝——上线，支付宝，php；</p>\r\n<p>版本问题：目前最新为PHP 7.0.0；我一般还在用PHP5。</p>\r\n<p>环境问题：windows各种集成环境，wamp，xampp，或者自行百度自助搭建；linux我前面的博文中有说，其实就几行命令的问题，当然系统版本不同，可能命令有所不同，大同小异，举一反三~</p>\r\n<p><strong>1.2 基础语法</strong></p>\r\n<p><strong>--PHP标记</strong></p>\r\n<p>&lt;?php和?&gt;；</p>\r\n<p>天生为html而生，嵌套其中；</p>\r\n<p><strong>一般在编译器中，不要写?&gt;，因为容易在结束标记前有不希望输出的空格等内容；直接删掉就行了，会自动结束的；</strong></p>\r\n<p>--从HTML中分离</p>\r\n<p><strong>&lt;?php if ($expression==true): ?&gt;</strong><br><strong> aaaaaaaaa</strong><br><strong> &lt;?php else: ?&gt;</strong><br><strong> bbbbbb</strong><br><strong> &lt;?php endif;?&gt;</strong></p>\r\n<p>一般情况下，php标记能很好的从HTML中分离，但上述例子情况例外——<strong>使用条件的高级分离方法</strong>；</p>\r\n<p>当解释器遇到未完成的条件语句时，会跳过标记寻找相应的东西（比如else）；</p>\r\n<p><strong>适用于输出大段文本，比echo等更有效率。</strong></p>\r\n<p>另外，开始结束的标记也可以用其他的，但推荐&lt;?php；</p>\r\n<p><span style=\"line-height: 1.5;\">--其他</span></p>\r\n<p><span style=\"line-height: 1.5;\">注释：//单行，/*多行；</span></p>\r\n<p><span style=\"line-height: 1.5;\">指令分隔符：分号</span></p>\r\n<p> </p>\r\n<p>把憋了一个月的电影去看了，时间挤啊挤，才有a杯那么一点，明天继续！</p>\r\n<p> </p>\n ', '2016-04-28 20:05:09', '2016-04-28 20:05:09', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3083', '睡觉问题早晚成为我顶头疼的问题。。。-PHP ', '网络', '\n<p>　　hi</p>\r\n<p>昨晚又作自己，睡不好整个人都不好。。。</p>\r\n<p><strong>1、PHP实现页面静态化</strong></p>\r\n<p><strong>二、纯静态化</strong></p>\r\n<p><strong>2.2 实现页面纯静态化的原理</strong></p>\r\n<p><strong>--基本方式</strong></p>\r\n<p>file_put_contents()函数；</p>\r\n<p>使用php内置缓存机制，output_buffering.</p>\r\n<p>具体信息可以去php手册中查找。重点看函数格式，参数，返回值。</p>\r\n<p><strong>--栗子file_put_contents()</strong></p>\r\n<p>&lt;?php<br>/*<br> * 写入函数<br> */</p>\r\n<p><strong>file_put_contents(\'index.shtml\',\'asdklfj\');</strong></p>\r\n<p>运行http://localhost/phpJingtaihua/index.shtml，得到结果。很简单的一个函数。</p>\r\n<p><strong>--栗子output_buffering</strong></p>\r\n<p>有内置函数，<strong>ob（output_buffering)系列的。</strong></p>\r\n<p>主要涉及四个</p>\r\n<p>ob_start,打开输出控制缓冲；</p>\r\n<p>ob_get_contents,返回输出缓冲区内容；</p>\r\n<p>ob_clean,清空输出缓冲区；</p>\r\n<p>ob_get_clean，得到缓冲区内容并删除当前输出缓冲区。</p>\r\n<p><strong>ob_start(); //打开缓冲区</strong><br>echo 1234;<br><strong>echo ob_get_contents();</strong></p>\r\n<p>得到12341234的序列。也就是说，所有输出都要经过缓冲区——就像是水龙头上装了个滤嘴。</p>\r\n<p>ob_start(); //打开缓冲区<br>echo 111;echo \"&lt;br/&gt;\";<br>echo ob_get_contents();echo \"&lt;br/&gt;\";<br><strong>ob_clean();</strong><br>echo ob_get_contents();echo \"&lt;br/&gt;\";</p>\r\n<p>echo 222;echo \"&lt;br/&gt;\";</p>\r\n<p>echo ob_get_clean();echo \"&lt;br/&gt;\";</p>\r\n<p>这里呢，111因为缓冲区的清除，而不会再输出，即使是原始的echo语句也不行。</p>\r\n<p><strong>2.3 纯静态化案例实现简介</strong></p>\r\n<p>终极目的就是生成静态文件。</p>\r\n<p>其一，写入数据到静态文件。</p>\r\n<p>其二，利用ob机制，获取（可以写入到静态文件的）数据。</p>\r\n<p><strong>2.4 案例实现步骤</strong></p>\r\n<p>链接数据库，从数据库中获取数据——》把获取到的数据填充到模板文件中去——》把动态页面转化为静态页面，生成纯静态文件。</p>\r\n<p> </p>\r\n<p>-----------------</p>\r\n<p>先这样，晚上有时间再写。。。。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:09', '2016-04-28 20:05:09', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3084', '其实今天没有欲望..-MySQLi ', '网络', '\n<p>　　hi</p>\r\n<p>中午爽爽的游了会儿泳，但是下午把一拳超人看完了，竟然萌生不出学习的欲望了。。。强迫自己更新点东西吧，一会儿看书去。</p>\r\n<p><strong>1、MySQLi</strong></p>\r\n<p><strong>二、MySQLi基于OOP的编程</strong></p>\r\n<p><strong>2.1 使用解析</strong></p>\r\n<p>--基本</p>\r\n<p><strong>MySQLi是一个拓展类库，本质上是个类</strong>（？）。</p>\r\n<p>一般流程和MySQL一样：<strong>连接，选库，字符集设定，SQL语句执行，关闭连接</strong>。</p>\r\n<p><strong>--链接库例子</strong></p>\r\n<p>&lt;?php<br>/*<br> * <strong>连接和选库</strong><br> */<br><strong>$mysqli=new mysqli(\'localhost\', \'root\', \'\');</strong><br>print_r($mysqli);echo \"&lt;br/&gt;\";</p>\r\n<p>echo <strong>$mysqli-&gt;select_db</strong>(\'test\');echo \"&lt;br/&gt;\";</p>\r\n<p><strong>$mysqli2=new mysqli();</strong><br>print_r(<strong>$mysqli2-&gt;connect</strong>(\'localhost\', \'root\', \'\'));echo \"&lt;br/&gt;\";</p>\r\n<p>print_r(<strong>$mysqli3=new mysqli(\'localhost\', \'root\', \'\',\'test\')</strong>);echo \"&lt;br/&gt;\";</p>\r\n<p>三种不同的方法，这里的方法都是利用mysqli的类属性来做的；当然也可以利用mysqli的命令来链接；</p>\r\n<p>$con=mysqli_connect(HOST,USERNAME,PASSWORD)</p>\r\n<p>结果中有一些信息</p>\r\n<table><tbody>\n<tr>\n<td class=\"webkit-line-content\">mysqli Object</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">(</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[affected_rows] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[client_info] =&gt; mysqlnd 5.0.11-dev - 20120503 - $Id: bf9ad53b11c9a57efdb1057292d73b928b8c5c77 $</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[client_version] =&gt; 50011</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[connect_errno] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[connect_error] =&gt;</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[errno] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[error] =&gt;</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[error_list] =&gt; Array</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">(</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">)</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\"> </td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[field_count] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[host_info] =&gt; localhost via TCP/IP</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[info] =&gt;</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[insert_id] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[server_info] =&gt; 5.6.17</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[server_version] =&gt; 50617</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[stat] =&gt; Uptime: 968 Threads: 1 Questions: 24 Slow queries: 0 Opens: 70 Flush tables: 1 Open tables: 63 Queries per second avg: 0.024</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[sqlstate] =&gt; 00000</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[protocol_version] =&gt; 10</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[thread_id] =&gt; 11</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[warning_count] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">)</td>\r\n\r\n</tr>\n</tbody></table>\n<p>这些属性都是可以通过对象的属性来得到的，比如</p>\r\n<p>echo $mysqli-&gt;client_info;echo \"&lt;br/&gt;\";</p>\r\n<p>或者是通过相对应的方法得到，这些东西查手册可以看到。</p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>//1.建立到MySQL数据的连接<br>// $mysqli=new mysqli(\'localhost\',\'root\',\'root\');<br>// //print_r($mysqli);<br>// //2.打开指定的数据库<br>// $mysqli-&gt;select_db(\'test\');<br>// $mysqli=new mysqli();<br>// $mysqli-&gt;connect(\'127.0.0.1\',\'root\',\'root\');<br>// print_r($mysqli);</p>\r\n<p>//建立连接的同时打开指定数据库<br>$mysqli=@new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>//print_r($mysqli);<br>//$mysqli-&gt;connect_errno:得到连接产生的错误编号<br>//$mysqli-&gt;connect_error:得到连接产生的错误信息<br>if($mysqli-&gt;connect_errno){<br>	die(\'Connect Error:\'.$mysqli-&gt;connect_error);<br>}<br>print_r($mysqli);<br>echo \'&lt;hr color=\"red\"/&gt;\';<br>echo \'客户端的信息：\'.$mysqli-&gt;client_info.\'&lt;br/&gt;\';<br>echo $mysqli-&gt;get_client_info().\'&lt;br/&gt;\';<br>echo \'客户端的版本：\'.$mysqli-&gt;client_version.\'&lt;br/&gt;\';<br>echo \'&lt;hr/&gt;\';<br>echo \'服务器端信息：\'.$mysqli-&gt;server_info.\'&lt;br/&gt;\';<br>echo $mysqli-&gt;get_server_info();<br>echo \'&lt;hr/&gt;\';<br>echo \'服务器版本：\'.$mysqli-&gt;server_version.\'&lt;br/&gt;\';</p>\r\n<p>echo \'&lt;hr/&gt;\';</p>\r\n<p><strong>--字符集例子</strong></p>\r\n<p>&lt;?php<br>//1.建立到MySQL的连接<br>$mysqli=@new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'Connect Error:\'.$mysqli-&gt;connect_error);<br>}<br>//2.设置默认的客户端编码方式utf8<br><strong>$mysqli-&gt;set_charset(\'utf8\');</strong></p>\r\n<p>//3.执行SQL查询<br>$sql=&lt;&lt;&lt;EOF<br>	CREATE TABLE IF NOT EXISTS mysqli(<br>		id TINYINT UNSIGNED AUTO_INCREMENT KEY,<br>		username VARCHAR(20) NOT NULL<br>	);<br>EOF;<br>$res=$mysqli-&gt;query($sql);<br>var_dump($res);</p>\r\n<p>/*<br> SELECT/DESC/DESCRIBE/SHOW/EXPLAIN执行成功返回mysqli_result对象，执行失败返回false<br> 对于其它SQL语句的执行，执行成功返回true，否则返回false<br> */<br>//关闭连接<br>$mysqli-&gt;close();</p>\r\n<p>需要注意的是数据库中的是utf8，而不是utf-8；</p>\r\n<p><strong>2.2 插入记录操作</strong></p>\r\n<p>增。</p>\r\n<p><strong>--connect.php</strong></p>\r\n<p>因为连接数据库的一系列操作是常用的，对于这种，我们简便的方法就是<strong>封装起来，到处调用</strong></p>\r\n<p>require_once \'connect.php\';</p>\r\n<p>connect.php</p>\r\n<p>&lt;?php<br>/*<br> * <strong>连接和选库（头）文件</strong><br> */<br>$mysqli=new mysqli(\'localhost\', \'root\', \'\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'Connect Error:\'.$mysqli-&gt;connect_error);<br>}else{<br>	echo \'客户端的信息：\'.$mysqli-&gt;client_info.\'&lt;br/&gt;\';<br>}<br>$mysqli-&gt;set_charset(\'utf8\');</p>\r\n<p><strong>--增</strong></p>\r\n<p>&lt;?php<br>/*<br> * 数据库插入数据<br> */</p>\r\n<p><strong>require_once \'connect.php\';</strong></p>\r\n<p>$sql=\"insert mysqli(username) value(\'Tom\')\";<br><strong>echo $mysqli-&gt;query($sql);</strong></p>\r\n<p>这里执行的是单条的sql语句。</p>\r\n<p>或者完善一点，添加一个判断，并输出错误信息。</p>\r\n<p>if($res){<br>	echo $mysqli-&gt;insert_id; <br>}else{<br>	echo \'ERROR \'.$mysqli-&gt;error;<br>}</p>\r\n<p>或者，插入多条记录</p>\r\n<p>$sql=\"insert mysqli(username) value(\'Sdaf\'),(\'Andy\')\";</p>\r\n<p><strong>2.3 更新记录</strong></p>\r\n<p>更新。</p>\r\n<p>$sql=\"update test set id=id+10\";<br>$mysqli-&gt;query($sql);</p>\r\n<p><strong>2.4 删除</strong></p>\r\n<p>删</p>\r\n<p>$sql=\"delete from mysqli where id&gt;=2\";</p>\r\n<p>--</p>\r\n<p><strong>特别说明，affected_rows返回的情况有三种：</strong></p>\r\n<p><strong>-1  sql语句有问题；</strong></p>\r\n<p>0 没有受影响的语句；</p>\r\n<p>&gt;=0 受影响的条数。</p>\r\n<p><strong>--小结</strong></p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>$mysqli=new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'CONNECT ERROR:\'.$mysqli-&gt;connect_error);<br>}<br>$mysqli-&gt;set_charset(\'utf8\');</p>\r\n<p>//执行SQL查询<br>//添加记录<br>//执行单条SQL语句,只能执行一条SQL语句<br>// $sql=\"INSERT user(username,password) VALUES(\'king\',\'king\');\";<br>// $sql.=\"DROP TABLE user;\";<br>$sql=\"INSERT user(username,password) VALUES(\'queen1\',\'queen1\'),(\'queen2\',\'queen2\'),(\'queen3\',\'queen3\'),(\'queen4\',\'queen4\')\";<br>$res=$mysqli-&gt;query($sql);<br>if($res){<br>	//得到上一插入操作产生的AUTO_INCREMENT的值<br>	echo \'恭喜您注册成功，您是网站第\'.$mysqli-&gt;insert_id.\'位用户&lt;br/&gt;\';<br>	//得到上一步操作产生的受影响记录条数<br>	echo \'有\'.$mysqli-&gt;affected_rows.\'记录被影响\';<br>}else{<br>	//得到上一步操作产生的错误号和错误信息<br>	echo \'ERROR \'.$mysqli-&gt;errno.\':\'.$mysqli-&gt;error;<br>}<br>echo \'&lt;hr/&gt;\';</p>\r\n<p>//将表中年龄+10<br>$sql=\"UPDATE user SET age=age+10\";<br>$res=$mysqli-&gt;query($sql);<br>if($res){<br>	echo $mysqli-&gt;affected_rows.\'条记录被更新\';<br>}else{<br>	echo \"ERROR \".$mysqli-&gt;errno.\':\'.$mysqli-&gt;error;<br>}<br>echo \'&lt;hr/&gt;\';</p>\r\n<p>//将表中id&lt;=6的用户删除掉<br>$sql=\"DELETE FROM user WHERE id&lt;=6\";<br>$res=$mysqli-&gt;query($sql);<br>if($res){<br>	echo $mysqli-&gt;affected_rows.\'条记录被删除\';<br>}else{<br>	echo \"ERROR \".$mysqli-&gt;errno.\':\'.$mysqli-&gt;error;<br>}<br>//关闭到MySQL的连接<br>$mysqli-&gt;close();</p>\r\n<p><strong>2.5 查</strong></p>\r\n<p>需要注意的是，用的是select，所以返回的是结果集，是可以打印出来的print_r或var_dump。</p>\r\n<p>所以这里就要说一下，返回的结果集的选择了。</p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>$mysqli=new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'CONNECT ERROR:\'.$mysqli-&gt;connect_error);<br>}<br>$mysqli-&gt;set_charset(\'utf8\');<br>$sql=\"SELECT id,username,age FROM user\";<br><strong>$mysqli_result=$mysqli-&gt;query($sql);</strong><br>//var_dump($mysqli_result);<br>if($mysqli_result &amp;&amp; $mysqli_result-&gt;num_rows&gt;0){<br>	//echo $mysqli_result-&gt;num_rows;<br><strong>//$rows=$mysqli_result-&gt;fetch_all();//获取结果集中所有记录，默认返回的是二维的</strong><br>	//索引+索引的形式<br>	//$rows=$mysqli_result-&gt;fetch_all(MYSQLI_NUM);<br>	//$rows=$mysqli_result-&gt;fetch_all(MYSQLI_ASSOC);<br>	//$rows=$mysqli_result-&gt;fetch_all(MYSQLI_BOTH);<br><strong>// 	$row=$mysqli_result-&gt;fetch_row();//取得结果集中一条记录作为索引数组返回</strong><br>// 	print_r($row);<br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_assoc();//取得结果集中的一条记录作为关联数组返回</strong><br>// 	print_r($row);<br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_array();//二者都有的</strong><br>// 	print_r($row);<br><br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_array(MYSQLI_ASSOC);</strong><br>// 	print_r($row);<br><br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_object();</strong><br>// 	print_r($row);<br>// 	echo \'&lt;hr/&gt;\';<br>// 	//移动结果集内部指针<br>// 	$mysqli_result-&gt;data_seek(0);<br>// 	$row=$mysqli_result-&gt;fetch_assoc();<br>// 	print_r($row);<br><br>// 	print_r($rows);</p>\r\n<p>	while($row=$mysqli_result-&gt;fetch_assoc()){<br>		//print_r($row);<br>		//echo \'&lt;hr/&gt;\';<br>		$rows[]=$row;<br>	}<br>	print_r($rows);<br><br><strong>//释放结果集</strong><br><strong>	$mysqli_result-&gt;free();</strong><br><br><br>}else{<br>	echo \'查询错误或者结果集中没有记录\';<br>}<br>$mysqli-&gt;close();</p>\r\n<p> </p>\n ', '2016-04-28 20:05:09', '2016-04-28 20:05:09', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3085', '感觉没睡好就..-shenmedoumeixie.... ', '网络', '\n<p>　　hi</p>\r\n<p>昨晚没睡好，虽然梦很香，但睡不好没精神做科研啊。。。</p>\r\n<p><strong>1、jQuery</strong></p>\r\n<p><strong>十二、实现聊天室创建</strong></p>\r\n<p><strong>12.1 基本功能</strong></p>\r\n<p>登陆；</p>\r\n<p><strong>无刷新实时交流；</strong></p>\r\n<p>支持表情。</p>\r\n<p>12.2 大致效果</p>\r\n<p>登陆——》验证，打算用AJAX来做；</p>\r\n<p>聊天——》php实现具体功能就行。</p>\r\n<p>12.3 数据流分析</p>\r\n<p>登陆页面：获取用户名和密码请求登陆-返回聊天页面或失败信息以及登陆页面；</p>\r\n<p>聊天页面：聊天内容的请求和返回（实现无刷新的更新数据）；在线人员信息的请求和返回；处理发送内容的请求，写入聊天内容。</p>\r\n<p><strong>12.4 登陆页面开发</strong></p>\r\n<p> --------突然间发现需要AJAX的知识储备，但我今天不想看ajax，周末再来吧。。。-----------</p>\r\n<p><strong>2、PHP实现页面静态化（一）</strong></p>\r\n<p><strong>一、静态化简介</strong></p>\r\n<p><strong>1.1、动态页面和静态页面</strong></p>\r\n<p>动态：执行动态程序，php，jsp等；比如php，语法分析，编译再运行。</p>\r\n<p>静态：html等文件。</p>\r\n<p><strong>1.2、关于优化页面响应时间</strong></p>\r\n<p><span style=\"line-height: 1.5;\">--主要手段</span></p>\r\n<p><span style=\"line-height: 1.5;\">动态页面静态化——本节重点；</span></p>\r\n<p>优化数据库；</p>\r\n<p>使用负载均衡；</p>\r\n<p>使用缓存；</p>\r\n<p><strong>--动态页面静态化</strong></p>\r\n<p><strong>场景</strong>：页面中的一些内容不经常改动；</p>\r\n<p><strong>实质：生成静态的HTML文件</strong>；（减少了执行步骤，也就节省了时间）</p>\r\n<p>减少响应时间，<strong>重要的是减少服务器负担。</strong></p>\r\n<p>不适合微博等更新较快的。</p>\r\n<p><strong>1.3 关于动态URL地址设置静态形式</strong></p>\r\n<p>http://state.com/index.php?c=play&amp;a=index&amp;id=8123</p>\r\n<p>变为</p>\r\n<p>http://state.com/play/8123.shtml</p>\r\n<p>这个过程暂时还是伪静态（实际上还是动态文件，只是换了个马甲）。</p>\r\n<p><strong>1.4 PHP静态化</strong></p>\r\n<p><strong>--纯静态</strong></p>\r\n<p>通过php程序生成的真正的静态文件。</p>\r\n<p>又分为局部纯静态（/局部动态，实现方法可能是ajax的异步操作）和全局纯静态。</p>\r\n<p><strong>--伪静态</strong></p>\r\n<p>把URL地址转化为类似html的情况。</p>\r\n<p><strong>二、纯静态化案例实现</strong></p>\r\n<p><strong>2.1 buffer</strong></p>\r\n<p>--概述</p>\r\n<p><strong>其实就是缓冲区</strong>，一个内存地址空间，用于存储数据。</p>\r\n<p>实现静态化，要围绕buffer展开。</p>\r\n<p>比如说电脑系统中的buffer，就是当有数据要进行存储操作的时候，需要先把某个buffer存满，然后再写入磁盘。</p>\r\n<p><strong>--流程</strong></p>\r\n<p>内容——php buffer——tcp——终端</p>\r\n<p><strong>--使用</strong></p>\r\n<p>&lt;?php<br>echo 1;echo \"&lt;br/&gt;\";<br>echo ob_get_contents();</p>\r\n<p>如果没开启，要么改php.ini，要么加头文件</p>\r\n<p>ob_start();</p>\r\n<p>2.2 实现纯静态化</p>\r\n<p>--基本方式</p>\r\n<p>file_put_contents()</p>\r\n<p>output_buffering()</p>\r\n<p> </p>\n ', '2016-04-28 20:05:09', '2016-04-28 20:05:09', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3086', '周一干不干活-PHP+MySQLi ', '网络', '\n<p>hi</p>\r\n<p>本来是雄心壮志的要干活的，哪知天有不测，早上大阴天起不来，中午又回寝室折腾衣服（做女工啊，牛不牛）没睡午觉，这样的迷糊状态，怎么科研，写这个好了。</p>\r\n<p><strong>1、PHP的OOP编程</strong></p>\r\n<p><strong>4.7 多态</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>由于接口的方法实现有多种多样，这种特性称之为多态</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>function eat($obj){<br>  if($obj instanceof ICanEat){ <br>    $obj-&gt;eat(\"FOOD\"); // 不需要知道到底是Human还是Animal，直接吃就行了<br>  }else{<br>    echo \"Can\'t eat!\\n\";<br>  }<br>}</p>\r\n<p>$man = new Human();<br>$monkey = new Animal();</p>\r\n<p><strong>// 同样的代码，传入接口的不同实现类的时候，表现不同。这就是为什么成为多态的原因。</strong><br>eat($man);<br>eat($monkey);</p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 多态<br> * 1. 只要某个对象实现了接口（instanceof），就可以直接在对象上调用接口的方法<br> */</p>\r\n<p><strong>4.8 抽象类</strong></p>\r\n<p><strong>--问题</strong></p>\r\n<p>连接接口的类，某些方法都是相同的，那么是否能够允许类中不实现，而是在接口中实现。</p>\r\n<p>比如，人和动物吃东西不同，但呼吸相同。</p>\r\n<p><strong>--栗子</strong></p>\r\n<p><strong>abstract class ACanEat{ //关键字改变</strong><br><strong>abstract public function eat($food);//需要类自行实现的，前面加上abstract关键字</strong><br><br>	public function breath(){<br>		echo \"Breath use the air.&lt;br/&gt;\";<br>	}<br><br>}</p>\r\n<p>class Human extends ACanEat{       //实现接口用implenments，这里用extends<br>	public function eat($food){<br>		echo \"Human eating \".$food.\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class Animal <strong>extends</strong> ACanEat{       <strong>//实现接口用implenments，这里用extends</strong><br>	public function eat($food){<br>		echo \"Animal eating \".$food.\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>$xiaoming=new Human();<br>$xiaohei=new Animal();</p>\r\n<p>$xiaoming-&gt;breath();$xiaoming-&gt;eat(\"food\");<br>$xiaohei-&gt;breath();$xiaohei-&gt;eat(\"shit\");</p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 抽象类<br> * 1. 抽象类允许类里面的部分方法暂时没有具体实现，这些方法我们成为抽象方法<br> * 2. 一旦类里面有抽象方法，这个类就必须是抽象类<br> * 3. 抽象类跟接口一样，不能直接实例化为对象<br> */</p>\r\n<p><strong>五、魔术方法</strong></p>\r\n<p><strong>5.1 简介</strong></p>\r\n<p><strong>注意所有的魔术方法前面都是两个下划线__</strong></p>\r\n<p>PHP中的OOP特有的。</p>\r\n<p>比如构造函数和析构函数。</p>\r\n<p><strong>5.2 __tostring()和__invoke()</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>__tostring()，当对象被当作String使用时，这个方法会被自动调用；echo $obj;</p>\r\n<p>__invoke()，当对象被当作方法（函数）调用时，这个方法被自动调用；$obj(4);</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>&lt;?php<br>/*<br> * tostring()魔术方法<br> * invoke()魔术方法<br> */</p>\r\n<p>class MagicTest{<br>	public function __toString(){<br>	return \"This is the class magictest.\";<br>}<br>   public function __invoke($x){<br>   	echo \"&lt;br/&gt;\".$x;<br>   }<br>}<br>$obj=new MagicTest();<br>echo $obj;</p>\r\n<p>$obj(5);</p>\r\n<p>用法和构造函数析构函数类似。比较自动化（自动调用，即使没有声明也会调用），但同时<strong>比较容易出错，小心。</strong></p>\r\n<p><strong>5.3 __call()和__callStatic()或重载（overloading）</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>当对象访问不存在的方法名称时，__call()会被自动调用；</p>\r\n<p>当对象访问不存在的静态方法名称时，__callStatic()会被自动调用；</p>\r\n<p>这两个方法，又称为重载（不同于重写）；通过这两个方法，同一个方法的名称的调用可以对应不同的方法实现</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>&lt;?php<br>/*<br> * tostring()魔术方法<br> * invoke()魔术方法<br> */</p>\r\n<p>class MagicTest{<br>	public function __toString(){<br>	return \"This is the class magictest.\";<br>}<br>   public function __invoke($x){<br>   	echo \"&lt;br/&gt;\".$x.\"&lt;br/&gt;\";<br>   }<br><strong>public function __call($name,$arguments){    //__call的格式是固定的，第一个是方法名，第二个是方法内的参数</strong><br>   	  echo \"Calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br>   public <strong>static</strong> function __callstatic($name,$arguments){ <br>   	echo \"Static calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br>}<br>$obj=new MagicTest();<br>echo $obj;</p>\r\n<p>$obj(5);</p>\r\n<p>$obj-&gt;runTest(\"para1\",\"para2\");<br>$obj::runTest(\"para3\",\"para4\");</p>\r\n<p>注意这里要求定义方法的时候格式是固定的。</p>\r\n<p><strong>5.4 __get()__set()__isset()__unset</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>这几个方法也被称为<strong>属性重载</strong>的魔术方法。</p>\r\n<p>__set()，在给<strong>不可访问属性（一种是属性未定义，另一种是没有访问权限，如private）</strong>赋值时调用；</p>\r\n<p>__get()，读取不可访问属性的值时调用；</p>\r\n<p>__isset()，当对不可访问属性调用isset（）或empty（）时调用；</p>\r\n<p>__unset()，。。。。。。。。。unset（）。。。。。。。。。。</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>&lt;?php<br>/*<br> * tostring()魔术方法<br> * invoke()魔术方法<br> */</p>\r\n<p>class MagicTest{<br>	public function __toString(){<br>	return \"This is the class magictest.\";<br>}<br>   public function __invoke($x){<br>   	echo \"&lt;br/&gt;\".$x.\"&lt;br/&gt;\";<br>   }<br>   public function __call($name,$arguments){    //__call的格式是固定的，第一个是方法名，第二个是方法内的参数<br>   	  echo \"Calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br>   public static function __callstatic($name,$arguments){    <br>   	echo \"Static calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br><strong>public function __get($name){  //get要有name</strong><br>   	return \"Getting the property \".$name.\"&lt;br/&gt;\"; 	  	<br>   } <br><strong>public function __set($name,$value){   //set要有名有值</strong><br>   	echo \"Setting the property \".$name.\" to value \".$value.\".&lt;br/&gt;\";<br>   }<br><strong>public function __isset($name){    //判断是否定义了属性</strong><br>   	echo \"__isset invoked&lt;br/&gt;\";<br>   	return true;<br>   }<br><strong>public function __unset($name){   //撤销</strong><br>   	echo \"unsetting protery \".$name.\"&lt;br/&gt;\";<br>   	return true;<br>   }<br>}<br>$obj=new MagicTest();<br>echo $obj;</p>\r\n<p>$obj(5);</p>\r\n<p>$obj-&gt;runTest(\"para1\",\"para2\");<br>$obj::runTest(\"para3\",\"para4\");</p>\r\n<p>echo $obj-&gt;classname;<br>$obj-&gt;classname=\"shit\";</p>\r\n<p>echo isset($obj-&gt;classname).\"&lt;br/&gt;\";<br>unset($obj-&gt;classname);echo \"&lt;br/&gt;\";<br>echo empty($obj-&gt;classname).\"&lt;br/&gt;\";</p>\r\n<p>结果是</p>\r\n<p>This is the class magictest.<br>5<br>Calling runTest with parameters: para1,para2<br>Static calling runTest with parameters: para3,para4<br>Getting the property classname<br>Setting the property classname to value shit.<br>__isset invoked<br>1<br>unsetting protery classname<br><br>__isset invoked</p>\r\n<p>可以看到，<strong>其实isset和empty调用__isset时一对相反的操作。</strong></p>\r\n<p>然后，<strong>__set($name，$value)和__unset($name)</strong>是一对相反的操作，但所要元素不一样；</p>\r\n<p><strong>__isset($name),__get($name)</strong>都只需要名字（记住每个魔术方法的作用，理解了，就好记了）。</p>\r\n<p><strong>5.5 __clone()</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>就是克隆，或克隆</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>先给出<strong>clone关键字</strong>的用法。</p>\r\n<p>&lt;?php<br>/*<br> * 克隆魔术方法<br> */</p>\r\n<p>class  nbaPlayer{<br>	public $name;<br>}</p>\r\n<p>$james=new nbaPlayer();<br>$james-&gt;name=\'James\';<br>echo $james-&gt;name.\"&lt;br/&gt;\";</p>\r\n<p><strong>$kobe=clone $james;</strong><br>$kobe-&gt;name=\'Kobe\';<br>echo $kobe-&gt;name;</p>\r\n<p>clone后的，就是个单独的对象，对其操作不影响原对象。</p>\r\n<p><strong>加上__clone()</strong></p>\r\n<p>&lt;?php<br>/*<br> * 克隆魔术方法<br> */</p>\r\n<p>class  nbaPlayer{<br>	public $name;<br><br><strong>public function __clone(){</strong><br>		$this-&gt;name=\"shit\";<br>	}<br><br>}</p>\r\n<p>$james=new nbaPlayer();<br>$james-&gt;name=\'James\';<br>echo $james-&gt;name.\"&lt;br/&gt;\";</p>\r\n<p>$kobe=clone $james;<br><strong>echo $kobe-&gt;name.\"&lt;br/&gt;\";</strong><br>$kobe-&gt;name=\'Kobe\';<br>echo $kobe-&gt;name.\"&lt;br/&gt;\";</p>\r\n<p>一般来说，用处在于<strong>clone后的初始化</strong>；或者说，<strong>当复制后，不想透露的某些信息的掩盖。</strong></p>\r\n<p>在工作中常用到这一个，因为常有<strong>对某个对象的操作，又不想影响原有数据</strong>，就克隆/复制一个出来。</p>\r\n<p>----------------------------------------</p>\r\n<p><strong>2、MySQLi扩展</strong></p>\r\n<p><strong>一、安装及下载</strong></p>\r\n<p>1.1 优势及简介</p>\r\n<p>更新更好，PHP5及以后推荐使用（或者PDO）。</p>\r\n<p><strong>--优点</strong></p>\r\n<p>基于OOP和面向过程的使用；</p>\r\n<p>支持预处理语句；</p>\r\n<p>支持事务。</p>\r\n<p>--其他</p>\r\n<p>速度更快。安全性更好</p>\r\n<p><strong>1.2 安装及配置</strong></p>\r\n<p>--安装</p>\r\n<p>配置php，开启php_mysqli.dll；</p>\r\n<p>配置extension_dir=\'ext目录位置\';</p>\r\n<p>重启服务器。</p>\r\n<p>（我用的是WAMP，直接打对勾就行）</p>\r\n<p><strong>--验证</strong></p>\r\n<p>&lt;?php<br>/*<br> * 验证mysqli是否开启<br> */</p>\r\n<p>//phpinfo();<br>//2.检测扩展是否已经加载<br>var_dump(extension_loaded(\'mysqli\'));<br>var_dump(extension_loaded(\'curl\'));<br>echo \'&lt;hr/&gt;\';<br>//3.检测函数是否存在<br>var_dump(function_exists(\'mysqli_connect\'));<br>echo \'&lt;hr/&gt;\';<br>//4.得到当前已经开启的扩展<br>print_r(get_loaded_extensions());<br>echo \'&lt;hr/&gt;\';</p>\r\n<p> </p>\r\n<p>---</p>\r\n<p>困了，回去洗洗睡觉。。。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:09', '2016-04-28 20:05:09', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3087', '荒芜的周六-PHP之面向对象（三） ', '网络', '\n<p>　　hi　　</p>\r\n<p>又是开森的周六了。积攒的两周的衣服，终于是差不多洗完了。大下午的才来学点东西~~</p>\r\n<p><strong>1、PHP面向对象（三）</strong></p>\r\n<p><strong>四、OOP的高级实践</strong></p>\r\n<p><strong>4.3 Static-静态成员</strong></p>\r\n<p>&lt;?php<br>date_default_timezone_set(\"PRC\");<br>/**<br> * 1. 类的定义以class关键字开始，后面跟着这个类的名称。类的名称命名通常每个单词的第一个字母大写。<br> * 2. 定义类的属性<br> * 3. 定义类的方法<br> * 4. 实例化类的对象<br> * 5. 使用对象的属性和方法<br> */</p>\r\n<p>class Human{<br>	public $name;<br>	public $height;<br>	public $weight;<br><br>	public function eat($food){<br>		echo $this-&gt;name.\"\'s eating \".$food.\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class Animal{<br>	public $kind;<br>	public $gender;<br>}</p>\r\n<p><br>class NbaPlayer extends Human{<br>    // 类的属性的定义<br>    public $name=\"Jordan\";// 定义属性<br>    public $height=\"198cm\";<br>    public $weight=\"98kg\";<br>    public $team=\"Bull\";<br>    public $playerNumber=\"23\";<br>    private $age=\"44\";<br>    public $president=\"David Stern\";<br><br><br><br>    // 类的方法的定义<br>    public function changePresident($newP){<br>    	$this-&gt;president=$newP;<br>    }<br><br>    public function run() {<br>        echo \"Running&lt;br/&gt;\";<br>    }</p>\r\n<p>    public function jump(){<br>        echo \"Jumping&lt;br/&gt;\";<br>    }<br><br>    public function dribble(){<br>        echo \"Dribbling&lt;br/&gt;\";<br>    }<br><br>    public function shoot(){<br>        echo \"Shooting&lt;br/&gt;\";<br>    }<br><br>    public function dunk(){<br>        echo \"Dunking&lt;br/&gt;\";<br>    }<br><br>    public function pass(){<br>        echo \"Passing&lt;br/&gt;\";<br>    }<br><br>    public function getAge(){<br>    	echo $this-&gt;name.\"\'s age is \".$this-&gt;age;<br>    }<br><br>    function __construct($name, $height, $weight, $team, $playerNumber){<br>    	print $name . \";\" . $height . \";\" . $weight . \";\" . $team . \";\" . $playerNumber.\"\\n\";<br>    	$this-&gt;name = $name; // $this是php里面的伪变量，表示对象自身<br>    	$this-&gt;height = $height; // 通过$this可以设置对象的属性值<br>    	$this-&gt;weight = $weight;<br>    	$this-&gt;team = $team;<br>    	$this-&gt;playerNumber = $playerNumber;<br>    }<br><br>}</p>\r\n<p><br>/**<br> * 1. 类实例化为对象时使用new关键字，new之后紧跟类的名称和一对括号。<br> * 2. 使用对象可以像使用其他值一样进行赋值操作<br> */<br>$jordan = new NbaPlayer(\"Jordan\", \"198cm\",\"98kg\",\"Bull\",\"23\");echo \"&lt;br/&gt;\";<br>$james=new NbaPlayer(\"James\", \"203cm\", \"120kg\", \"Heat\", \"6\");echo \"&lt;br/&gt;\";<br>// 访问对象的属性使用的语法是-&gt;符号，后面跟着属性的名称<br>echo $jordan-&gt;name.\"&lt;br/&gt;\";<br>// 调用对象的某个方法使用的语法是-&gt;符号，后面跟着方法的名称和一对括号<br>$jordan-&gt;run();<br>$jordan-&gt;pass();<br>//子类调用父类的方法<br>$jordan-&gt;eat(\"apple\");<br>//试着调用private,直接以及通过内部的public函数<br>//$jordan-&gt;age;<br>$jordan-&gt;getAge();echo \"&lt;br/&gt;\";</p>\r\n<p>$jordan-&gt;changePresident(\"Adam Silver\");<br>echo $jordan-&gt;president.\"&lt;br/&gt;\";<br>echo $james-&gt;president.\"&lt;br/&gt;\";</p>\r\n<p> 直接从上述例子开始吧。</p>\r\n<p>这里想得到的是，<strong>把两位对象的某一个变量同时变掉。——用static</strong></p>\r\n<p><strong> public static $president=\"David Stern\";</strong><br><br>    // 类的方法的定义<br>    public <strong>static</strong> function changePresident($newP){<br><strong>static::$president=$newP;//这里static换成self更符合规范</strong><br>    }</p>\r\n<p>注意这里static的位置，以及，方法内的::</p>\r\n<p>调用的方法也有所变动。</p>\r\n<p>echo <strong>NbaPlayer::$president;</strong>echo \"&lt;br/&gt;\";<br><strong>NbaPlayer::changePresident(\"Adam Silver\");</strong><br>echo NbaPlayer::$president;echo \"&lt;br/&gt;\";</p>\r\n<p>也就是像之前说的，<strong>静态成员就是个常量，所以不针对某个具体的对象（不受具体对象的约束）</strong>——基于此，定义&amp;赋值&amp;调用都不需要具体的对象参与。</p>\r\n<p><strong>内部调用要用self/static::$...</strong></p>\r\n<p><strong>外部调用，类名::</strong></p>\r\n<p>用处就是所有的对象共用的数据。</p>\r\n<p><strong>--如果内部调用时，变量在父类中</strong></p>\r\n<p>比如说，在上述例子中，父类human中写这么一句话</p>\r\n<p>public static $aaa=\"dafdfa\";</p>\r\n<p>然后在子类nbaplayer中，调用父类的静态成员时，要</p>\r\n<p>echo <strong>parent::$aaa;</strong></p>\r\n<p>而外部调用，按照上面说的，类名::，所以，直接父类类名即可</p>\r\n<p>echo Human::$aaa;</p>\r\n<p>--其他</p>\r\n<p><strong>在静态方法中，是无法访问其他变量的，也就是说，不能用$this-&gt;</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 静态成员<br> * 1. 静态属性用于保存类的公有数据<br> * 2. 静态方法里面只能访问静态属性<br> * 3. 静态成员不需要实例化对象就可以访问<br> * 4. 类内部，可以通过self或者static关键字访问自身的静态成员<br> * 5. 可以通过parent关键字访问父类的静态成员<br> * 6. 可以通过类名称在外部访问类的静态成员<br> */</p>\r\n<p><strong>4.4 Final成员</strong></p>\r\n<p><strong>--问题</strong></p>\r\n<p>不希望某个类拥有子类；</p>\r\n<p>不希望子类修改父类中的某个变量（避免重写？）</p>\r\n<p><strong>--final</strong></p>\r\n<p>》=php5版本</p>\r\n<p>举个例子</p>\r\n<p>class BaseClass{<br>	public  function test(){<br>		echo \"BaseClass::test called&lt;br/&gt;\";<br>	}<br><br>	public function test1(){<br>		echo \"BaseClass::test1 called&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class  ChildClass extends BaseClass{<br>	public function test(){<br>		echo \"ChildClass::test called&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>$obj=new ChildClass();<br>$obj-&gt;test();</p>\r\n<p>子类中编写跟父类中完全一致的方法名（内容可以不同），会完成对父类方法的<strong>重写</strong>！</p>\r\n<p><strong> 所以，不希望被重写的父类中的方法，写上final</strong></p>\r\n<p><strong><strong>final </strong>public function test(){</strong></p>\r\n<p>依此类推，对于不想有子类的父类，在类名那里写上final</p>\r\n<p><strong>final class BaseClass{</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 重写和Final<br> * 1. 子类中编写跟父类完全一致的方法可以完成对父类方法的重写<br> * 2. 对于不想被任何类继承的类可以在class之前添加final关键字<br> * 3. 对于不想被子类重写（overwrite, 修改）的方法，可以在方法定义前面添加final关键字<br> */</p>\r\n<p><strong>4.5 数据访问</strong></p>\r\n<p>先把final都去掉</p>\r\n<p>--parent</p>\r\n<p>然后再子类中的方法中写</p>\r\n<p>parent::test();</p>\r\n<p>运行后会发现，依然可以<strong>通过parent的关键字调用父类中，即使是被重写的数据</strong></p>\r\n<p>--self</p>\r\n<p>然后在父类中的方法test中写</p>\r\n<p><span class=\"Apple-tab-span\"> self::test1();</span></p>\r\n<p>运行后，发现<strong>self可以调用同一个类中的数据（其他方法/静态变量/常量const）</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 数据访问补充<br> * 1. parent关键字可以用于调用父类被重写的类成员<br> * 2. self关键字可以用于访问类自身的成员方法，也可以用于访问自身的静态成员和类常量；不能用于访问类自身的属性；访问类常量时不用在常量名称前面加$符号<br> * 3. static关键字用于访问类自身定义的静态成员，访问静态属性时需要在属性名前面添加$符号<br> */</p>\r\n<p><strong>4.6 对象接口</strong></p>\r\n<p>非常重要！！！</p>\r\n<p><strong>--问题</strong></p>\r\n<p>不同的类，有着相同的行为，但相同的行为又有着不同的实现方法。</p>\r\n<p>比如人和动物都会吃东西，但吃的方式方法又不太一样。</p>\r\n<p>--定义</p>\r\n<p><strong>接口就是把不同类的共同行为进行了定义，然后在不同的类里面实现不同的功能。</strong></p>\r\n<p><strong>--栗子 </strong></p>\r\n<p>//定义一个接口<br><strong>interface ICanEat{</strong><br>	public function eat($food);<br>}</p>\r\n<p>可以看到，接口中并没有方法的具体实现，但必须有方法！</p>\r\n<p>那么，下面是，“人类会吃”</p>\r\n<p>//具体对象，连接到接口<br><strong>class Human implements ICanEat{</strong><br><br>	public function eat($food){<br>		echo \"Human eating \".$food.\".&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>$obj=new Human();<br>$obj-&gt;eat(\"shit\");</p>\r\n<p>请忽略我给出的“食物”。</p>\r\n<p>注意，<strong>不再用extends，而是implements。然后，同样是方法名的完全相同。然后，对象必须/最好实现方法。</strong></p>\r\n<p>继续</p>\r\n<p>interface ICanEat{<br>	public function eat($food);<br>}</p>\r\n<p>//具体对象，连接到接口<br>class Human implements ICanEat{<br>public function eat($food){<br>		echo \"Human eating \".$food.\".&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class Animal implements ICanEat{<br>    public function eat($food){<br>		echo \"Animal eating \".$food.\".&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p><br>$obj=new Human();<br>$obj-&gt;eat(\"shit\");</p>\r\n<p>$monkey=new Animal();<br>$monkey-&gt;eat(\"banana\");</p>\r\n<p>让动物也吃起来！</p>\r\n<p><strong>--逆向操作</strong></p>\r\n<p>判断某个对象是否连接了某个接口。</p>\r\n<p>var_dump($obj<strong> instanceof</strong> ICanEat);</p>\r\n<p>会返回boolean值。</p>\r\n<p><strong>--更多的栗子</strong></p>\r\n<p><strong>interface ICanPee extends ICanEat{</strong><br>	public function pee();<br>}</p>\r\n<p>class Demon implements ICanPee{<br>	public function pee(){<br>		echo \"Can demon pee?\";<br>	}<br>	public function eat($food){<br>		echo \"Can demon eat \".$food;<br>	}<br>}</p>\r\n<p>$ghost=new Demon();<br>$ghost-&gt;pee();<br>$ghost-&gt;eat(\"shit\");</p>\r\n<p><strong>接口本质上也是类，可以被继承/继承，但是使用继承接口的接口，所有父类、“爷类”的方法都要有具体实现。</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 接口<br> * 1. 接口的基本概念和基本使用方法<br> * 2. 接口里面的方法没有具体的实现<br> * 3. 实现了某个接口的类必须提供接口中定义的方法<br> * 4. 不能用接口创建对象，但是能够判断某个对象是否实现了某个接口<br> * 5. 接口可以继承接口（interface extends interface）<br> * 6. 接口中定义的所有方法都必须是公有，这是接口的特性。<br> */</p>\r\n<p> </p>\r\n<p>aaaaaaaaaaaaaa</p>\r\n<p>bu xiang xie le....................</p>\r\n<p>ming tian yao ge ..............</p>\r\n<p> </p>\n ', '2016-04-28 20:05:09', '2016-04-28 20:05:09', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3088', '周五了啦啦啦啦-LAMP+PHP‘s OOP ', '网络', '\n<p>　　hi</p>\r\n<p>周五咯~~</p>\r\n<p><strong>1、LAMP配置完结篇</strong></p>\r\n<p><strong>五、LAMP配置环境优化</strong></p>\r\n<p><strong>5.4 虚拟主机工作原理</strong></p>\r\n<p>apache的虚拟主机。virtual-host</p>\r\n<p>用不同的域名访问不同的目录——手动模拟dns</p>\r\n<p>修改host文件即可实现。具体就是主机地址 域名</p>\r\n<p><strong>复习</strong></p>\r\n<p>liang@liang-andy:~$ sudo apt-get install apache2</p>\r\n<p>liang@liang-andy:~$ sudo apt-get install php5<br>然后加载/检查php5.load这个php实现对apache2操作的模块<strong>（LAMP的互相，就是模块的启动/连接）</strong><br>liang@liang-andy:~$ cat /etc/apache2/mods-enabled/php5.load<br>liang@liang-andy:~$ sudo apt-get install mysql-server</p>\r\n<p>sudo apt-get install apache2 php5 mysql-server php5-mysql</p>\r\n<p>liang@liang-andy:~$ sudo service mysql restart<br>liang@liang-andy:~$ sudo service apache2 restart</p>\r\n<p>----创建phpinfo探针</p>\r\n<p>先装vim</p>\r\n<p>sudo apt-get install vim</p>\r\n<p>再切换到php的www文件夹，用cd命令</p>\r\n<p>cd /var/www/html（14.4版本）</p>\r\n<p>然后在这里创建一个php文件</p>\r\n<p>sudo vim info.php</p>\r\n<p>写php代码</p>\r\n<p>&lt;?php<br>echo mysql_connect(\'localhost\',\'root\',\'hanhan123\') ? \'Hoho\' : \'WTF\';<br><br>phpinfo();<br>然后esc键，输入:wq保存退出</p>\r\n<p>http://192.168.1.100/info.php 浏览器输入验证结果</p>\r\n<p><strong>复习结束</strong></p>\r\n<p><strong>5.5 安装phpmyadmin</strong></p>\r\n<p>--</p>\r\n<p><strong>apt-get命令</strong></p>\r\n<p>sudo apt-get install phpmyadmin</p>\r\n<p>sudo ln -s /usr/share/phpmyadmin/ /var/www/pma</p>\r\n<p><strong> 六、服务器集群了解</strong></p>\r\n<p>国内外有很多著名的巨型服务器集群。</p>\r\n<p>用于同时处理大批量的请求</p>\r\n<p>-----------------------------------</p>\r\n<p><strong>2、PHP的OOP编程</strong></p>\r\n<p><strong>四、OOP的高级实践</strong></p>\r\n<p><strong>程序准备</strong></p>\r\n<p>&lt;?php<br>date_default_timezone_set(\"PRC\");<br>/**<br> * 1. 类的定义以class关键字开始，后面跟着这个类的名称。类的名称命名通常每个单词的第一个字母大写。<br> * 2. 定义类的属性<br> * 3. 定义类的方法<br> * 4. 实例化类的对象<br> * 5. 使用对象的属性和方法<br> */<br>class NbaPlayer<br>{<br>    // 类的属性的定义<br>    public $name=\"Jordan\";// 定义属性<br>    public $height=\"198cm\";<br>    public $weight=\"98kg\";<br>    public $team=\"Bull\";<br>    public $playerNumber=\"23\";</p>\r\n<p>    // 类的方法的定义<br>    public function run() {<br>        echo \"Running\\n\";<br>    }</p>\r\n<p>    public function jump(){<br>        echo \"Jumping\\n\";<br>    }<br>    public function dribble(){<br>        echo \"Dribbling\\n\";<br>    }<br>    public function shoot(){<br>        echo \"Shooting\\n\";<br>    }<br>    public function dunk(){<br>        echo \"Dunking\\n\";<br>    }<br>    public function pass(){<br>        echo \"Passing\\n\";<br>    }<br>}</p>\r\n<p>/**<br> * 1. 类实例化为对象时使用new关键字，new之后紧跟类的名称和一对括号。<br> * 2. 使用对象可以像使用其他值一样进行赋值操作<br> */<br>$jordan = new NbaPlayer();<br>// 访问对象的属性使用的语法是-&gt;符号，后面跟着属性的名称<br>echo $jordan-&gt;name.\"\\n\";<br>// 调用对象的某个方法使用的语法是-&gt;符号，后面跟着方法的名称和一对括号<br>$jordan-&gt;run();<br>$jordan-&gt;pass();</p>\r\n<p>?&gt;</p>\r\n<p><strong> 4.1 继承</strong></p>\r\n<p>也就是对象相似的部分，可以多处使用——避免代码冗余，开发效率提高。</p>\r\n<p>优点：父类中定义的了，子类中无需再次定义——效率高；对于外部，表现一致（父类是一样的）；重写，来修改子类。</p>\r\n<p>举个栗子</p>\r\n<p>class Human{<br>	public $name;<br>	public $height;<br>	public $weight;<br><br>	public function eat($food){<br>		echo $this-&gt;name.\"\'s eating\".$food.\"\\n\";<br>	}<br>}</p>\r\n<p>人类作为父类，然后nba球员作为子类</p>\r\n<p><strong>class NbaPlayer extends Human{</strong></p>\r\n<p>试着直接通过子类调用父类中的function</p>\r\n<p>$jordan-&gt;eat(\"apple\");</p>\r\n<p>输出</p>\r\n<p>Jordan\'s eating apple</p>\r\n<p>没有问题！<strong>子类是可以直接调用父类的属性和方法的！！（在子类的对象上可以直接访问父类中定义的方法和属性）</strong></p>\r\n<p>毕竟从它的意思来看，子类就是父类的延伸。</p>\r\n<p>另外，<strong>父类中的属性可以在子类中进行访问（实际上，简单的理解就是，所有的子类都是大于等于父类的对象，想象一下文氏图）</strong></p>\r\n<p>类的继承，用extends，<strong>只能跟一个“爸爸”——php的单继承原则</strong></p>\r\n<p><strong>4.2 访问控制</strong></p>\r\n<p>所有的属性和方法都有访问权限的选择——选择可以被谁访问</p>\r\n<p><strong>public：公有，任何地方</strong></p>\r\n<p><strong>protected：受保护的，被自身以及其子类</strong></p>\r\n<p><strong>private：私有，只能被自身访问</strong></p>\r\n<p>举个private的栗子</p>\r\n<p>在Nbaplayer这个子类中，新增加定义</p>\r\n<p>    private $age=\"44\";</p>\r\n<p> public function getAge(){<br>    	echo $this-&gt;name.\"\'s age is \".$this-&gt;age;<br>    }</p>\r\n<p>//试着调用private,直接以及通过内部的public函数<br>//$jordan-&gt;age;<br>$jordan-&gt;getAge();</p>\r\n<p>然后，<strong>关于protected，范围紧紧的限制在了父类中和子类中，也就是说，出了子类的定义那个大括号就失效了！</strong></p>\r\n<p><strong>4.3 静态成员</strong></p>\r\n<p>可以简单的理解为常量（？）</p>\r\n<p>static</p>\r\n<p> </p>\r\n<p> </p>\r\n<p>bu xiang xie le </p>\r\n<p> </p>\n ', '2016-04-28 20:05:09', '2016-04-28 20:05:09', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3089', '敲-PHP与MySQL，JSON ', '网络', '\n<p>hi</p>\r\n<p>敲代码~</p>\r\n<p><strong>1、php与mysql</strong></p>\r\n<p><strong>5.4 修改界面</strong></p>\r\n<p>同样是界面和程序。</p>\r\n<p><strong>界面article.modify.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	//读取旧信息<br>	$id = $_GET[\'id\'];<br>	$query = mysqli_query($con,\"select * from article where id=$id\");<br>	$data = mysqli_fetch_assoc($query);<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"213\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;      &lt;a href=\"article.add.php\"&gt;&lt;/a&gt;&lt;/td&gt;<br>    &lt;td width=\"854\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;&lt;form id=\"form1\" name=\"form1\" method=\"post\" action=\"article.modify.handle.php\"&gt;<br>    	&lt;input type=\"hidden\" name=\"id\" value=\"&lt;?php echo $data[\'id\']?&gt;\" /&gt;<br>      &lt;table width=\"590\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\"&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"center\"&gt;修改文章&lt;/td&gt;<br>          &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td width=\"119\"&gt;标题&lt;/td&gt;<br>          &lt;td width=\"437\"&gt;&lt;label for=\"title\"&gt;&lt;/label&gt;<br>            &lt;input type=\"text\" name=\"title\" id=\"title\" value=\"&lt;?php echo $data[\'title\']?&gt;\"/&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;作者&lt;/td&gt;<br>          &lt;td&gt;&lt;input type=\"text\" name=\"author\" id=\"author\"  value=\"&lt;?php echo $data[\'author\']?&gt;\"/&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;简介&lt;/td&gt;<br>          &lt;td&gt;&lt;label for=\"description\"&gt;&lt;/label&gt;<br>            &lt;textarea name=\"description\" id=\"description\" cols=\"60\" rows=\"5\"&gt;&lt;?php echo $data[\'description\']?&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;内容&lt;/td&gt;<br>          &lt;td&gt;&lt;textarea name=\"content\" cols=\"60\" rows=\"20\" id=\"content\"&gt;&lt;?php echo $data[\'content\']?&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"right\"&gt;&lt;input type=\"submit\" name=\"button\" id=\"button\" value=\"提交\" /&gt;&lt;/td&gt;<br>          &lt;/tr&gt;<br>      &lt;/table&gt;<br>    &lt;/form&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>关键点在于php的读取，以及在html中value的php调用。</p>\r\n<p><strong>修改程序article.modify.handle.php</strong></p>\r\n<p>&lt;?php <br>//和数据库有关的，无条件写上这么一句话<br>	require_once(\'../connect.php\');<br><br>	//接受修改后的数据（表单传递）<br>	$id = $_POST[\'id\'];<br>	$title = $_POST[\'title\'];<br>	$author = $_POST[\'author\'];<br>	$description = $_POST[\'description\'];<br>	$content = $_POST[\'content\'];<br>	$dateline =  time();<br><br>	//写sql修改语句，并做成功与否的判断，并跳回修改界面<br>	$updatesql = \"update article set title=\'$title\',author=\'$author\',description=\'$description\',content=\'$content\',dateline=$dateline where id=$id\";<br>	if(mysqli_query($con,$updatesql)){<br>		echo \"&lt;script&gt;alert(\'修改文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'修改文章失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p><strong>5.5 文章删除</strong></p>\r\n<p>先做需求的分析：同上面几个略有区别，<strong>删除文章不需要界面，只需要一个删除按钮来掉要就行了</strong>。所以只有一个文件。而关键的sql语句只有一句</p>\r\n<p><strong>$delsql=\"delete from article where id=$id\";</strong></p>\r\n<p><strong>aritcle.del.handle.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');</p>\r\n<p>//读取id号。不像其他的是有传递值的<br>	$id = $_GET[\'id\'];<br>	$deletesql = \"delete from article where id=$id\";<br>	if(mysql_query($deletesql)){<br>		echo \"&lt;script&gt;alert(\'删除文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'删除文章失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p><strong>5.6 文章管理列表</strong></p>\r\n<p>需求分析：列表显示出所有的文章，然后后面有两个按钮，删除（链接至上一节的删除模块）和修改（链接至之前的模块）</p>\r\n<p>所以，只需要一个文件，显示模块就好</p>\r\n<p><strong>article.manage.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	$sql = \"select * from article order by dateline desc\";<br>	$query  = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row =mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}else{<br>		$data = array();<br>	}</p>\r\n<p>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"156\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;<br>    &lt;td width=\"837\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;&lt;table width=\"743\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>      &lt;tr&gt;<br>        &lt;td colspan=\"3\" align=\"center\" bgcolor=\"#FFFFFF\"&gt;文章管理列表&lt;/td&gt;<br>        &lt;/tr&gt;<br>      &lt;tr&gt;<br>        &lt;td width=\"37\" bgcolor=\"#FFFFFF\"&gt;编号&lt;/td&gt;<br>        &lt;td width=\"572\" bgcolor=\"#FFFFFF\"&gt;标题&lt;/td&gt;<br>        &lt;td width=\"82\" bgcolor=\"#FFFFFF\"&gt;操作&lt;/td&gt;<br>      &lt;/tr&gt;<br>	&lt;?php <br>		if(!empty($data)){<br>			foreach($data as $value){<br>	?&gt;<br>      &lt;tr&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&amp;nbsp;&lt;?php echo $value[\'id\']?&gt;&lt;/td&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&amp;nbsp;&lt;?php echo $value[\'title\']?&gt;&lt;/td&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&lt;a href=\"article.del.handle.php?id=&lt;?php echo $value[\'id\']?&gt;\"&gt;删除&lt;/a&gt; &lt;a href=\"article.modify.php?id=&lt;?php echo $value[\'id\']?&gt;\"&gt;修改&lt;/a&gt;&lt;/td&gt;<br>      &lt;/tr&gt;<br>    &lt;/table&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>5.7 函数总结</strong></p>\r\n<p>mysqli_connect()</p>\r\n<p>mysqli_select_db()</p>\r\n<p>mysqli_query()</p>\r\n<p>mysqli_error()</p>\r\n<p>mysqli_fetch_assoc()</p>\r\n<p>mysqli_num_rows()</p>\r\n<p><strong>六、前台管理界面的开发</strong></p>\r\n<p><strong>6.1 文章列表</strong></p>\r\n<p><strong>article.list.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from article order by dateline desc\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row = mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>	&lt;?php<br>		if(empty($data)){	<br>			echo \"当前没有文章，请管理员在后台添加文章\";<br>		}else{<br>			foreach($data as $value){<br>	?&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;?php echo $value[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $value[\'author\']?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $value[\'description\']?&gt;<br>			&lt;/div&gt;<br>			&lt;div class=\"meta\"&gt;<br>				&lt;p class=\"links\"&gt;&lt;a href=\"article.show.php?id=&lt;?php echo $value[\'id\']?&gt;\" class=\"more\"&gt;查看详细&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;raquo;&amp;nbsp;&amp;nbsp;&lt;/p&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;?php<br>			}<br>		}<br>	?&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"article.search.php\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"key\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.2 文章详情页</strong></p>\r\n<p><strong>article.show.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$id = intval($_GET[\'id\']);<br>	$sql = \"select * from article where id=$id\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		$row = mysqli_fetch_assoc($query);<br>	}else{<br>		echo \"这篇文章不存在\";<br>		exit;<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"#\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"#\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"#\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;!--文章标题放置到这里--&gt;&lt;?php echo $row[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $row[\'author\'];?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;!--文章内容放置到这里--&gt;<br>				&lt;?php echo $row[\'content\']?&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.3 检索</strong></p>\r\n<p>article.search.php</p>\r\n<p>这里的查询的是根据题目来查询。</p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$key = $_GET[\'key\'];<br>	$sql = \"select * from article where title like \'%$key%\' order by dateline desc\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row = mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>	&lt;?php<br>		if(empty($data)){	<br>			echo \"当前没有文章，请管理员在后台添加文章\";<br>		}else{<br>			foreach($data as $value){<br>	?&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;?php echo $value[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $value[\'author\']?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $value[\'description\']?&gt;<br>			&lt;/div&gt;<br>			&lt;div class=\"meta\"&gt;<br>				&lt;p class=\"links\"&gt;&lt;a href=\"article.show.php?id=&lt;?php echo $value[\'id\']?&gt;\" class=\"more\"&gt;查看详细&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;raquo;&amp;nbsp;&amp;nbsp;&lt;/p&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;?php<br>			}<br>		}<br>	?&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.4 关于我们和联系我们</strong></p>\r\n<p><strong>about.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from  introduce\";<br>	$query = mysqli_query($con,$sql);<br>	//if($query&amp;&amp;mysqli_num_rows($query)){<br>		$about = \"啦啦啦\";<br>	//}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br><br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;关于我们&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $about?&gt;<br>			&lt;/div&gt;<br><br>		&lt;/div&gt;<br><br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>contact.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from  introduce\";<br>	$query = mysqli_query($con,$sql);<br>	//$arr=mysqli_fetch_array($query, MYSQL_ASSOC);<br>	//if($query&amp;&amp;mysqli_num_rows($query)){<br>		$contact = \"asdfadf\";<br>	//}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br><br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;联系我们&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $contact?&gt;<br>			&lt;/div&gt;<br><br>		&lt;/div&gt;<br><br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;</p>\r\n<p>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p> ------------------------------------------</p>\r\n<p><strong>2、JSON基础</strong></p>\r\n<p><strong>1.2 JSON的使用</strong></p>\r\n<p>--<strong>JSON与serialize</strong>数据格式的异同和使用</p>\r\n<p>相同点：把其他数据类型转换为一个可以传输的字符串；都是结构性数据；</p>\r\n<p>不同点：s序列化之后，保存数据原有类型——适用于存储带有加密方式的数据串；JSON更简洁——适合数据量大，不要求数据类型保存的情况</p>\r\n<p>举个栗子</p>\r\n<p>&lt;?php<br>//输出模块<br>function createHtmlTag($tag=\"\"){<br>	echo \"&lt;h1&gt;$tag&lt;/h1&gt;&lt;br/&gt;\";<br>}<br>createHtmlTag(\"Hello!\");<br>createHtmlTag(\"JSON和serialize的对比\");</p>\r\n<p>//测试用数组<br>$member=array(\"username\",\"age\");<br>var_dump($member);</p>\r\n<p><br>$jsonObj=json_encode($member);</p>\r\n<p>$serializeObj=serialize($member);</p>\r\n<p>createHtmlTag($jsonObj);<br>createHtmlTag($serializeObj);</p>\r\n<p>结果</p>\r\n<h1>Hello!</h1>\r\n<p> </p>\r\n<h1>JSON和serialize的对比</h1>\r\n<p> </p>\r\n<pre class=\"xdebug-var-dump\"><strong>array</strong> <em>(size=2)</em>\r\n  0 <span style=\"color: #888a85;\">=&gt;</span> </pre>\r\n<p><small>string</small></p>\r\n<pre class=\"xdebug-var-dump\"> <span style=\"color: #cc0000;\">\'username\'</span> <em>(length=8)</em>\r\n  1 <span style=\"color: #888a85;\">=&gt;</span> </pre>\r\n<p><small>string</small></p>\r\n<pre class=\"xdebug-var-dump\"> <span style=\"color: #cc0000;\">\'age\'</span> <em>(length=3)</em>\r\n</pre>\r\n<h1>[\"username\",\"age\"]</h1>\r\n<p> </p>\r\n<h1>a:2:{i:0;s:8:\"username\";i:1;s:3:\"age\";}</h1>\r\n<p><strong>--常用JSON函数</strong></p>\r\n<p>json_encode()——JSON加密</p>\r\n<p>json_decode()——解密</p>\r\n<p><strong>1.3 JSON实例讲解</strong></p>\r\n<p> </p>\n ', '2016-04-28 20:05:09', '2016-04-28 20:05:09', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3090', '挤点时间写博客-php&MySQL实践 ', '网络', '\n<p>　　hi</p>\r\n<p>晚上要吃火锅的嘛，挤点时间写点东西吧，别被老板发现哦</p>\r\n<p>1、PHP与MySQL</p>\r\n<p><strong>五、文章发布系统之后台</strong></p>\r\n<p><strong>5.2 创建配置文件和初始化文件</strong></p>\r\n<p>为了统一配置以及管理方便，还有就是减少代码的冗余。</p>\r\n<p>分别为config.php和connect.php</p>\r\n<p><strong>config.php</strong></p>\r\n<p>&lt;?php<br>/*<br> * 配置文件<br> */<br>//配置数据库的相关信息<br>//由于是常量，直接用define<br>define(\'HOST\', \'127.0.0.1\');<br>define(\'USERNAME\', \'root\');<br>define(\'PASSWORD\', \'\');</p>\r\n<p> </p>\r\n<p><strong>connect.php</strong></p>\r\n<p>&lt;?php<br>/*<br> * 链接到数据库的文件<br> * 主要是链接到数据库服务器，然后选择数据库。<br> * 特殊的是设置字符集。<br> * 然后希望对每个操作进行判断<br> */</p>\r\n<p> </p>\r\n<p>//包含配置文件<br>require_once \'config.php\';</p>\r\n<p>//连库<br>if(!$con=mysqli_connect(HOST,USERNAME,PASSWORD)){<br>	echo mysqli_error($con);<br>}</p>\r\n<p>//选库<br>if(mysqli_select_db($con, \'info\')){<br>	echo mysqli_error($con);<br>}</p>\r\n<p>//字符集<br>if(mysqli_query($con,\'set names utf8\')){<br>	echo mysqli_error($con);<br>}</p>\r\n<p>完成后测试一下链接文件就ok了。这里的mysqli和mysql都可以，只要格式正确就行。</p>\r\n<p><strong>5.3 发布文章</strong></p>\r\n<p><strong>文章发布界面article.add.php</strong></p>\r\n<p>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"156\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;      &lt;a href=\"article.add.php\"&gt;&lt;/a&gt;&lt;/td&gt;<br>    &lt;td width=\"837\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;<br>    &lt;form id=\"form1\" name=\"form1\" method=\"post\" action=\"article.add.handle.php\"&gt;<br>      &lt;table width=\"779\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\"&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"center\"&gt;发布文章&lt;/td&gt;<br>          &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td width=\"119\"&gt;标题&lt;/td&gt;<br>          &lt;td width=\"625\"&gt;&lt;label for=\"title\"&gt;&lt;/label&gt;<br>            &lt;input type=\"text\" name=\"title\" id=\"title\" /&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;作者&lt;/td&gt;<br>          &lt;td&gt;&lt;input type=\"text\" name=\"author\" id=\"author\" /&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;简介&lt;/td&gt;<br>          &lt;td&gt;&lt;label for=\"description\"&gt;&lt;/label&gt;<br>            &lt;textarea name=\"description\" id=\"description\" cols=\"60\" rows=\"5\"&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;内容&lt;/td&gt;<br>          &lt;td&gt;&lt;textarea name=\"content\" cols=\"60\" rows=\"15\" id=\"content\"&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"right\"&gt;&lt;input type=\"submit\" name=\"button\" id=\"button\" value=\"提交\" /&gt;&lt;/td&gt;<br>          &lt;/tr&gt;<br>      &lt;/table&gt;<br>    &lt;/form&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>不是很漂亮就是了，学习嘛</p>\r\n<p> </p>\r\n<p>文章发布处理程序article.add.handle.php</p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	//把传递过来的信息入库,在入库之前对所有的信息进行校验。<br>	if(!(isset($_POST[\'title\'])&amp;&amp;(!empty($_POST[\'title\'])))){<br>		echo \"&lt;script&gt;alert(\'标题不能为空\');window.location.href=\'article.add.php\';&lt;/script&gt;\";<br>	}<br>	$title = $_POST[\'title\'];<br>	$author = $_POST[\'author\'];<br>	$description = $_POST[\'description\'];<br>	$content = $_POST[\'content\'];<br>	$dateline =  time();<br>	$insertsql = \"insert into article(title, author, description, content, dateline) values(\'$title\', \'$author\', \'$description\', \'$content\', $dateline)\";<br>	if(mysqli_query($con,$insertsql)){<br>		echo \"&lt;script&gt;alert(\'发布文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'发布失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p>注意两者的功能和连接，就是add页面把东西传给handle处理</p>\r\n<p> ------------------------</p>\r\n<p>由于我遇到了前所未见的乱码问题。。。跪着解决中。。。。望大家不吝赐教（wamp环境，mysql，zend，浏览器都已经设置为utf8，apache配置文件中添加了AddDefaultCharset UTF-8，问题依然存在，我晕啊。。。。）</p>\n ', '2016-04-28 20:05:09', '2016-04-28 20:05:09', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3091', '突然发现这周有点忙。。着玩-PHP进阶 ', '网络', '\n<p>　　hi</p>\r\n<p>周二才，不过我突然意识到这周有点忙着玩的感觉，还是很期待的——今天下午去市里，晚上回来看电影，明晚聚餐吃火锅，后天下午拍短片，晚上可能要打球，周五，嗯，就到周五了。虽然这样下去连怎么写（bian）周报都不知道，但还是来做这个的好。</p>\r\n<p><strong>1、PHP进阶完结篇</strong></p>\r\n<p><strong>十一、数据库操作</strong></p>\r\n<p><strong>11.1 PHP支持哪些数据库</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP通过安装相应的扩展来实现数据库操作，现代应用程序的设计离不开数据库的应用，当前主流的数据库有MsSQL，MySQL，Sybase，Db2，Oracle，PostgreSQL，Access等，这些数据库PHP都能够安装扩展来支持，一般情况下常说的LAMP架构指的是：Linux、Apache、Mysql、PHP，因此Mysql数据库在PHP中的应用非常广泛，我们会在本章中简单的了解Mysql的操作方法。</p>\r\n</div>\r\n</div>\r\n<p><strong>11.2 数据库扩展</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP中一个数据库可能有一个或者多个扩展，其中既有官方的，也有第三方提供的。像Mysql常用的扩展有原生的mysql库，也可以使用增强版的mysqli扩展，还可以使用PDO进行连接与操作。</p>\r\n<p>不同的扩展提供基本相近的操作方法，不同的是可能具备一些新特性，以及操作性能可能会有所不同。</p>\r\n<p>mysql扩展进行数据库连接的方法：</p>\r\n<pre class=\"code\">$link = mysql_connect(\'mysql_host\', \'mysql_user\', \'mysql_password\');</pre>\r\n<p>mysqli扩展：</p>\r\n<pre class=\"code\">$link = mysqli_connect(\'mysql_host\', \'mysql_user\', \'mysql_password\');</pre>\r\n<p>PDO扩展</p>\r\n<pre class=\"code\">$dsn = \'mysql:dbname=testdb;host=127.0.0.1\';\r\n$user = \'dbuser\';\r\n$password = \'dbpass\';\r\n$dbh = new PDO($dsn, $user, $password);</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>$link = mysql_connect(\'127.0.0.1\', \'code1\', \'\') or die(\'数据库连接失败\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>$result = mysql_query(\'select * from user limit 1\');<br>$row = mysql_fetch_assoc($result);<br>print_r($row);</p>\r\n<p><strong>11.3 连接MySQL数据库</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP要对数据库进行操作，首先要做的是与数据库建立连接，通常我们使用mysql_connect函数进行数据库连接，该函数需要指定数据库的地址，用户名及密码。</p>\r\n<pre class=\"code\">$host = \'localhost\';\r\n$user = \'code1\';\r\n$pass = \'\';\r\n$link = mysql_connect($host, $user, $pass);</pre>\r\n<p>PHP连接数据库的方式类似于直接在命令行下通过进行连接，类似：<code class=\"marker\">mysql -hlocalhost -ucode1 -p</code>，当连接成功以后，我们需要选择一个操作的数据库，通过mysql_select_db函数来选择数据库。</p>\r\n<pre class=\"code\">mysql_select_db(\'code1\');</pre>\r\n<p>通常我们会先设置一下当前连接使用的字符编码，一般的我们会使用utf8编码。</p>\r\n<pre class=\"code\">mysql_query(\"set names \'utf8\'\");</pre>\r\n<p>通过上面的步骤，我们就与数据库建立了连接，可以进行数据操作了。</p>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>$host = \'127.0.0.1\';<br>$user = \'code1\';<br>$pass = \'\';<br>//在这里编写数据库连接代码<br>mysql_connect($host,$user,$pass);<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");</p>\r\n<p><strong> 11.4 执行MySQL查询</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>在数据库建立连接以后就可以进行查询，采用mysql_query加sql语句的形式向数据库发送查询指令。</p>\r\n<pre class=\"code\">$res = mysql_query(\'select * from user limit 1\');</pre>\r\n<p>对于查询类的语句会返回一个资源句柄（resource），可以通过该资源获取查询结果集中的数据。</p>\r\n<pre class=\"code\">$row = mysql_fetch_array($res);\r\nvar_dump($row);</pre>\r\n<p>默认的，PHP使用最近的数据库连接执行查询，但如果存在多个连接的情况，则可以通过参数指令从那个连接中进行查询。</p>\r\n<pre class=\"code\">$link1 = mysql_connect(\'127.0.0.1\', \'code1\', \'\');\r\n$link2 = mysql_connect(\'127.0.0.1\', \'code1\', \'\', true); //开启一个新的连接\r\n$res = mysql_query(\'select * from user limit 1\', $link1); //从第一个连接中查询数据</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//在这里进行数据查询<br>$arr=mysql_query(\"select * from user limit 1\");<br>$row=mysql_fetch_row($arr);<br>print_r($row);<br>echo $row[0];</p>\r\n<p>11.5 插入新数据到MySQL中</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>当我们了解了如何使用mysql_query进行数据查询以后，那么类似的，插入数据其实也是通过执行一个sql语句来实现，例如：</p>\r\n<pre class=\"code\">$sql = \"insert into user(name, age, class) values(\'李四\', 18, \'高三一班\')\";\r\nmysql_query($sql); //执行插入语句</pre>\r\n<p>通常数据都是存储在变量或者数组中，因此sql语句需要先进行字符串拼接得到。</p>\r\n<pre class=\"code\">$name = \'李四\';\r\n$age = 18;\r\n$class = \'高三一班\';\r\n$sql = \"insert into user(name, age, class) values(\'$name\', \'$age\', \'$class\')\";\r\nmysql_query($sql); //执行插入语句</pre>\r\n<p>在mysql中，执行插入语句以后，可以得到自增的主键id,通过PHP的mysql_insert_id函数可以获取该id。</p>\r\n<pre class=\"code\">$uid = mysql_insert_id();</pre>\r\n<p>这个id的作用非常大，通常可以用来判断是否插入成功，或者作为关联ID进行其他的数据操作。</p>\r\n</div>\r\n</div>\r\n<p><strong>11.6 取得数据查询结果</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>通过前面的章节，我们发现PHP操作数据库跟MySql客户端上操作极为相似，先进行连接，然后执行sql语句，再然后获取我们想要的结果集。</p>\r\n<p>PHP有多个函数可以获取数据集中的一行数据，最常用的是mysql_fetch_array，可以通过设定参数来更改行数据的下标，默认的会包含数字索引的下标以及字段名的关联索引下标。</p>\r\n<pre class=\"code\">$sql = \"select * from user limit 1\";\r\n$result = mysql_query($sql);\r\n$row = mysql_fetch_array($result);</pre>\r\n<p>可以通过设定参数MYSQL_NUM只获取数字索引数组，等同于mysql_fetch_row函数，如果设定参数为MYSQL_ASSOC则只获取关联索引数组，等同于mysql_fetch_assoc函数。</p>\r\n<pre class=\"code\">$row = mysql_fetch_row($result);\r\n$row = mysql_fetch_array($result, MYSQL_NUM); //这两个方法获取的数据是一样的</pre>\r\n<pre class=\"code\">$row = mysql_fetch_assoc($result);\r\n$row = mysql_fetch_array($result, MYSQL_ASSOC);</pre>\r\n<p>如果要获取数据集中的所有数据，我们通过循环来遍历整个结果集。</p>\r\n<pre class=\"code\">$data = array();\r\nwhile ($row = mysql_fetch_array($result)) {\r\n    $data[] = $row;\r\n}</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//数据预处理 防止查询不到数据<br>mysql_query(\"insert into user(name, age, class) values(\'王二\', 19, \'高三五班\')\");<br>//进行数据查询<br>$sql = \"select * from user limit 1\";<br>$result = mysql_query($sql);</p>\r\n<p>//在这里获取一行数据<br>$row=mysql_fetch_assoc($result);</p>\r\n<p>echo \'&lt;pre&gt;\';<br>print_r($row);<br>echo \'&lt;/pre&gt;\';</p>\r\n<p><strong>11.7 查询分页数据</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>上一节中，我们了解到通过循环可以获取一个查询的所有数据，在实际应用中，我们并不希望一次性获取数据表中的所有数据，那样性能会非常的低，因此会使用翻页功能，每页仅显示10条或者20条数据。</p>\r\n<p>通过mysql的limit可以很容易的实现分页，limit m,n表示从m行后取n行数据，在PHP中我们需要构造m与n来实现获取某一页的所有数据。</p>\r\n<p>假定当前页为$page，每页显示$n条数据，那么m为当前页前面所有的数据，既$m = ($page-1) * $n，在知道了翻页原理以后，那么我们很容易通过构造SQL语句在PHP中实现数据翻页。</p>\r\n<pre class=\"code\">$page = 2;\r\n$n = 2;\r\n$m = ($page - 1) * $n;\r\n$sql = \"select * from user limit $m, $n\";\r\n$result = mysql_query($sql);\r\n//循环获取当前页的数据\r\n$data = array();\r\nwhile ($row = mysql_fetch_assoc($result)) {\r\n    $data[] = $row;\r\n}\r\n</pre>\r\n<p>在上面的例子中，我们使用了$m与$n变量来表示偏移量与每页数据条数，但我们推荐使用更有意义的变量名来表示，比如$pagesize, $start, $offset等，这样更容易理解，有助于团队协作开发。</p>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//预设翻页参数<br>$page = 2;<br>$pagesize = 2;<br>//在这里构建分页查询<br>$start=($page-1)*$pagesize;</p>\r\n<p>$sql=\"SELECT * FROM user LIMIT $start,$pagesize\";</p>\r\n<p>//获取翻页数据<br>$result = mysql_query($sql);<br>$data = array();<br>while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {<br>    $data[] = $row;<br>}<br>echo \'&lt;pre&gt;\';<br>print_r($data);<br>echo \'&lt;/pre&gt;\';</p>\r\n<p>11.8 更新与删除数据</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>数据的更新与删除相对比较简单，只需要构建好相应的sql语句，然后调用mysql_query执行就能完成相应的更新与删除操作。</p>\r\n<pre class=\"code\">$sql = \"update user set name = \'曹操\' where id=2 limit 1\";\r\nif (mysql_query($sql)) {\r\n    echo \'更新成功\';\r\n}</pre>\r\n<p>同样的删除可以使用类似以下的代码：</p>\r\n<pre class=\"code\">$sql = \"delete from user where id=2 limit 1\";\r\nif (mysql_query($sql)) {\r\n    echo \'删除成功\';\r\n}</pre>\r\n<p>对于删除与更新操作，可以通过mysql_affected_rows函数来获取更新过的数据行数，如果数据没有变化，则结果为0。</p>\r\n<pre class=\"code\">$sql = \"update user set name = \'曹操\' where id=2 limit 1\";\r\nif (mysql_query($sql)) {\r\n    echo mysql_affected_rows();\r\n}</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//预设数据以便进行更新操作<br>mysql_query(\"insert into user(name, age, class) values(\'王二\', 19, \'高三五班\')\");<br>$id = mysql_insert_id();<br>//在这里更新id为$id的行的名字为李白<br>$sql=\"update user set name=\'李白\' where id=$id limit 1\";<br>mysql_query($sql);<br>//输出更新数据条数<br>echo \'数据更新行数：\'.mysql_affected_rows();<br>mysql_query(\"delete from user where id=\'$id\'\");</p>\r\n<p><strong>11.9 关闭MySQL连接</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>当数据库操作完成以后，可以使用mysql_close关闭数据库连接，默认的，当PHP执行完毕以后，会自动的关闭数据库连接。</p>\r\n<pre class=\"code\">mysql_close();</pre>\r\n<p>虽然PHP会自动关闭数据库连接，一般情况下已经满足需求，但是在对性能要求比较高的情况下，可以在进行完数据库操作之后尽快关闭数据库连接，以节省资源，提高性能。</p>\r\n<p>在存在多个数据库连接的情况下，可以设定连接资源参数来关闭指定的数据库连接。</p>\r\n<pre class=\"code\">$link = mysql_connect($host, $user, $pass);\r\nmysql_close($link);</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>$con=mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//在这里关闭数据库连接</p>\r\n<p>mysql_close($con);</p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n\r\n</div>\r\n\r\n</div>\n ', '2016-04-28 20:05:09', '2016-04-28 20:05:09', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3092', 'PHP_Bibel阅读笔记（二）——脸黑的一天（？一年） ', '网络', '\n<p>　　一早上起来把50包开了，一张橙卡。。。就问还有谁。。。。。。。。。。。本命年啊，我去买红内裤还不行么。。。。</p>\r\n<p>实时更新，老哥的号的30包什么都没有。。。。不过中午又开了5包，皇帝，好评啊！！！</p>\r\n<p><strong>五、代码重用与函数编写</strong></p>\r\n<p>include警告与require的错误；</p>\r\n<p>大量的包含实现，可以改ini文件中的：auto_prepend_file和auto_append_file;</p>\r\n<p>global关键字也是可以用在函数内的参数的；</p>\r\n<p>参数的引用传递和return</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">1</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\FunctionUse;\r\n</span><span style=\"color: #008080;\">2</span> \r\n<span style=\"color: #008080;\">3</span> <span style=\"color: #0000ff;\">include_once</span> \'index.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">4</span> <span style=\"color: #800080;\">$value</span>=10<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">5</span> increment1(<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">6</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$value</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">7</span> <span style=\"color: #800080;\">$value2</span>=100<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">8</span> <span style=\"color: #800080;\">$value2</span>=increment2(<span style=\"color: #800080;\">$value2</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">9</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$value2</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\";</pre>\r\n</div>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #0000ff;\">function</span> increment1(&amp;<span style=\"color: #800080;\">$value</span>,<span style=\"color: #800080;\">$mount</span>=1<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\"> 4</span>     <span style=\"color: #800080;\">$value</span>=<span style=\"color: #800080;\">$value</span>+<span style=\"color: #800080;\">$mount</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 6</span> \r\n<span style=\"color: #008080;\"> 7</span> <span style=\"color: #0000ff;\">function</span> increment2(<span style=\"color: #800080;\">$value</span>,<span style=\"color: #800080;\">$mount</span>=1<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\"> 9</span>     <span style=\"color: #800080;\">$value</span>=<span style=\"color: #800080;\">$value</span>+<span style=\"color: #800080;\">$mount</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">11</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>递归函数比循环慢且占用更多内存，虽然很多循环都可以用递归来代替；（在应用领域中基本不用它</p>\r\n<p><strong>六、面向对象</strong></p>\r\n<p>好玩的代码，学到些东西！</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">  1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">  2</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\ObjectPage;\r\n</span><span style=\"color: #008080;\">  3</span> \r\n<span style=\"color: #008080;\">  4</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Chapter6.P132</span>\r\n<span style=\"color: #008080;\">  5</span> \r\n<span style=\"color: #008080;\">  6</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> Page\r\n</span><span style=\"color: #008080;\">  7</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">  8</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$content</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  9</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$title</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 10</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$keyword</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 11</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$button</span>=<span style=\"color: #0000ff;\">array</span>(\"Home\"=&gt;\"http://115.159.201.78/wordpress/\",\r\n<span style=\"color: #008080;\"> 12</span>         \"Basic\"=&gt;\"Section1.php\"\r\n<span style=\"color: #008080;\"> 13</span> <span style=\"color: #000000;\">    );\r\n</span><span style=\"color: #008080;\"> 14</span>     \r\n<span style=\"color: #008080;\"> 15</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __set(<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 16</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 17</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #800080;\">$name</span>=<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 18</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 19</span>     \r\n<span style=\"color: #008080;\"> 20</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> Display()\r\n</span><span style=\"color: #008080;\"> 21</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 22</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;html&gt;\\n&lt;head&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 23</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayTitle();\r\n</span><span style=\"color: #008080;\"> 24</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayKeywords();\r\n</span><span style=\"color: #008080;\"> 25</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayStyles();\r\n</span><span style=\"color: #008080;\"> 26</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/head&gt;\\n&lt;body&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 27</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayHeader();\r\n</span><span style=\"color: #008080;\"> 28</span>         <span style=\"color: #800080;\">$this</span>-&gt;DisplayMenu(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">button);\r\n</span><span style=\"color: #008080;\"> 29</span>         <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">content;\r\n</span><span style=\"color: #008080;\"> 30</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayFooter();\r\n</span><span style=\"color: #008080;\"> 31</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/body&gt;\\n&lt;/html&gt;\\n\"<span style=\"color: #000000;\">;   \r\n</span><span style=\"color: #008080;\"> 32</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 33</span>     \r\n<span style=\"color: #008080;\"> 34</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayTitle()\r\n</span><span style=\"color: #008080;\"> 35</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 36</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;title&gt;\".<span style=\"color: #800080;\">$this</span>-&gt;title.\"&lt;/title&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 37</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 38</span>     \r\n<span style=\"color: #008080;\"> 39</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayKeywords()\r\n</span><span style=\"color: #008080;\"> 40</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 41</span>         <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$this</span>-&gt;keyword <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$words</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 42</span>             <span style=\"color: #0000ff;\">echo</span> \"&lt;meta name=\\\"keywords\\\" content=\\\"\".<span style=\"color: #800080;\">$words</span>.\"\\\"/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 43</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\"> 44</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 45</span>     \r\n<span style=\"color: #008080;\"> 46</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayStyles()\r\n</span><span style=\"color: #008080;\"> 47</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 48</span>    ?&gt;\r\n<span style=\"color: #008080;\"> 49</span>      &lt;style&gt;\r\n<span style=\"color: #008080;\"> 50</span> <span style=\"color: #000000;\">      h1 {\r\n</span><span style=\"color: #008080;\"> 51</span>             color:white; font-size:24pt; text-align:<span style=\"color: #000000;\">center;\r\n</span><span style=\"color: #008080;\"> 52</span>             font-family:arial,sans-<span style=\"color: #000000;\">serif\r\n</span><span style=\"color: #008080;\"> 53</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 54</span>     .<span style=\"color: #000000;\">menu {\r\n</span><span style=\"color: #008080;\"> 55</span>         color:white; font-size:12pt; text-align:<span style=\"color: #000000;\">center;\r\n</span><span style=\"color: #008080;\"> 56</span>         font-family:arial,sans-serif; font-weight:<span style=\"color: #000000;\">bold\r\n</span><span style=\"color: #008080;\"> 57</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 58</span> <span style=\"color: #000000;\">    td {\r\n</span><span style=\"color: #008080;\"> 59</span>         background:<span style=\"color: #000000;\">black\r\n</span><span style=\"color: #008080;\"> 60</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 61</span> <span style=\"color: #000000;\">    p {\r\n</span><span style=\"color: #008080;\"> 62</span>         color:black; font-size:12pt; text-align:<span style=\"color: #000000;\">justify;\r\n</span><span style=\"color: #008080;\"> 63</span>         font-family:arial,sans-<span style=\"color: #000000;\">serif\r\n</span><span style=\"color: #008080;\"> 64</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 65</span>     p.<span style=\"color: #000000;\">foot {\r\n</span><span style=\"color: #008080;\"> 66</span>         color:white; font-size:12pt; text-align:<span style=\"color: #000000;\">center;\r\n</span><span style=\"color: #008080;\"> 67</span>         font-family:arial,sans-serif; font-weight:<span style=\"color: #000000;\">bold\r\n</span><span style=\"color: #008080;\"> 68</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 69</span>     a:link,a:visited,a:<span style=\"color: #000000;\">active {\r\n</span><span style=\"color: #008080;\"> 70</span>         color:<span style=\"color: #000000;\">white\r\n</span><span style=\"color: #008080;\"> 71</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 72</span>     &lt;/style&gt;\r\n<span style=\"color: #008080;\"> 73</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 74</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 75</span>     \r\n<span style=\"color: #008080;\"> 76</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayHeader()\r\n</span><span style=\"color: #008080;\"> 77</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 78</span> ?&gt;\r\n<span style=\"color: #008080;\"> 79</span>   &lt;table width=\"100%\" cellpadding=\"12\" \r\n<span style=\"color: #008080;\"> 80</span>          cellspacing=\"0\" border=\"0\"&gt;\r\n<span style=\"color: #008080;\"> 81</span>   &lt;tr bgcolor=\"black\"&gt;\r\n<span style=\"color: #008080;\"> 82</span>     &lt;td align=\"left\"&gt;&lt;img alt=\"img\" src=\"logo.png\"&gt;&lt;/td&gt;\r\n<span style=\"color: #008080;\"> 83</span>     &lt;td&gt;&lt;h1&gt;The OOP page&lt;/h1&gt;&lt;/td&gt;\r\n<span style=\"color: #008080;\"> 84</span>   &lt;/tr&gt;\r\n<span style=\"color: #008080;\"> 85</span> &lt;/table&gt;\r\n<span style=\"color: #008080;\"> 86</span> &lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #008080;\"> 87</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 88</span>     \r\n<span style=\"color: #008080;\"> 89</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span> DisplayMenu(<span style=\"color: #800080;\">$button</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 90</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 91</span>         <span style=\"color: #0000ff;\">echo</span> \"<span style=\"color: #000000;\">&lt;table width=\\\"100%\\\" bgcolor=\\\"white\\\"\r\n</span><span style=\"color: #008080;\"> 92</span>               cellpadding=\\\"4\\\"    cellsapcing=\\\"4\\\"&gt;\\n \"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 93</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;tr&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 94</span>         <span style=\"color: #800080;\">$width</span>=100/<span style=\"color: #008080;\">count</span>(<span style=\"color: #800080;\">$button</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 95</span>         <span style=\"color: #0000ff;\">while</span> (<span style=\"color: #0000ff;\">list</span>(<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$url</span>)=<span style=\"color: #008080;\">each</span>(<span style=\"color: #800080;\">$button</span><span style=\"color: #000000;\">)) {\r\n</span><span style=\"color: #008080;\"> 96</span>             <span style=\"color: #800080;\">$this</span>-&gt;DisplayButton(<span style=\"color: #800080;\">$width</span>,<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$url</span>,\r\n<span style=\"color: #008080;\"> 97</span>                 !<span style=\"color: #800080;\">$this</span>-&gt;IsURLCurrentPage(<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 98</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\"> 99</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/tr&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">100</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/table&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">101</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">102</span>     \r\n<span style=\"color: #008080;\">103</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span> IsURLCurrentPage(<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">104</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">105</span>         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">strpos</span>(<span style=\"color: #800080;\">$_SERVER</span>[\'PHP_SELF\'], <span style=\"color: #800080;\">$url</span>)==<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">106</span>             <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">107</span>         } <span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">108</span>             <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">109</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\">110</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">111</span>     \r\n<span style=\"color: #008080;\">112</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span> DisplayButton(<span style=\"color: #800080;\">$width</span>,<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$url</span>,<span style=\"color: #800080;\">$active</span>=<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">113</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">114</span>         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$active</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">115</span>             <span style=\"color: #0000ff;\">echo</span> \"&lt;td width=\\\"\".<span style=\"color: #800080;\">$width</span>.\"<span style=\"color: #000000;\">%\\\"&gt;\r\n</span><span style=\"color: #008080;\">116</span>             &lt;a href=\\\"\".<span style=\"color: #800080;\">$url</span>.\"<span style=\"color: #000000;\">\\\" onclick=\\\"blank\\\"&gt;\r\n</span><span style=\"color: #008080;\">117</span>             &lt;img src=\\\"w-logo-blue.png\\\" alt=\\\"\".<span style=\"color: #800080;\">$name</span>.\"<span style=\"color: #000000;\">\\\" border=\\\"0\\\" /&gt;&lt;/a&gt;\r\n</span><span style=\"color: #008080;\">118</span>             &lt;a href=\\\"\".<span style=\"color: #800080;\">$url</span>.\"\\\"&gt;&lt;span class=\\\"menu\\\"&gt;\".<span style=\"color: #800080;\">$name</span>.\"<span style=\"color: #000000;\">&lt;/span&gt;&lt;/a&gt;\r\n</span><span style=\"color: #008080;\">119</span>                 &lt;/td&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">120</span>         } <span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">121</span>             <span style=\"color: #0000ff;\">echo</span> \"&lt;td width=\\\"\".<span style=\"color: #800080;\">$width</span>.\"<span style=\"color: #000000;\">%\\\"&gt;\r\n</span><span style=\"color: #008080;\">122</span> <span style=\"color: #000000;\">            &lt;img src=\\\"w-logo-white.png\\\"&gt;\r\n</span><span style=\"color: #008080;\">123</span>             &lt;span class=\\\"menu\\\"&gt;\".<span style=\"color: #800080;\">$name</span>.\"&lt;/span&gt;&lt;/td&gt;\"<span style=\"color: #000000;\">;            \r\n</span><span style=\"color: #008080;\">124</span> <span style=\"color: #000000;\">        }        \r\n</span><span style=\"color: #008080;\">125</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">126</span>     \r\n<span style=\"color: #008080;\">127</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayFooter()\r\n</span><span style=\"color: #008080;\">128</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">129</span> ?&gt;\r\n<span style=\"color: #008080;\">130</span>   &lt;table width=\"100%\" bgcolor=\"black\" cellpadding=\"12\" border=\"0\"&gt;\r\n<span style=\"color: #008080;\">131</span>   &lt;tr&gt;\r\n<span style=\"color: #008080;\">132</span>     &lt;td&gt;\r\n<span style=\"color: #008080;\">133</span>     &lt;p <span style=\"color: #0000ff;\">class</span>=\"foot\"&gt;&amp;<span style=\"color: #008080;\">copy</span>; Andy Liang.&lt;/p&gt;\r\n<span style=\"color: #008080;\">134</span>     &lt;p <span style=\"color: #0000ff;\">class</span>=\"foot\"&gt;Please visit my own site:&lt;a href=\"http://115.159.201.78/wordpress/\"&gt;Andy\'<span style=\"color: #000000;\">s Learning Diary&lt;/a&gt;&lt;/p&gt;\r\n</span><span style=\"color: #008080;\">135</span> <span style=\"color: #000000;\">    &lt;/td&gt;\r\n</span><span style=\"color: #008080;\">136</span> <span style=\"color: #000000;\">  &lt;/tr&gt;\r\n</span><span style=\"color: #008080;\">137</span> <span style=\"color: #000000;\">&lt;/table&gt;\r\n</span><span style=\"color: #008080;\">138</span> <span style=\"color: #000000;\">&lt;?php \r\n</span><span style=\"color: #008080;\">139</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">140</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">141</span> \r\n<span style=\"color: #008080;\">142</span> <span style=\"color: #000000;\">$homepage=new Page();\r\n</span><span style=\"color: #008080;\">143</span> <span style=\"color: #000000;\">$homepage-&gt;content=\"&lt;p&gt;\".\"I do not know what to write down, how about this?\".\"&lt;/p&gt;\";\r\n</span><span style=\"color: #008080;\">144</span> <span style=\"color: #000000;\">$homepage-&gt;title=\"You have to try OO.\";\r\n</span><span style=\"color: #008080;\">145</span> <span style=\"color: #000000;\">$homepage-&gt;keyword=array(\"SAR\",\"MRF\");\r\n</span><span style=\"color: #008080;\">146</span> $homepage-&gt;Display();</pre>\r\n</div>\r\n<p> </p>\r\n<p>就是个默认网页的生成对象，还是有改进空间的。</p>\r\n<p>然后，php写html，有点繁琐，但写完了一身爽。</p>\r\n<p>&lt;?php ?&gt;标记的活用有点厉害啊，套路~</p>\r\n<p>PS:上面代码中的链接不要乱点~会吓到你的。</p>\r\n<p>当然，其实这种得到页面在应用中是不推荐的，只是试着练下手。</p>\r\n<p><strong>七、错误和异常处理</strong></p>\r\n<p>try{ throw new Exception() }  catch{  }</p>\r\n<p>PHP中，异常必须手动抛出；</p>\r\n<p>try代码块和catch代码块是“绑定的”，每个try一定要有一个catch！</p>\r\n<p>一个try可以有多个catch</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Session1.Chapter7.P146</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\ExceptionTry;\r\n</span><span style=\"color: #008080;\"> 4</span> \r\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\r\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> \\ErrorException(\"A serious wrong has occured!\", 14<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #0000ff;\">catch</span> (\\ErrorException <span style=\"color: #800080;\">$e</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 9</span>     <span style=\"color: #0000ff;\">echo</span> \"Exceotion\".<span style=\"color: #800080;\">$e</span>-&gt;getCode().\":\".<span style=\"color: #800080;\">$e</span>-&gt;getMessage().\"&lt;br/&gt;\"\r\n<span style=\"color: #008080;\">10</span>         .\"File:\".<span style=\"color: #800080;\">$e</span>-&gt;getFile().\"at Line:\".<span style=\"color: #800080;\">$e</span>-&gt;getLine().\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">11</span>     <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$e</span><span style=\"color: #000000;\">;    \r\n</span><span style=\"color: #008080;\">12</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>应用中，希望可以<strong>自定义异常处理</strong>：继承已有的Exception类就好，需要注意的是，一般的getMessage等是final的，不能进行重载的，只有_tostring这一个方法可以重载；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">class</span> MyException <span style=\"color: #0000ff;\">extends</span><span style=\"color: #000000;\"> \\ErrorException\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\"> 3</span>     <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> _tostring()\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 5</span>         <span style=\"color: #0000ff;\">return</span> \"Fatal error,sorry!\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\r\n</span><span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> MyException(\"OH\", 14<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #0000ff;\">catch</span> (MyException <span style=\"color: #800080;\">$e</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">13</span>     <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$e</span>-&gt;<span style=\"color: #000000;\">_tostring();\r\n</span><span style=\"color: #008080;\">14</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>应用中，<strong>常常把异常处理用在最容易出错的I/O部分</strong>；格式一般都是</p>\r\n<p>try{ if(!...) throw...} catch(){}</p>\r\n<p> </p>\r\n<p>Session 2</p>\r\n<p>（二） 使用MySQL</p>\r\n<p>八、设计Web数据库</p>\r\n<p> </p>\n ', '2016-04-28 20:05:09', '2016-04-28 20:05:09', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3093', 'PHP_Bibel阅读学习（一）——看书看经典，写文写代码 ', '网络', '\n<p>　　基础快速再看一下，然后每天有新的好玩的看。</p>\r\n<p>这本书，反正好评不少，就是`PHP和MySQL Web开发`，机械工业出版社，澳洲人写的，红皮，有兴趣的可以看一下。</p>\r\n<p> </p>\r\n<p><strong>第一篇 使用PHP</strong></p>\r\n<p><strong>一、入门</strong></p>\r\n<p>5分钟翻一下，两个点吧。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//From Bible\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Session1 Based\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//Chapter1-Use</span>\r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\Using;\r\n</span><span style=\"color: #008080;\">10</span> \r\n<span style=\"color: #008080;\">11</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">引用操作符\r\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #008000;\">//这样子赋值的变量享有同一个空间</span>\r\n<span style=\"color: #008080;\">13</span> <span style=\"color: #800080;\">$a</span>=3<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$a</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #800080;\">$b</span>=&amp;<span style=\"color: #800080;\">$a</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">16</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$b</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">17</span> <span style=\"color: #800080;\">$b</span>=3333<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">18</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$a</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">19</span> \r\n<span style=\"color: #008080;\">20</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">执行操作符\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #008000;\">//``</span>\r\n<span style=\"color: #008080;\">22</span> <span style=\"color: #800080;\">$out</span>=`ls -<span style=\"color: #000000;\">la`;\r\n</span><span style=\"color: #008080;\">23</span> <span style=\"color: #0000ff;\">echo</span> \'&lt;pre&gt;\'.<span style=\"color: #800080;\">$out</span>.\'&lt;/pre&gt;\';</pre>\r\n</div>\r\n<p><strong> 二、数据的存储与检索（文件直接操作</strong></p>\r\n<p>想说的都在代码里了。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\DataUsing;\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断文件是否存在——打开文件——锁定文件——读取文件——写入数据——解锁——关闭文件</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #800080;\">$filename</span>=\'test.txt\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">)) {\r\n</span><span style=\"color: #008080;\"> 5</span>     <span style=\"color: #0000ff;\">echo</span> \'The file you want to visit is not exist!\';<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">exit</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #800080;\">$fp</span>=@<span style=\"color: #008080;\">fopen</span>(<span style=\"color: #800080;\">$filename</span>,\'r+\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008080;\">flock</span>(<span style=\"color: #800080;\">$fp</span>, LOCK_EX);  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">锁定文件，只允许一个写入</span>\r\n<span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">while</span> (!<span style=\"color: #008080;\">feof</span>(<span style=\"color: #800080;\">$fp</span>)){   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">按行读取文件内容</span>\r\n<span style=\"color: #008080;\">11</span>     <span style=\"color: #800080;\">$content</span>=<span style=\"color: #008080;\">fgets</span>(<span style=\"color: #800080;\">$fp</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">12</span>     <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$content</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #800080;\">$writeContent</span>=\'I have something to write into\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #008080;\">fwrite</span>(<span style=\"color: #800080;\">$fp</span>, <span style=\"color: #800080;\">$writeContent</span>,<span style=\"color: #008080;\">strlen</span>(<span style=\"color: #800080;\">$writeContent</span>));  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">控制写入长度，兼容性考虑</span>\r\n<span style=\"color: #008080;\">16</span> <span style=\"color: #008080;\">flock</span>(<span style=\"color: #800080;\">$fp</span>, LOCK_UN);  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">释放锁定</span>\r\n<span style=\"color: #008080;\">17</span> <span style=\"color: #008080;\">fclose</span>(<span style=\"color: #800080;\">$fp</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong>三、数组</strong></p>\r\n<p>其他的都老生常谈，大概查一下随便用，就是熟练度的问题，但还是得知道哈。</p>\r\n<p>然后学到了usort（用户自定义排序）的妙处：</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Chapter3.Array</span>\r\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\ArrayUsort;\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多维数组的排序</span>\r\n<span style=\"color: #008080;\"> 4</span> <span style=\"color: #800080;\">$array1</span>=<span style=\"color: #0000ff;\">array</span>(54654,545,668<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #800080;\">$array2</span>=<span style=\"color: #0000ff;\">array</span>(5454,88,37,54<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #800080;\">$array3</span>=<span style=\"color: #0000ff;\">array</span>(123,4444,5453<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #800080;\">$arrayAll</span>=<span style=\"color: #0000ff;\">array</span>(<span style=\"color: #800080;\">$array1</span>,<span style=\"color: #800080;\">$array2</span>,<span style=\"color: #800080;\">$array3</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$arrayAll</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 9</span> \r\n<span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">function</span> dimensionsCompare(<span style=\"color: #800080;\">$x</span>,<span style=\"color: #800080;\">$y</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">12</span>     <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$x</span>[1]==<span style=\"color: #800080;\">$y</span>[1<span style=\"color: #000000;\">]){\r\n</span><span style=\"color: #008080;\">13</span>         <span style=\"color: #0000ff;\">return</span> 0<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">14</span>     }<span style=\"color: #0000ff;\">elseif</span> (<span style=\"color: #800080;\">$x</span>[1]&lt;<span style=\"color: #800080;\">$y</span>[1<span style=\"color: #000000;\">]){\r\n</span><span style=\"color: #008080;\">15</span>         <span style=\"color: #0000ff;\">return</span> -1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">16</span>     }<span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">17</span>         <span style=\"color: #0000ff;\">return</span> 1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">20</span> @<span style=\"color: #008080;\">usort</span>(<span style=\"color: #800080;\">$arrayAll</span>, \"dimensionsCompare\"<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$arrayAll</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p>其他什么的explode还是有点好玩的。</p>\r\n<p><strong>四、字符串操作和正则表达式</strong></p>\r\n<p>字符串整理</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">1</span> <span style=\"color: #800080;\">$name</span>=<span style=\"color: #008080;\">trim</span>(<span style=\"color: #800080;\">$_POST</span>[\'name\'<span style=\"color: #000000;\">]);\r\n</span><span style=\"color: #008080;\">2</span> <span style=\"color: #800080;\">$email</span>=<span style=\"color: #008080;\">rtrim</span>(<span style=\"color: #800080;\">$_POST</span>[\'email\'<span style=\"color: #000000;\">]);\r\n</span><span style=\"color: #008080;\">3</span> <span style=\"color: #800080;\">$feedback</span>=<span style=\"color: #008080;\">chop</span>(<span style=\"color: #800080;\">$_POST</span>[\'feedback\']);</pre>\r\n</div>\r\n<p> </p>\n ', '2016-04-28 20:05:09', '2016-04-28 20:05:09', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3094', 'MordenPHP阅读笔记（一）——先跑再说，跑累了再走 ', '网络', '\n<p>---恢复内容开始---</p>\r\n<p>　　后台一大堆半成品，或者是几乎不成的。。。</p>\r\n<p>这本书不错，起码是别人推荐的，然后也是比较新的东西，学哪本不是学嘛，关键是得看。</p>\r\n<p>今儿个网不好，科研所需的代码下不到，看书做笔记吧。</p>\r\n<p>这本书基本将的是5.4版本后的一些新变化，写的浅显易懂，虽然鄙人走的还不顺溜，跑一跑也摔不到哪儿去，跑累了我有的是走的机会~~</p>\r\n<p><strong>（一）特性</strong></p>\r\n<p><strong>一、命名空间</strong></p>\r\n<p>一个文件一个类，用了命名空间方便互相调用；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//Namespace\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 4</span> <span style=\"color: #000000;\">namespace ModernPHP\\feature\\mingmingkongjian;\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #0000ff;\">function</span> <span style=\"color: #008080;\">var_dump</span><span style=\"color: #000000;\">(){\r\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">echo</span> \"Shit!\".\"&lt;/br&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #800080;\">$test</span>=\"OK\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$test</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">11</span> \\ModernPHP\\feature\\mingmingkongjian\\<span style=\"color: #008080;\">var_dump</span><span style=\"color: #000000;\">();\r\n</span><span style=\"color: #008080;\">12</span> \r\n<span style=\"color: #008080;\">13</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">命名空间必须顶头，但一个文件中可以有很多命名空间，然后也可以有子空间\r\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #008000;\">//厂商的命名空间是最顶层的命名空间，用于识别品牌\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #008000;\">//旨在解决命名冲突的问题，当然现在应该有比较灵活的其他用法\r\n</span><span style=\"color: #008080;\">16</span> \r\n<span style=\"color: #008080;\">17</span> <span style=\"color: #008000;\">//一个比较实用的点：导入和别名\r\n</span><span style=\"color: #008080;\">18</span> <span style=\"color: #008000;\">//导入另一个文件夹下的类定义，直接用</span>\r\n<span style=\"color: #008080;\">19</span> <span style=\"color: #0000ff;\">require</span> \'index.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">20</span> <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> a\\aaa;\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #800080;\">$daoru</span>=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> aaa;\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #800080;\">$daoru</span>-&gt;<span style=\"color: #000000;\">send();\r\n</span><span style=\"color: #008080;\">23</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">use是导入，然后在use中设置最懒的别名\r\n</span><span style=\"color: #008080;\">24</span> <span style=\"color: #008000;\">//另外，5.6版本后可以实现use 函数\r\n</span><span style=\"color: #008080;\">25</span> <span style=\"color: #008000;\">// use func a\\call;\r\n</span><span style=\"color: #008080;\">26</span> <span style=\"color: #008000;\">// \\a\\call();</span></pre>\r\n</div>\r\n<p>index.php</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">namespace a;\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> aaa{\r\n</span><span style=\"color: #008080;\"> 4</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> send(){\r\n</span><span style=\"color: #008080;\"> 5</span>         <span style=\"color: #0000ff;\">echo</span> \"ok\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> call(){\r\n</span><span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">echo</span> \"func_use is successful.\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">11</span> }</pre>\r\n</div>\r\n<p><strong>二、使用接口</strong></p>\r\n<p>接口，本来没太懂，看懂了之后简直了，牛逼啊！</p>\r\n<p>一个接口，大家只要遵守接口规定，就都能用，就这么个意思。</p>\r\n<p>下面是一个获得内容的接口示例，还可以写更多基于此接口的模块；（其中，模块中getContent的我基本都不会。。。哭）</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">\r\n//Chapter2.P19\r\n//Feature_Interface\r\n//</span>\r\n<span style=\"color: #000000;\">namespace ModernPHP\\feature\\jiekou;\r\n\r\n\r\n\r\n</span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> DocumentStore{\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$data</span>=<span style=\"color: #000000;\">[];\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> addDocument(Documentable <span style=\"color: #800080;\">$document</span>){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">这里注明只能使用接口的参数</span>\r\n        <span style=\"color: #800080;\">$key</span>=<span style=\"color: #800080;\">$document</span>-&gt;<span style=\"color: #000000;\">getID();\r\n        </span><span style=\"color: #800080;\">$value</span>=<span style=\"color: #800080;\">$document</span>-&gt;<span style=\"color: #000000;\">getContent();\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;data[<span style=\"color: #800080;\">$key</span>]=<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">;\r\n    }\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getDocuments(){\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">data;\r\n    }\r\n}\r\n\r\n</span><span style=\"color: #0000ff;\">interface</span> Documentable{     <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">定义接口，说白了就是定规矩，其他地方要用，就得说一声</span>\r\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getId();\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getContent();\r\n}\r\n\r\n</span><span style=\"color: #0000ff;\">class</span> HtmlDocument <span style=\"color: #0000ff;\">implements</span> Documentable{   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">声明要用接口；这个是获得url的内容的</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">;\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __construct(<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;url=<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">;\r\n    }\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getId(){\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">url;\r\n    }\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getContent(){\r\n        </span><span style=\"color: #800080;\">$ch</span>=curl_init();   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">这里的curl是针对url进行操作一个库（相当于）。这个命令是开启一个curl对话，所以下面这些都是一个对话</span>\r\n        curl_setopt(<span style=\"color: #800080;\">$ch</span>, CURLOPT_URL, <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">url);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>, CURLOPT_RETURNTRANSFER, 1<span style=\"color: #000000;\">);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>,CURLOPT_CONNECTTIMEOUT,3<span style=\"color: #000000;\">);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>,CURLOPT_FOLLOWLOCATION,1<span style=\"color: #000000;\">);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>,CURLOPT_MAXREDIRS,3<span style=\"color: #000000;\">);\r\n        </span><span style=\"color: #800080;\">$html</span>=curl_exec(<span style=\"color: #800080;\">$ch</span>);   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">由这个命令执行刚才的对话</span>\r\n        curl_close(<span style=\"color: #800080;\">$ch</span><span style=\"color: #000000;\">);\r\n        \r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$html</span><span style=\"color: #000000;\">;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n</span><span style=\"color: #800080;\">$documentStore</span>=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> DocumentStore();\r\n\r\n</span><span style=\"color: #800080;\">$htmlDoc</span>=<span style=\"color: #0000ff;\">new</span> HtmlDocument(\'http://www.baidu.com\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$documentStore</span>-&gt;addDocument(<span style=\"color: #800080;\">$htmlDoc</span><span style=\"color: #000000;\">);\r\n\r\n\r\n\r\n</span><span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$documentStore</span>-&gt;getDocuments());</pre>\r\n</div>\r\n<p> 另一个模块</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">class</span> StreamDocument <span style=\"color: #0000ff;\">implements</span> Documentable{  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">流媒体</span>\r\n<span style=\"color: #008080;\"> 2</span>     <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$resource</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 3</span>     <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$buffer</span>;   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">缓冲区大小</span>\r\n<span style=\"color: #008080;\"> 4</span>     \r\n<span style=\"color: #008080;\"> 5</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __construct(<span style=\"color: #800080;\">$resource</span>,<span style=\"color: #800080;\">$buffer</span>=4096<span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 6</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>=<span style=\"color: #800080;\">$resource</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 7</span>         <span style=\"color: #800080;\">$this</span>-&gt;buffer=<span style=\"color: #800080;\">$buffer</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 9</span>     \r\n<span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getId(){\r\n</span><span style=\"color: #008080;\">11</span>         <span style=\"color: #0000ff;\">return</span> \'resource-\'.(int)<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">13</span>     \r\n<span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getContent(){\r\n</span><span style=\"color: #008080;\">15</span>         <span style=\"color: #800080;\">$streamContent</span>=\'\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">16</span>         <span style=\"color: #008080;\">rewind</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>); <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">rewind() 函数将文件指针的位置倒回文件的开头</span>\r\n<span style=\"color: #008080;\">17</span>         <span style=\"color: #0000ff;\">while</span> (<span style=\"color: #008080;\">feof</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>)===<span style=\"color: #0000ff;\">false</span>){    <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">feof() 函数检测是否已到达文件末尾 (eof)。</span>\r\n<span style=\"color: #008080;\">18</span>             <span style=\"color: #800080;\">$streamContent</span>.=<span style=\"color: #008080;\">fread</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>,<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">buffer);\r\n</span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\">20</span>         \r\n<span style=\"color: #008080;\">21</span>         <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$streamContent</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">23</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong> 三、性状</strong></p>\r\n<p>奇怪的东西。。。</p>\r\n<p>其实就是为了多重继承或者一对多个不同的类别吧</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter2.P23\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Feature_Trait\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//性状\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//前面说的接口，是针对同类型的东西，实现相同的功能的；\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\">//这里的性状是针对不同的东西，实现相同的功能\r\n</span><span style=\"color: #008080;\">10</span> \r\n<span style=\"color: #008080;\">11</span> <span style=\"color: #008000;\">//基本用法如下</span>\r\n<span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">trait traitName{\r\n</span><span style=\"color: #008080;\">13</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> testThis(){\r\n</span><span style=\"color: #008080;\">14</span>         <span style=\"color: #0000ff;\">echo</span> \"This is how trait works.\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">16</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">17</span> \r\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">trait traitMore{\r\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> testAgain(){\r\n</span><span style=\"color: #008080;\">20</span>         <span style=\"color: #0000ff;\">echo</span> \"This is multiple use.\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">23</span> \r\n<span style=\"color: #008080;\">24</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> className{\r\n</span><span style=\"color: #008080;\">25</span>     <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> traitName;\r\n</span><span style=\"color: #008080;\">26</span>     <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> traitMore;\r\n</span><span style=\"color: #008080;\">27</span>     \r\n<span style=\"color: #008080;\">28</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">29</span> \r\n<span style=\"color: #008080;\">30</span> <span style=\"color: #800080;\">$classMine</span>=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> className();\r\n</span><span style=\"color: #008080;\">31</span> <span style=\"color: #800080;\">$classMine</span>-&gt;<span style=\"color: #000000;\">testThis();\r\n</span><span style=\"color: #008080;\">32</span> <span style=\"color: #800080;\">$classMine</span>-&gt;testAgain();</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong> 四、生成器</strong></p>\r\n<p>直接上代码</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter2.P26\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Feature_Generator\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//生成器\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//其实就是在函数中使用了yield语句的东西\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\">//优点在于节省了内存使用情况\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #008000;\">//方法是通过动态分配内存进行循环操作\r\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #008000;\">//典型用处是处理csv类数据文件</span>\r\n<span style=\"color: #008080;\">12</span> \r\n<span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">namespace ModernPHP\\feature\\shengchegnqi;\r\n</span><span style=\"color: #008080;\">14</span> \r\n<span style=\"color: #008080;\">15</span> <span style=\"color: #0000ff;\">function</span> getRows(<span style=\"color: #800080;\">$file</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">16</span>     <span style=\"color: #800080;\">$handle</span>=<span style=\"color: #008080;\">fopen</span>(<span style=\"color: #800080;\">$file</span>,\'rb\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">17</span>     <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$handle</span>===<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">18</span>         <span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> <span style=\"color: #0000ff;\">Exception</span>();  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">抛出错误原因</span>\r\n<span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">20</span>     <span style=\"color: #0000ff;\">while</span> (<span style=\"color: #008080;\">feof</span>(<span style=\"color: #800080;\">$handle</span>)===<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">) {\r\n</span><span style=\"color: #008080;\">21</span>         yield <span style=\"color: #008080;\">fgetcsv</span>(<span style=\"color: #800080;\">$handle</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">23</span>     <span style=\"color: #008080;\">fclose</span>(<span style=\"color: #800080;\">$handle</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">24</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">25</span> \r\n<span style=\"color: #008080;\">26</span> <span style=\"color: #0000ff;\">foreach</span> (getRows(\'data.csv\') <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$row</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">27</span>     <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$row</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">28</span>     <span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">30</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">当数据文件很大时，效果尤其明显</span></pre>\r\n</div>\r\n<p> </p>\r\n<p><strong> 五、闭包</strong></p>\r\n<p>这里闭包基本等于匿名函数</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter2.P29\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Feature_ClosePatch\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//闭包或匿名函数\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//把函数当作是变量\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\">//然后它就可以像变量一样用来用去了。。\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #008000;\">//常用做函数和方法的回调</span>\r\n<span style=\"color: #008080;\">11</span> \r\n<span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">namespace ModernPHP\\feature\\bibao;\r\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #800080;\">$var</span>=<span style=\"color: #0000ff;\">function</span> (<span style=\"color: #800080;\">$name</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">sprintf</span>(\'Hello %s\',<span style=\"color: #800080;\">$name</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">};\r\n</span><span style=\"color: #008080;\">16</span> \r\n<span style=\"color: #008080;\">17</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$var</span>(\'Andy\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">18</span> \r\n<span style=\"color: #008080;\">19</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">做回调</span>\r\n<span style=\"color: #008080;\">20</span> <span style=\"color: #800080;\">$array</span>=[2,3,4<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #800080;\">$num</span>=<span style=\"color: #008080;\">array_map</span>(<span style=\"color: #0000ff;\">function</span> (<span style=\"color: #800080;\">$number</span>){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">array_map,将函数作用到数组中的每个值上，每个值都乘以本身，并返回带有新值的数组</span>\r\n<span style=\"color: #008080;\">22</span>     <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$number</span>+1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">23</span> },<span style=\"color: #800080;\">$array</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">24</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$num</span>);</pre>\r\n</div>\r\n<p> 六、附加状态</p>\r\n<p>这个没搞懂。。。</p>\r\n<p>（二）标准</p>\r\n<p>PHP-FIG的一些约定俗成；</p>\r\n<p>---类名称，驼峰式，ShitHappens</p>\r\n<p>---方法名称，驼峰式，但首字母小写，shitHappens</p>\r\n<p>---缩进统一为4个空格</p>\r\n<p>---不写?&gt;结束符号；</p>\r\n<p>---{另起一行；</p>\r\n<p>---命名空间要有空格；</p>\r\n<p>---类中属性和方法必须有可见性声明；</p>\r\n<p>---if等控制性结构后面有空格；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter3.P44\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//PHP-FIG puts PSRs\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 6</span> \r\n<span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">namespace ModernPHP\\standard\\realize;\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> ModernPHP\\feature\\bibao;\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> ModernPHP\\feature\\fujiazhuangtai;\r\n</span><span style=\"color: #008080;\">11</span> \r\n<span style=\"color: #008080;\">12</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> ShitHappens\r\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$a</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span>     \r\n<span style=\"color: #008080;\">16</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> suck()\r\n</span><span style=\"color: #008080;\">17</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">18</span>         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$this</span>-&gt;a===<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">19</span>             <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">20</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">22</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>----------------------</p>\r\n<p>后面的都是讲述的东西，有需要的我再写吧。 </p>\r\n<p> </p>\n ', '2016-04-28 20:05:09', '2016-04-28 20:05:09', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3095', 'PHP&MySQL（三）——数组 ', '网络', '\n<p>　　前一段忙着比赛忙着找实习，最后一地鸡毛，就是长长教训罢了。。。。</p>\r\n<p>看书还是多必须的，试着高效的、踏实的做吧！！</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">  1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">  2</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">PHP数组其实能创建很多种数据结构，列表，堆栈，队列，树等\r\n</span><span style=\"color: #008080;\">  3</span> <span style=\"color: #008000;\">//数组创建array_fill</span>\r\n<span style=\"color: #008080;\">  4</span> <span style=\"color: #800080;\">$start_index</span>=1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  5</span> <span style=\"color: #800080;\">$num</span>=10<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  6</span> <span style=\"color: #800080;\">$value</span>=\"fuck\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  7</span> <span style=\"color: #800080;\">$array1</span>=<span style=\"color: #008080;\">array_fill</span>(<span style=\"color: #800080;\">$start_index</span>, <span style=\"color: #800080;\">$num</span>, <span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">); \r\n</span><span style=\"color: #008080;\">  8</span> \r\n<span style=\"color: #008080;\">  9</span> \r\n<span style=\"color: #008080;\"> 10</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array1</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 11</span> \r\n<span style=\"color: #008080;\"> 12</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #008080;\">count</span>(<span style=\"color: #800080;\">$array1</span>); <span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"; <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">count计数实现，返回一个数，代表数组长度\r\n</span><span style=\"color: #008080;\"> 13</span> <span style=\"color: #008000;\">//print_r(array_count_values($array1));\r\n</span><span style=\"color: #008080;\"> 14</span> \r\n<span style=\"color: #008080;\"> 15</span> <span style=\"color: #008000;\">//移除元素</span>\r\n<span style=\"color: #008080;\"> 16</span> <span style=\"color: #0000ff;\">unset</span>(<span style=\"color: #800080;\">$array1</span>[3<span style=\"color: #000000;\">]);\r\n</span><span style=\"color: #008080;\"> 17</span> <span style=\"color: #800080;\">$array2</span>=<span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 18</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">unset($array1);</span>\r\n<span style=\"color: #008080;\"> 19</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array1</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 20</span> \r\n<span style=\"color: #008080;\"> 21</span> <span style=\"color: #800080;\">$start</span>=\"a\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 22</span> <span style=\"color: #800080;\">$limit</span>=\"z\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 23</span> <span style=\"color: #800080;\">$array_letters</span>=<span style=\"color: #008080;\">range</span>(<span style=\"color: #800080;\">$start</span>, <span style=\"color: #800080;\">$limit</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 24</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array_letters</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 25</span> \r\n<span style=\"color: #008080;\"> 26</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">异构数组，即数组中有各种类型的</span>\r\n<span style=\"color: #008080;\"> 27</span> <span style=\"color: #800080;\">$array_yigou</span>=<span style=\"color: #0000ff;\">array</span>(\"fuck\",1,23.343,<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 28</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 29</span> \r\n<span style=\"color: #008080;\"> 30</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多维数组</span>\r\n<span style=\"color: #008080;\"> 31</span> <span style=\"color: #800080;\">$array_dimensions</span>=<span style=\"color: #0000ff;\">array</span>(<span style=\"color: #800080;\">$array1</span>,<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 32</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_dimensions</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 33</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$array_dimensions</span>[1][2];<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 34</span> \r\n<span style=\"color: #008080;\"> 35</span> <span style=\"color: #800080;\">$array_complicated</span>=<span style=\"color: #0000ff;\">array</span>(<span style=\"color: #800080;\">$array_dimensions</span>,<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 36</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_complicated</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 37</span> \r\n<span style=\"color: #008080;\"> 38</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">foreach,一开始我理解上有点问题，foreach本来就是一个循环了！！！</span>\r\n<span style=\"color: #008080;\"> 39</span> <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$array1</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$person</span> =&gt; <span style=\"color: #800080;\">$saying</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 40</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 41</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 42</span> \r\n<span style=\"color: #008080;\"> 43</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">比较适合foreach理解的一种方式</span>\r\n<span style=\"color: #008080;\"> 44</span> <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$array1</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$person</span> =&gt; <span style=\"color: #800080;\">$saying</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 45</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" said \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 46</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 47</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 48</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 49</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 50</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 51</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 52</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 53</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 54</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 55</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 56</span> \r\n<span style=\"color: #008080;\"> 57</span> <span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 58</span> \r\n<span style=\"color: #008080;\"> 59</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">数组计数\r\n</span><span style=\"color: #008080;\"> 60</span> <span style=\"color: #008000;\">//array_count_values返回一个数组,统计（！！）每个value的个数</span>\r\n<span style=\"color: #008080;\"> 61</span> <span style=\"color: #800080;\">$array1Value</span>=<span style=\"color: #008080;\">array_count_values</span>(<span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 62</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array1</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 63</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #800080;\">$array1Value</span>[\"fuck\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #008080;\"> 64</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">count计数的是“个体”的数目吧</span>\r\n<span style=\"color: #008080;\"> 65</span> <span style=\"color: #0000ff;\">print</span> \"There is \".<span style=\"color: #008080;\">count</span>(<span style=\"color: #800080;\">$array_letters</span>).\" letters.\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 66</span> \r\n<span style=\"color: #008080;\"> 67</span> <span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 68</span> \r\n<span style=\"color: #008080;\"> 69</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">神奇的explode和implode\r\n</span><span style=\"color: #008080;\"> 70</span> <span style=\"color: #008000;\">//就是字符串的拆解和安装\r\n</span><span style=\"color: #008080;\"> 71</span> <span style=\"color: #008000;\">//注意一定要有glue或者什么，不能不输入</span>\r\n<span style=\"color: #008080;\"> 72</span> <span style=\"color: #800080;\">$sentence</span>=\"What is your name?\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 73</span> <span style=\"color: #800080;\">$explode_demo</span>=<span style=\"color: #008080;\">explode</span>(\" \", <span style=\"color: #800080;\">$sentence</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 74</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$explode_demo</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 75</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">implode</span>(\" \", <span style=\"color: #800080;\">$explode_demo</span>));<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 76</span> \r\n<span style=\"color: #008080;\"> 77</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">数组元素搜索判断\r\n</span><span style=\"color: #008080;\"> 78</span> <span style=\"color: #008000;\">//in_array判断是否存在,array_search返回在哪里</span>\r\n<span style=\"color: #008080;\"> 79</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #008080;\">in_array</span>(\"fuck\", <span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 80</span> <span style=\"color: #800080;\">$check_list</span>=\"fuck you\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 81</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$check_list</span>, <span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 82</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">in_array第三个参数为严格检查类型，默认为false</span>\r\n<span style=\"color: #008080;\"> 83</span> <span style=\"color: #800080;\">$check_list2</span>=\"1 is in here\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 84</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$check_list2</span>, <span style=\"color: #800080;\">$array_yigou</span>,<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 85</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$check_list2</span>, <span style=\"color: #800080;\">$array_yigou</span>,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 86</span> \r\n<span style=\"color: #008080;\"> 87</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #008080;\">array_search</span>(\"fuck\", <span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 88</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #008080;\">array_search</span>(1, <span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 89</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">array_key_exists判断key是不是存在</span>\r\n<span style=\"color: #008080;\"> 90</span> <span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 91</span> \r\n<span style=\"color: #008080;\"> 92</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">直接利用key或value</span>\r\n<span style=\"color: #008080;\"> 93</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">array_keys</span>(<span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 94</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">array_values</span>(<span style=\"color: #800080;\">$array_dimensions</span>));<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 95</span> \r\n<span style=\"color: #008080;\"> 96</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">implode和array_merge</span>\r\n<span style=\"color: #008080;\"> 97</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">implode</span>(\" \", <span style=\"color: #800080;\">$array1</span>));<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 98</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">array_merge</span>(<span style=\"color: #800080;\">$array1</span>,<span style=\"color: #800080;\">$array_letters</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 99</span> \r\n<span style=\"color: #008080;\">100</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">数组排序\r\n</span><span style=\"color: #008080;\">101</span> <span style=\"color: #008000;\">//注意排序之后，直接改变/返回到原数组\r\n</span><span style=\"color: #008080;\">102</span> <span style=\"color: #008000;\">//sort升rsort降\r\n</span><span style=\"color: #008080;\">103</span> <span style=\"color: #008000;\">//这里也是我第一次对PHP语言有理解的地方，各种封装好的函数，需要的就是多用，知道，然后熟练的调用\r\n</span><span style=\"color: #008080;\">104</span> <span style=\"color: #008000;\">//自己编写的排序函数，往往没有其自带的/现成的函数效率/效果好</span>\r\n<span style=\"color: #008080;\">105</span> <span style=\"color: #800080;\">$array_num</span>=<span style=\"color: #008080;\">range</span>(2, 123,3<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">106</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array_num</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">107</span> <span style=\"color: #008080;\">rsort</span>(<span style=\"color: #800080;\">$array_num</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">108</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array_num</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">109</span> <span style=\"color: #008080;\">sort</span>(<span style=\"color: #800080;\">$array_letters</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">110</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_dimensions</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">111</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">关联数组，若想保持键值的关系不变，应该用asort</span>\r\n<span style=\"color: #008080;\">112</span> <span style=\"color: #008080;\">sort</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">113</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">114</span> <span style=\"color: #008080;\">rsort</span>(<span style=\"color: #800080;\">$array_yigou</span>,<span style=\"color: #000000;\">SORT_NUMERIC);\r\n</span><span style=\"color: #008080;\">115</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">116</span> <span style=\"color: #008080;\">asort</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">117</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">118</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">ksort是根据key值来排序的\r\n</span><span style=\"color: #008080;\">119</span> \r\n<span style=\"color: #008080;\">120</span> <span style=\"color: #008000;\">//总结_数组\r\n</span><span style=\"color: #008080;\">121</span> <span style=\"color: #008000;\">//数组创建——array(),array_fill(),range()\r\n</span><span style=\"color: #008080;\">122</span> <span style=\"color: #008000;\">//数组输出——var_dump,print_r\r\n</span><span style=\"color: #008080;\">123</span> <span style=\"color: #008000;\">//数组种类——索引数组，关联数组；异构数组，多维数组\r\n</span><span style=\"color: #008080;\">124</span> <span style=\"color: #008000;\">//数组排序——sort(),rsort(),asort(),ksort()\r\n</span><span style=\"color: #008080;\">125</span> <span style=\"color: #008000;\">//foreach的使用\r\n</span><span style=\"color: #008080;\">126</span> <span style=\"color: #008000;\">//implode(),explode()\r\n</span><span style=\"color: #008080;\">127</span> <span style=\"color: #008000;\">//is_array,in_array,array_search\r\n</span><span style=\"color: #008080;\">128</span> <span style=\"color: #008000;\">//array_count_values,count</span></pre>\r\n</div>\r\n<p> </p>\n ', '2016-04-28 20:05:09', '2016-04-28 20:05:09', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3096', 'PHP实现文件上传下载——心在忙而已 ', '网络', '\n<p>　　这一周都没有写什么东西，是啊，一周时间都没有学习太多新的东西，除了开车。</p>\r\n<p>妈蛋啊，天天中午去学车然后两周没有午觉的日子还是很崩溃的，加上之后工作压力带来的心忙，宝宝不开心啊。</p>\r\n<p>不过，也是自己不是那么能吃苦吧。那天看到的那句话怎么说的来着，我痛恨自己，在简单和困难之前，选择了前者；在什么什么面前，balabala，不是很鸡汤，但有点触动，愿少点矫情和娇气。</p>\r\n<p><strong>PHP实现文件上传与下载——来自mooc网</strong></p>\r\n<p><strong>一、上传原理与配置</strong></p>\r\n<p><strong>1.1 原理</strong></p>\r\n<p>将客户端文件<strong>上传到服务器端</strong>，再将服务器端的文件（<strong>临时文件）移动到指定目录</strong>即可。</p>\r\n<p><strong>1.2 客户端配置</strong></p>\r\n<p>所需：<strong>表单</strong>页面（选择上传文件）；</p>\r\n<p>具体而言：<strong>发送方式为POST，添加enctype=\"multipart/form-data\"属性</strong>，两者缺一不可（但是，优缺点并存，这里也限定了上传的方式和上传的文件之后的调用等方面，后面会说到）</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：\r\n</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">php\r\n\r\n</span><span style=\"color: #0000ff;\">?&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p>先是表单页面（请自动忽略前端问题。。。），关键就是form的属性；另外就是<strong>input 中用到了type=\"file\"这一点</strong>（体现到php的强大的拓展等等）。</p>\r\n<p>然后是doAction</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$_FILES:文件上传变量\r\n//print_r($_FILES);</span>\r\n<span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'name\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$type</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'type\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$tmp_name</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'tmp_name\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$size</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'size\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$error</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'error\'<span style=\"color: #000000;\">];\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">将服务器上的临时文件移动到指定位置\r\n//方法一move_upload_file($tmp_name,$destination)\r\n//move_uploaded_file($tmp_name, \"uploads/\".$filename);//文件夹应提前建立好，不然报错\r\n//方法二copy($src,$des)\r\n//以上两个函数都是成功返回真，否则返回false\r\n//copy($tmp_name, \"copies/\".$filename);\r\n//注意，不能两个方法都对临时文件进行操作，临时文件似乎操作完就没了，我们试试反过来</span>\r\n<span style=\"color: #008080;\">copy</span>(<span style=\"color: #800080;\">$tmp_name</span>, \"copies/\".<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span>, \"uploads/\".<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">能够实现，说明move那个函数基本上相当于剪切；copy就是copy，临时文件还在\r\n\r\n//另外，错误信息也是不一样的，遇到错误可以查看或者直接报告给用户</span>\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$error</span>==0<span style=\"color: #000000;\">) {\r\n    </span><span style=\"color: #0000ff;\">echo</span> \"上传成功！\"<span style=\"color: #000000;\">;\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">case</span> 1:\r\n            <span style=\"color: #0000ff;\">echo</span> \"超过了上传文件的最大值，请上传2M以下文件\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 2:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件过多，请一次上传20个及以下文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 3:\r\n            <span style=\"color: #0000ff;\">echo</span> \"文件并未完全上传，请再次尝试！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 4:\r\n            <span style=\"color: #0000ff;\">echo</span> \"未选择上传文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 5:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件为0\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p><span style=\"line-height: 1.5;\">先把print_r($_FILES)这个信息看一下</span></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #000000;\">Array\r\n(\r\n    [myFile] =&gt; Array\r\n        (\r\n            [name] =&gt; 梁博_简历.doc\r\n            [type] =&gt; application/msword\r\n            [tmp_name] =&gt; D:\\wamp\\tmp\\php1D78.tmp\r\n            [error] =&gt; 0\r\n            [size] =&gt; 75776\r\n        )\r\n\r\n)</span></pre>\r\n</div>\r\n<p>所以得到的是个二维数组，该怎么用，都是基本的东西（其实我喜欢降维再用）；</p>\r\n<p>基本是一眼就懂的东西，不罗嗦，关键有两个：<strong>tmp_name临时文件名；error报错信息（代号，后面可以利用）</strong>；</p>\r\n<p>然后这里看一下doAction后面一部分，利用报错信息来反馈给用户，需要说明的是为什么报错，和报错信息是什么都；</p>\r\n<p><strong>1.3 关于报错</strong></p>\r\n<p><strong>--报错原因</strong></p>\r\n<p>基本上都是超过或者不符合服务器关于上传文件的配置，那么服务器端<strong>配置</strong>有哪些呢？</p>\r\n<p>先考虑上传我们用了什么？POST，upload</p>\r\n<p>所以在php.ini中找这么几项：</p>\r\n<p>file_upload:On</p>\r\n<p>upload_tmp_dir=——临时文件保存目录；</p>\r\n<p>upload_max_filesize=2M</p>\r\n<p>max_file_uploads=20——允许一次上传的最大文件数量（注意和上面那个的区别，有没有size，别乱想）</p>\r\n<p>post_max_size=8M——post方式发送数据的最大值</p>\r\n<p>其他相关配置</p>\r\n<p>max_exectuion_time=-1——最大执行时间，避免程序不好占用服务器资源；</p>\r\n<p>max_input_time=60</p>\r\n<p>max_input_nesting_level=64——输入嵌套深度；</p>\r\n<p>memory_limit=128M——最大单线程的独立内存使用量</p>\r\n<p>总之都是有关资源的配置。</p>\r\n<p><strong>--错误号</strong></p>\r\n<p>以下（偷懒）引自http://blog.sina.com.cn/s/blog_3cdfaea201008utf.html</p>\r\n<p>UPLOAD_ERR_OK             值：0; 没有错误发生，文件上传成功。<br>  UPLOAD_ERR_INI_SIZE      \r\n值：1; 上传的文件超过了 php.ini 中 upload_max_filesize \r\n选项限制的值。<br>  UPLOAD_ERR_FORM_SIZE  值：2; 上传文件的大小超过了 HTML 表单中 \r\nMAX_FILE_SIZE \r\n选项指定的值。<br>  UPLOAD_ERR_PARTIAL          \r\n值：3; \r\n文件只有部分被上传。<br>  UPLOAD_ERR_NO_FILE          \r\n值：4; 没有文件被上传。  </p>\r\n<p>注意：这个错误信息是第一步上传的信息，也就是上传到临时文件夹的情况，而不是move或者copy的情况。 </p>\r\n<p><strong>二、上传相关限制</strong></p>\r\n<p><strong>2.1 客户端限制</strong></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction2.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"hidden\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"MAX_FILE_SIZE\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"101321\"</span> <span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：\r\n</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile\"</span><span style=\"color: #ff0000;\"> accept</span><span style=\"color: #0000ff;\">=\"image/jpeg,image/gif,text/html\"</span><span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这里用input的属性对上传文件的大小和类型进行了限制，但是个人感觉：一，html代码是“可见的”；二，常不起作用（没找到原因，但因为第一个我也想放弃它，知道就好。 </p>\r\n<p> 2.2 服务器端限制</p>\r\n<p>主要限制大小和类型，再有就是方式。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">接受文件，临时文件信息</span>\r\n<span style=\"color: #800080;\">$fileinfo</span>=<span style=\"color: #800080;\">$_FILES</span>[\"myFile\"];<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">降维操作</span>\r\n<span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$tmp_name</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"tmp_name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$size</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"size\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$error</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"error\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$type</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"type\"<span style=\"color: #000000;\">];\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">服务器端设定限制</span>\r\n<span style=\"color: #800080;\">$maxsize</span>=10485760;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">10M,10*1024*1024</span>\r\n<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'tif\');<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">允许上传的文件类型（拓展名</span>\r\n<span style=\"color: #800080;\">$ext</span>=<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$filename</span>,PATHINFO_EXTENSION);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">提取上传文件的拓展名\r\n\r\n//目的信息</span>\r\n<span style=\"color: #800080;\">$path</span>=\"uploads\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$path</span>)) {   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">当目录不存在，就创建目录</span>\r\n    <span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$path</span>,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n    </span><span style=\"color: #008080;\">chmod</span>(<span style=\"color: #800080;\">$path</span>, 0777<span style=\"color: #000000;\">);\r\n}\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$destination=$path.\"/\".$filename;\r\n//得到唯一的文件名！防止因为文件名相同而产生覆盖</span>\r\n<span style=\"color: #800080;\">$uniName</span>=<span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span>)).<span style=\"color: #800080;\">$ext</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">md5加密，uniqid产生唯一id，microtime做前缀</span>\r\n\r\n\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$error</span>==0<span style=\"color: #000000;\">) {\r\n    </span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$size</span>&gt;<span style=\"color: #800080;\">$maxsize</span><span style=\"color: #000000;\">) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传文件过大！\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$ext</span>, <span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"非法文件类型\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传方式有误，请使用post方式\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (@<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span>, <span style=\"color: #800080;\">$uniName</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">@错误抑制符，不让用户看到警告</span>\r\n        <span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传成功!\"<span style=\"color: #000000;\">;\r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传失败!\"<span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断是否为真实图片（防止伪装成图片的病毒一类的</span>\r\n    <span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$tmp_name</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">getimagesize真实返回数组，否则返回false</span>\r\n        <span style=\"color: #0000ff;\">exit</span>(\"不是真正的图片类型\"<span style=\"color: #000000;\">);\r\n    }\r\n\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">case</span> 1:\r\n            <span style=\"color: #0000ff;\">echo</span> \"超过了上传文件的最大值，请上传2M以下文件\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 2:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件过多，请一次上传20个及以下文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 3:\r\n            <span style=\"color: #0000ff;\">echo</span> \"文件并未完全上传，请再次尝试！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 4:\r\n            <span style=\"color: #0000ff;\">echo</span> \"未选择上传文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 7:\r\n            <span style=\"color: #0000ff;\">echo</span> \"没有临时文件夹\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这里，具体实现都有注释，每一步其实都可以自己试试的，很有趣。</p>\r\n<p>2.3 封装</p>\r\n<p>函数</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #0000ff;\">function</span> uploadFile(<span style=\"color: #800080;\">$fileInfo</span>,<span style=\"color: #800080;\">$path</span>,<span style=\"color: #800080;\">$allowExt</span>,<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">){\r\n\r\n</span><span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$tmp_name</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"tmp_name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$size</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"size\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$error</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"error\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$type</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"type\"<span style=\"color: #000000;\">];\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">服务器端设定限制</span>\r\n\r\n<span style=\"color: #800080;\">$ext</span>=<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$filename</span>,<span style=\"color: #000000;\">PATHINFO_EXTENSION);\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">目的信息</span>\r\n<span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$path</span><span style=\"color: #000000;\">)) {   \r\n    </span><span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$path</span>,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n    </span><span style=\"color: #008080;\">chmod</span>(<span style=\"color: #800080;\">$path</span>, 0777<span style=\"color: #000000;\">);\r\n}\r\n</span><span style=\"color: #800080;\">$uniName</span>=<span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span>)).\'.\'.<span style=\"color: #800080;\">$ext</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$destination</span>=<span style=\"color: #800080;\">$path</span>.\"/\".<span style=\"color: #800080;\">$uniName</span><span style=\"color: #000000;\">;\r\n\r\n\r\n</span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$error</span>==0<span style=\"color: #000000;\">) {\r\n    </span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$size</span>&gt;<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传文件过大！\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$ext</span>, <span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"非法文件类型\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传方式有误，请使用post方式\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断是否为真实图片（防止伪装成图片的病毒一类的</span>\r\n    <span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$tmp_name</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">getimagesize真实返回数组，否则返回false</span>\r\n        <span style=\"color: #0000ff;\">exit</span>(\"不是真正的图片类型\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (@<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span>, <span style=\"color: #800080;\">$destination</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">@错误抑制符，不让用户看到警告</span>\r\n        <span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传成功!\"<span style=\"color: #000000;\">;\r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传失败!\"<span style=\"color: #000000;\">;\r\n    }\r\n    \r\n\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">case</span> 1:\r\n            <span style=\"color: #0000ff;\">echo</span> \"超过了上传文件的最大值，请上传2M以下文件\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 2:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件过多，请一次上传20个及以下文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 3:\r\n            <span style=\"color: #0000ff;\">echo</span> \"文件并未完全上传，请再次尝试！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 4:\r\n            <span style=\"color: #0000ff;\">echo</span> \"未选择上传文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 7:\r\n            <span style=\"color: #0000ff;\">echo</span> \"没有临时文件夹\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n    }\r\n}\r\n</span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$destination</span><span style=\"color: #000000;\">;\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>调用</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$fileInfo</span>=<span style=\"color: #800080;\">$_FILES</span>[\"myFile\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$maxSize</span>=10485760;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">10M,10*1024*1024</span>\r\n<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'tif\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$path</span>=\"uploads\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">include_once</span> \'upFunc.php\'<span style=\"color: #000000;\">;\r\nuploadFile(</span><span style=\"color: #800080;\">$fileInfo</span>, <span style=\"color: #800080;\">$path</span>, <span style=\"color: #800080;\">$allowExt</span>, <span style=\"color: #800080;\">$maxSize</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong>三、多文件的上传实现</strong></p>\r\n<p><strong>3.1 利用单文件封装</strong></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction5.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile1\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile2\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile3\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile4\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">print_r($_FILES);</span>\r\n<span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #0000ff;\">include_once</span> \'upFunc.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$_FILES</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #800080;\">$file</span>[]=uploadFile(<span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">);\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这里的思路，从print_r($_FILES)中去找，打印出来看到是个二维数组，很简单，遍历去用就好了！ </p>\r\n<p>上面那个function的定义改一下，给定一些默认值</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span> uploadFile(<span style=\"color: #800080;\">$fileInfo</span>,<span style=\"color: #800080;\">$path</span>=\"uploads\",<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'tif\'),<span style=\"color: #800080;\">$maxSize</span>=10485760){</pre>\r\n</div>\r\n<p> </p>\r\n<p>这样子，简单是简单，但遇到一些问题。</p>\r\n<p>正常的上传4个图片是没问题，但要是中间激活了函数中的exit，就会立即停止，导致其他图片也无法上传。</p>\r\n<p><strong>3.2 升级版封装</strong></p>\r\n<p>旨在实现针对多个或单个文件上传的封装</p>\r\n<p>首先这样子写个静态文件</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction5.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>打印一下$_FILES</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #000000;\">Array\r\n(\r\n    [myFile] =&gt; Array\r\n        (\r\n            [name] =&gt; Array\r\n                (\r\n                    [0] =&gt; test32.png\r\n                    [1] =&gt; test32.png\r\n                    [2] =&gt; 333.png\r\n                    [3] =&gt; test41.png\r\n                )\r\n\r\n            [type] =&gt; Array\r\n                (\r\n                    [0] =&gt; image/png\r\n                    [1] =&gt; image/png\r\n                    [2] =&gt; image/png\r\n                    [3] =&gt; image/png\r\n                )\r\n\r\n            [tmp_name] =&gt; Array\r\n                (\r\n                    [0] =&gt; D:\\wamp\\tmp\\php831C.tmp\r\n                    [1] =&gt; D:\\wamp\\tmp\\php834C.tmp\r\n                    [2] =&gt; D:\\wamp\\tmp\\php837C.tmp\r\n                    [3] =&gt; D:\\wamp\\tmp\\php83BB.tmp\r\n                )\r\n\r\n            [error] =&gt; Array\r\n                (\r\n                    [0] =&gt; 0\r\n                    [1] =&gt; 0\r\n                    [2] =&gt; 0\r\n                    [3] =&gt; 0\r\n                )\r\n\r\n            [size] =&gt; Array\r\n                (\r\n                    [0] =&gt; 46174\r\n                    [1] =&gt; 46174\r\n                    [2] =&gt; 34196\r\n                    [3] =&gt; 38514\r\n                )\r\n\r\n        )\r\n\r\n)</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>可以得到一个三维数组。</p>\r\n<p>复杂是复杂了，但复杂的有规律，各项数值都在一起了，很方便我们取值！！</p>\r\n<p>所以先得到文件信息，<strong>变成单文件处理那种信息</strong></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getFiles(){\r\n    </span><span style=\"color: #800080;\">$i</span>=0<span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">foreach</span>(<span style=\"color: #800080;\">$_FILES</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$file</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #008080;\">is_string</span>(<span style=\"color: #800080;\">$file</span>[\'name\'])){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">单文件判定</span>\r\n            <span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>]=<span style=\"color: #800080;\">$file</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #800080;\">$i</span>++<span style=\"color: #000000;\">;\r\n        }</span><span style=\"color: #0000ff;\">elseif</span>(<span style=\"color: #008080;\">is_array</span>(<span style=\"color: #800080;\">$file</span>[\'name\'<span style=\"color: #000000;\">])){\r\n            </span><span style=\"color: #0000ff;\">foreach</span>(<span style=\"color: #800080;\">$file</span>[\'name\'] <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$key</span>=&gt;<span style=\"color: #800080;\">$val</span>){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">我的天，这个$key用的diao</span>\r\n                <span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'name\']=<span style=\"color: #800080;\">$file</span>[\'name\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'type\']=<span style=\"color: #800080;\">$file</span>[\'type\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'tmp_name\']=<span style=\"color: #800080;\">$file</span>[\'tmp_name\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'error\']=<span style=\"color: #800080;\">$file</span>[\'error\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'size\']=<span style=\"color: #800080;\">$file</span>[\'size\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$i</span>++<span style=\"color: #000000;\">;\r\n            }\r\n        }\r\n    }\r\n    </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$files</span><span style=\"color: #000000;\">;\r\n    \r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>然后之前的那种exit错误，就把exit改一下就好了，这里用res</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span> uploadFile(<span style=\"color: #800080;\">$fileInfo</span>,<span style=\"color: #800080;\">$path</span>=\'./uploads\',<span style=\"color: #800080;\">$flag</span>=<span style=\"color: #0000ff;\">true</span>,<span style=\"color: #800080;\">$maxSize</span>=1048576,<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'gif\'<span style=\"color: #000000;\">)){\r\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$flag=true;\r\n    //$allowExt=array(\'jpeg\',\'jpg\',\'gif\',\'png\');\r\n    //$maxSize=1048576;//1M\r\n    //判断错误号</span>\r\n    <span style=\"color: #800080;\">$res</span>=<span style=\"color: #0000ff;\">array</span><span style=\"color: #000000;\">();\r\n    </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'error\']===<span style=\"color: #000000;\">UPLOAD_ERR_OK){\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测上传得到小</span>\r\n        <span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'size\']&gt;<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'上传文件过大\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #800080;\">$ext</span>=getExt(<span style=\"color: #800080;\">$fileInfo</span>[\'name\'<span style=\"color: #000000;\">]);\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测上传文件的文件类型</span>\r\n        <span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$ext</span>,<span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">)){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'非法文件类型\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测是否是真实的图片类型</span>\r\n        <span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$flag</span><span style=\"color: #000000;\">){\r\n            </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n                </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'不是真实图片类型\'<span style=\"color: #000000;\">;\r\n            }\r\n        }\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测文件是否是通过HTTP POST上传上来的</span>\r\n        <span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'文件不是通过HTTP POST方式上传上来的\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$res</span>) <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$res</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$path=\'./uploads\';</span>\r\n        <span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$path</span><span style=\"color: #000000;\">)){\r\n            </span><span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$path</span>,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n            </span><span style=\"color: #008080;\">chmod</span>(<span style=\"color: #800080;\">$path</span>,0777<span style=\"color: #000000;\">);\r\n        }\r\n        </span><span style=\"color: #800080;\">$uniName</span>=<span style=\"color: #000000;\">getUniName();\r\n        </span><span style=\"color: #800080;\">$destination</span>=<span style=\"color: #800080;\">$path</span>.\'/\'.<span style=\"color: #800080;\">$uniName</span>.\'.\'.<span style=\"color: #800080;\">$ext</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'tmp_name\'],<span style=\"color: #800080;\">$destination</span><span style=\"color: #000000;\">)){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'文件移动失败\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'上传成功\'<span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$res</span>[\'dest\']=<span style=\"color: #800080;\">$destination</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$res</span><span style=\"color: #000000;\">;\r\n        \r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">匹配错误信息</span>\r\n        <span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$fileInfo</span> [\'error\'<span style=\"color: #000000;\">]) {\r\n            </span><span style=\"color: #0000ff;\">case</span> 1 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'上传文件超过了PHP配置文件中upload_max_filesize选项的值\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 2 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'超过了表单MAX_FILE_SIZE限制的大小\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 3 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'文件部分被上传\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 4 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'没有选择上传文件\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 6 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'没有找到临时目录\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 7 :\r\n            <span style=\"color: #0000ff;\">case</span> 8 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'系统错误\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$res</span><span style=\"color: #000000;\">;\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>里面封装了两个小的</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span> getExt(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">strtolower</span>(<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$filename</span>,<span style=\"color: #000000;\">PATHINFO_EXTENSION));\r\n}\r\n\r\n</span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n * 产生唯一字符串\r\n * @return string\r\n </span><span style=\"color: #008000;\">*/</span>\r\n<span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getUniName(){\r\n    </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">));\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>然后静态中，用multiple属性实现多个文件的输入；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction6.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"POST\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span><span style=\"color: #ff0000;\"> multiple</span><span style=\"color: #0000ff;\">=\'multiple\' </span><span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>doAction6</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">print_r($_FILES);</span>\r\n<span style=\"color: #008080;\">header</span>(\"content-type:text/html;charset=utf-8\"<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #0000ff;\">require_once</span> \'upFunc2.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">require_once</span> \'common.func.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$files</span>=<span style=\"color: #000000;\">getFiles();\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> print_r($files);</span>\r\n<span style=\"color: #0000ff;\">foreach</span>(<span style=\"color: #800080;\">$files</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #800080;\">$res</span>=uploadFile(<span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">);\r\n    </span><span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$res</span>[\'mes\'],\'&lt;br/&gt;\'<span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #800080;\">$uploadFiles</span>[]=@<span style=\"color: #800080;\">$res</span>[\'dest\'<span style=\"color: #000000;\">];\r\n}\r\n</span><span style=\"color: #800080;\">$uploadFiles</span>=<span style=\"color: #008080;\">array_values</span>(<span style=\"color: #008080;\">array_filter</span>(<span style=\"color: #800080;\">$uploadFiles</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">print_r($uploadFiles);</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这样子的几个文件，就实现比较强大的面向过程的上传文件的功能（学的叫一个心酸。。。）；</p>\r\n<p><strong>四、面向对象的文件上传</strong></p>\r\n<p> （不是很写的动了。。。先粘过来，再说吧。。。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> upload{\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$fileName</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$allowMime</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$uploadPath</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$imgFlag</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$ext</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * @param string $fileName\r\n     * @param string $uploadPath\r\n     * @param string $imgFlag\r\n     * @param number $maxSize\r\n     * @param array $allowExt\r\n     * @param array $allowMime\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __construct(<span style=\"color: #800080;\">$fileName</span>=\'myFile\',<span style=\"color: #800080;\">$uploadPath</span>=\'./uploads\',<span style=\"color: #800080;\">$imgFlag</span>=<span style=\"color: #0000ff;\">true</span>,<span style=\"color: #800080;\">$maxSize</span>=5242880,<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'gif\'),<span style=\"color: #800080;\">$allowMime</span>=<span style=\"color: #0000ff;\">array</span>(\'image/jpeg\',\'image/png\',\'image/gif\'<span style=\"color: #000000;\">)){\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;fileName=<span style=\"color: #800080;\">$fileName</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;maxSize=<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;allowMime=<span style=\"color: #800080;\">$allowMime</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;allowExt=<span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;uploadPath=<span style=\"color: #800080;\">$uploadPath</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;imgFlag=<span style=\"color: #800080;\">$imgFlag</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;fileInfo=<span style=\"color: #800080;\">$_FILES</span>[<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">fileName];\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测上传文件是否出错\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkError(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">is_null</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">fileInfo)){\r\n            </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'error\']&gt;0<span style=\"color: #000000;\">){\r\n                </span><span style=\"color: #0000ff;\">switch</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'error\'<span style=\"color: #000000;\">]){\r\n                    </span><span style=\"color: #0000ff;\">case</span> 1:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'超过了PHP配置文件中upload_max_filesize选项的值\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 2:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'超过了表单中MAX_FILE_SIZE设置的值\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 3:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'文件部分被上传\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 4:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'没有选择上传文件\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 6:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'没有找到临时目录\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 7:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'文件不可写\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 8:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'由于PHP的扩展程序中断文件上传\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                        \r\n                }\r\n                </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n            }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n                </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n            }\r\n        }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'文件上传出错\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测上传文件的大小\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkSize(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'size\']&gt;<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">maxSize){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'上传文件过大\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测扩展名\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkExt(){\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;ext=<span style=\"color: #008080;\">strtolower</span>(<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'name\'],<span style=\"color: #000000;\">PATHINFO_EXTENSION));\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$this</span>-&gt;ext,<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">allowExt)){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'不允许的扩展名\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测文件的类型\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkMime(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'type\'],<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">allowMime)){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'不允许的文件类型\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测是否是真实图片\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkTrueImg(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">imgFlag){\r\n            </span><span style=\"color: #0000ff;\">if</span>(!@<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n                </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'不是真实图片\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n            }\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n        }\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测是否通过HTTP POST方式上传上来的\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkHTTPPost(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'文件不是通过HTTP POST方式上传上来的\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     *显示错误 \r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> showError(){\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\'&lt;span style=\"color:red\"&gt;\'.<span style=\"color: #800080;\">$this</span>-&gt;error.\'&lt;/span&gt;\'<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测目录不存在则创建\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkUploadPath(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">uploadPath)){\r\n            </span><span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$this</span>-&gt;uploadPath,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n        }\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 产生唯一字符串\r\n     * @return string\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getUniName(){\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">));\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 上传文件\r\n     * @return string\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> uploadFile(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;checkError()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkSize()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkExt()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkMime()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkTrueImg()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">checkHTTPPost()){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">checkUploadPath();\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;uniName=<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">getUniName();\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;destination=<span style=\"color: #800080;\">$this</span>-&gt;uploadPath.\'/\'.<span style=\"color: #800080;\">$this</span>-&gt;uniName.\'.\'.<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">ext;\r\n            </span><span style=\"color: #0000ff;\">if</span>(@<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'tmp_name\'], <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">destination)){\r\n                </span><span style=\"color: #0000ff;\">return</span>  <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">destination;\r\n            }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n                </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'文件移动失败\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">showError();\r\n            }\r\n        }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">showError();\r\n        }\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p> </p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #0000ff;\">require_once</span> \'upload.class.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$upload</span>=<span style=\"color: #0000ff;\">new</span> upload(\'myFile1\',\'imooc\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$dest</span>=<span style=\"color: #800080;\">$upload</span>-&gt;<span style=\"color: #000000;\">uploadFile();\r\n</span><span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$dest</span>;</pre>\r\n</div>\r\n<p> </p>\r\n<p>四、下载</p>\r\n<p>对于浏览器不识别的，可以直接下载，但对于能识别的，需要多一两步</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html </span><span style=\"color: #ff0000;\">xmlns</span><span style=\"color: #0000ff;\">=\"http://www.w3.org/1999/xhtml\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span> <span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"1.rar\"</span><span style=\"color: #0000ff;\">&gt;</span>下载1.rar<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">br </span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"1.jpg\"</span><span style=\"color: #0000ff;\">&gt;</span>下载1.jpg<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">br </span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"doDownload.php?filename=1.jpg\"</span><span style=\"color: #0000ff;\">&gt;</span>通过程序下载1.jpg<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">br </span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"doDownload.php?filename=../upload/nv.jpg\"</span><span style=\"color: #0000ff;\">&gt;</span>下载nv.jpg<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">php\r\n\r\n</span><span style=\"color: #0000ff;\">?&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$_GET</span>[\'filename\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #008080;\">header</span>(\'content-disposition:attachment;filename=\'.<span style=\"color: #008080;\">basename</span>(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\">header</span>(\'content-length:\'.<span style=\"color: #008080;\">filesize</span>(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\">readfile</span>(<span style=\"color: #800080;\">$filename</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p>------------------总结-----------------------</p>\r\n<pre>&lt;form action=\"doAction.php\" method=\"post\" enctype=\"multipart/form-data\"&gt;</pre>\r\n<p> &lt;input type=\"file\" name=\"myFile\" /&gt;&lt;br/&gt;</p>\r\n<p> 二维数组的降维处理；</p>\r\n<p>$_FILES变量</p>\r\n<p>move_upload_file();copy();</p>\r\n<p>tmp_name临时文件；</p>\r\n<p>拓展名的提取；</p>\r\n<p>真实图片的验证；</p>\r\n<p>唯一文件名的生成；</p>\r\n<p>函数封装以及调用；</p>\r\n<p>利用单个文件函数实现多文件上传；</p>\r\n<p>小功能的封装；</p>\r\n<p>多文件的遍历；</p>\r\n<p>面向对象的开发过程；</p>\r\n<p>下载；</p>\r\n<p>----------------------------------------</p>\r\n<p>妈蛋啊。。。。。。。。。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:05:10', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3097', 'PHP&MySQL（二）——困也得啃书 ', '网络', '\n<p>madan，所有事情都敢赶在一起。。。以后每天中午去学车啊，好开心。。晚上好困，但是困也得啃书。。。。。。。。</p>\r\n<p>二、PHP脚本编程语言</p>\r\n<p>什么变量啊，数据类型啊，特别特别基本的不记录了，说点容易忽略的。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">define</span>(\"PI\", 3.1415926);  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">常量的定义</span>\r\n\r\n<span style=\"color: #0000ff;\">echo</span> \"圆周率=\".<span style=\"color: #008080;\">PI</span>.\"&lt;br/&gt;\";   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">.的链接作用，同样用于$var的赋值等</span>\r\n\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">PI</span>&lt;3&amp;&amp;<span style=\"color: #008080;\">PI</span>&gt;=2<span style=\"color: #000000;\">) {  \r\n    </span><span style=\"color: #800080;\">$var</span>=\"shit\"<span style=\"color: #000000;\">;\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">echo</span> \"f**k\".\"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n}\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 先判断PI&lt;3，如果不成立，就直接进入else——称为短路设计，加快程序速度；\r\n// 同理，为了实现程序的高效，把最容易出错的放前面，最复杂的计算放右边</span>\r\n\r\n<span style=\"color: #800080;\">$var</span>=\"asldkjflajdfklj\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$v2</span>=(<span style=\"color: #0000ff;\">boolean</span>)<span style=\"color: #800080;\">$var</span>;   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">强制类型转换</span>\r\n<span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$v2</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n\r\n</span><span style=\"color: #800080;\">$v_true</span>=<span style=\"color: #0000ff;\">true</span>;   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">boolean值也可以直接赋值</span>\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">is_bool</span>(<span style=\"color: #800080;\">$v2</span>)&amp;&amp;<span style=\"color: #800080;\">$v2</span>===<span style=\"color: #800080;\">$v_true</span>) {    <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">恒等===，可以判断数据类型是否相同；is_bool</span>\r\n    <span style=\"color: #0000ff;\">echo</span> \"Variables have the same value and type!\"<span style=\"color: #000000;\">;  \r\n    </span><span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n}\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">另外，非恒等仍然是!==</span>\r\n\r\n<span style=\"color: #800080;\">$lll</span>=\"dfa\"+333<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">echo</span> <span style=\"color: #008080;\">gettype</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">var_dump允许一次检查多个变量，同时提供信息；print_r多用来对数组和对象进行输出；</span>\r\n\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #0000ff;\">isset</span>(<span style=\"color: #800080;\">$lll</span>)&amp;&amp;!<span style=\"color: #0000ff;\">empty</span>(<span style=\"color: #800080;\">$v2</span>)) {  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断是否为空</span>\r\n    <span style=\"color: #0000ff;\">unset</span>(<span style=\"color: #800080;\">$lll</span><span style=\"color: #000000;\">);\r\n}\r\n</span><span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\";  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">会报错，但仍能输出null</span>\r\n\r\n<span style=\"color: #0000ff;\">function</span> doubleint(<span style=\"color: #800080;\">$var</span>){   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">自定义函数</span>\r\n    <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">is_int</span>(<span style=\"color: #800080;\">$var</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #800080;\">$var</span>=<span style=\"color: #800080;\">$var</span>*2<span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$var</span><span style=\"color: #000000;\">;\r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"Please enter a int data.\"<span style=\"color: #000000;\">;\r\n    }\r\n}\r\n\r\n</span><span style=\"color: #0000ff;\">echo</span> doubleint(<span style=\"color: #800080;\">$var</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">echo</span> doubleint(4);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">个人觉得，还是少用global和地址传递，逻辑上容易出错，程序没错，结果却不对\r\n\r\n// 关于include和require\r\n// 多用include吧\r\n// include失败了只是警告，后者则是错误然后中断程序\r\n// 同时推荐没事儿就写绝对路径，好读也不易出错</span></pre>\r\n</div>\r\n<p>要说的都在上面了，总结下就是：常量，连接符，自定义函数，类型转换，类型判断，文件引用，恒等符，短路设计，var_dump。</p>\r\n<p>比较乱。</p>\r\n<p>最后举个例子吧，自制乘法表</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Chapter 2\'s example which is a chengfabiao</span>\r\n<span style=\"color: #0000ff;\">function</span> chengfabiao(<span style=\"color: #800080;\">$var</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #0000ff;\">for</span> (<span style=\"color: #800080;\">$row</span>=1;<span style=\"color: #800080;\">$row</span>&lt;=<span style=\"color: #800080;\">$var</span>;<span style=\"color: #800080;\">$row</span>++<span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">for</span>(<span style=\"color: #800080;\">$queue</span>=1;<span style=\"color: #800080;\">$queue</span>&lt;=<span style=\"color: #800080;\">$var</span>;<span style=\"color: #800080;\">$queue</span>++<span style=\"color: #000000;\">){\r\n            </span><span style=\"color: #800080;\">$answer</span>=<span style=\"color: #800080;\">$row</span>*<span style=\"color: #800080;\">$queue</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">echo</span> \"<span style=\"color: #800080;\">$row</span>*<span style=\"color: #800080;\">$queue</span>=\".<span style=\"color: #800080;\">$answer</span>.\"  \"<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n    }        \r\n}\r\n</span><span style=\"color: #800080;\">$var</span>=9<span style=\"color: #000000;\">;\r\nchengfabiao(</span><span style=\"color: #800080;\">$var</span>);</pre>\r\n</div>\r\n<p><br>自己改着玩吧。基础的东西也得常常拿出来温习下，我是这么认为的。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:05:10', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3098', '一起来啃书——PHP看书 ', '网络', '\n<p>形式所迫，不得不开展android的学习，PHP这边也开始了啃书的日子。两部500+的书，45天够不，有点忙有点忙。。。</p>\r\n<p>早上的胃胀，简直是一记闷棍，长点儿记性吧。。。。。。。。</p>\r\n<p>1、PHP+MYSQL开发指南（一）</p>\r\n<p>一、数据库应用程序与web</p>\r\n<p>1、本书中</p>\r\n<p>PHP+PEAR函数库；</p>\r\n<p>2、三层体系结构</p>\r\n<p>底层/数据库层——》中间层/程序逻辑层——》用户层/浏览器；</p>\r\n<p>MySQL（一种数据库管理系统DBMS）——》PHP程序/web脚本程序——》强化浏览器能力（Javascript）</p>\r\n<p>根据流量等指标调整每一层的安排。</p>\r\n<p>3、PHP优点</p>\r\n<p>老生常谈，但还是得知道，为了就是最大限度的发挥其特性。</p>\r\n<p>灵活——与HTML的集合；</p>\r\n<p>多功能实现；</p>\r\n<p>函数库/源码丰富；</p>\r\n<p>多平台的可移植。</p>\r\n<p>-----------------------------------------</p>\r\n<p> </p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:05:10', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3099', 'I am back-电商网站开发&jQuery ', '网络', '\n<p>　　hi</p>\r\n<p>之前有将近两周的时间没有更新，除了懒就是其他的事情耽误了。现在好了，回家了，虽然家里停水，外面又有积雪，天寒地冻的，但诸多不便，都比不过有点闲的好。</p>\r\n<p>开搞每个学PHP的必经之路——电商网站的开发。</p>\r\n<p><strong>1、电商网站开发——前端</strong></p>\r\n<p><strong>一、首页制作</strong></p>\r\n<p><strong>1.1 概况&amp;准备</strong></p>\r\n<p>整个电商网站包括什么呢，就是首页信息，后面的分类信息页，商品详情页，购物页面，售后页面等等，所以就一步步做。自己做的时候可以简单的画个概况图来指导开发，免得逻辑搞混。</p>\r\n<p>准备：项目文件夹，其中要有images（图片素材），js（javascript），style（css）三个子文件夹中。工具的话，看个人爱好，不过涉及的是前端，一般上习惯用DS的多，我比较懒，直接用zend+浏览器算求。</p>\r\n<p>其中准备中有一部是实现reset.css，也就是清零/清除css效果。css我基本算是个白痴，找个源码贴出来，侵删：</p>\r\n<p>@charset \"utf-8\";<br>/* CSS Document */<br>body,ul,ol,li,p,h1,h2,h3,h4,h5,h6,form,fieldset,table,td,img,div,dl,dt,dd,input{margin:0;padding:0;}<br>body{font-size:12px;}<br>img{border:none;}<br>li{list-style:none;}<br>input,select,textarea{outline:none;border:none; background:none;}<br>textarea{resize:none;}<br>a{text-decoration:none; color:#656565;}</p>\r\n<p>/*清浮动*/<br>.clearfix:after{content:\"\";display:block;clear:both;}<br>.clearfix{zoom:1;}<br>.fl{float:left;}<br>.fr{float:right;}</p>\r\n<p>1.2 顶部结构</p>\r\n<p> 用fireworks做，我还不会，先去学习下。</p>\r\n<p>--------真是蛋疼，做个开头就发现自己naive，先完成web进阶的jQuery吧----------</p>\r\n<p><strong>2、jQuery</strong></p>\r\n<p><strong>十二、jQuery在线聊天室</strong></p>\r\n<p><strong>12.1 基本功能介绍</strong></p>\r\n<p>登陆后才能进入（用于基本信息的在线显示）；</p>\r\n<p>动态显示交流后的内容；</p>\r\n<p>文字和表情的沟通实现（表情也是字符代号编码）</p>\r\n<p><strong>技术重点</strong>：<strong>ajax</strong>的无刷新技术展示数据</p>\r\n<p><strong>12.2 实现效果</strong></p>\r\n<p>利用jq中的ajax函数（比如$.ajax等）实现登陆，登陆时，显示登陆中，正确或失败，有相应的动作；</p>\r\n<p>聊天室就是聊天内容区域，输入区域，人员显示区域。</p>\r\n<p><strong>12.3 流程</strong></p>\r\n<p>登录页面——》向服务器请求登录信息（用户名和密码信息）——》成功：跳转到聊天主页；否则，跳回登录页面。</p>\r\n<p>聊天页面——》请求聊天数据——》获取聊天数据；</p>\r\n<p>在线人员信息——》请求——》获取；</p>\r\n<p>所以，可以简单作图，这里我掠过了，然后清楚的看到需要做的页面数量，请求和响应的逻辑和对应关系。</p>\r\n<p><strong>12.4 登录页面开发login</strong></p>\r\n<p>--功能</p>\r\n<p>验证登录信息；</p>\r\n<p>进入聊天室；</p>\r\n<p>--代码</p>\r\n<p>以前在PDO中讲过的一种，直接用POST方法传递表格参数的方法：</p>\r\n<p>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html;chraset=UTF-8\"&gt;<br>&lt;title&gt;登录&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;form action=\'login.php\' method=\'post\'&gt;<br>用户名：&lt;input type=\'text\' name=\'username\'/&gt;&lt;br/&gt;<br>密     码：&lt;input type=\'password\' name=\'password\'/&gt;&lt;br/&gt;<br>&lt;input type=\'submit\' value=\'登录\'/&gt;<br>&lt;/form&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>然后后续工作在login.php中实现就好了；</p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>$username=$_POST[\'username\'];<br>$password=$_POST[\'password\'];<br>try {<br>	$pdo=new PDO(\'mysql:host=localhost;dbname=imooc\',\'root\',\'\');<br>	$pdo-&gt;exec(\'use imooc_pdo\');<br>	$sql=\"select * from user where username=? and password=?\";<br>	$stmt=$pdo-&gt;prepare($sql);<br>	$stmt-&gt;execute(array($username,$password));<br>	//$stmt=$pdo-&gt;query($sql);<br><br>	$shit=$stmt-&gt;rowCount();//显示结果集statement对象中的行数<br>	echo $shit;<br>	if($shit == 1){<br>		//$url=\"ChatMain.html\";<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"alert(\\\"登录成功\\\")\";<br>		echo \"&lt;/script&gt;\";<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"document.location=\\\"ChatMain.html\\\"\";<br>		echo \"&lt;/script&gt;\";<br>	}else{	<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"alert(\\\"用户名或密码错误\\\")\";<br>		echo \"&lt;/script&gt;\";<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"document.location=\\\"login2.html\\\"\";<br>		echo \"&lt;/script&gt;\";<br>	}</p>\r\n<p>} catch (PDOException $e) {<br>	echo $e-&gt;getMessage();<br>}</p>\r\n<p>----------------------------------------------</p>\r\n<p>我们在这里想要的是jQuery实现方法：换一种实现，同时把登录做的稍微好看一点点哈（我觉得好看，一个在于对应的css文件的编写，另一个在html中实现，DS工具实现要方便一点，有时间也得整着学一下）；</p>\r\n<p>&lt;!DOCTYPE html&gt;<br>&lt;HTML&gt;<br>&lt;head&gt;<br>&lt;TITLE&gt;登录&lt;/TITLE&gt;<br>  &lt;SCRIPT type=\"text/javascript\" src=\"jq/jquery-1.8.2.min.js\"&gt;&lt;/SCRIPT&gt;<br>  &lt;SCRIPT type=\"text/javascript\" src=\"js/jsLogin.js\"&gt;&lt;/SCRIPT&gt;<br>  &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"style/cssLogin.css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>  &lt;div id=\"divLogin\"&gt;<br>    &lt;h3&gt;用户登录&lt;/h3&gt;<br>      &lt;div class=\"content\"&gt;<br>        &lt;div&gt;用户：&lt;input id=\"txtName\" type=\"text\" class=\"txt\" /&gt;&lt;/div&gt;<br>        &lt;div&gt;密码：&lt;input id=\"txtPass\" type=\"text\" class=\"txt\" /&gt;&lt;/div&gt;<br>        &lt;div class=\"btnCenter\"&gt;<br>          &lt;input id=\"Button1\" type=\"button\" value=\"登录\" class=\"btn\" /&gt;<br>          &amp;nbsp;&amp;nbsp;<br>          &lt;input id=\"Button2\" type=\"button\" value=\"取消\" class=\"btn\" /&gt;<br>        &lt;/div&gt;<br>        &lt;span id=\"divMsg\" class=\"clsTip\"&gt;&lt;/span&gt;<br>      &lt;/div&gt;<br>  &lt;/div&gt;<br>&lt;/body&gt;<br>&lt;/HTML&gt;</p>\r\n<p>其中，js是javascript逻辑控制文件；jq是jquery实现文件；css是css文件；后面的span标签，是为了实现某些功能暂时留下的。</p>\r\n<p>$(function(){<br>	//元素绑定全局ajaxStart事件<br>	//这里就是用到span的标签，给出过程<br>	$(\"#divMsg\").ajaxStart(function(){<br>		$(this).show().html(\"正在发送登录请求...\");<br>	})<br>	$(\"#divMsg\").ajaxStop(function(){<br>		$(this).html(\"请求处理已完成！\").hide();<br>	})<br>	$(\"#Button1\").click(function(){<br>		var $name=$(\"#txtName\");<br>		var $pass=$(\"#txtPass\");<br>		if($name.val() !== \"\" &amp;&amp; $pass.val()!==\"\"){<br>			UserLogin($name.val(),$pass.val());<br>		}else{<br>			if($name.val()==\"\"){<br>				alert(\"用户名不能为空！\");<br>				$name.focus();<br>				return false;  // 阻止进一步的动作，很重要的一步<br>			}else{<br>				alert(\"密码不能为空！\");<br>				$pass.focus();<br>				return false;<br>			}<br>		}<br>	})<br>});</p>\r\n<p>function UserLogin(name,pass){<br>	$.ajax({<br>		type: \"GET\",  //提交方式<br>		url: \"index.php\",   //提交对象<br>		data:\"action=Login&amp;d=\"+new Date()+\"&amp;name=\"+name+\"&amp;pass=\"+pass, //提交数据<br>		success:function(data){<br>			if(data==\"1\"){<br>			window.location=\"ChatMain.html\";<br>		}else{<br>			alert(\"用户名或密码错误！\");<br>			return false;<br>		}<br>	}<br>	});<br>} </p>\r\n<p>其实这里面还是有错误的，实现起来感觉没有第一种实现方法简单明了，希望了解的兄弟们指点下，两种方法的优缺点。</p>\r\n<p>我还是稍微完善了下第一种PDO方法，直接在html中post表格数据，与数据库进行比对，然后返回信息。</p>\r\n<p> 当然呢，第二种，也就是本来应该采用的这种方式，很明显的优点在于其模块化实现，对于开发人员来说也是清晰明了。但，私以为，小型任务中，如果没有统一规划好的名称啊，什么的，这样子模块化是不是显得冗余，毕竟还需要看模块是否匹配啊什么的，不知道理解的对不对。</p>\r\n<p><strong>12.5 聊天室页面ChatMain</strong></p>\r\n<p>从页面本身来说，就是head包含jq文件，js文件，css文件；body实现当前页面的效果，也有接口功能的实现；</p>\r\n<p>从布局来说，就是聊天窗口的样子，三个框框搞定（可是尼玛老子不会用css啊！！！！）；</p>\r\n<p> -----晚上不一定还会写，先发了吧-----</p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:05:10', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3100', '这回真的是挤时间了-PHP基础（三） ', '网络', '\n<p>　　hi</p>\r\n<p>刚看了唐人街探案，5星好评啊亲。由于是早就约好的，也不好推辞（虽然是和男的..），但该写的还是得挤时间写。明天早上老师的项目结题，虽然和我关系不大，但不要添乱就好！！</p>\r\n<p><strong>1、PHP </strong></p>\r\n<p><strong>一、PHP基础（三）</strong><br><strong>1.3.2 Int</strong></p>\r\n<p>整型。</p>\r\n<p>几个点：<strong>进制问题</strong>（2，8，16）；</p>\r\n<p>溢出——溢出后自动转为float型；</p>\r\n<p>整除；</p>\r\n<p>float转为int——向下取整；</p>\r\n<p>例子给出</p>\r\n<p><strong>$shi=123;</strong><br><strong>$bin=0b100001;</strong><br><strong>$ba=0123;</strong><br><strong>$shiliu=0x1234555;</strong></p>\r\n<p>function show($a){<br>	echo \"Truth is:\";<br>	var_dump($a);<br>	echo \"&lt;br/&gt;\";<br>}</p>\r\n<p>show($shiliu);<br>show($ba);<br>show($bin);</p>\r\n<p><strong>$qiguaideba=01237823;  //八进制的“溢出”,会截断，只输出01237</strong></p>\r\n<p>show($qiguaideba);</p>\r\n<p>function zhengchu($a,$b){<br>	$c=$a/$b;<br>	if(is_float($c)){<br><strong>var_dump(round($c));   //用round控制输出结果</strong><br>	}else{<br>		var_dump($c);<br>	}<br>}</p>\r\n<p>zhengchu($shiliu , $ba);</p>\r\n<p><strong>1.3.3 float</strong></p>\r\n<p>php版本不同，浮点型的精确度似乎是有变化的；而且坑爹的是，<strong>由于PHP内部机制的问题，也许会出现：</strong></p>\r\n<p><strong>var_dump(floor((0.1+0.7)*10));</strong></p>\r\n<p><strong>返回的往往是7而不是期望中的8....</strong></p>\r\n<p>使用高精度的话，<strong>用gmp函数</strong>，请自行去了解...</p>\r\n<p>然后真想比较的话，不妨<strong>设置一个最小值</strong>来比较：</p>\r\n<p>$bijiao1=0.232342342;<br>$bijiao2=0.232342323;<br><strong>$esp=0.000001;</strong><br>if(abs($bijiao1-$bijiao2)&lt;=$esp){<br>	echo \"True\".\"&lt;br/&gt;\";<br>}else{<br>	echo \"F**k\".\"&lt;br/&gt;\";<br>}</p>\r\n<p><strong>1.3.4 字符串</strong></p>\r\n<p>单双引号括起来的就是了~</p>\r\n<p>然后只想说一点的就是heredoc：</p>\r\n<p><strong>$str= &lt;&lt;&lt; EOF</strong><br>alsidjflja<br>akjsdhflkj<br>dfjlkj.<br><strong>EOF;</strong></p>\r\n<p>echo $str;</p>\r\n<p>基本就是这么个样子，但是注意，<strong>最后一行那个EOF;是必须要和分号紧紧相依的，而且分号后面必须是换行，EOF前面不能出现包括空格的一切东西；</strong></p>\r\n<p>然后heredoc还可以用在传递参数，初始化静态值等等；</p>\r\n<p>当然，heredoc中也可以调用参数啊属性的什么的——把EOF看成是大大的双引号就好了。</p>\r\n<p>其他的字符串相关，比如我经常用到的.做连接符什么的，比较基础，但是好用，去看一下视频就很明了。</p>\r\n<p>nowdoc也是一种比较新的方式，不太熟悉，然后似乎相当于单引号。</p>\r\n<p><strong>1.4 变量</strong></p>\r\n<p>变量好用，变量灵活，变量难用——一般就是渐渐的这么认为的。</p>\r\n<p>第一，PHP中不强调赋初值，不需要声明，但是<strong>推荐还是赋初值，养成好习惯</strong>；不赋初值，变量值为其类型的默认值；</p>\r\n<p>第二，引用赋值要知道，$b=&amp;$a;  只能对变量名进行操作；</p>\r\n<p>第三，赋值一次更新一次：</p>\r\n<p>$shit=\"asdf\";<br>$s=123;</p>\r\n<p>echo $shit;</p>\r\n<p>$shit=$s;<br>echo $shit;</p>\r\n<p><strong>2、GD库实现图片水印与缩略图</strong></p>\r\n<p><strong>一、简介</strong></p>\r\n<p>使用PHP中自带的GD库制作图片的水印。</p>\r\n<p>适合大批量的图片的简单处理。</p>\r\n<p>学习基本的方法，然后封装为一个工具类。 </p>\r\n<p> </p>\r\n<p>这周末除了看星球大战，就来补过补过，知道错了。。。。。</p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:05:10', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3101', '好好写，好好干-PHP基础（二） ', '网络', '\n<p>　　hi</p>\r\n<p>好久没写，昨儿一写，感觉还是有人看的，至少是有一两个评论的~~好好干！</p>\r\n<p>每天需要坚持的就那么4件事儿：写这个，学一点法语，看会儿书，锻炼。单身狗也有好处。</p>\r\n<p><strong>1、PHP</strong></p>\r\n<p><strong>一、PHP基础（二）</strong></p>\r\n<p><strong>1.3 数据类型</strong></p>\r\n<p><strong>8种——4种标量：布尔boolean，整型integer，浮点float/双精度double，字符串string；2种复合：数组array，对象object；2种特殊：资源resource，NULL无；</strong></p>\r\n<p>推荐记住英文，在学习的过程中，变量通常都是这么来命名的。</p>\r\n<p><strong>php是弱类型语言</strong>，也就是说，不需要提前声明变量的类型。</p>\r\n<p>查看变量的类型：gettype()；</p>\r\n<p>判断类型：is_*()，其中*为各种数据类型的简写。</p>\r\n<p><strong>1.3.1 Boolean</strong></p>\r\n<p>true或false，不区分大小写，习惯上（我）写全小写。</p>\r\n<p><strong>一般不需要强制转换为布尔值，系统自动判断；（见下例）</strong></p>\r\n<p><strong>这些都被认为为false：false；0；0.0；空字符串以及字符串\"0\"；空数组；NULL；从空标记生成的SimpleXML对象（我也不是很理解还，主要是还没有涉及XML）；</strong></p>\r\n<p>相对应的是其他都认为为true——<strong>注意，-1，也是true；</strong></p>\r\n<p>&lt;?php</p>\r\n<p>$boola=true;<br>$boolb=false;<br>$boolc=null;<br>$boold=-1;<br>$boole=\"sdkljf\";</p>\r\n<p>echo gettype($boola).\"&lt;hr/&gt;\";</p>\r\n<p>function isbool($bool){<br>	if(<strong>is_bool($bool)</strong>){<br>		echo \"You are damn right.It is boolean.\".\"&lt;br/&gt;\";<br>	}else{<br>		echo \"Sorry, it is not this type.Please try again.\".\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>isbool($boola);<br>isbool($boolc);<br>isbool($boold);<br>isbool($boole);</p>\r\n<p>function booluse($bool){<br><strong>if($bool)</strong>{<br>		echo \"It is equal to TRUE.\".\"&lt;br/&gt;\";<br>	}else{<br>		echo \"It is equal to FALSE.\".\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>booluse($boola);<br>booluse($boolc);<br>booluse($boold);</p>\r\n<p> 在上述例子中注意，如果直接判断是否为boolean，一般的数据类型是不会强制转换的，只有当用在if等判断中时，才会自动的、强制的转换为boolean使用。 </p>\r\n<p>1.3.2 Int</p>\r\n<p>整型。</p>\r\n<p> </p>\r\n<p> 我错了。。。写一半被老板召唤加班，明天保证完成该系列第一部分（说明晚要看唐人街的嘛。。）。</p>\r\n<p>晚安，看书去了</p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:05:10', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3102', '自罚一杯-PHP基础（一） ', '网络', '\n<p>　　hi</p>\r\n<p>懒癌是最可怕的癌了吧，在即将迎来本命年时，给自己定下每天必干的几件成习惯的事情，望不再鸽！！</p>\r\n<p>php是我一直在学习的东西，但总以为php简单，难点在需要掌握大量的相关知识，其实并不完全对，php也是有算法好吧，php也值得认真对待，既然决定学了，拿点样子出来啊，是男人吧。</p>\r\n<p><strong>1、PHP</strong></p>\r\n<p><strong>一、PHP基础（一）</strong></p>\r\n<p><strong>1.1 简介</strong></p>\r\n<p>PHP=Hypertext Preprocessor=超文本预处理语言；</p>\r\n<p><strong>脚本语言；</strong></p>\r\n<p><strong>执行效率高（就是速度快）；</strong></p>\r\n<p>可大可小，大网站往往不只使用它一种语言，比如淘宝，前p后j好像是；</p>\r\n<p>俗语：电子商务三大宝——上线，支付宝，php；</p>\r\n<p>版本问题：目前最新为PHP 7.0.0；我一般还在用PHP5。</p>\r\n<p>环境问题：windows各种集成环境，wamp，xampp，或者自行百度自助搭建；linux我前面的博文中有说，其实就几行命令的问题，当然系统版本不同，可能命令有所不同，大同小异，举一反三~</p>\r\n<p><strong>1.2 基础语法</strong></p>\r\n<p><strong>--PHP标记</strong></p>\r\n<p>&lt;?php和?&gt;；</p>\r\n<p>天生为html而生，嵌套其中；</p>\r\n<p><strong>一般在编译器中，不要写?&gt;，因为容易在结束标记前有不希望输出的空格等内容；直接删掉就行了，会自动结束的；</strong></p>\r\n<p>--从HTML中分离</p>\r\n<p><strong>&lt;?php if ($expression==true): ?&gt;</strong><br><strong> aaaaaaaaa</strong><br><strong> &lt;?php else: ?&gt;</strong><br><strong> bbbbbb</strong><br><strong> &lt;?php endif;?&gt;</strong></p>\r\n<p>一般情况下，php标记能很好的从HTML中分离，但上述例子情况例外——<strong>使用条件的高级分离方法</strong>；</p>\r\n<p>当解释器遇到未完成的条件语句时，会跳过标记寻找相应的东西（比如else）；</p>\r\n<p><strong>适用于输出大段文本，比echo等更有效率。</strong></p>\r\n<p>另外，开始结束的标记也可以用其他的，但推荐&lt;?php；</p>\r\n<p><span style=\"line-height: 1.5;\">--其他</span></p>\r\n<p><span style=\"line-height: 1.5;\">注释：//单行，/*多行；</span></p>\r\n<p><span style=\"line-height: 1.5;\">指令分隔符：分号</span></p>\r\n<p> </p>\r\n<p>把憋了一个月的电影去看了，时间挤啊挤，才有a杯那么一点，明天继续！</p>\r\n<p> </p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:05:10', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3103', '睡觉问题早晚成为我顶头疼的问题。。。-PHP ', '网络', '\n<p>　　hi</p>\r\n<p>昨晚又作自己，睡不好整个人都不好。。。</p>\r\n<p><strong>1、PHP实现页面静态化</strong></p>\r\n<p><strong>二、纯静态化</strong></p>\r\n<p><strong>2.2 实现页面纯静态化的原理</strong></p>\r\n<p><strong>--基本方式</strong></p>\r\n<p>file_put_contents()函数；</p>\r\n<p>使用php内置缓存机制，output_buffering.</p>\r\n<p>具体信息可以去php手册中查找。重点看函数格式，参数，返回值。</p>\r\n<p><strong>--栗子file_put_contents()</strong></p>\r\n<p>&lt;?php<br>/*<br> * 写入函数<br> */</p>\r\n<p><strong>file_put_contents(\'index.shtml\',\'asdklfj\');</strong></p>\r\n<p>运行http://localhost/phpJingtaihua/index.shtml，得到结果。很简单的一个函数。</p>\r\n<p><strong>--栗子output_buffering</strong></p>\r\n<p>有内置函数，<strong>ob（output_buffering)系列的。</strong></p>\r\n<p>主要涉及四个</p>\r\n<p>ob_start,打开输出控制缓冲；</p>\r\n<p>ob_get_contents,返回输出缓冲区内容；</p>\r\n<p>ob_clean,清空输出缓冲区；</p>\r\n<p>ob_get_clean，得到缓冲区内容并删除当前输出缓冲区。</p>\r\n<p><strong>ob_start(); //打开缓冲区</strong><br>echo 1234;<br><strong>echo ob_get_contents();</strong></p>\r\n<p>得到12341234的序列。也就是说，所有输出都要经过缓冲区——就像是水龙头上装了个滤嘴。</p>\r\n<p>ob_start(); //打开缓冲区<br>echo 111;echo \"&lt;br/&gt;\";<br>echo ob_get_contents();echo \"&lt;br/&gt;\";<br><strong>ob_clean();</strong><br>echo ob_get_contents();echo \"&lt;br/&gt;\";</p>\r\n<p>echo 222;echo \"&lt;br/&gt;\";</p>\r\n<p>echo ob_get_clean();echo \"&lt;br/&gt;\";</p>\r\n<p>这里呢，111因为缓冲区的清除，而不会再输出，即使是原始的echo语句也不行。</p>\r\n<p><strong>2.3 纯静态化案例实现简介</strong></p>\r\n<p>终极目的就是生成静态文件。</p>\r\n<p>其一，写入数据到静态文件。</p>\r\n<p>其二，利用ob机制，获取（可以写入到静态文件的）数据。</p>\r\n<p><strong>2.4 案例实现步骤</strong></p>\r\n<p>链接数据库，从数据库中获取数据——》把获取到的数据填充到模板文件中去——》把动态页面转化为静态页面，生成纯静态文件。</p>\r\n<p> </p>\r\n<p>-----------------</p>\r\n<p>先这样，晚上有时间再写。。。。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:05:10', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3104', '其实今天没有欲望..-MySQLi ', '网络', '\n<p>　　hi</p>\r\n<p>中午爽爽的游了会儿泳，但是下午把一拳超人看完了，竟然萌生不出学习的欲望了。。。强迫自己更新点东西吧，一会儿看书去。</p>\r\n<p><strong>1、MySQLi</strong></p>\r\n<p><strong>二、MySQLi基于OOP的编程</strong></p>\r\n<p><strong>2.1 使用解析</strong></p>\r\n<p>--基本</p>\r\n<p><strong>MySQLi是一个拓展类库，本质上是个类</strong>（？）。</p>\r\n<p>一般流程和MySQL一样：<strong>连接，选库，字符集设定，SQL语句执行，关闭连接</strong>。</p>\r\n<p><strong>--链接库例子</strong></p>\r\n<p>&lt;?php<br>/*<br> * <strong>连接和选库</strong><br> */<br><strong>$mysqli=new mysqli(\'localhost\', \'root\', \'\');</strong><br>print_r($mysqli);echo \"&lt;br/&gt;\";</p>\r\n<p>echo <strong>$mysqli-&gt;select_db</strong>(\'test\');echo \"&lt;br/&gt;\";</p>\r\n<p><strong>$mysqli2=new mysqli();</strong><br>print_r(<strong>$mysqli2-&gt;connect</strong>(\'localhost\', \'root\', \'\'));echo \"&lt;br/&gt;\";</p>\r\n<p>print_r(<strong>$mysqli3=new mysqli(\'localhost\', \'root\', \'\',\'test\')</strong>);echo \"&lt;br/&gt;\";</p>\r\n<p>三种不同的方法，这里的方法都是利用mysqli的类属性来做的；当然也可以利用mysqli的命令来链接；</p>\r\n<p>$con=mysqli_connect(HOST,USERNAME,PASSWORD)</p>\r\n<p>结果中有一些信息</p>\r\n<table><tbody>\n<tr>\n<td class=\"webkit-line-content\">mysqli Object</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">(</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[affected_rows] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[client_info] =&gt; mysqlnd 5.0.11-dev - 20120503 - $Id: bf9ad53b11c9a57efdb1057292d73b928b8c5c77 $</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[client_version] =&gt; 50011</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[connect_errno] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[connect_error] =&gt;</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[errno] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[error] =&gt;</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[error_list] =&gt; Array</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">(</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">)</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\"> </td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[field_count] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[host_info] =&gt; localhost via TCP/IP</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[info] =&gt;</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[insert_id] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[server_info] =&gt; 5.6.17</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[server_version] =&gt; 50617</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[stat] =&gt; Uptime: 968 Threads: 1 Questions: 24 Slow queries: 0 Opens: 70 Flush tables: 1 Open tables: 63 Queries per second avg: 0.024</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[sqlstate] =&gt; 00000</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[protocol_version] =&gt; 10</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[thread_id] =&gt; 11</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[warning_count] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">)</td>\r\n\r\n</tr>\n</tbody></table>\n<p>这些属性都是可以通过对象的属性来得到的，比如</p>\r\n<p>echo $mysqli-&gt;client_info;echo \"&lt;br/&gt;\";</p>\r\n<p>或者是通过相对应的方法得到，这些东西查手册可以看到。</p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>//1.建立到MySQL数据的连接<br>// $mysqli=new mysqli(\'localhost\',\'root\',\'root\');<br>// //print_r($mysqli);<br>// //2.打开指定的数据库<br>// $mysqli-&gt;select_db(\'test\');<br>// $mysqli=new mysqli();<br>// $mysqli-&gt;connect(\'127.0.0.1\',\'root\',\'root\');<br>// print_r($mysqli);</p>\r\n<p>//建立连接的同时打开指定数据库<br>$mysqli=@new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>//print_r($mysqli);<br>//$mysqli-&gt;connect_errno:得到连接产生的错误编号<br>//$mysqli-&gt;connect_error:得到连接产生的错误信息<br>if($mysqli-&gt;connect_errno){<br>	die(\'Connect Error:\'.$mysqli-&gt;connect_error);<br>}<br>print_r($mysqli);<br>echo \'&lt;hr color=\"red\"/&gt;\';<br>echo \'客户端的信息：\'.$mysqli-&gt;client_info.\'&lt;br/&gt;\';<br>echo $mysqli-&gt;get_client_info().\'&lt;br/&gt;\';<br>echo \'客户端的版本：\'.$mysqli-&gt;client_version.\'&lt;br/&gt;\';<br>echo \'&lt;hr/&gt;\';<br>echo \'服务器端信息：\'.$mysqli-&gt;server_info.\'&lt;br/&gt;\';<br>echo $mysqli-&gt;get_server_info();<br>echo \'&lt;hr/&gt;\';<br>echo \'服务器版本：\'.$mysqli-&gt;server_version.\'&lt;br/&gt;\';</p>\r\n<p>echo \'&lt;hr/&gt;\';</p>\r\n<p><strong>--字符集例子</strong></p>\r\n<p>&lt;?php<br>//1.建立到MySQL的连接<br>$mysqli=@new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'Connect Error:\'.$mysqli-&gt;connect_error);<br>}<br>//2.设置默认的客户端编码方式utf8<br><strong>$mysqli-&gt;set_charset(\'utf8\');</strong></p>\r\n<p>//3.执行SQL查询<br>$sql=&lt;&lt;&lt;EOF<br>	CREATE TABLE IF NOT EXISTS mysqli(<br>		id TINYINT UNSIGNED AUTO_INCREMENT KEY,<br>		username VARCHAR(20) NOT NULL<br>	);<br>EOF;<br>$res=$mysqli-&gt;query($sql);<br>var_dump($res);</p>\r\n<p>/*<br> SELECT/DESC/DESCRIBE/SHOW/EXPLAIN执行成功返回mysqli_result对象，执行失败返回false<br> 对于其它SQL语句的执行，执行成功返回true，否则返回false<br> */<br>//关闭连接<br>$mysqli-&gt;close();</p>\r\n<p>需要注意的是数据库中的是utf8，而不是utf-8；</p>\r\n<p><strong>2.2 插入记录操作</strong></p>\r\n<p>增。</p>\r\n<p><strong>--connect.php</strong></p>\r\n<p>因为连接数据库的一系列操作是常用的，对于这种，我们简便的方法就是<strong>封装起来，到处调用</strong></p>\r\n<p>require_once \'connect.php\';</p>\r\n<p>connect.php</p>\r\n<p>&lt;?php<br>/*<br> * <strong>连接和选库（头）文件</strong><br> */<br>$mysqli=new mysqli(\'localhost\', \'root\', \'\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'Connect Error:\'.$mysqli-&gt;connect_error);<br>}else{<br>	echo \'客户端的信息：\'.$mysqli-&gt;client_info.\'&lt;br/&gt;\';<br>}<br>$mysqli-&gt;set_charset(\'utf8\');</p>\r\n<p><strong>--增</strong></p>\r\n<p>&lt;?php<br>/*<br> * 数据库插入数据<br> */</p>\r\n<p><strong>require_once \'connect.php\';</strong></p>\r\n<p>$sql=\"insert mysqli(username) value(\'Tom\')\";<br><strong>echo $mysqli-&gt;query($sql);</strong></p>\r\n<p>这里执行的是单条的sql语句。</p>\r\n<p>或者完善一点，添加一个判断，并输出错误信息。</p>\r\n<p>if($res){<br>	echo $mysqli-&gt;insert_id; <br>}else{<br>	echo \'ERROR \'.$mysqli-&gt;error;<br>}</p>\r\n<p>或者，插入多条记录</p>\r\n<p>$sql=\"insert mysqli(username) value(\'Sdaf\'),(\'Andy\')\";</p>\r\n<p><strong>2.3 更新记录</strong></p>\r\n<p>更新。</p>\r\n<p>$sql=\"update test set id=id+10\";<br>$mysqli-&gt;query($sql);</p>\r\n<p><strong>2.4 删除</strong></p>\r\n<p>删</p>\r\n<p>$sql=\"delete from mysqli where id&gt;=2\";</p>\r\n<p>--</p>\r\n<p><strong>特别说明，affected_rows返回的情况有三种：</strong></p>\r\n<p><strong>-1  sql语句有问题；</strong></p>\r\n<p>0 没有受影响的语句；</p>\r\n<p>&gt;=0 受影响的条数。</p>\r\n<p><strong>--小结</strong></p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>$mysqli=new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'CONNECT ERROR:\'.$mysqli-&gt;connect_error);<br>}<br>$mysqli-&gt;set_charset(\'utf8\');</p>\r\n<p>//执行SQL查询<br>//添加记录<br>//执行单条SQL语句,只能执行一条SQL语句<br>// $sql=\"INSERT user(username,password) VALUES(\'king\',\'king\');\";<br>// $sql.=\"DROP TABLE user;\";<br>$sql=\"INSERT user(username,password) VALUES(\'queen1\',\'queen1\'),(\'queen2\',\'queen2\'),(\'queen3\',\'queen3\'),(\'queen4\',\'queen4\')\";<br>$res=$mysqli-&gt;query($sql);<br>if($res){<br>	//得到上一插入操作产生的AUTO_INCREMENT的值<br>	echo \'恭喜您注册成功，您是网站第\'.$mysqli-&gt;insert_id.\'位用户&lt;br/&gt;\';<br>	//得到上一步操作产生的受影响记录条数<br>	echo \'有\'.$mysqli-&gt;affected_rows.\'记录被影响\';<br>}else{<br>	//得到上一步操作产生的错误号和错误信息<br>	echo \'ERROR \'.$mysqli-&gt;errno.\':\'.$mysqli-&gt;error;<br>}<br>echo \'&lt;hr/&gt;\';</p>\r\n<p>//将表中年龄+10<br>$sql=\"UPDATE user SET age=age+10\";<br>$res=$mysqli-&gt;query($sql);<br>if($res){<br>	echo $mysqli-&gt;affected_rows.\'条记录被更新\';<br>}else{<br>	echo \"ERROR \".$mysqli-&gt;errno.\':\'.$mysqli-&gt;error;<br>}<br>echo \'&lt;hr/&gt;\';</p>\r\n<p>//将表中id&lt;=6的用户删除掉<br>$sql=\"DELETE FROM user WHERE id&lt;=6\";<br>$res=$mysqli-&gt;query($sql);<br>if($res){<br>	echo $mysqli-&gt;affected_rows.\'条记录被删除\';<br>}else{<br>	echo \"ERROR \".$mysqli-&gt;errno.\':\'.$mysqli-&gt;error;<br>}<br>//关闭到MySQL的连接<br>$mysqli-&gt;close();</p>\r\n<p><strong>2.5 查</strong></p>\r\n<p>需要注意的是，用的是select，所以返回的是结果集，是可以打印出来的print_r或var_dump。</p>\r\n<p>所以这里就要说一下，返回的结果集的选择了。</p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>$mysqli=new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'CONNECT ERROR:\'.$mysqli-&gt;connect_error);<br>}<br>$mysqli-&gt;set_charset(\'utf8\');<br>$sql=\"SELECT id,username,age FROM user\";<br><strong>$mysqli_result=$mysqli-&gt;query($sql);</strong><br>//var_dump($mysqli_result);<br>if($mysqli_result &amp;&amp; $mysqli_result-&gt;num_rows&gt;0){<br>	//echo $mysqli_result-&gt;num_rows;<br><strong>//$rows=$mysqli_result-&gt;fetch_all();//获取结果集中所有记录，默认返回的是二维的</strong><br>	//索引+索引的形式<br>	//$rows=$mysqli_result-&gt;fetch_all(MYSQLI_NUM);<br>	//$rows=$mysqli_result-&gt;fetch_all(MYSQLI_ASSOC);<br>	//$rows=$mysqli_result-&gt;fetch_all(MYSQLI_BOTH);<br><strong>// 	$row=$mysqli_result-&gt;fetch_row();//取得结果集中一条记录作为索引数组返回</strong><br>// 	print_r($row);<br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_assoc();//取得结果集中的一条记录作为关联数组返回</strong><br>// 	print_r($row);<br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_array();//二者都有的</strong><br>// 	print_r($row);<br><br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_array(MYSQLI_ASSOC);</strong><br>// 	print_r($row);<br><br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_object();</strong><br>// 	print_r($row);<br>// 	echo \'&lt;hr/&gt;\';<br>// 	//移动结果集内部指针<br>// 	$mysqli_result-&gt;data_seek(0);<br>// 	$row=$mysqli_result-&gt;fetch_assoc();<br>// 	print_r($row);<br><br>// 	print_r($rows);</p>\r\n<p>	while($row=$mysqli_result-&gt;fetch_assoc()){<br>		//print_r($row);<br>		//echo \'&lt;hr/&gt;\';<br>		$rows[]=$row;<br>	}<br>	print_r($rows);<br><br><strong>//释放结果集</strong><br><strong>	$mysqli_result-&gt;free();</strong><br><br><br>}else{<br>	echo \'查询错误或者结果集中没有记录\';<br>}<br>$mysqli-&gt;close();</p>\r\n<p> </p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:05:10', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3105', '感觉没睡好就..-shenmedoumeixie.... ', '网络', '\n<p>　　hi</p>\r\n<p>昨晚没睡好，虽然梦很香，但睡不好没精神做科研啊。。。</p>\r\n<p><strong>1、jQuery</strong></p>\r\n<p><strong>十二、实现聊天室创建</strong></p>\r\n<p><strong>12.1 基本功能</strong></p>\r\n<p>登陆；</p>\r\n<p><strong>无刷新实时交流；</strong></p>\r\n<p>支持表情。</p>\r\n<p>12.2 大致效果</p>\r\n<p>登陆——》验证，打算用AJAX来做；</p>\r\n<p>聊天——》php实现具体功能就行。</p>\r\n<p>12.3 数据流分析</p>\r\n<p>登陆页面：获取用户名和密码请求登陆-返回聊天页面或失败信息以及登陆页面；</p>\r\n<p>聊天页面：聊天内容的请求和返回（实现无刷新的更新数据）；在线人员信息的请求和返回；处理发送内容的请求，写入聊天内容。</p>\r\n<p><strong>12.4 登陆页面开发</strong></p>\r\n<p> --------突然间发现需要AJAX的知识储备，但我今天不想看ajax，周末再来吧。。。-----------</p>\r\n<p><strong>2、PHP实现页面静态化（一）</strong></p>\r\n<p><strong>一、静态化简介</strong></p>\r\n<p><strong>1.1、动态页面和静态页面</strong></p>\r\n<p>动态：执行动态程序，php，jsp等；比如php，语法分析，编译再运行。</p>\r\n<p>静态：html等文件。</p>\r\n<p><strong>1.2、关于优化页面响应时间</strong></p>\r\n<p><span style=\"line-height: 1.5;\">--主要手段</span></p>\r\n<p><span style=\"line-height: 1.5;\">动态页面静态化——本节重点；</span></p>\r\n<p>优化数据库；</p>\r\n<p>使用负载均衡；</p>\r\n<p>使用缓存；</p>\r\n<p><strong>--动态页面静态化</strong></p>\r\n<p><strong>场景</strong>：页面中的一些内容不经常改动；</p>\r\n<p><strong>实质：生成静态的HTML文件</strong>；（减少了执行步骤，也就节省了时间）</p>\r\n<p>减少响应时间，<strong>重要的是减少服务器负担。</strong></p>\r\n<p>不适合微博等更新较快的。</p>\r\n<p><strong>1.3 关于动态URL地址设置静态形式</strong></p>\r\n<p>http://state.com/index.php?c=play&amp;a=index&amp;id=8123</p>\r\n<p>变为</p>\r\n<p>http://state.com/play/8123.shtml</p>\r\n<p>这个过程暂时还是伪静态（实际上还是动态文件，只是换了个马甲）。</p>\r\n<p><strong>1.4 PHP静态化</strong></p>\r\n<p><strong>--纯静态</strong></p>\r\n<p>通过php程序生成的真正的静态文件。</p>\r\n<p>又分为局部纯静态（/局部动态，实现方法可能是ajax的异步操作）和全局纯静态。</p>\r\n<p><strong>--伪静态</strong></p>\r\n<p>把URL地址转化为类似html的情况。</p>\r\n<p><strong>二、纯静态化案例实现</strong></p>\r\n<p><strong>2.1 buffer</strong></p>\r\n<p>--概述</p>\r\n<p><strong>其实就是缓冲区</strong>，一个内存地址空间，用于存储数据。</p>\r\n<p>实现静态化，要围绕buffer展开。</p>\r\n<p>比如说电脑系统中的buffer，就是当有数据要进行存储操作的时候，需要先把某个buffer存满，然后再写入磁盘。</p>\r\n<p><strong>--流程</strong></p>\r\n<p>内容——php buffer——tcp——终端</p>\r\n<p><strong>--使用</strong></p>\r\n<p>&lt;?php<br>echo 1;echo \"&lt;br/&gt;\";<br>echo ob_get_contents();</p>\r\n<p>如果没开启，要么改php.ini，要么加头文件</p>\r\n<p>ob_start();</p>\r\n<p>2.2 实现纯静态化</p>\r\n<p>--基本方式</p>\r\n<p>file_put_contents()</p>\r\n<p>output_buffering()</p>\r\n<p> </p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:19:35', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3106', '周一干不干活-PHP+MySQLi ', '网络', '\n<p>hi</p>\r\n<p>本来是雄心壮志的要干活的，哪知天有不测，早上大阴天起不来，中午又回寝室折腾衣服（做女工啊，牛不牛）没睡午觉，这样的迷糊状态，怎么科研，写这个好了。</p>\r\n<p><strong>1、PHP的OOP编程</strong></p>\r\n<p><strong>4.7 多态</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>由于接口的方法实现有多种多样，这种特性称之为多态</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>function eat($obj){<br>  if($obj instanceof ICanEat){ <br>    $obj-&gt;eat(\"FOOD\"); // 不需要知道到底是Human还是Animal，直接吃就行了<br>  }else{<br>    echo \"Can\'t eat!\\n\";<br>  }<br>}</p>\r\n<p>$man = new Human();<br>$monkey = new Animal();</p>\r\n<p><strong>// 同样的代码，传入接口的不同实现类的时候，表现不同。这就是为什么成为多态的原因。</strong><br>eat($man);<br>eat($monkey);</p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 多态<br> * 1. 只要某个对象实现了接口（instanceof），就可以直接在对象上调用接口的方法<br> */</p>\r\n<p><strong>4.8 抽象类</strong></p>\r\n<p><strong>--问题</strong></p>\r\n<p>连接接口的类，某些方法都是相同的，那么是否能够允许类中不实现，而是在接口中实现。</p>\r\n<p>比如，人和动物吃东西不同，但呼吸相同。</p>\r\n<p><strong>--栗子</strong></p>\r\n<p><strong>abstract class ACanEat{ //关键字改变</strong><br><strong>abstract public function eat($food);//需要类自行实现的，前面加上abstract关键字</strong><br><br>	public function breath(){<br>		echo \"Breath use the air.&lt;br/&gt;\";<br>	}<br><br>}</p>\r\n<p>class Human extends ACanEat{       //实现接口用implenments，这里用extends<br>	public function eat($food){<br>		echo \"Human eating \".$food.\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class Animal <strong>extends</strong> ACanEat{       <strong>//实现接口用implenments，这里用extends</strong><br>	public function eat($food){<br>		echo \"Animal eating \".$food.\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>$xiaoming=new Human();<br>$xiaohei=new Animal();</p>\r\n<p>$xiaoming-&gt;breath();$xiaoming-&gt;eat(\"food\");<br>$xiaohei-&gt;breath();$xiaohei-&gt;eat(\"shit\");</p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 抽象类<br> * 1. 抽象类允许类里面的部分方法暂时没有具体实现，这些方法我们成为抽象方法<br> * 2. 一旦类里面有抽象方法，这个类就必须是抽象类<br> * 3. 抽象类跟接口一样，不能直接实例化为对象<br> */</p>\r\n<p><strong>五、魔术方法</strong></p>\r\n<p><strong>5.1 简介</strong></p>\r\n<p><strong>注意所有的魔术方法前面都是两个下划线__</strong></p>\r\n<p>PHP中的OOP特有的。</p>\r\n<p>比如构造函数和析构函数。</p>\r\n<p><strong>5.2 __tostring()和__invoke()</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>__tostring()，当对象被当作String使用时，这个方法会被自动调用；echo $obj;</p>\r\n<p>__invoke()，当对象被当作方法（函数）调用时，这个方法被自动调用；$obj(4);</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>&lt;?php<br>/*<br> * tostring()魔术方法<br> * invoke()魔术方法<br> */</p>\r\n<p>class MagicTest{<br>	public function __toString(){<br>	return \"This is the class magictest.\";<br>}<br>   public function __invoke($x){<br>   	echo \"&lt;br/&gt;\".$x;<br>   }<br>}<br>$obj=new MagicTest();<br>echo $obj;</p>\r\n<p>$obj(5);</p>\r\n<p>用法和构造函数析构函数类似。比较自动化（自动调用，即使没有声明也会调用），但同时<strong>比较容易出错，小心。</strong></p>\r\n<p><strong>5.3 __call()和__callStatic()或重载（overloading）</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>当对象访问不存在的方法名称时，__call()会被自动调用；</p>\r\n<p>当对象访问不存在的静态方法名称时，__callStatic()会被自动调用；</p>\r\n<p>这两个方法，又称为重载（不同于重写）；通过这两个方法，同一个方法的名称的调用可以对应不同的方法实现</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>&lt;?php<br>/*<br> * tostring()魔术方法<br> * invoke()魔术方法<br> */</p>\r\n<p>class MagicTest{<br>	public function __toString(){<br>	return \"This is the class magictest.\";<br>}<br>   public function __invoke($x){<br>   	echo \"&lt;br/&gt;\".$x.\"&lt;br/&gt;\";<br>   }<br><strong>public function __call($name,$arguments){    //__call的格式是固定的，第一个是方法名，第二个是方法内的参数</strong><br>   	  echo \"Calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br>   public <strong>static</strong> function __callstatic($name,$arguments){ <br>   	echo \"Static calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br>}<br>$obj=new MagicTest();<br>echo $obj;</p>\r\n<p>$obj(5);</p>\r\n<p>$obj-&gt;runTest(\"para1\",\"para2\");<br>$obj::runTest(\"para3\",\"para4\");</p>\r\n<p>注意这里要求定义方法的时候格式是固定的。</p>\r\n<p><strong>5.4 __get()__set()__isset()__unset</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>这几个方法也被称为<strong>属性重载</strong>的魔术方法。</p>\r\n<p>__set()，在给<strong>不可访问属性（一种是属性未定义，另一种是没有访问权限，如private）</strong>赋值时调用；</p>\r\n<p>__get()，读取不可访问属性的值时调用；</p>\r\n<p>__isset()，当对不可访问属性调用isset（）或empty（）时调用；</p>\r\n<p>__unset()，。。。。。。。。。unset（）。。。。。。。。。。</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>&lt;?php<br>/*<br> * tostring()魔术方法<br> * invoke()魔术方法<br> */</p>\r\n<p>class MagicTest{<br>	public function __toString(){<br>	return \"This is the class magictest.\";<br>}<br>   public function __invoke($x){<br>   	echo \"&lt;br/&gt;\".$x.\"&lt;br/&gt;\";<br>   }<br>   public function __call($name,$arguments){    //__call的格式是固定的，第一个是方法名，第二个是方法内的参数<br>   	  echo \"Calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br>   public static function __callstatic($name,$arguments){    <br>   	echo \"Static calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br><strong>public function __get($name){  //get要有name</strong><br>   	return \"Getting the property \".$name.\"&lt;br/&gt;\"; 	  	<br>   } <br><strong>public function __set($name,$value){   //set要有名有值</strong><br>   	echo \"Setting the property \".$name.\" to value \".$value.\".&lt;br/&gt;\";<br>   }<br><strong>public function __isset($name){    //判断是否定义了属性</strong><br>   	echo \"__isset invoked&lt;br/&gt;\";<br>   	return true;<br>   }<br><strong>public function __unset($name){   //撤销</strong><br>   	echo \"unsetting protery \".$name.\"&lt;br/&gt;\";<br>   	return true;<br>   }<br>}<br>$obj=new MagicTest();<br>echo $obj;</p>\r\n<p>$obj(5);</p>\r\n<p>$obj-&gt;runTest(\"para1\",\"para2\");<br>$obj::runTest(\"para3\",\"para4\");</p>\r\n<p>echo $obj-&gt;classname;<br>$obj-&gt;classname=\"shit\";</p>\r\n<p>echo isset($obj-&gt;classname).\"&lt;br/&gt;\";<br>unset($obj-&gt;classname);echo \"&lt;br/&gt;\";<br>echo empty($obj-&gt;classname).\"&lt;br/&gt;\";</p>\r\n<p>结果是</p>\r\n<p>This is the class magictest.<br>5<br>Calling runTest with parameters: para1,para2<br>Static calling runTest with parameters: para3,para4<br>Getting the property classname<br>Setting the property classname to value shit.<br>__isset invoked<br>1<br>unsetting protery classname<br><br>__isset invoked</p>\r\n<p>可以看到，<strong>其实isset和empty调用__isset时一对相反的操作。</strong></p>\r\n<p>然后，<strong>__set($name，$value)和__unset($name)</strong>是一对相反的操作，但所要元素不一样；</p>\r\n<p><strong>__isset($name),__get($name)</strong>都只需要名字（记住每个魔术方法的作用，理解了，就好记了）。</p>\r\n<p><strong>5.5 __clone()</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>就是克隆，或克隆</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>先给出<strong>clone关键字</strong>的用法。</p>\r\n<p>&lt;?php<br>/*<br> * 克隆魔术方法<br> */</p>\r\n<p>class  nbaPlayer{<br>	public $name;<br>}</p>\r\n<p>$james=new nbaPlayer();<br>$james-&gt;name=\'James\';<br>echo $james-&gt;name.\"&lt;br/&gt;\";</p>\r\n<p><strong>$kobe=clone $james;</strong><br>$kobe-&gt;name=\'Kobe\';<br>echo $kobe-&gt;name;</p>\r\n<p>clone后的，就是个单独的对象，对其操作不影响原对象。</p>\r\n<p><strong>加上__clone()</strong></p>\r\n<p>&lt;?php<br>/*<br> * 克隆魔术方法<br> */</p>\r\n<p>class  nbaPlayer{<br>	public $name;<br><br><strong>public function __clone(){</strong><br>		$this-&gt;name=\"shit\";<br>	}<br><br>}</p>\r\n<p>$james=new nbaPlayer();<br>$james-&gt;name=\'James\';<br>echo $james-&gt;name.\"&lt;br/&gt;\";</p>\r\n<p>$kobe=clone $james;<br><strong>echo $kobe-&gt;name.\"&lt;br/&gt;\";</strong><br>$kobe-&gt;name=\'Kobe\';<br>echo $kobe-&gt;name.\"&lt;br/&gt;\";</p>\r\n<p>一般来说，用处在于<strong>clone后的初始化</strong>；或者说，<strong>当复制后，不想透露的某些信息的掩盖。</strong></p>\r\n<p>在工作中常用到这一个，因为常有<strong>对某个对象的操作，又不想影响原有数据</strong>，就克隆/复制一个出来。</p>\r\n<p>----------------------------------------</p>\r\n<p><strong>2、MySQLi扩展</strong></p>\r\n<p><strong>一、安装及下载</strong></p>\r\n<p>1.1 优势及简介</p>\r\n<p>更新更好，PHP5及以后推荐使用（或者PDO）。</p>\r\n<p><strong>--优点</strong></p>\r\n<p>基于OOP和面向过程的使用；</p>\r\n<p>支持预处理语句；</p>\r\n<p>支持事务。</p>\r\n<p>--其他</p>\r\n<p>速度更快。安全性更好</p>\r\n<p><strong>1.2 安装及配置</strong></p>\r\n<p>--安装</p>\r\n<p>配置php，开启php_mysqli.dll；</p>\r\n<p>配置extension_dir=\'ext目录位置\';</p>\r\n<p>重启服务器。</p>\r\n<p>（我用的是WAMP，直接打对勾就行）</p>\r\n<p><strong>--验证</strong></p>\r\n<p>&lt;?php<br>/*<br> * 验证mysqli是否开启<br> */</p>\r\n<p>//phpinfo();<br>//2.检测扩展是否已经加载<br>var_dump(extension_loaded(\'mysqli\'));<br>var_dump(extension_loaded(\'curl\'));<br>echo \'&lt;hr/&gt;\';<br>//3.检测函数是否存在<br>var_dump(function_exists(\'mysqli_connect\'));<br>echo \'&lt;hr/&gt;\';<br>//4.得到当前已经开启的扩展<br>print_r(get_loaded_extensions());<br>echo \'&lt;hr/&gt;\';</p>\r\n<p> </p>\r\n<p>---</p>\r\n<p>困了，回去洗洗睡觉。。。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:05:10', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3107', '荒芜的周六-PHP之面向对象（三） ', '网络', '\n<p>　　hi　　</p>\r\n<p>又是开森的周六了。积攒的两周的衣服，终于是差不多洗完了。大下午的才来学点东西~~</p>\r\n<p><strong>1、PHP面向对象（三）</strong></p>\r\n<p><strong>四、OOP的高级实践</strong></p>\r\n<p><strong>4.3 Static-静态成员</strong></p>\r\n<p>&lt;?php<br>date_default_timezone_set(\"PRC\");<br>/**<br> * 1. 类的定义以class关键字开始，后面跟着这个类的名称。类的名称命名通常每个单词的第一个字母大写。<br> * 2. 定义类的属性<br> * 3. 定义类的方法<br> * 4. 实例化类的对象<br> * 5. 使用对象的属性和方法<br> */</p>\r\n<p>class Human{<br>	public $name;<br>	public $height;<br>	public $weight;<br><br>	public function eat($food){<br>		echo $this-&gt;name.\"\'s eating \".$food.\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class Animal{<br>	public $kind;<br>	public $gender;<br>}</p>\r\n<p><br>class NbaPlayer extends Human{<br>    // 类的属性的定义<br>    public $name=\"Jordan\";// 定义属性<br>    public $height=\"198cm\";<br>    public $weight=\"98kg\";<br>    public $team=\"Bull\";<br>    public $playerNumber=\"23\";<br>    private $age=\"44\";<br>    public $president=\"David Stern\";<br><br><br><br>    // 类的方法的定义<br>    public function changePresident($newP){<br>    	$this-&gt;president=$newP;<br>    }<br><br>    public function run() {<br>        echo \"Running&lt;br/&gt;\";<br>    }</p>\r\n<p>    public function jump(){<br>        echo \"Jumping&lt;br/&gt;\";<br>    }<br><br>    public function dribble(){<br>        echo \"Dribbling&lt;br/&gt;\";<br>    }<br><br>    public function shoot(){<br>        echo \"Shooting&lt;br/&gt;\";<br>    }<br><br>    public function dunk(){<br>        echo \"Dunking&lt;br/&gt;\";<br>    }<br><br>    public function pass(){<br>        echo \"Passing&lt;br/&gt;\";<br>    }<br><br>    public function getAge(){<br>    	echo $this-&gt;name.\"\'s age is \".$this-&gt;age;<br>    }<br><br>    function __construct($name, $height, $weight, $team, $playerNumber){<br>    	print $name . \";\" . $height . \";\" . $weight . \";\" . $team . \";\" . $playerNumber.\"\\n\";<br>    	$this-&gt;name = $name; // $this是php里面的伪变量，表示对象自身<br>    	$this-&gt;height = $height; // 通过$this可以设置对象的属性值<br>    	$this-&gt;weight = $weight;<br>    	$this-&gt;team = $team;<br>    	$this-&gt;playerNumber = $playerNumber;<br>    }<br><br>}</p>\r\n<p><br>/**<br> * 1. 类实例化为对象时使用new关键字，new之后紧跟类的名称和一对括号。<br> * 2. 使用对象可以像使用其他值一样进行赋值操作<br> */<br>$jordan = new NbaPlayer(\"Jordan\", \"198cm\",\"98kg\",\"Bull\",\"23\");echo \"&lt;br/&gt;\";<br>$james=new NbaPlayer(\"James\", \"203cm\", \"120kg\", \"Heat\", \"6\");echo \"&lt;br/&gt;\";<br>// 访问对象的属性使用的语法是-&gt;符号，后面跟着属性的名称<br>echo $jordan-&gt;name.\"&lt;br/&gt;\";<br>// 调用对象的某个方法使用的语法是-&gt;符号，后面跟着方法的名称和一对括号<br>$jordan-&gt;run();<br>$jordan-&gt;pass();<br>//子类调用父类的方法<br>$jordan-&gt;eat(\"apple\");<br>//试着调用private,直接以及通过内部的public函数<br>//$jordan-&gt;age;<br>$jordan-&gt;getAge();echo \"&lt;br/&gt;\";</p>\r\n<p>$jordan-&gt;changePresident(\"Adam Silver\");<br>echo $jordan-&gt;president.\"&lt;br/&gt;\";<br>echo $james-&gt;president.\"&lt;br/&gt;\";</p>\r\n<p> 直接从上述例子开始吧。</p>\r\n<p>这里想得到的是，<strong>把两位对象的某一个变量同时变掉。——用static</strong></p>\r\n<p><strong> public static $president=\"David Stern\";</strong><br><br>    // 类的方法的定义<br>    public <strong>static</strong> function changePresident($newP){<br><strong>static::$president=$newP;//这里static换成self更符合规范</strong><br>    }</p>\r\n<p>注意这里static的位置，以及，方法内的::</p>\r\n<p>调用的方法也有所变动。</p>\r\n<p>echo <strong>NbaPlayer::$president;</strong>echo \"&lt;br/&gt;\";<br><strong>NbaPlayer::changePresident(\"Adam Silver\");</strong><br>echo NbaPlayer::$president;echo \"&lt;br/&gt;\";</p>\r\n<p>也就是像之前说的，<strong>静态成员就是个常量，所以不针对某个具体的对象（不受具体对象的约束）</strong>——基于此，定义&amp;赋值&amp;调用都不需要具体的对象参与。</p>\r\n<p><strong>内部调用要用self/static::$...</strong></p>\r\n<p><strong>外部调用，类名::</strong></p>\r\n<p>用处就是所有的对象共用的数据。</p>\r\n<p><strong>--如果内部调用时，变量在父类中</strong></p>\r\n<p>比如说，在上述例子中，父类human中写这么一句话</p>\r\n<p>public static $aaa=\"dafdfa\";</p>\r\n<p>然后在子类nbaplayer中，调用父类的静态成员时，要</p>\r\n<p>echo <strong>parent::$aaa;</strong></p>\r\n<p>而外部调用，按照上面说的，类名::，所以，直接父类类名即可</p>\r\n<p>echo Human::$aaa;</p>\r\n<p>--其他</p>\r\n<p><strong>在静态方法中，是无法访问其他变量的，也就是说，不能用$this-&gt;</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 静态成员<br> * 1. 静态属性用于保存类的公有数据<br> * 2. 静态方法里面只能访问静态属性<br> * 3. 静态成员不需要实例化对象就可以访问<br> * 4. 类内部，可以通过self或者static关键字访问自身的静态成员<br> * 5. 可以通过parent关键字访问父类的静态成员<br> * 6. 可以通过类名称在外部访问类的静态成员<br> */</p>\r\n<p><strong>4.4 Final成员</strong></p>\r\n<p><strong>--问题</strong></p>\r\n<p>不希望某个类拥有子类；</p>\r\n<p>不希望子类修改父类中的某个变量（避免重写？）</p>\r\n<p><strong>--final</strong></p>\r\n<p>》=php5版本</p>\r\n<p>举个例子</p>\r\n<p>class BaseClass{<br>	public  function test(){<br>		echo \"BaseClass::test called&lt;br/&gt;\";<br>	}<br><br>	public function test1(){<br>		echo \"BaseClass::test1 called&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class  ChildClass extends BaseClass{<br>	public function test(){<br>		echo \"ChildClass::test called&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>$obj=new ChildClass();<br>$obj-&gt;test();</p>\r\n<p>子类中编写跟父类中完全一致的方法名（内容可以不同），会完成对父类方法的<strong>重写</strong>！</p>\r\n<p><strong> 所以，不希望被重写的父类中的方法，写上final</strong></p>\r\n<p><strong><strong>final </strong>public function test(){</strong></p>\r\n<p>依此类推，对于不想有子类的父类，在类名那里写上final</p>\r\n<p><strong>final class BaseClass{</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 重写和Final<br> * 1. 子类中编写跟父类完全一致的方法可以完成对父类方法的重写<br> * 2. 对于不想被任何类继承的类可以在class之前添加final关键字<br> * 3. 对于不想被子类重写（overwrite, 修改）的方法，可以在方法定义前面添加final关键字<br> */</p>\r\n<p><strong>4.5 数据访问</strong></p>\r\n<p>先把final都去掉</p>\r\n<p>--parent</p>\r\n<p>然后再子类中的方法中写</p>\r\n<p>parent::test();</p>\r\n<p>运行后会发现，依然可以<strong>通过parent的关键字调用父类中，即使是被重写的数据</strong></p>\r\n<p>--self</p>\r\n<p>然后在父类中的方法test中写</p>\r\n<p><span class=\"Apple-tab-span\"> self::test1();</span></p>\r\n<p>运行后，发现<strong>self可以调用同一个类中的数据（其他方法/静态变量/常量const）</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 数据访问补充<br> * 1. parent关键字可以用于调用父类被重写的类成员<br> * 2. self关键字可以用于访问类自身的成员方法，也可以用于访问自身的静态成员和类常量；不能用于访问类自身的属性；访问类常量时不用在常量名称前面加$符号<br> * 3. static关键字用于访问类自身定义的静态成员，访问静态属性时需要在属性名前面添加$符号<br> */</p>\r\n<p><strong>4.6 对象接口</strong></p>\r\n<p>非常重要！！！</p>\r\n<p><strong>--问题</strong></p>\r\n<p>不同的类，有着相同的行为，但相同的行为又有着不同的实现方法。</p>\r\n<p>比如人和动物都会吃东西，但吃的方式方法又不太一样。</p>\r\n<p>--定义</p>\r\n<p><strong>接口就是把不同类的共同行为进行了定义，然后在不同的类里面实现不同的功能。</strong></p>\r\n<p><strong>--栗子 </strong></p>\r\n<p>//定义一个接口<br><strong>interface ICanEat{</strong><br>	public function eat($food);<br>}</p>\r\n<p>可以看到，接口中并没有方法的具体实现，但必须有方法！</p>\r\n<p>那么，下面是，“人类会吃”</p>\r\n<p>//具体对象，连接到接口<br><strong>class Human implements ICanEat{</strong><br><br>	public function eat($food){<br>		echo \"Human eating \".$food.\".&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>$obj=new Human();<br>$obj-&gt;eat(\"shit\");</p>\r\n<p>请忽略我给出的“食物”。</p>\r\n<p>注意，<strong>不再用extends，而是implements。然后，同样是方法名的完全相同。然后，对象必须/最好实现方法。</strong></p>\r\n<p>继续</p>\r\n<p>interface ICanEat{<br>	public function eat($food);<br>}</p>\r\n<p>//具体对象，连接到接口<br>class Human implements ICanEat{<br>public function eat($food){<br>		echo \"Human eating \".$food.\".&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class Animal implements ICanEat{<br>    public function eat($food){<br>		echo \"Animal eating \".$food.\".&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p><br>$obj=new Human();<br>$obj-&gt;eat(\"shit\");</p>\r\n<p>$monkey=new Animal();<br>$monkey-&gt;eat(\"banana\");</p>\r\n<p>让动物也吃起来！</p>\r\n<p><strong>--逆向操作</strong></p>\r\n<p>判断某个对象是否连接了某个接口。</p>\r\n<p>var_dump($obj<strong> instanceof</strong> ICanEat);</p>\r\n<p>会返回boolean值。</p>\r\n<p><strong>--更多的栗子</strong></p>\r\n<p><strong>interface ICanPee extends ICanEat{</strong><br>	public function pee();<br>}</p>\r\n<p>class Demon implements ICanPee{<br>	public function pee(){<br>		echo \"Can demon pee?\";<br>	}<br>	public function eat($food){<br>		echo \"Can demon eat \".$food;<br>	}<br>}</p>\r\n<p>$ghost=new Demon();<br>$ghost-&gt;pee();<br>$ghost-&gt;eat(\"shit\");</p>\r\n<p><strong>接口本质上也是类，可以被继承/继承，但是使用继承接口的接口，所有父类、“爷类”的方法都要有具体实现。</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 接口<br> * 1. 接口的基本概念和基本使用方法<br> * 2. 接口里面的方法没有具体的实现<br> * 3. 实现了某个接口的类必须提供接口中定义的方法<br> * 4. 不能用接口创建对象，但是能够判断某个对象是否实现了某个接口<br> * 5. 接口可以继承接口（interface extends interface）<br> * 6. 接口中定义的所有方法都必须是公有，这是接口的特性。<br> */</p>\r\n<p> </p>\r\n<p>aaaaaaaaaaaaaa</p>\r\n<p>bu xiang xie le....................</p>\r\n<p>ming tian yao ge ..............</p>\r\n<p> </p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:05:10', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3108', '周五了啦啦啦啦-LAMP+PHP‘s OOP ', '网络', '\n<p>　　hi</p>\r\n<p>周五咯~~</p>\r\n<p><strong>1、LAMP配置完结篇</strong></p>\r\n<p><strong>五、LAMP配置环境优化</strong></p>\r\n<p><strong>5.4 虚拟主机工作原理</strong></p>\r\n<p>apache的虚拟主机。virtual-host</p>\r\n<p>用不同的域名访问不同的目录——手动模拟dns</p>\r\n<p>修改host文件即可实现。具体就是主机地址 域名</p>\r\n<p><strong>复习</strong></p>\r\n<p>liang@liang-andy:~$ sudo apt-get install apache2</p>\r\n<p>liang@liang-andy:~$ sudo apt-get install php5<br>然后加载/检查php5.load这个php实现对apache2操作的模块<strong>（LAMP的互相，就是模块的启动/连接）</strong><br>liang@liang-andy:~$ cat /etc/apache2/mods-enabled/php5.load<br>liang@liang-andy:~$ sudo apt-get install mysql-server</p>\r\n<p>sudo apt-get install apache2 php5 mysql-server php5-mysql</p>\r\n<p>liang@liang-andy:~$ sudo service mysql restart<br>liang@liang-andy:~$ sudo service apache2 restart</p>\r\n<p>----创建phpinfo探针</p>\r\n<p>先装vim</p>\r\n<p>sudo apt-get install vim</p>\r\n<p>再切换到php的www文件夹，用cd命令</p>\r\n<p>cd /var/www/html（14.4版本）</p>\r\n<p>然后在这里创建一个php文件</p>\r\n<p>sudo vim info.php</p>\r\n<p>写php代码</p>\r\n<p>&lt;?php<br>echo mysql_connect(\'localhost\',\'root\',\'hanhan123\') ? \'Hoho\' : \'WTF\';<br><br>phpinfo();<br>然后esc键，输入:wq保存退出</p>\r\n<p>http://192.168.1.100/info.php 浏览器输入验证结果</p>\r\n<p><strong>复习结束</strong></p>\r\n<p><strong>5.5 安装phpmyadmin</strong></p>\r\n<p>--</p>\r\n<p><strong>apt-get命令</strong></p>\r\n<p>sudo apt-get install phpmyadmin</p>\r\n<p>sudo ln -s /usr/share/phpmyadmin/ /var/www/pma</p>\r\n<p><strong> 六、服务器集群了解</strong></p>\r\n<p>国内外有很多著名的巨型服务器集群。</p>\r\n<p>用于同时处理大批量的请求</p>\r\n<p>-----------------------------------</p>\r\n<p><strong>2、PHP的OOP编程</strong></p>\r\n<p><strong>四、OOP的高级实践</strong></p>\r\n<p><strong>程序准备</strong></p>\r\n<p>&lt;?php<br>date_default_timezone_set(\"PRC\");<br>/**<br> * 1. 类的定义以class关键字开始，后面跟着这个类的名称。类的名称命名通常每个单词的第一个字母大写。<br> * 2. 定义类的属性<br> * 3. 定义类的方法<br> * 4. 实例化类的对象<br> * 5. 使用对象的属性和方法<br> */<br>class NbaPlayer<br>{<br>    // 类的属性的定义<br>    public $name=\"Jordan\";// 定义属性<br>    public $height=\"198cm\";<br>    public $weight=\"98kg\";<br>    public $team=\"Bull\";<br>    public $playerNumber=\"23\";</p>\r\n<p>    // 类的方法的定义<br>    public function run() {<br>        echo \"Running\\n\";<br>    }</p>\r\n<p>    public function jump(){<br>        echo \"Jumping\\n\";<br>    }<br>    public function dribble(){<br>        echo \"Dribbling\\n\";<br>    }<br>    public function shoot(){<br>        echo \"Shooting\\n\";<br>    }<br>    public function dunk(){<br>        echo \"Dunking\\n\";<br>    }<br>    public function pass(){<br>        echo \"Passing\\n\";<br>    }<br>}</p>\r\n<p>/**<br> * 1. 类实例化为对象时使用new关键字，new之后紧跟类的名称和一对括号。<br> * 2. 使用对象可以像使用其他值一样进行赋值操作<br> */<br>$jordan = new NbaPlayer();<br>// 访问对象的属性使用的语法是-&gt;符号，后面跟着属性的名称<br>echo $jordan-&gt;name.\"\\n\";<br>// 调用对象的某个方法使用的语法是-&gt;符号，后面跟着方法的名称和一对括号<br>$jordan-&gt;run();<br>$jordan-&gt;pass();</p>\r\n<p>?&gt;</p>\r\n<p><strong> 4.1 继承</strong></p>\r\n<p>也就是对象相似的部分，可以多处使用——避免代码冗余，开发效率提高。</p>\r\n<p>优点：父类中定义的了，子类中无需再次定义——效率高；对于外部，表现一致（父类是一样的）；重写，来修改子类。</p>\r\n<p>举个栗子</p>\r\n<p>class Human{<br>	public $name;<br>	public $height;<br>	public $weight;<br><br>	public function eat($food){<br>		echo $this-&gt;name.\"\'s eating\".$food.\"\\n\";<br>	}<br>}</p>\r\n<p>人类作为父类，然后nba球员作为子类</p>\r\n<p><strong>class NbaPlayer extends Human{</strong></p>\r\n<p>试着直接通过子类调用父类中的function</p>\r\n<p>$jordan-&gt;eat(\"apple\");</p>\r\n<p>输出</p>\r\n<p>Jordan\'s eating apple</p>\r\n<p>没有问题！<strong>子类是可以直接调用父类的属性和方法的！！（在子类的对象上可以直接访问父类中定义的方法和属性）</strong></p>\r\n<p>毕竟从它的意思来看，子类就是父类的延伸。</p>\r\n<p>另外，<strong>父类中的属性可以在子类中进行访问（实际上，简单的理解就是，所有的子类都是大于等于父类的对象，想象一下文氏图）</strong></p>\r\n<p>类的继承，用extends，<strong>只能跟一个“爸爸”——php的单继承原则</strong></p>\r\n<p><strong>4.2 访问控制</strong></p>\r\n<p>所有的属性和方法都有访问权限的选择——选择可以被谁访问</p>\r\n<p><strong>public：公有，任何地方</strong></p>\r\n<p><strong>protected：受保护的，被自身以及其子类</strong></p>\r\n<p><strong>private：私有，只能被自身访问</strong></p>\r\n<p>举个private的栗子</p>\r\n<p>在Nbaplayer这个子类中，新增加定义</p>\r\n<p>    private $age=\"44\";</p>\r\n<p> public function getAge(){<br>    	echo $this-&gt;name.\"\'s age is \".$this-&gt;age;<br>    }</p>\r\n<p>//试着调用private,直接以及通过内部的public函数<br>//$jordan-&gt;age;<br>$jordan-&gt;getAge();</p>\r\n<p>然后，<strong>关于protected，范围紧紧的限制在了父类中和子类中，也就是说，出了子类的定义那个大括号就失效了！</strong></p>\r\n<p><strong>4.3 静态成员</strong></p>\r\n<p>可以简单的理解为常量（？）</p>\r\n<p>static</p>\r\n<p> </p>\r\n<p> </p>\r\n<p>bu xiang xie le </p>\r\n<p> </p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:05:10', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3109', '敲-PHP与MySQL，JSON ', '网络', '\n<p>hi</p>\r\n<p>敲代码~</p>\r\n<p><strong>1、php与mysql</strong></p>\r\n<p><strong>5.4 修改界面</strong></p>\r\n<p>同样是界面和程序。</p>\r\n<p><strong>界面article.modify.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	//读取旧信息<br>	$id = $_GET[\'id\'];<br>	$query = mysqli_query($con,\"select * from article where id=$id\");<br>	$data = mysqli_fetch_assoc($query);<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"213\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;      &lt;a href=\"article.add.php\"&gt;&lt;/a&gt;&lt;/td&gt;<br>    &lt;td width=\"854\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;&lt;form id=\"form1\" name=\"form1\" method=\"post\" action=\"article.modify.handle.php\"&gt;<br>    	&lt;input type=\"hidden\" name=\"id\" value=\"&lt;?php echo $data[\'id\']?&gt;\" /&gt;<br>      &lt;table width=\"590\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\"&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"center\"&gt;修改文章&lt;/td&gt;<br>          &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td width=\"119\"&gt;标题&lt;/td&gt;<br>          &lt;td width=\"437\"&gt;&lt;label for=\"title\"&gt;&lt;/label&gt;<br>            &lt;input type=\"text\" name=\"title\" id=\"title\" value=\"&lt;?php echo $data[\'title\']?&gt;\"/&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;作者&lt;/td&gt;<br>          &lt;td&gt;&lt;input type=\"text\" name=\"author\" id=\"author\"  value=\"&lt;?php echo $data[\'author\']?&gt;\"/&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;简介&lt;/td&gt;<br>          &lt;td&gt;&lt;label for=\"description\"&gt;&lt;/label&gt;<br>            &lt;textarea name=\"description\" id=\"description\" cols=\"60\" rows=\"5\"&gt;&lt;?php echo $data[\'description\']?&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;内容&lt;/td&gt;<br>          &lt;td&gt;&lt;textarea name=\"content\" cols=\"60\" rows=\"20\" id=\"content\"&gt;&lt;?php echo $data[\'content\']?&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"right\"&gt;&lt;input type=\"submit\" name=\"button\" id=\"button\" value=\"提交\" /&gt;&lt;/td&gt;<br>          &lt;/tr&gt;<br>      &lt;/table&gt;<br>    &lt;/form&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>关键点在于php的读取，以及在html中value的php调用。</p>\r\n<p><strong>修改程序article.modify.handle.php</strong></p>\r\n<p>&lt;?php <br>//和数据库有关的，无条件写上这么一句话<br>	require_once(\'../connect.php\');<br><br>	//接受修改后的数据（表单传递）<br>	$id = $_POST[\'id\'];<br>	$title = $_POST[\'title\'];<br>	$author = $_POST[\'author\'];<br>	$description = $_POST[\'description\'];<br>	$content = $_POST[\'content\'];<br>	$dateline =  time();<br><br>	//写sql修改语句，并做成功与否的判断，并跳回修改界面<br>	$updatesql = \"update article set title=\'$title\',author=\'$author\',description=\'$description\',content=\'$content\',dateline=$dateline where id=$id\";<br>	if(mysqli_query($con,$updatesql)){<br>		echo \"&lt;script&gt;alert(\'修改文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'修改文章失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p><strong>5.5 文章删除</strong></p>\r\n<p>先做需求的分析：同上面几个略有区别，<strong>删除文章不需要界面，只需要一个删除按钮来掉要就行了</strong>。所以只有一个文件。而关键的sql语句只有一句</p>\r\n<p><strong>$delsql=\"delete from article where id=$id\";</strong></p>\r\n<p><strong>aritcle.del.handle.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');</p>\r\n<p>//读取id号。不像其他的是有传递值的<br>	$id = $_GET[\'id\'];<br>	$deletesql = \"delete from article where id=$id\";<br>	if(mysql_query($deletesql)){<br>		echo \"&lt;script&gt;alert(\'删除文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'删除文章失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p><strong>5.6 文章管理列表</strong></p>\r\n<p>需求分析：列表显示出所有的文章，然后后面有两个按钮，删除（链接至上一节的删除模块）和修改（链接至之前的模块）</p>\r\n<p>所以，只需要一个文件，显示模块就好</p>\r\n<p><strong>article.manage.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	$sql = \"select * from article order by dateline desc\";<br>	$query  = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row =mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}else{<br>		$data = array();<br>	}</p>\r\n<p>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"156\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;<br>    &lt;td width=\"837\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;&lt;table width=\"743\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>      &lt;tr&gt;<br>        &lt;td colspan=\"3\" align=\"center\" bgcolor=\"#FFFFFF\"&gt;文章管理列表&lt;/td&gt;<br>        &lt;/tr&gt;<br>      &lt;tr&gt;<br>        &lt;td width=\"37\" bgcolor=\"#FFFFFF\"&gt;编号&lt;/td&gt;<br>        &lt;td width=\"572\" bgcolor=\"#FFFFFF\"&gt;标题&lt;/td&gt;<br>        &lt;td width=\"82\" bgcolor=\"#FFFFFF\"&gt;操作&lt;/td&gt;<br>      &lt;/tr&gt;<br>	&lt;?php <br>		if(!empty($data)){<br>			foreach($data as $value){<br>	?&gt;<br>      &lt;tr&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&amp;nbsp;&lt;?php echo $value[\'id\']?&gt;&lt;/td&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&amp;nbsp;&lt;?php echo $value[\'title\']?&gt;&lt;/td&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&lt;a href=\"article.del.handle.php?id=&lt;?php echo $value[\'id\']?&gt;\"&gt;删除&lt;/a&gt; &lt;a href=\"article.modify.php?id=&lt;?php echo $value[\'id\']?&gt;\"&gt;修改&lt;/a&gt;&lt;/td&gt;<br>      &lt;/tr&gt;<br>    &lt;/table&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>5.7 函数总结</strong></p>\r\n<p>mysqli_connect()</p>\r\n<p>mysqli_select_db()</p>\r\n<p>mysqli_query()</p>\r\n<p>mysqli_error()</p>\r\n<p>mysqli_fetch_assoc()</p>\r\n<p>mysqli_num_rows()</p>\r\n<p><strong>六、前台管理界面的开发</strong></p>\r\n<p><strong>6.1 文章列表</strong></p>\r\n<p><strong>article.list.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from article order by dateline desc\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row = mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>	&lt;?php<br>		if(empty($data)){	<br>			echo \"当前没有文章，请管理员在后台添加文章\";<br>		}else{<br>			foreach($data as $value){<br>	?&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;?php echo $value[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $value[\'author\']?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $value[\'description\']?&gt;<br>			&lt;/div&gt;<br>			&lt;div class=\"meta\"&gt;<br>				&lt;p class=\"links\"&gt;&lt;a href=\"article.show.php?id=&lt;?php echo $value[\'id\']?&gt;\" class=\"more\"&gt;查看详细&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;raquo;&amp;nbsp;&amp;nbsp;&lt;/p&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;?php<br>			}<br>		}<br>	?&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"article.search.php\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"key\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.2 文章详情页</strong></p>\r\n<p><strong>article.show.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$id = intval($_GET[\'id\']);<br>	$sql = \"select * from article where id=$id\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		$row = mysqli_fetch_assoc($query);<br>	}else{<br>		echo \"这篇文章不存在\";<br>		exit;<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"#\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"#\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"#\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;!--文章标题放置到这里--&gt;&lt;?php echo $row[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $row[\'author\'];?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;!--文章内容放置到这里--&gt;<br>				&lt;?php echo $row[\'content\']?&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.3 检索</strong></p>\r\n<p>article.search.php</p>\r\n<p>这里的查询的是根据题目来查询。</p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$key = $_GET[\'key\'];<br>	$sql = \"select * from article where title like \'%$key%\' order by dateline desc\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row = mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>	&lt;?php<br>		if(empty($data)){	<br>			echo \"当前没有文章，请管理员在后台添加文章\";<br>		}else{<br>			foreach($data as $value){<br>	?&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;?php echo $value[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $value[\'author\']?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $value[\'description\']?&gt;<br>			&lt;/div&gt;<br>			&lt;div class=\"meta\"&gt;<br>				&lt;p class=\"links\"&gt;&lt;a href=\"article.show.php?id=&lt;?php echo $value[\'id\']?&gt;\" class=\"more\"&gt;查看详细&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;raquo;&amp;nbsp;&amp;nbsp;&lt;/p&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;?php<br>			}<br>		}<br>	?&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.4 关于我们和联系我们</strong></p>\r\n<p><strong>about.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from  introduce\";<br>	$query = mysqli_query($con,$sql);<br>	//if($query&amp;&amp;mysqli_num_rows($query)){<br>		$about = \"啦啦啦\";<br>	//}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br><br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;关于我们&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $about?&gt;<br>			&lt;/div&gt;<br><br>		&lt;/div&gt;<br><br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>contact.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from  introduce\";<br>	$query = mysqli_query($con,$sql);<br>	//$arr=mysqli_fetch_array($query, MYSQL_ASSOC);<br>	//if($query&amp;&amp;mysqli_num_rows($query)){<br>		$contact = \"asdfadf\";<br>	//}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br><br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;联系我们&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $contact?&gt;<br>			&lt;/div&gt;<br><br>		&lt;/div&gt;<br><br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;</p>\r\n<p>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p> ------------------------------------------</p>\r\n<p><strong>2、JSON基础</strong></p>\r\n<p><strong>1.2 JSON的使用</strong></p>\r\n<p>--<strong>JSON与serialize</strong>数据格式的异同和使用</p>\r\n<p>相同点：把其他数据类型转换为一个可以传输的字符串；都是结构性数据；</p>\r\n<p>不同点：s序列化之后，保存数据原有类型——适用于存储带有加密方式的数据串；JSON更简洁——适合数据量大，不要求数据类型保存的情况</p>\r\n<p>举个栗子</p>\r\n<p>&lt;?php<br>//输出模块<br>function createHtmlTag($tag=\"\"){<br>	echo \"&lt;h1&gt;$tag&lt;/h1&gt;&lt;br/&gt;\";<br>}<br>createHtmlTag(\"Hello!\");<br>createHtmlTag(\"JSON和serialize的对比\");</p>\r\n<p>//测试用数组<br>$member=array(\"username\",\"age\");<br>var_dump($member);</p>\r\n<p><br>$jsonObj=json_encode($member);</p>\r\n<p>$serializeObj=serialize($member);</p>\r\n<p>createHtmlTag($jsonObj);<br>createHtmlTag($serializeObj);</p>\r\n<p>结果</p>\r\n<h1>Hello!</h1>\r\n<p> </p>\r\n<h1>JSON和serialize的对比</h1>\r\n<p> </p>\r\n<pre class=\"xdebug-var-dump\"><strong>array</strong> <em>(size=2)</em>\r\n  0 <span style=\"color: #888a85;\">=&gt;</span> </pre>\r\n<p><small>string</small></p>\r\n<pre class=\"xdebug-var-dump\"> <span style=\"color: #cc0000;\">\'username\'</span> <em>(length=8)</em>\r\n  1 <span style=\"color: #888a85;\">=&gt;</span> </pre>\r\n<p><small>string</small></p>\r\n<pre class=\"xdebug-var-dump\"> <span style=\"color: #cc0000;\">\'age\'</span> <em>(length=3)</em>\r\n</pre>\r\n<h1>[\"username\",\"age\"]</h1>\r\n<p> </p>\r\n<h1>a:2:{i:0;s:8:\"username\";i:1;s:3:\"age\";}</h1>\r\n<p><strong>--常用JSON函数</strong></p>\r\n<p>json_encode()——JSON加密</p>\r\n<p>json_decode()——解密</p>\r\n<p><strong>1.3 JSON实例讲解</strong></p>\r\n<p> </p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:05:10', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3110', '挤点时间写博客-php&MySQL实践 ', '网络', '\n<p>　　hi</p>\r\n<p>晚上要吃火锅的嘛，挤点时间写点东西吧，别被老板发现哦</p>\r\n<p>1、PHP与MySQL</p>\r\n<p><strong>五、文章发布系统之后台</strong></p>\r\n<p><strong>5.2 创建配置文件和初始化文件</strong></p>\r\n<p>为了统一配置以及管理方便，还有就是减少代码的冗余。</p>\r\n<p>分别为config.php和connect.php</p>\r\n<p><strong>config.php</strong></p>\r\n<p>&lt;?php<br>/*<br> * 配置文件<br> */<br>//配置数据库的相关信息<br>//由于是常量，直接用define<br>define(\'HOST\', \'127.0.0.1\');<br>define(\'USERNAME\', \'root\');<br>define(\'PASSWORD\', \'\');</p>\r\n<p> </p>\r\n<p><strong>connect.php</strong></p>\r\n<p>&lt;?php<br>/*<br> * 链接到数据库的文件<br> * 主要是链接到数据库服务器，然后选择数据库。<br> * 特殊的是设置字符集。<br> * 然后希望对每个操作进行判断<br> */</p>\r\n<p> </p>\r\n<p>//包含配置文件<br>require_once \'config.php\';</p>\r\n<p>//连库<br>if(!$con=mysqli_connect(HOST,USERNAME,PASSWORD)){<br>	echo mysqli_error($con);<br>}</p>\r\n<p>//选库<br>if(mysqli_select_db($con, \'info\')){<br>	echo mysqli_error($con);<br>}</p>\r\n<p>//字符集<br>if(mysqli_query($con,\'set names utf8\')){<br>	echo mysqli_error($con);<br>}</p>\r\n<p>完成后测试一下链接文件就ok了。这里的mysqli和mysql都可以，只要格式正确就行。</p>\r\n<p><strong>5.3 发布文章</strong></p>\r\n<p><strong>文章发布界面article.add.php</strong></p>\r\n<p>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"156\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;      &lt;a href=\"article.add.php\"&gt;&lt;/a&gt;&lt;/td&gt;<br>    &lt;td width=\"837\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;<br>    &lt;form id=\"form1\" name=\"form1\" method=\"post\" action=\"article.add.handle.php\"&gt;<br>      &lt;table width=\"779\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\"&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"center\"&gt;发布文章&lt;/td&gt;<br>          &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td width=\"119\"&gt;标题&lt;/td&gt;<br>          &lt;td width=\"625\"&gt;&lt;label for=\"title\"&gt;&lt;/label&gt;<br>            &lt;input type=\"text\" name=\"title\" id=\"title\" /&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;作者&lt;/td&gt;<br>          &lt;td&gt;&lt;input type=\"text\" name=\"author\" id=\"author\" /&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;简介&lt;/td&gt;<br>          &lt;td&gt;&lt;label for=\"description\"&gt;&lt;/label&gt;<br>            &lt;textarea name=\"description\" id=\"description\" cols=\"60\" rows=\"5\"&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;内容&lt;/td&gt;<br>          &lt;td&gt;&lt;textarea name=\"content\" cols=\"60\" rows=\"15\" id=\"content\"&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"right\"&gt;&lt;input type=\"submit\" name=\"button\" id=\"button\" value=\"提交\" /&gt;&lt;/td&gt;<br>          &lt;/tr&gt;<br>      &lt;/table&gt;<br>    &lt;/form&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>不是很漂亮就是了，学习嘛</p>\r\n<p> </p>\r\n<p>文章发布处理程序article.add.handle.php</p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	//把传递过来的信息入库,在入库之前对所有的信息进行校验。<br>	if(!(isset($_POST[\'title\'])&amp;&amp;(!empty($_POST[\'title\'])))){<br>		echo \"&lt;script&gt;alert(\'标题不能为空\');window.location.href=\'article.add.php\';&lt;/script&gt;\";<br>	}<br>	$title = $_POST[\'title\'];<br>	$author = $_POST[\'author\'];<br>	$description = $_POST[\'description\'];<br>	$content = $_POST[\'content\'];<br>	$dateline =  time();<br>	$insertsql = \"insert into article(title, author, description, content, dateline) values(\'$title\', \'$author\', \'$description\', \'$content\', $dateline)\";<br>	if(mysqli_query($con,$insertsql)){<br>		echo \"&lt;script&gt;alert(\'发布文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'发布失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p>注意两者的功能和连接，就是add页面把东西传给handle处理</p>\r\n<p> ------------------------</p>\r\n<p>由于我遇到了前所未见的乱码问题。。。跪着解决中。。。。望大家不吝赐教（wamp环境，mysql，zend，浏览器都已经设置为utf8，apache配置文件中添加了AddDefaultCharset UTF-8，问题依然存在，我晕啊。。。。）</p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:19:28', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3111', '突然发现这周有点忙。。着玩-PHP进阶 ', '网络', '\n<p>　　hi</p>\r\n<p>周二才，不过我突然意识到这周有点忙着玩的感觉，还是很期待的——今天下午去市里，晚上回来看电影，明晚聚餐吃火锅，后天下午拍短片，晚上可能要打球，周五，嗯，就到周五了。虽然这样下去连怎么写（bian）周报都不知道，但还是来做这个的好。</p>\r\n<p><strong>1、PHP进阶完结篇</strong></p>\r\n<p><strong>十一、数据库操作</strong></p>\r\n<p><strong>11.1 PHP支持哪些数据库</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP通过安装相应的扩展来实现数据库操作，现代应用程序的设计离不开数据库的应用，当前主流的数据库有MsSQL，MySQL，Sybase，Db2，Oracle，PostgreSQL，Access等，这些数据库PHP都能够安装扩展来支持，一般情况下常说的LAMP架构指的是：Linux、Apache、Mysql、PHP，因此Mysql数据库在PHP中的应用非常广泛，我们会在本章中简单的了解Mysql的操作方法。</p>\r\n</div>\r\n</div>\r\n<p><strong>11.2 数据库扩展</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP中一个数据库可能有一个或者多个扩展，其中既有官方的，也有第三方提供的。像Mysql常用的扩展有原生的mysql库，也可以使用增强版的mysqli扩展，还可以使用PDO进行连接与操作。</p>\r\n<p>不同的扩展提供基本相近的操作方法，不同的是可能具备一些新特性，以及操作性能可能会有所不同。</p>\r\n<p>mysql扩展进行数据库连接的方法：</p>\r\n<pre class=\"code\">$link = mysql_connect(\'mysql_host\', \'mysql_user\', \'mysql_password\');</pre>\r\n<p>mysqli扩展：</p>\r\n<pre class=\"code\">$link = mysqli_connect(\'mysql_host\', \'mysql_user\', \'mysql_password\');</pre>\r\n<p>PDO扩展</p>\r\n<pre class=\"code\">$dsn = \'mysql:dbname=testdb;host=127.0.0.1\';\r\n$user = \'dbuser\';\r\n$password = \'dbpass\';\r\n$dbh = new PDO($dsn, $user, $password);</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>$link = mysql_connect(\'127.0.0.1\', \'code1\', \'\') or die(\'数据库连接失败\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>$result = mysql_query(\'select * from user limit 1\');<br>$row = mysql_fetch_assoc($result);<br>print_r($row);</p>\r\n<p><strong>11.3 连接MySQL数据库</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP要对数据库进行操作，首先要做的是与数据库建立连接，通常我们使用mysql_connect函数进行数据库连接，该函数需要指定数据库的地址，用户名及密码。</p>\r\n<pre class=\"code\">$host = \'localhost\';\r\n$user = \'code1\';\r\n$pass = \'\';\r\n$link = mysql_connect($host, $user, $pass);</pre>\r\n<p>PHP连接数据库的方式类似于直接在命令行下通过进行连接，类似：<code class=\"marker\">mysql -hlocalhost -ucode1 -p</code>，当连接成功以后，我们需要选择一个操作的数据库，通过mysql_select_db函数来选择数据库。</p>\r\n<pre class=\"code\">mysql_select_db(\'code1\');</pre>\r\n<p>通常我们会先设置一下当前连接使用的字符编码，一般的我们会使用utf8编码。</p>\r\n<pre class=\"code\">mysql_query(\"set names \'utf8\'\");</pre>\r\n<p>通过上面的步骤，我们就与数据库建立了连接，可以进行数据操作了。</p>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>$host = \'127.0.0.1\';<br>$user = \'code1\';<br>$pass = \'\';<br>//在这里编写数据库连接代码<br>mysql_connect($host,$user,$pass);<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");</p>\r\n<p><strong> 11.4 执行MySQL查询</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>在数据库建立连接以后就可以进行查询，采用mysql_query加sql语句的形式向数据库发送查询指令。</p>\r\n<pre class=\"code\">$res = mysql_query(\'select * from user limit 1\');</pre>\r\n<p>对于查询类的语句会返回一个资源句柄（resource），可以通过该资源获取查询结果集中的数据。</p>\r\n<pre class=\"code\">$row = mysql_fetch_array($res);\r\nvar_dump($row);</pre>\r\n<p>默认的，PHP使用最近的数据库连接执行查询，但如果存在多个连接的情况，则可以通过参数指令从那个连接中进行查询。</p>\r\n<pre class=\"code\">$link1 = mysql_connect(\'127.0.0.1\', \'code1\', \'\');\r\n$link2 = mysql_connect(\'127.0.0.1\', \'code1\', \'\', true); //开启一个新的连接\r\n$res = mysql_query(\'select * from user limit 1\', $link1); //从第一个连接中查询数据</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//在这里进行数据查询<br>$arr=mysql_query(\"select * from user limit 1\");<br>$row=mysql_fetch_row($arr);<br>print_r($row);<br>echo $row[0];</p>\r\n<p>11.5 插入新数据到MySQL中</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>当我们了解了如何使用mysql_query进行数据查询以后，那么类似的，插入数据其实也是通过执行一个sql语句来实现，例如：</p>\r\n<pre class=\"code\">$sql = \"insert into user(name, age, class) values(\'李四\', 18, \'高三一班\')\";\r\nmysql_query($sql); //执行插入语句</pre>\r\n<p>通常数据都是存储在变量或者数组中，因此sql语句需要先进行字符串拼接得到。</p>\r\n<pre class=\"code\">$name = \'李四\';\r\n$age = 18;\r\n$class = \'高三一班\';\r\n$sql = \"insert into user(name, age, class) values(\'$name\', \'$age\', \'$class\')\";\r\nmysql_query($sql); //执行插入语句</pre>\r\n<p>在mysql中，执行插入语句以后，可以得到自增的主键id,通过PHP的mysql_insert_id函数可以获取该id。</p>\r\n<pre class=\"code\">$uid = mysql_insert_id();</pre>\r\n<p>这个id的作用非常大，通常可以用来判断是否插入成功，或者作为关联ID进行其他的数据操作。</p>\r\n</div>\r\n</div>\r\n<p><strong>11.6 取得数据查询结果</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>通过前面的章节，我们发现PHP操作数据库跟MySql客户端上操作极为相似，先进行连接，然后执行sql语句，再然后获取我们想要的结果集。</p>\r\n<p>PHP有多个函数可以获取数据集中的一行数据，最常用的是mysql_fetch_array，可以通过设定参数来更改行数据的下标，默认的会包含数字索引的下标以及字段名的关联索引下标。</p>\r\n<pre class=\"code\">$sql = \"select * from user limit 1\";\r\n$result = mysql_query($sql);\r\n$row = mysql_fetch_array($result);</pre>\r\n<p>可以通过设定参数MYSQL_NUM只获取数字索引数组，等同于mysql_fetch_row函数，如果设定参数为MYSQL_ASSOC则只获取关联索引数组，等同于mysql_fetch_assoc函数。</p>\r\n<pre class=\"code\">$row = mysql_fetch_row($result);\r\n$row = mysql_fetch_array($result, MYSQL_NUM); //这两个方法获取的数据是一样的</pre>\r\n<pre class=\"code\">$row = mysql_fetch_assoc($result);\r\n$row = mysql_fetch_array($result, MYSQL_ASSOC);</pre>\r\n<p>如果要获取数据集中的所有数据，我们通过循环来遍历整个结果集。</p>\r\n<pre class=\"code\">$data = array();\r\nwhile ($row = mysql_fetch_array($result)) {\r\n    $data[] = $row;\r\n}</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//数据预处理 防止查询不到数据<br>mysql_query(\"insert into user(name, age, class) values(\'王二\', 19, \'高三五班\')\");<br>//进行数据查询<br>$sql = \"select * from user limit 1\";<br>$result = mysql_query($sql);</p>\r\n<p>//在这里获取一行数据<br>$row=mysql_fetch_assoc($result);</p>\r\n<p>echo \'&lt;pre&gt;\';<br>print_r($row);<br>echo \'&lt;/pre&gt;\';</p>\r\n<p><strong>11.7 查询分页数据</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>上一节中，我们了解到通过循环可以获取一个查询的所有数据，在实际应用中，我们并不希望一次性获取数据表中的所有数据，那样性能会非常的低，因此会使用翻页功能，每页仅显示10条或者20条数据。</p>\r\n<p>通过mysql的limit可以很容易的实现分页，limit m,n表示从m行后取n行数据，在PHP中我们需要构造m与n来实现获取某一页的所有数据。</p>\r\n<p>假定当前页为$page，每页显示$n条数据，那么m为当前页前面所有的数据，既$m = ($page-1) * $n，在知道了翻页原理以后，那么我们很容易通过构造SQL语句在PHP中实现数据翻页。</p>\r\n<pre class=\"code\">$page = 2;\r\n$n = 2;\r\n$m = ($page - 1) * $n;\r\n$sql = \"select * from user limit $m, $n\";\r\n$result = mysql_query($sql);\r\n//循环获取当前页的数据\r\n$data = array();\r\nwhile ($row = mysql_fetch_assoc($result)) {\r\n    $data[] = $row;\r\n}\r\n</pre>\r\n<p>在上面的例子中，我们使用了$m与$n变量来表示偏移量与每页数据条数，但我们推荐使用更有意义的变量名来表示，比如$pagesize, $start, $offset等，这样更容易理解，有助于团队协作开发。</p>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//预设翻页参数<br>$page = 2;<br>$pagesize = 2;<br>//在这里构建分页查询<br>$start=($page-1)*$pagesize;</p>\r\n<p>$sql=\"SELECT * FROM user LIMIT $start,$pagesize\";</p>\r\n<p>//获取翻页数据<br>$result = mysql_query($sql);<br>$data = array();<br>while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {<br>    $data[] = $row;<br>}<br>echo \'&lt;pre&gt;\';<br>print_r($data);<br>echo \'&lt;/pre&gt;\';</p>\r\n<p>11.8 更新与删除数据</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>数据的更新与删除相对比较简单，只需要构建好相应的sql语句，然后调用mysql_query执行就能完成相应的更新与删除操作。</p>\r\n<pre class=\"code\">$sql = \"update user set name = \'曹操\' where id=2 limit 1\";\r\nif (mysql_query($sql)) {\r\n    echo \'更新成功\';\r\n}</pre>\r\n<p>同样的删除可以使用类似以下的代码：</p>\r\n<pre class=\"code\">$sql = \"delete from user where id=2 limit 1\";\r\nif (mysql_query($sql)) {\r\n    echo \'删除成功\';\r\n}</pre>\r\n<p>对于删除与更新操作，可以通过mysql_affected_rows函数来获取更新过的数据行数，如果数据没有变化，则结果为0。</p>\r\n<pre class=\"code\">$sql = \"update user set name = \'曹操\' where id=2 limit 1\";\r\nif (mysql_query($sql)) {\r\n    echo mysql_affected_rows();\r\n}</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//预设数据以便进行更新操作<br>mysql_query(\"insert into user(name, age, class) values(\'王二\', 19, \'高三五班\')\");<br>$id = mysql_insert_id();<br>//在这里更新id为$id的行的名字为李白<br>$sql=\"update user set name=\'李白\' where id=$id limit 1\";<br>mysql_query($sql);<br>//输出更新数据条数<br>echo \'数据更新行数：\'.mysql_affected_rows();<br>mysql_query(\"delete from user where id=\'$id\'\");</p>\r\n<p><strong>11.9 关闭MySQL连接</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>当数据库操作完成以后，可以使用mysql_close关闭数据库连接，默认的，当PHP执行完毕以后，会自动的关闭数据库连接。</p>\r\n<pre class=\"code\">mysql_close();</pre>\r\n<p>虽然PHP会自动关闭数据库连接，一般情况下已经满足需求，但是在对性能要求比较高的情况下，可以在进行完数据库操作之后尽快关闭数据库连接，以节省资源，提高性能。</p>\r\n<p>在存在多个数据库连接的情况下，可以设定连接资源参数来关闭指定的数据库连接。</p>\r\n<pre class=\"code\">$link = mysql_connect($host, $user, $pass);\r\nmysql_close($link);</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>$con=mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//在这里关闭数据库连接</p>\r\n<p>mysql_close($con);</p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n\r\n</div>\r\n\r\n</div>\n ', '2016-04-28 20:05:10', '2016-04-28 20:05:10', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3112', 'PHP_Bibel阅读笔记（二）——脸黑的一天（？一年） ', '网络', '\n<p>　　一早上起来把50包开了，一张橙卡。。。就问还有谁。。。。。。。。。。。本命年啊，我去买红内裤还不行么。。。。</p>\r\n<p>实时更新，老哥的号的30包什么都没有。。。。不过中午又开了5包，皇帝，好评啊！！！</p>\r\n<p><strong>五、代码重用与函数编写</strong></p>\r\n<p>include警告与require的错误；</p>\r\n<p>大量的包含实现，可以改ini文件中的：auto_prepend_file和auto_append_file;</p>\r\n<p>global关键字也是可以用在函数内的参数的；</p>\r\n<p>参数的引用传递和return</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">1</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\FunctionUse;\r\n</span><span style=\"color: #008080;\">2</span> \r\n<span style=\"color: #008080;\">3</span> <span style=\"color: #0000ff;\">include_once</span> \'index.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">4</span> <span style=\"color: #800080;\">$value</span>=10<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">5</span> increment1(<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">6</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$value</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">7</span> <span style=\"color: #800080;\">$value2</span>=100<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">8</span> <span style=\"color: #800080;\">$value2</span>=increment2(<span style=\"color: #800080;\">$value2</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">9</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$value2</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\";</pre>\r\n</div>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #0000ff;\">function</span> increment1(&amp;<span style=\"color: #800080;\">$value</span>,<span style=\"color: #800080;\">$mount</span>=1<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\"> 4</span>     <span style=\"color: #800080;\">$value</span>=<span style=\"color: #800080;\">$value</span>+<span style=\"color: #800080;\">$mount</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 6</span> \r\n<span style=\"color: #008080;\"> 7</span> <span style=\"color: #0000ff;\">function</span> increment2(<span style=\"color: #800080;\">$value</span>,<span style=\"color: #800080;\">$mount</span>=1<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\"> 9</span>     <span style=\"color: #800080;\">$value</span>=<span style=\"color: #800080;\">$value</span>+<span style=\"color: #800080;\">$mount</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">11</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>递归函数比循环慢且占用更多内存，虽然很多循环都可以用递归来代替；（在应用领域中基本不用它</p>\r\n<p><strong>六、面向对象</strong></p>\r\n<p>好玩的代码，学到些东西！</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">  1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">  2</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\ObjectPage;\r\n</span><span style=\"color: #008080;\">  3</span> \r\n<span style=\"color: #008080;\">  4</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Chapter6.P132</span>\r\n<span style=\"color: #008080;\">  5</span> \r\n<span style=\"color: #008080;\">  6</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> Page\r\n</span><span style=\"color: #008080;\">  7</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">  8</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$content</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  9</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$title</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 10</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$keyword</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 11</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$button</span>=<span style=\"color: #0000ff;\">array</span>(\"Home\"=&gt;\"http://115.159.201.78/wordpress/\",\r\n<span style=\"color: #008080;\"> 12</span>         \"Basic\"=&gt;\"Section1.php\"\r\n<span style=\"color: #008080;\"> 13</span> <span style=\"color: #000000;\">    );\r\n</span><span style=\"color: #008080;\"> 14</span>     \r\n<span style=\"color: #008080;\"> 15</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __set(<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 16</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 17</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #800080;\">$name</span>=<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 18</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 19</span>     \r\n<span style=\"color: #008080;\"> 20</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> Display()\r\n</span><span style=\"color: #008080;\"> 21</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 22</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;html&gt;\\n&lt;head&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 23</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayTitle();\r\n</span><span style=\"color: #008080;\"> 24</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayKeywords();\r\n</span><span style=\"color: #008080;\"> 25</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayStyles();\r\n</span><span style=\"color: #008080;\"> 26</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/head&gt;\\n&lt;body&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 27</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayHeader();\r\n</span><span style=\"color: #008080;\"> 28</span>         <span style=\"color: #800080;\">$this</span>-&gt;DisplayMenu(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">button);\r\n</span><span style=\"color: #008080;\"> 29</span>         <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">content;\r\n</span><span style=\"color: #008080;\"> 30</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayFooter();\r\n</span><span style=\"color: #008080;\"> 31</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/body&gt;\\n&lt;/html&gt;\\n\"<span style=\"color: #000000;\">;   \r\n</span><span style=\"color: #008080;\"> 32</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 33</span>     \r\n<span style=\"color: #008080;\"> 34</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayTitle()\r\n</span><span style=\"color: #008080;\"> 35</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 36</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;title&gt;\".<span style=\"color: #800080;\">$this</span>-&gt;title.\"&lt;/title&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 37</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 38</span>     \r\n<span style=\"color: #008080;\"> 39</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayKeywords()\r\n</span><span style=\"color: #008080;\"> 40</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 41</span>         <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$this</span>-&gt;keyword <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$words</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 42</span>             <span style=\"color: #0000ff;\">echo</span> \"&lt;meta name=\\\"keywords\\\" content=\\\"\".<span style=\"color: #800080;\">$words</span>.\"\\\"/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 43</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\"> 44</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 45</span>     \r\n<span style=\"color: #008080;\"> 46</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayStyles()\r\n</span><span style=\"color: #008080;\"> 47</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 48</span>    ?&gt;\r\n<span style=\"color: #008080;\"> 49</span>      &lt;style&gt;\r\n<span style=\"color: #008080;\"> 50</span> <span style=\"color: #000000;\">      h1 {\r\n</span><span style=\"color: #008080;\"> 51</span>             color:white; font-size:24pt; text-align:<span style=\"color: #000000;\">center;\r\n</span><span style=\"color: #008080;\"> 52</span>             font-family:arial,sans-<span style=\"color: #000000;\">serif\r\n</span><span style=\"color: #008080;\"> 53</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 54</span>     .<span style=\"color: #000000;\">menu {\r\n</span><span style=\"color: #008080;\"> 55</span>         color:white; font-size:12pt; text-align:<span style=\"color: #000000;\">center;\r\n</span><span style=\"color: #008080;\"> 56</span>         font-family:arial,sans-serif; font-weight:<span style=\"color: #000000;\">bold\r\n</span><span style=\"color: #008080;\"> 57</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 58</span> <span style=\"color: #000000;\">    td {\r\n</span><span style=\"color: #008080;\"> 59</span>         background:<span style=\"color: #000000;\">black\r\n</span><span style=\"color: #008080;\"> 60</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 61</span> <span style=\"color: #000000;\">    p {\r\n</span><span style=\"color: #008080;\"> 62</span>         color:black; font-size:12pt; text-align:<span style=\"color: #000000;\">justify;\r\n</span><span style=\"color: #008080;\"> 63</span>         font-family:arial,sans-<span style=\"color: #000000;\">serif\r\n</span><span style=\"color: #008080;\"> 64</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 65</span>     p.<span style=\"color: #000000;\">foot {\r\n</span><span style=\"color: #008080;\"> 66</span>         color:white; font-size:12pt; text-align:<span style=\"color: #000000;\">center;\r\n</span><span style=\"color: #008080;\"> 67</span>         font-family:arial,sans-serif; font-weight:<span style=\"color: #000000;\">bold\r\n</span><span style=\"color: #008080;\"> 68</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 69</span>     a:link,a:visited,a:<span style=\"color: #000000;\">active {\r\n</span><span style=\"color: #008080;\"> 70</span>         color:<span style=\"color: #000000;\">white\r\n</span><span style=\"color: #008080;\"> 71</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 72</span>     &lt;/style&gt;\r\n<span style=\"color: #008080;\"> 73</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 74</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 75</span>     \r\n<span style=\"color: #008080;\"> 76</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayHeader()\r\n</span><span style=\"color: #008080;\"> 77</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 78</span> ?&gt;\r\n<span style=\"color: #008080;\"> 79</span>   &lt;table width=\"100%\" cellpadding=\"12\" \r\n<span style=\"color: #008080;\"> 80</span>          cellspacing=\"0\" border=\"0\"&gt;\r\n<span style=\"color: #008080;\"> 81</span>   &lt;tr bgcolor=\"black\"&gt;\r\n<span style=\"color: #008080;\"> 82</span>     &lt;td align=\"left\"&gt;&lt;img alt=\"img\" src=\"logo.png\"&gt;&lt;/td&gt;\r\n<span style=\"color: #008080;\"> 83</span>     &lt;td&gt;&lt;h1&gt;The OOP page&lt;/h1&gt;&lt;/td&gt;\r\n<span style=\"color: #008080;\"> 84</span>   &lt;/tr&gt;\r\n<span style=\"color: #008080;\"> 85</span> &lt;/table&gt;\r\n<span style=\"color: #008080;\"> 86</span> &lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #008080;\"> 87</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 88</span>     \r\n<span style=\"color: #008080;\"> 89</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span> DisplayMenu(<span style=\"color: #800080;\">$button</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 90</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 91</span>         <span style=\"color: #0000ff;\">echo</span> \"<span style=\"color: #000000;\">&lt;table width=\\\"100%\\\" bgcolor=\\\"white\\\"\r\n</span><span style=\"color: #008080;\"> 92</span>               cellpadding=\\\"4\\\"    cellsapcing=\\\"4\\\"&gt;\\n \"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 93</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;tr&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 94</span>         <span style=\"color: #800080;\">$width</span>=100/<span style=\"color: #008080;\">count</span>(<span style=\"color: #800080;\">$button</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 95</span>         <span style=\"color: #0000ff;\">while</span> (<span style=\"color: #0000ff;\">list</span>(<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$url</span>)=<span style=\"color: #008080;\">each</span>(<span style=\"color: #800080;\">$button</span><span style=\"color: #000000;\">)) {\r\n</span><span style=\"color: #008080;\"> 96</span>             <span style=\"color: #800080;\">$this</span>-&gt;DisplayButton(<span style=\"color: #800080;\">$width</span>,<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$url</span>,\r\n<span style=\"color: #008080;\"> 97</span>                 !<span style=\"color: #800080;\">$this</span>-&gt;IsURLCurrentPage(<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 98</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\"> 99</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/tr&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">100</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/table&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">101</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">102</span>     \r\n<span style=\"color: #008080;\">103</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span> IsURLCurrentPage(<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">104</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">105</span>         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">strpos</span>(<span style=\"color: #800080;\">$_SERVER</span>[\'PHP_SELF\'], <span style=\"color: #800080;\">$url</span>)==<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">106</span>             <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">107</span>         } <span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">108</span>             <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">109</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\">110</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">111</span>     \r\n<span style=\"color: #008080;\">112</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span> DisplayButton(<span style=\"color: #800080;\">$width</span>,<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$url</span>,<span style=\"color: #800080;\">$active</span>=<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">113</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">114</span>         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$active</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">115</span>             <span style=\"color: #0000ff;\">echo</span> \"&lt;td width=\\\"\".<span style=\"color: #800080;\">$width</span>.\"<span style=\"color: #000000;\">%\\\"&gt;\r\n</span><span style=\"color: #008080;\">116</span>             &lt;a href=\\\"\".<span style=\"color: #800080;\">$url</span>.\"<span style=\"color: #000000;\">\\\" onclick=\\\"blank\\\"&gt;\r\n</span><span style=\"color: #008080;\">117</span>             &lt;img src=\\\"w-logo-blue.png\\\" alt=\\\"\".<span style=\"color: #800080;\">$name</span>.\"<span style=\"color: #000000;\">\\\" border=\\\"0\\\" /&gt;&lt;/a&gt;\r\n</span><span style=\"color: #008080;\">118</span>             &lt;a href=\\\"\".<span style=\"color: #800080;\">$url</span>.\"\\\"&gt;&lt;span class=\\\"menu\\\"&gt;\".<span style=\"color: #800080;\">$name</span>.\"<span style=\"color: #000000;\">&lt;/span&gt;&lt;/a&gt;\r\n</span><span style=\"color: #008080;\">119</span>                 &lt;/td&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">120</span>         } <span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">121</span>             <span style=\"color: #0000ff;\">echo</span> \"&lt;td width=\\\"\".<span style=\"color: #800080;\">$width</span>.\"<span style=\"color: #000000;\">%\\\"&gt;\r\n</span><span style=\"color: #008080;\">122</span> <span style=\"color: #000000;\">            &lt;img src=\\\"w-logo-white.png\\\"&gt;\r\n</span><span style=\"color: #008080;\">123</span>             &lt;span class=\\\"menu\\\"&gt;\".<span style=\"color: #800080;\">$name</span>.\"&lt;/span&gt;&lt;/td&gt;\"<span style=\"color: #000000;\">;            \r\n</span><span style=\"color: #008080;\">124</span> <span style=\"color: #000000;\">        }        \r\n</span><span style=\"color: #008080;\">125</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">126</span>     \r\n<span style=\"color: #008080;\">127</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayFooter()\r\n</span><span style=\"color: #008080;\">128</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">129</span> ?&gt;\r\n<span style=\"color: #008080;\">130</span>   &lt;table width=\"100%\" bgcolor=\"black\" cellpadding=\"12\" border=\"0\"&gt;\r\n<span style=\"color: #008080;\">131</span>   &lt;tr&gt;\r\n<span style=\"color: #008080;\">132</span>     &lt;td&gt;\r\n<span style=\"color: #008080;\">133</span>     &lt;p <span style=\"color: #0000ff;\">class</span>=\"foot\"&gt;&amp;<span style=\"color: #008080;\">copy</span>; Andy Liang.&lt;/p&gt;\r\n<span style=\"color: #008080;\">134</span>     &lt;p <span style=\"color: #0000ff;\">class</span>=\"foot\"&gt;Please visit my own site:&lt;a href=\"http://115.159.201.78/wordpress/\"&gt;Andy\'<span style=\"color: #000000;\">s Learning Diary&lt;/a&gt;&lt;/p&gt;\r\n</span><span style=\"color: #008080;\">135</span> <span style=\"color: #000000;\">    &lt;/td&gt;\r\n</span><span style=\"color: #008080;\">136</span> <span style=\"color: #000000;\">  &lt;/tr&gt;\r\n</span><span style=\"color: #008080;\">137</span> <span style=\"color: #000000;\">&lt;/table&gt;\r\n</span><span style=\"color: #008080;\">138</span> <span style=\"color: #000000;\">&lt;?php \r\n</span><span style=\"color: #008080;\">139</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">140</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">141</span> \r\n<span style=\"color: #008080;\">142</span> <span style=\"color: #000000;\">$homepage=new Page();\r\n</span><span style=\"color: #008080;\">143</span> <span style=\"color: #000000;\">$homepage-&gt;content=\"&lt;p&gt;\".\"I do not know what to write down, how about this?\".\"&lt;/p&gt;\";\r\n</span><span style=\"color: #008080;\">144</span> <span style=\"color: #000000;\">$homepage-&gt;title=\"You have to try OO.\";\r\n</span><span style=\"color: #008080;\">145</span> <span style=\"color: #000000;\">$homepage-&gt;keyword=array(\"SAR\",\"MRF\");\r\n</span><span style=\"color: #008080;\">146</span> $homepage-&gt;Display();</pre>\r\n</div>\r\n<p> </p>\r\n<p>就是个默认网页的生成对象，还是有改进空间的。</p>\r\n<p>然后，php写html，有点繁琐，但写完了一身爽。</p>\r\n<p>&lt;?php ?&gt;标记的活用有点厉害啊，套路~</p>\r\n<p>PS:上面代码中的链接不要乱点~会吓到你的。</p>\r\n<p>当然，其实这种得到页面在应用中是不推荐的，只是试着练下手。</p>\r\n<p><strong>七、错误和异常处理</strong></p>\r\n<p>try{ throw new Exception() }  catch{  }</p>\r\n<p>PHP中，异常必须手动抛出；</p>\r\n<p>try代码块和catch代码块是“绑定的”，每个try一定要有一个catch！</p>\r\n<p>一个try可以有多个catch</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Session1.Chapter7.P146</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\ExceptionTry;\r\n</span><span style=\"color: #008080;\"> 4</span> \r\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\r\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> \\ErrorException(\"A serious wrong has occured!\", 14<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #0000ff;\">catch</span> (\\ErrorException <span style=\"color: #800080;\">$e</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 9</span>     <span style=\"color: #0000ff;\">echo</span> \"Exceotion\".<span style=\"color: #800080;\">$e</span>-&gt;getCode().\":\".<span style=\"color: #800080;\">$e</span>-&gt;getMessage().\"&lt;br/&gt;\"\r\n<span style=\"color: #008080;\">10</span>         .\"File:\".<span style=\"color: #800080;\">$e</span>-&gt;getFile().\"at Line:\".<span style=\"color: #800080;\">$e</span>-&gt;getLine().\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">11</span>     <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$e</span><span style=\"color: #000000;\">;    \r\n</span><span style=\"color: #008080;\">12</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>应用中，希望可以<strong>自定义异常处理</strong>：继承已有的Exception类就好，需要注意的是，一般的getMessage等是final的，不能进行重载的，只有_tostring这一个方法可以重载；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">class</span> MyException <span style=\"color: #0000ff;\">extends</span><span style=\"color: #000000;\"> \\ErrorException\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\"> 3</span>     <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> _tostring()\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 5</span>         <span style=\"color: #0000ff;\">return</span> \"Fatal error,sorry!\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\r\n</span><span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> MyException(\"OH\", 14<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #0000ff;\">catch</span> (MyException <span style=\"color: #800080;\">$e</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">13</span>     <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$e</span>-&gt;<span style=\"color: #000000;\">_tostring();\r\n</span><span style=\"color: #008080;\">14</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>应用中，<strong>常常把异常处理用在最容易出错的I/O部分</strong>；格式一般都是</p>\r\n<p>try{ if(!...) throw...} catch(){}</p>\r\n<p> </p>\r\n<p>Session 2</p>\r\n<p>（二） 使用MySQL</p>\r\n<p>八、设计Web数据库</p>\r\n<p> </p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:05:10', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3113', 'PHP_Bibel阅读学习（一）——看书看经典，写文写代码 ', '网络', '\n<p>　　基础快速再看一下，然后每天有新的好玩的看。</p>\r\n<p>这本书，反正好评不少，就是`PHP和MySQL Web开发`，机械工业出版社，澳洲人写的，红皮，有兴趣的可以看一下。</p>\r\n<p> </p>\r\n<p><strong>第一篇 使用PHP</strong></p>\r\n<p><strong>一、入门</strong></p>\r\n<p>5分钟翻一下，两个点吧。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//From Bible\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Session1 Based\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//Chapter1-Use</span>\r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\Using;\r\n</span><span style=\"color: #008080;\">10</span> \r\n<span style=\"color: #008080;\">11</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">引用操作符\r\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #008000;\">//这样子赋值的变量享有同一个空间</span>\r\n<span style=\"color: #008080;\">13</span> <span style=\"color: #800080;\">$a</span>=3<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$a</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #800080;\">$b</span>=&amp;<span style=\"color: #800080;\">$a</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">16</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$b</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">17</span> <span style=\"color: #800080;\">$b</span>=3333<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">18</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$a</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">19</span> \r\n<span style=\"color: #008080;\">20</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">执行操作符\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #008000;\">//``</span>\r\n<span style=\"color: #008080;\">22</span> <span style=\"color: #800080;\">$out</span>=`ls -<span style=\"color: #000000;\">la`;\r\n</span><span style=\"color: #008080;\">23</span> <span style=\"color: #0000ff;\">echo</span> \'&lt;pre&gt;\'.<span style=\"color: #800080;\">$out</span>.\'&lt;/pre&gt;\';</pre>\r\n</div>\r\n<p><strong> 二、数据的存储与检索（文件直接操作</strong></p>\r\n<p>想说的都在代码里了。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\DataUsing;\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断文件是否存在——打开文件——锁定文件——读取文件——写入数据——解锁——关闭文件</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #800080;\">$filename</span>=\'test.txt\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">)) {\r\n</span><span style=\"color: #008080;\"> 5</span>     <span style=\"color: #0000ff;\">echo</span> \'The file you want to visit is not exist!\';<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">exit</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #800080;\">$fp</span>=@<span style=\"color: #008080;\">fopen</span>(<span style=\"color: #800080;\">$filename</span>,\'r+\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008080;\">flock</span>(<span style=\"color: #800080;\">$fp</span>, LOCK_EX);  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">锁定文件，只允许一个写入</span>\r\n<span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">while</span> (!<span style=\"color: #008080;\">feof</span>(<span style=\"color: #800080;\">$fp</span>)){   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">按行读取文件内容</span>\r\n<span style=\"color: #008080;\">11</span>     <span style=\"color: #800080;\">$content</span>=<span style=\"color: #008080;\">fgets</span>(<span style=\"color: #800080;\">$fp</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">12</span>     <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$content</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #800080;\">$writeContent</span>=\'I have something to write into\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #008080;\">fwrite</span>(<span style=\"color: #800080;\">$fp</span>, <span style=\"color: #800080;\">$writeContent</span>,<span style=\"color: #008080;\">strlen</span>(<span style=\"color: #800080;\">$writeContent</span>));  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">控制写入长度，兼容性考虑</span>\r\n<span style=\"color: #008080;\">16</span> <span style=\"color: #008080;\">flock</span>(<span style=\"color: #800080;\">$fp</span>, LOCK_UN);  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">释放锁定</span>\r\n<span style=\"color: #008080;\">17</span> <span style=\"color: #008080;\">fclose</span>(<span style=\"color: #800080;\">$fp</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong>三、数组</strong></p>\r\n<p>其他的都老生常谈，大概查一下随便用，就是熟练度的问题，但还是得知道哈。</p>\r\n<p>然后学到了usort（用户自定义排序）的妙处：</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Chapter3.Array</span>\r\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\ArrayUsort;\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多维数组的排序</span>\r\n<span style=\"color: #008080;\"> 4</span> <span style=\"color: #800080;\">$array1</span>=<span style=\"color: #0000ff;\">array</span>(54654,545,668<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #800080;\">$array2</span>=<span style=\"color: #0000ff;\">array</span>(5454,88,37,54<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #800080;\">$array3</span>=<span style=\"color: #0000ff;\">array</span>(123,4444,5453<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #800080;\">$arrayAll</span>=<span style=\"color: #0000ff;\">array</span>(<span style=\"color: #800080;\">$array1</span>,<span style=\"color: #800080;\">$array2</span>,<span style=\"color: #800080;\">$array3</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$arrayAll</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 9</span> \r\n<span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">function</span> dimensionsCompare(<span style=\"color: #800080;\">$x</span>,<span style=\"color: #800080;\">$y</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">12</span>     <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$x</span>[1]==<span style=\"color: #800080;\">$y</span>[1<span style=\"color: #000000;\">]){\r\n</span><span style=\"color: #008080;\">13</span>         <span style=\"color: #0000ff;\">return</span> 0<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">14</span>     }<span style=\"color: #0000ff;\">elseif</span> (<span style=\"color: #800080;\">$x</span>[1]&lt;<span style=\"color: #800080;\">$y</span>[1<span style=\"color: #000000;\">]){\r\n</span><span style=\"color: #008080;\">15</span>         <span style=\"color: #0000ff;\">return</span> -1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">16</span>     }<span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">17</span>         <span style=\"color: #0000ff;\">return</span> 1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">20</span> @<span style=\"color: #008080;\">usort</span>(<span style=\"color: #800080;\">$arrayAll</span>, \"dimensionsCompare\"<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$arrayAll</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p>其他什么的explode还是有点好玩的。</p>\r\n<p><strong>四、字符串操作和正则表达式</strong></p>\r\n<p>字符串整理</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">1</span> <span style=\"color: #800080;\">$name</span>=<span style=\"color: #008080;\">trim</span>(<span style=\"color: #800080;\">$_POST</span>[\'name\'<span style=\"color: #000000;\">]);\r\n</span><span style=\"color: #008080;\">2</span> <span style=\"color: #800080;\">$email</span>=<span style=\"color: #008080;\">rtrim</span>(<span style=\"color: #800080;\">$_POST</span>[\'email\'<span style=\"color: #000000;\">]);\r\n</span><span style=\"color: #008080;\">3</span> <span style=\"color: #800080;\">$feedback</span>=<span style=\"color: #008080;\">chop</span>(<span style=\"color: #800080;\">$_POST</span>[\'feedback\']);</pre>\r\n</div>\r\n<p> </p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:05:10', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3114', 'MordenPHP阅读笔记（一）——先跑再说，跑累了再走 ', '网络', '\n<p>---恢复内容开始---</p>\r\n<p>　　后台一大堆半成品，或者是几乎不成的。。。</p>\r\n<p>这本书不错，起码是别人推荐的，然后也是比较新的东西，学哪本不是学嘛，关键是得看。</p>\r\n<p>今儿个网不好，科研所需的代码下不到，看书做笔记吧。</p>\r\n<p>这本书基本将的是5.4版本后的一些新变化，写的浅显易懂，虽然鄙人走的还不顺溜，跑一跑也摔不到哪儿去，跑累了我有的是走的机会~~</p>\r\n<p><strong>（一）特性</strong></p>\r\n<p><strong>一、命名空间</strong></p>\r\n<p>一个文件一个类，用了命名空间方便互相调用；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//Namespace\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 4</span> <span style=\"color: #000000;\">namespace ModernPHP\\feature\\mingmingkongjian;\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #0000ff;\">function</span> <span style=\"color: #008080;\">var_dump</span><span style=\"color: #000000;\">(){\r\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">echo</span> \"Shit!\".\"&lt;/br&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #800080;\">$test</span>=\"OK\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$test</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">11</span> \\ModernPHP\\feature\\mingmingkongjian\\<span style=\"color: #008080;\">var_dump</span><span style=\"color: #000000;\">();\r\n</span><span style=\"color: #008080;\">12</span> \r\n<span style=\"color: #008080;\">13</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">命名空间必须顶头，但一个文件中可以有很多命名空间，然后也可以有子空间\r\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #008000;\">//厂商的命名空间是最顶层的命名空间，用于识别品牌\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #008000;\">//旨在解决命名冲突的问题，当然现在应该有比较灵活的其他用法\r\n</span><span style=\"color: #008080;\">16</span> \r\n<span style=\"color: #008080;\">17</span> <span style=\"color: #008000;\">//一个比较实用的点：导入和别名\r\n</span><span style=\"color: #008080;\">18</span> <span style=\"color: #008000;\">//导入另一个文件夹下的类定义，直接用</span>\r\n<span style=\"color: #008080;\">19</span> <span style=\"color: #0000ff;\">require</span> \'index.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">20</span> <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> a\\aaa;\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #800080;\">$daoru</span>=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> aaa;\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #800080;\">$daoru</span>-&gt;<span style=\"color: #000000;\">send();\r\n</span><span style=\"color: #008080;\">23</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">use是导入，然后在use中设置最懒的别名\r\n</span><span style=\"color: #008080;\">24</span> <span style=\"color: #008000;\">//另外，5.6版本后可以实现use 函数\r\n</span><span style=\"color: #008080;\">25</span> <span style=\"color: #008000;\">// use func a\\call;\r\n</span><span style=\"color: #008080;\">26</span> <span style=\"color: #008000;\">// \\a\\call();</span></pre>\r\n</div>\r\n<p>index.php</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">namespace a;\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> aaa{\r\n</span><span style=\"color: #008080;\"> 4</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> send(){\r\n</span><span style=\"color: #008080;\"> 5</span>         <span style=\"color: #0000ff;\">echo</span> \"ok\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> call(){\r\n</span><span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">echo</span> \"func_use is successful.\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">11</span> }</pre>\r\n</div>\r\n<p><strong>二、使用接口</strong></p>\r\n<p>接口，本来没太懂，看懂了之后简直了，牛逼啊！</p>\r\n<p>一个接口，大家只要遵守接口规定，就都能用，就这么个意思。</p>\r\n<p>下面是一个获得内容的接口示例，还可以写更多基于此接口的模块；（其中，模块中getContent的我基本都不会。。。哭）</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">\r\n//Chapter2.P19\r\n//Feature_Interface\r\n//</span>\r\n<span style=\"color: #000000;\">namespace ModernPHP\\feature\\jiekou;\r\n\r\n\r\n\r\n</span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> DocumentStore{\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$data</span>=<span style=\"color: #000000;\">[];\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> addDocument(Documentable <span style=\"color: #800080;\">$document</span>){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">这里注明只能使用接口的参数</span>\r\n        <span style=\"color: #800080;\">$key</span>=<span style=\"color: #800080;\">$document</span>-&gt;<span style=\"color: #000000;\">getID();\r\n        </span><span style=\"color: #800080;\">$value</span>=<span style=\"color: #800080;\">$document</span>-&gt;<span style=\"color: #000000;\">getContent();\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;data[<span style=\"color: #800080;\">$key</span>]=<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">;\r\n    }\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getDocuments(){\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">data;\r\n    }\r\n}\r\n\r\n</span><span style=\"color: #0000ff;\">interface</span> Documentable{     <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">定义接口，说白了就是定规矩，其他地方要用，就得说一声</span>\r\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getId();\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getContent();\r\n}\r\n\r\n</span><span style=\"color: #0000ff;\">class</span> HtmlDocument <span style=\"color: #0000ff;\">implements</span> Documentable{   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">声明要用接口；这个是获得url的内容的</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">;\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __construct(<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;url=<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">;\r\n    }\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getId(){\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">url;\r\n    }\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getContent(){\r\n        </span><span style=\"color: #800080;\">$ch</span>=curl_init();   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">这里的curl是针对url进行操作一个库（相当于）。这个命令是开启一个curl对话，所以下面这些都是一个对话</span>\r\n        curl_setopt(<span style=\"color: #800080;\">$ch</span>, CURLOPT_URL, <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">url);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>, CURLOPT_RETURNTRANSFER, 1<span style=\"color: #000000;\">);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>,CURLOPT_CONNECTTIMEOUT,3<span style=\"color: #000000;\">);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>,CURLOPT_FOLLOWLOCATION,1<span style=\"color: #000000;\">);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>,CURLOPT_MAXREDIRS,3<span style=\"color: #000000;\">);\r\n        </span><span style=\"color: #800080;\">$html</span>=curl_exec(<span style=\"color: #800080;\">$ch</span>);   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">由这个命令执行刚才的对话</span>\r\n        curl_close(<span style=\"color: #800080;\">$ch</span><span style=\"color: #000000;\">);\r\n        \r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$html</span><span style=\"color: #000000;\">;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n</span><span style=\"color: #800080;\">$documentStore</span>=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> DocumentStore();\r\n\r\n</span><span style=\"color: #800080;\">$htmlDoc</span>=<span style=\"color: #0000ff;\">new</span> HtmlDocument(\'http://www.baidu.com\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$documentStore</span>-&gt;addDocument(<span style=\"color: #800080;\">$htmlDoc</span><span style=\"color: #000000;\">);\r\n\r\n\r\n\r\n</span><span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$documentStore</span>-&gt;getDocuments());</pre>\r\n</div>\r\n<p> 另一个模块</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">class</span> StreamDocument <span style=\"color: #0000ff;\">implements</span> Documentable{  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">流媒体</span>\r\n<span style=\"color: #008080;\"> 2</span>     <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$resource</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 3</span>     <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$buffer</span>;   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">缓冲区大小</span>\r\n<span style=\"color: #008080;\"> 4</span>     \r\n<span style=\"color: #008080;\"> 5</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __construct(<span style=\"color: #800080;\">$resource</span>,<span style=\"color: #800080;\">$buffer</span>=4096<span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 6</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>=<span style=\"color: #800080;\">$resource</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 7</span>         <span style=\"color: #800080;\">$this</span>-&gt;buffer=<span style=\"color: #800080;\">$buffer</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 9</span>     \r\n<span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getId(){\r\n</span><span style=\"color: #008080;\">11</span>         <span style=\"color: #0000ff;\">return</span> \'resource-\'.(int)<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">13</span>     \r\n<span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getContent(){\r\n</span><span style=\"color: #008080;\">15</span>         <span style=\"color: #800080;\">$streamContent</span>=\'\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">16</span>         <span style=\"color: #008080;\">rewind</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>); <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">rewind() 函数将文件指针的位置倒回文件的开头</span>\r\n<span style=\"color: #008080;\">17</span>         <span style=\"color: #0000ff;\">while</span> (<span style=\"color: #008080;\">feof</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>)===<span style=\"color: #0000ff;\">false</span>){    <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">feof() 函数检测是否已到达文件末尾 (eof)。</span>\r\n<span style=\"color: #008080;\">18</span>             <span style=\"color: #800080;\">$streamContent</span>.=<span style=\"color: #008080;\">fread</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>,<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">buffer);\r\n</span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\">20</span>         \r\n<span style=\"color: #008080;\">21</span>         <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$streamContent</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">23</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong> 三、性状</strong></p>\r\n<p>奇怪的东西。。。</p>\r\n<p>其实就是为了多重继承或者一对多个不同的类别吧</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter2.P23\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Feature_Trait\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//性状\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//前面说的接口，是针对同类型的东西，实现相同的功能的；\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\">//这里的性状是针对不同的东西，实现相同的功能\r\n</span><span style=\"color: #008080;\">10</span> \r\n<span style=\"color: #008080;\">11</span> <span style=\"color: #008000;\">//基本用法如下</span>\r\n<span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">trait traitName{\r\n</span><span style=\"color: #008080;\">13</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> testThis(){\r\n</span><span style=\"color: #008080;\">14</span>         <span style=\"color: #0000ff;\">echo</span> \"This is how trait works.\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">16</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">17</span> \r\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">trait traitMore{\r\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> testAgain(){\r\n</span><span style=\"color: #008080;\">20</span>         <span style=\"color: #0000ff;\">echo</span> \"This is multiple use.\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">23</span> \r\n<span style=\"color: #008080;\">24</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> className{\r\n</span><span style=\"color: #008080;\">25</span>     <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> traitName;\r\n</span><span style=\"color: #008080;\">26</span>     <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> traitMore;\r\n</span><span style=\"color: #008080;\">27</span>     \r\n<span style=\"color: #008080;\">28</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">29</span> \r\n<span style=\"color: #008080;\">30</span> <span style=\"color: #800080;\">$classMine</span>=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> className();\r\n</span><span style=\"color: #008080;\">31</span> <span style=\"color: #800080;\">$classMine</span>-&gt;<span style=\"color: #000000;\">testThis();\r\n</span><span style=\"color: #008080;\">32</span> <span style=\"color: #800080;\">$classMine</span>-&gt;testAgain();</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong> 四、生成器</strong></p>\r\n<p>直接上代码</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter2.P26\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Feature_Generator\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//生成器\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//其实就是在函数中使用了yield语句的东西\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\">//优点在于节省了内存使用情况\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #008000;\">//方法是通过动态分配内存进行循环操作\r\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #008000;\">//典型用处是处理csv类数据文件</span>\r\n<span style=\"color: #008080;\">12</span> \r\n<span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">namespace ModernPHP\\feature\\shengchegnqi;\r\n</span><span style=\"color: #008080;\">14</span> \r\n<span style=\"color: #008080;\">15</span> <span style=\"color: #0000ff;\">function</span> getRows(<span style=\"color: #800080;\">$file</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">16</span>     <span style=\"color: #800080;\">$handle</span>=<span style=\"color: #008080;\">fopen</span>(<span style=\"color: #800080;\">$file</span>,\'rb\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">17</span>     <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$handle</span>===<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">18</span>         <span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> <span style=\"color: #0000ff;\">Exception</span>();  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">抛出错误原因</span>\r\n<span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">20</span>     <span style=\"color: #0000ff;\">while</span> (<span style=\"color: #008080;\">feof</span>(<span style=\"color: #800080;\">$handle</span>)===<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">) {\r\n</span><span style=\"color: #008080;\">21</span>         yield <span style=\"color: #008080;\">fgetcsv</span>(<span style=\"color: #800080;\">$handle</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">23</span>     <span style=\"color: #008080;\">fclose</span>(<span style=\"color: #800080;\">$handle</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">24</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">25</span> \r\n<span style=\"color: #008080;\">26</span> <span style=\"color: #0000ff;\">foreach</span> (getRows(\'data.csv\') <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$row</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">27</span>     <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$row</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">28</span>     <span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">30</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">当数据文件很大时，效果尤其明显</span></pre>\r\n</div>\r\n<p> </p>\r\n<p><strong> 五、闭包</strong></p>\r\n<p>这里闭包基本等于匿名函数</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter2.P29\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Feature_ClosePatch\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//闭包或匿名函数\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//把函数当作是变量\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\">//然后它就可以像变量一样用来用去了。。\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #008000;\">//常用做函数和方法的回调</span>\r\n<span style=\"color: #008080;\">11</span> \r\n<span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">namespace ModernPHP\\feature\\bibao;\r\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #800080;\">$var</span>=<span style=\"color: #0000ff;\">function</span> (<span style=\"color: #800080;\">$name</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">sprintf</span>(\'Hello %s\',<span style=\"color: #800080;\">$name</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">};\r\n</span><span style=\"color: #008080;\">16</span> \r\n<span style=\"color: #008080;\">17</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$var</span>(\'Andy\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">18</span> \r\n<span style=\"color: #008080;\">19</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">做回调</span>\r\n<span style=\"color: #008080;\">20</span> <span style=\"color: #800080;\">$array</span>=[2,3,4<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #800080;\">$num</span>=<span style=\"color: #008080;\">array_map</span>(<span style=\"color: #0000ff;\">function</span> (<span style=\"color: #800080;\">$number</span>){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">array_map,将函数作用到数组中的每个值上，每个值都乘以本身，并返回带有新值的数组</span>\r\n<span style=\"color: #008080;\">22</span>     <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$number</span>+1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">23</span> },<span style=\"color: #800080;\">$array</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">24</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$num</span>);</pre>\r\n</div>\r\n<p> 六、附加状态</p>\r\n<p>这个没搞懂。。。</p>\r\n<p>（二）标准</p>\r\n<p>PHP-FIG的一些约定俗成；</p>\r\n<p>---类名称，驼峰式，ShitHappens</p>\r\n<p>---方法名称，驼峰式，但首字母小写，shitHappens</p>\r\n<p>---缩进统一为4个空格</p>\r\n<p>---不写?&gt;结束符号；</p>\r\n<p>---{另起一行；</p>\r\n<p>---命名空间要有空格；</p>\r\n<p>---类中属性和方法必须有可见性声明；</p>\r\n<p>---if等控制性结构后面有空格；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter3.P44\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//PHP-FIG puts PSRs\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 6</span> \r\n<span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">namespace ModernPHP\\standard\\realize;\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> ModernPHP\\feature\\bibao;\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> ModernPHP\\feature\\fujiazhuangtai;\r\n</span><span style=\"color: #008080;\">11</span> \r\n<span style=\"color: #008080;\">12</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> ShitHappens\r\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$a</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span>     \r\n<span style=\"color: #008080;\">16</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> suck()\r\n</span><span style=\"color: #008080;\">17</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">18</span>         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$this</span>-&gt;a===<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">19</span>             <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">20</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">22</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>----------------------</p>\r\n<p>后面的都是讲述的东西，有需要的我再写吧。 </p>\r\n<p> </p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:05:10', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3115', 'PHP&MySQL（三）——数组 ', '网络', '\n<p>　　前一段忙着比赛忙着找实习，最后一地鸡毛，就是长长教训罢了。。。。</p>\r\n<p>看书还是多必须的，试着高效的、踏实的做吧！！</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">  1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">  2</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">PHP数组其实能创建很多种数据结构，列表，堆栈，队列，树等\r\n</span><span style=\"color: #008080;\">  3</span> <span style=\"color: #008000;\">//数组创建array_fill</span>\r\n<span style=\"color: #008080;\">  4</span> <span style=\"color: #800080;\">$start_index</span>=1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  5</span> <span style=\"color: #800080;\">$num</span>=10<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  6</span> <span style=\"color: #800080;\">$value</span>=\"fuck\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  7</span> <span style=\"color: #800080;\">$array1</span>=<span style=\"color: #008080;\">array_fill</span>(<span style=\"color: #800080;\">$start_index</span>, <span style=\"color: #800080;\">$num</span>, <span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">); \r\n</span><span style=\"color: #008080;\">  8</span> \r\n<span style=\"color: #008080;\">  9</span> \r\n<span style=\"color: #008080;\"> 10</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array1</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 11</span> \r\n<span style=\"color: #008080;\"> 12</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #008080;\">count</span>(<span style=\"color: #800080;\">$array1</span>); <span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"; <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">count计数实现，返回一个数，代表数组长度\r\n</span><span style=\"color: #008080;\"> 13</span> <span style=\"color: #008000;\">//print_r(array_count_values($array1));\r\n</span><span style=\"color: #008080;\"> 14</span> \r\n<span style=\"color: #008080;\"> 15</span> <span style=\"color: #008000;\">//移除元素</span>\r\n<span style=\"color: #008080;\"> 16</span> <span style=\"color: #0000ff;\">unset</span>(<span style=\"color: #800080;\">$array1</span>[3<span style=\"color: #000000;\">]);\r\n</span><span style=\"color: #008080;\"> 17</span> <span style=\"color: #800080;\">$array2</span>=<span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 18</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">unset($array1);</span>\r\n<span style=\"color: #008080;\"> 19</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array1</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 20</span> \r\n<span style=\"color: #008080;\"> 21</span> <span style=\"color: #800080;\">$start</span>=\"a\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 22</span> <span style=\"color: #800080;\">$limit</span>=\"z\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 23</span> <span style=\"color: #800080;\">$array_letters</span>=<span style=\"color: #008080;\">range</span>(<span style=\"color: #800080;\">$start</span>, <span style=\"color: #800080;\">$limit</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 24</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array_letters</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 25</span> \r\n<span style=\"color: #008080;\"> 26</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">异构数组，即数组中有各种类型的</span>\r\n<span style=\"color: #008080;\"> 27</span> <span style=\"color: #800080;\">$array_yigou</span>=<span style=\"color: #0000ff;\">array</span>(\"fuck\",1,23.343,<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 28</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 29</span> \r\n<span style=\"color: #008080;\"> 30</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多维数组</span>\r\n<span style=\"color: #008080;\"> 31</span> <span style=\"color: #800080;\">$array_dimensions</span>=<span style=\"color: #0000ff;\">array</span>(<span style=\"color: #800080;\">$array1</span>,<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 32</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_dimensions</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 33</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$array_dimensions</span>[1][2];<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 34</span> \r\n<span style=\"color: #008080;\"> 35</span> <span style=\"color: #800080;\">$array_complicated</span>=<span style=\"color: #0000ff;\">array</span>(<span style=\"color: #800080;\">$array_dimensions</span>,<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 36</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_complicated</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 37</span> \r\n<span style=\"color: #008080;\"> 38</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">foreach,一开始我理解上有点问题，foreach本来就是一个循环了！！！</span>\r\n<span style=\"color: #008080;\"> 39</span> <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$array1</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$person</span> =&gt; <span style=\"color: #800080;\">$saying</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 40</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 41</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 42</span> \r\n<span style=\"color: #008080;\"> 43</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">比较适合foreach理解的一种方式</span>\r\n<span style=\"color: #008080;\"> 44</span> <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$array1</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$person</span> =&gt; <span style=\"color: #800080;\">$saying</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 45</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" said \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 46</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 47</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 48</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 49</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 50</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 51</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 52</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 53</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 54</span>     <span style=\"color: #0000ff;\">print</span> \"No.\".<span style=\"color: #800080;\">$person</span>.\" says \".<span style=\"color: #800080;\">$saying</span>.\"!\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 55</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 56</span> \r\n<span style=\"color: #008080;\"> 57</span> <span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 58</span> \r\n<span style=\"color: #008080;\"> 59</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">数组计数\r\n</span><span style=\"color: #008080;\"> 60</span> <span style=\"color: #008000;\">//array_count_values返回一个数组,统计（！！）每个value的个数</span>\r\n<span style=\"color: #008080;\"> 61</span> <span style=\"color: #800080;\">$array1Value</span>=<span style=\"color: #008080;\">array_count_values</span>(<span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 62</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array1</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 63</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #800080;\">$array1Value</span>[\"fuck\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #008080;\"> 64</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">count计数的是“个体”的数目吧</span>\r\n<span style=\"color: #008080;\"> 65</span> <span style=\"color: #0000ff;\">print</span> \"There is \".<span style=\"color: #008080;\">count</span>(<span style=\"color: #800080;\">$array_letters</span>).\" letters.\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 66</span> \r\n<span style=\"color: #008080;\"> 67</span> <span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 68</span> \r\n<span style=\"color: #008080;\"> 69</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">神奇的explode和implode\r\n</span><span style=\"color: #008080;\"> 70</span> <span style=\"color: #008000;\">//就是字符串的拆解和安装\r\n</span><span style=\"color: #008080;\"> 71</span> <span style=\"color: #008000;\">//注意一定要有glue或者什么，不能不输入</span>\r\n<span style=\"color: #008080;\"> 72</span> <span style=\"color: #800080;\">$sentence</span>=\"What is your name?\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 73</span> <span style=\"color: #800080;\">$explode_demo</span>=<span style=\"color: #008080;\">explode</span>(\" \", <span style=\"color: #800080;\">$sentence</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 74</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$explode_demo</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 75</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">implode</span>(\" \", <span style=\"color: #800080;\">$explode_demo</span>));<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 76</span> \r\n<span style=\"color: #008080;\"> 77</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">数组元素搜索判断\r\n</span><span style=\"color: #008080;\"> 78</span> <span style=\"color: #008000;\">//in_array判断是否存在,array_search返回在哪里</span>\r\n<span style=\"color: #008080;\"> 79</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #008080;\">in_array</span>(\"fuck\", <span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 80</span> <span style=\"color: #800080;\">$check_list</span>=\"fuck you\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 81</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$check_list</span>, <span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 82</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">in_array第三个参数为严格检查类型，默认为false</span>\r\n<span style=\"color: #008080;\"> 83</span> <span style=\"color: #800080;\">$check_list2</span>=\"1 is in here\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 84</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$check_list2</span>, <span style=\"color: #800080;\">$array_yigou</span>,<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 85</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$check_list2</span>, <span style=\"color: #800080;\">$array_yigou</span>,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 86</span> \r\n<span style=\"color: #008080;\"> 87</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #008080;\">array_search</span>(\"fuck\", <span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 88</span> <span style=\"color: #0000ff;\">print</span> <span style=\"color: #008080;\">array_search</span>(1, <span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 89</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">array_key_exists判断key是不是存在</span>\r\n<span style=\"color: #008080;\"> 90</span> <span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 91</span> \r\n<span style=\"color: #008080;\"> 92</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">直接利用key或value</span>\r\n<span style=\"color: #008080;\"> 93</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">array_keys</span>(<span style=\"color: #800080;\">$array1</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 94</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">array_values</span>(<span style=\"color: #800080;\">$array_dimensions</span>));<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 95</span> \r\n<span style=\"color: #008080;\"> 96</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">implode和array_merge</span>\r\n<span style=\"color: #008080;\"> 97</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">implode</span>(\" \", <span style=\"color: #800080;\">$array1</span>));<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 98</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #008080;\">array_merge</span>(<span style=\"color: #800080;\">$array1</span>,<span style=\"color: #800080;\">$array_letters</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 99</span> \r\n<span style=\"color: #008080;\">100</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">数组排序\r\n</span><span style=\"color: #008080;\">101</span> <span style=\"color: #008000;\">//注意排序之后，直接改变/返回到原数组\r\n</span><span style=\"color: #008080;\">102</span> <span style=\"color: #008000;\">//sort升rsort降\r\n</span><span style=\"color: #008080;\">103</span> <span style=\"color: #008000;\">//这里也是我第一次对PHP语言有理解的地方，各种封装好的函数，需要的就是多用，知道，然后熟练的调用\r\n</span><span style=\"color: #008080;\">104</span> <span style=\"color: #008000;\">//自己编写的排序函数，往往没有其自带的/现成的函数效率/效果好</span>\r\n<span style=\"color: #008080;\">105</span> <span style=\"color: #800080;\">$array_num</span>=<span style=\"color: #008080;\">range</span>(2, 123,3<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">106</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array_num</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">107</span> <span style=\"color: #008080;\">rsort</span>(<span style=\"color: #800080;\">$array_num</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">108</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$array_num</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">109</span> <span style=\"color: #008080;\">sort</span>(<span style=\"color: #800080;\">$array_letters</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">110</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_dimensions</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">111</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">关联数组，若想保持键值的关系不变，应该用asort</span>\r\n<span style=\"color: #008080;\">112</span> <span style=\"color: #008080;\">sort</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">113</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">114</span> <span style=\"color: #008080;\">rsort</span>(<span style=\"color: #800080;\">$array_yigou</span>,<span style=\"color: #000000;\">SORT_NUMERIC);\r\n</span><span style=\"color: #008080;\">115</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">116</span> <span style=\"color: #008080;\">asort</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">117</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$array_yigou</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">118</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">ksort是根据key值来排序的\r\n</span><span style=\"color: #008080;\">119</span> \r\n<span style=\"color: #008080;\">120</span> <span style=\"color: #008000;\">//总结_数组\r\n</span><span style=\"color: #008080;\">121</span> <span style=\"color: #008000;\">//数组创建——array(),array_fill(),range()\r\n</span><span style=\"color: #008080;\">122</span> <span style=\"color: #008000;\">//数组输出——var_dump,print_r\r\n</span><span style=\"color: #008080;\">123</span> <span style=\"color: #008000;\">//数组种类——索引数组，关联数组；异构数组，多维数组\r\n</span><span style=\"color: #008080;\">124</span> <span style=\"color: #008000;\">//数组排序——sort(),rsort(),asort(),ksort()\r\n</span><span style=\"color: #008080;\">125</span> <span style=\"color: #008000;\">//foreach的使用\r\n</span><span style=\"color: #008080;\">126</span> <span style=\"color: #008000;\">//implode(),explode()\r\n</span><span style=\"color: #008080;\">127</span> <span style=\"color: #008000;\">//is_array,in_array,array_search\r\n</span><span style=\"color: #008080;\">128</span> <span style=\"color: #008000;\">//array_count_values,count</span></pre>\r\n</div>\r\n<p> </p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:19:18', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3116', 'PHP实现文件上传下载——心在忙而已 ', '网络', '\n<p>　　这一周都没有写什么东西，是啊，一周时间都没有学习太多新的东西，除了开车。</p>\r\n<p>妈蛋啊，天天中午去学车然后两周没有午觉的日子还是很崩溃的，加上之后工作压力带来的心忙，宝宝不开心啊。</p>\r\n<p>不过，也是自己不是那么能吃苦吧。那天看到的那句话怎么说的来着，我痛恨自己，在简单和困难之前，选择了前者；在什么什么面前，balabala，不是很鸡汤，但有点触动，愿少点矫情和娇气。</p>\r\n<p><strong>PHP实现文件上传与下载——来自mooc网</strong></p>\r\n<p><strong>一、上传原理与配置</strong></p>\r\n<p><strong>1.1 原理</strong></p>\r\n<p>将客户端文件<strong>上传到服务器端</strong>，再将服务器端的文件（<strong>临时文件）移动到指定目录</strong>即可。</p>\r\n<p><strong>1.2 客户端配置</strong></p>\r\n<p>所需：<strong>表单</strong>页面（选择上传文件）；</p>\r\n<p>具体而言：<strong>发送方式为POST，添加enctype=\"multipart/form-data\"属性</strong>，两者缺一不可（但是，优缺点并存，这里也限定了上传的方式和上传的文件之后的调用等方面，后面会说到）</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：\r\n</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">php\r\n\r\n</span><span style=\"color: #0000ff;\">?&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p>先是表单页面（请自动忽略前端问题。。。），关键就是form的属性；另外就是<strong>input 中用到了type=\"file\"这一点</strong>（体现到php的强大的拓展等等）。</p>\r\n<p>然后是doAction</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$_FILES:文件上传变量\r\n//print_r($_FILES);</span>\r\n<span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'name\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$type</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'type\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$tmp_name</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'tmp_name\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$size</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'size\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$error</span>=<span style=\"color: #800080;\">$_FILES</span>[\'myFile\'][\'error\'<span style=\"color: #000000;\">];\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">将服务器上的临时文件移动到指定位置\r\n//方法一move_upload_file($tmp_name,$destination)\r\n//move_uploaded_file($tmp_name, \"uploads/\".$filename);//文件夹应提前建立好，不然报错\r\n//方法二copy($src,$des)\r\n//以上两个函数都是成功返回真，否则返回false\r\n//copy($tmp_name, \"copies/\".$filename);\r\n//注意，不能两个方法都对临时文件进行操作，临时文件似乎操作完就没了，我们试试反过来</span>\r\n<span style=\"color: #008080;\">copy</span>(<span style=\"color: #800080;\">$tmp_name</span>, \"copies/\".<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span>, \"uploads/\".<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">能够实现，说明move那个函数基本上相当于剪切；copy就是copy，临时文件还在\r\n\r\n//另外，错误信息也是不一样的，遇到错误可以查看或者直接报告给用户</span>\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$error</span>==0<span style=\"color: #000000;\">) {\r\n    </span><span style=\"color: #0000ff;\">echo</span> \"上传成功！\"<span style=\"color: #000000;\">;\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">case</span> 1:\r\n            <span style=\"color: #0000ff;\">echo</span> \"超过了上传文件的最大值，请上传2M以下文件\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 2:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件过多，请一次上传20个及以下文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 3:\r\n            <span style=\"color: #0000ff;\">echo</span> \"文件并未完全上传，请再次尝试！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 4:\r\n            <span style=\"color: #0000ff;\">echo</span> \"未选择上传文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 5:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件为0\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p><span style=\"line-height: 1.5;\">先把print_r($_FILES)这个信息看一下</span></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #000000;\">Array\r\n(\r\n    [myFile] =&gt; Array\r\n        (\r\n            [name] =&gt; 梁博_简历.doc\r\n            [type] =&gt; application/msword\r\n            [tmp_name] =&gt; D:\\wamp\\tmp\\php1D78.tmp\r\n            [error] =&gt; 0\r\n            [size] =&gt; 75776\r\n        )\r\n\r\n)</span></pre>\r\n</div>\r\n<p>所以得到的是个二维数组，该怎么用，都是基本的东西（其实我喜欢降维再用）；</p>\r\n<p>基本是一眼就懂的东西，不罗嗦，关键有两个：<strong>tmp_name临时文件名；error报错信息（代号，后面可以利用）</strong>；</p>\r\n<p>然后这里看一下doAction后面一部分，利用报错信息来反馈给用户，需要说明的是为什么报错，和报错信息是什么都；</p>\r\n<p><strong>1.3 关于报错</strong></p>\r\n<p><strong>--报错原因</strong></p>\r\n<p>基本上都是超过或者不符合服务器关于上传文件的配置，那么服务器端<strong>配置</strong>有哪些呢？</p>\r\n<p>先考虑上传我们用了什么？POST，upload</p>\r\n<p>所以在php.ini中找这么几项：</p>\r\n<p>file_upload:On</p>\r\n<p>upload_tmp_dir=——临时文件保存目录；</p>\r\n<p>upload_max_filesize=2M</p>\r\n<p>max_file_uploads=20——允许一次上传的最大文件数量（注意和上面那个的区别，有没有size，别乱想）</p>\r\n<p>post_max_size=8M——post方式发送数据的最大值</p>\r\n<p>其他相关配置</p>\r\n<p>max_exectuion_time=-1——最大执行时间，避免程序不好占用服务器资源；</p>\r\n<p>max_input_time=60</p>\r\n<p>max_input_nesting_level=64——输入嵌套深度；</p>\r\n<p>memory_limit=128M——最大单线程的独立内存使用量</p>\r\n<p>总之都是有关资源的配置。</p>\r\n<p><strong>--错误号</strong></p>\r\n<p>以下（偷懒）引自http://blog.sina.com.cn/s/blog_3cdfaea201008utf.html</p>\r\n<p>UPLOAD_ERR_OK             值：0; 没有错误发生，文件上传成功。<br>  UPLOAD_ERR_INI_SIZE      \r\n值：1; 上传的文件超过了 php.ini 中 upload_max_filesize \r\n选项限制的值。<br>  UPLOAD_ERR_FORM_SIZE  值：2; 上传文件的大小超过了 HTML 表单中 \r\nMAX_FILE_SIZE \r\n选项指定的值。<br>  UPLOAD_ERR_PARTIAL          \r\n值：3; \r\n文件只有部分被上传。<br>  UPLOAD_ERR_NO_FILE          \r\n值：4; 没有文件被上传。  </p>\r\n<p>注意：这个错误信息是第一步上传的信息，也就是上传到临时文件夹的情况，而不是move或者copy的情况。 </p>\r\n<p><strong>二、上传相关限制</strong></p>\r\n<p><strong>2.1 客户端限制</strong></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction2.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"hidden\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"MAX_FILE_SIZE\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"101321\"</span> <span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：\r\n</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile\"</span><span style=\"color: #ff0000;\"> accept</span><span style=\"color: #0000ff;\">=\"image/jpeg,image/gif,text/html\"</span><span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这里用input的属性对上传文件的大小和类型进行了限制，但是个人感觉：一，html代码是“可见的”；二，常不起作用（没找到原因，但因为第一个我也想放弃它，知道就好。 </p>\r\n<p> 2.2 服务器端限制</p>\r\n<p>主要限制大小和类型，再有就是方式。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">接受文件，临时文件信息</span>\r\n<span style=\"color: #800080;\">$fileinfo</span>=<span style=\"color: #800080;\">$_FILES</span>[\"myFile\"];<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">降维操作</span>\r\n<span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$tmp_name</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"tmp_name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$size</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"size\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$error</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"error\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$type</span>=<span style=\"color: #800080;\">$fileinfo</span>[\"type\"<span style=\"color: #000000;\">];\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">服务器端设定限制</span>\r\n<span style=\"color: #800080;\">$maxsize</span>=10485760;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">10M,10*1024*1024</span>\r\n<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'tif\');<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">允许上传的文件类型（拓展名</span>\r\n<span style=\"color: #800080;\">$ext</span>=<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$filename</span>,PATHINFO_EXTENSION);<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">提取上传文件的拓展名\r\n\r\n//目的信息</span>\r\n<span style=\"color: #800080;\">$path</span>=\"uploads\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$path</span>)) {   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">当目录不存在，就创建目录</span>\r\n    <span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$path</span>,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n    </span><span style=\"color: #008080;\">chmod</span>(<span style=\"color: #800080;\">$path</span>, 0777<span style=\"color: #000000;\">);\r\n}\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$destination=$path.\"/\".$filename;\r\n//得到唯一的文件名！防止因为文件名相同而产生覆盖</span>\r\n<span style=\"color: #800080;\">$uniName</span>=<span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span>)).<span style=\"color: #800080;\">$ext</span>;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">md5加密，uniqid产生唯一id，microtime做前缀</span>\r\n\r\n\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$error</span>==0<span style=\"color: #000000;\">) {\r\n    </span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$size</span>&gt;<span style=\"color: #800080;\">$maxsize</span><span style=\"color: #000000;\">) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传文件过大！\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$ext</span>, <span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"非法文件类型\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传方式有误，请使用post方式\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (@<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span>, <span style=\"color: #800080;\">$uniName</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">@错误抑制符，不让用户看到警告</span>\r\n        <span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传成功!\"<span style=\"color: #000000;\">;\r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传失败!\"<span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断是否为真实图片（防止伪装成图片的病毒一类的</span>\r\n    <span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$tmp_name</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">getimagesize真实返回数组，否则返回false</span>\r\n        <span style=\"color: #0000ff;\">exit</span>(\"不是真正的图片类型\"<span style=\"color: #000000;\">);\r\n    }\r\n\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">case</span> 1:\r\n            <span style=\"color: #0000ff;\">echo</span> \"超过了上传文件的最大值，请上传2M以下文件\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 2:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件过多，请一次上传20个及以下文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 3:\r\n            <span style=\"color: #0000ff;\">echo</span> \"文件并未完全上传，请再次尝试！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 4:\r\n            <span style=\"color: #0000ff;\">echo</span> \"未选择上传文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 7:\r\n            <span style=\"color: #0000ff;\">echo</span> \"没有临时文件夹\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这里，具体实现都有注释，每一步其实都可以自己试试的，很有趣。</p>\r\n<p>2.3 封装</p>\r\n<p>函数</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #0000ff;\">function</span> uploadFile(<span style=\"color: #800080;\">$fileInfo</span>,<span style=\"color: #800080;\">$path</span>,<span style=\"color: #800080;\">$allowExt</span>,<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">){\r\n\r\n</span><span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$tmp_name</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"tmp_name\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$size</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"size\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$error</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"error\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$type</span>=<span style=\"color: #800080;\">$fileInfo</span>[\"type\"<span style=\"color: #000000;\">];\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">服务器端设定限制</span>\r\n\r\n<span style=\"color: #800080;\">$ext</span>=<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$filename</span>,<span style=\"color: #000000;\">PATHINFO_EXTENSION);\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">目的信息</span>\r\n<span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$path</span><span style=\"color: #000000;\">)) {   \r\n    </span><span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$path</span>,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n    </span><span style=\"color: #008080;\">chmod</span>(<span style=\"color: #800080;\">$path</span>, 0777<span style=\"color: #000000;\">);\r\n}\r\n</span><span style=\"color: #800080;\">$uniName</span>=<span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span>)).\'.\'.<span style=\"color: #800080;\">$ext</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$destination</span>=<span style=\"color: #800080;\">$path</span>.\"/\".<span style=\"color: #800080;\">$uniName</span><span style=\"color: #000000;\">;\r\n\r\n\r\n</span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$error</span>==0<span style=\"color: #000000;\">) {\r\n    </span><span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$size</span>&gt;<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传文件过大！\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$ext</span>, <span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"非法文件类型\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\"上传方式有误，请使用post方式\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断是否为真实图片（防止伪装成图片的病毒一类的</span>\r\n    <span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$tmp_name</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">getimagesize真实返回数组，否则返回false</span>\r\n        <span style=\"color: #0000ff;\">exit</span>(\"不是真正的图片类型\"<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">if</span> (@<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$tmp_name</span>, <span style=\"color: #800080;\">$destination</span>)) {<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">@错误抑制符，不让用户看到警告</span>\r\n        <span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传成功!\"<span style=\"color: #000000;\">;\r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"文件\".<span style=\"color: #800080;\">$filename</span>.\"上传失败!\"<span style=\"color: #000000;\">;\r\n    }\r\n    \r\n\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">case</span> 1:\r\n            <span style=\"color: #0000ff;\">echo</span> \"超过了上传文件的最大值，请上传2M以下文件\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 2:\r\n            <span style=\"color: #0000ff;\">echo</span> \"上传文件过多，请一次上传20个及以下文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 3:\r\n            <span style=\"color: #0000ff;\">echo</span> \"文件并未完全上传，请再次尝试！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 4:\r\n            <span style=\"color: #0000ff;\">echo</span> \"未选择上传文件！\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">case</span> 7:\r\n            <span style=\"color: #0000ff;\">echo</span> \"没有临时文件夹\"<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n    }\r\n}\r\n</span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$destination</span><span style=\"color: #000000;\">;\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>调用</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$fileInfo</span>=<span style=\"color: #800080;\">$_FILES</span>[\"myFile\"<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #800080;\">$maxSize</span>=10485760;<span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">10M,10*1024*1024</span>\r\n<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'tif\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$path</span>=\"uploads\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">include_once</span> \'upFunc.php\'<span style=\"color: #000000;\">;\r\nuploadFile(</span><span style=\"color: #800080;\">$fileInfo</span>, <span style=\"color: #800080;\">$path</span>, <span style=\"color: #800080;\">$allowExt</span>, <span style=\"color: #800080;\">$maxSize</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong>三、多文件的上传实现</strong></p>\r\n<p><strong>3.1 利用单文件封装</strong></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction5.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile1\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile2\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile3\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile4\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">print_r($_FILES);</span>\r\n<span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #0000ff;\">include_once</span> \'upFunc.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$_FILES</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #800080;\">$file</span>[]=uploadFile(<span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">);\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这里的思路，从print_r($_FILES)中去找，打印出来看到是个二维数组，很简单，遍历去用就好了！ </p>\r\n<p>上面那个function的定义改一下，给定一些默认值</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span> uploadFile(<span style=\"color: #800080;\">$fileInfo</span>,<span style=\"color: #800080;\">$path</span>=\"uploads\",<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'tif\'),<span style=\"color: #800080;\">$maxSize</span>=10485760){</pre>\r\n</div>\r\n<p> </p>\r\n<p>这样子，简单是简单，但遇到一些问题。</p>\r\n<p>正常的上传4个图片是没问题，但要是中间激活了函数中的exit，就会立即停止，导致其他图片也无法上传。</p>\r\n<p><strong>3.2 升级版封装</strong></p>\r\n<p>旨在实现针对多个或单个文件上传的封装</p>\r\n<p>首先这样子写个静态文件</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction5.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"post\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span> <span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>打印一下$_FILES</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #000000;\">Array\r\n(\r\n    [myFile] =&gt; Array\r\n        (\r\n            [name] =&gt; Array\r\n                (\r\n                    [0] =&gt; test32.png\r\n                    [1] =&gt; test32.png\r\n                    [2] =&gt; 333.png\r\n                    [3] =&gt; test41.png\r\n                )\r\n\r\n            [type] =&gt; Array\r\n                (\r\n                    [0] =&gt; image/png\r\n                    [1] =&gt; image/png\r\n                    [2] =&gt; image/png\r\n                    [3] =&gt; image/png\r\n                )\r\n\r\n            [tmp_name] =&gt; Array\r\n                (\r\n                    [0] =&gt; D:\\wamp\\tmp\\php831C.tmp\r\n                    [1] =&gt; D:\\wamp\\tmp\\php834C.tmp\r\n                    [2] =&gt; D:\\wamp\\tmp\\php837C.tmp\r\n                    [3] =&gt; D:\\wamp\\tmp\\php83BB.tmp\r\n                )\r\n\r\n            [error] =&gt; Array\r\n                (\r\n                    [0] =&gt; 0\r\n                    [1] =&gt; 0\r\n                    [2] =&gt; 0\r\n                    [3] =&gt; 0\r\n                )\r\n\r\n            [size] =&gt; Array\r\n                (\r\n                    [0] =&gt; 46174\r\n                    [1] =&gt; 46174\r\n                    [2] =&gt; 34196\r\n                    [3] =&gt; 38514\r\n                )\r\n\r\n        )\r\n\r\n)</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>可以得到一个三维数组。</p>\r\n<p>复杂是复杂了，但复杂的有规律，各项数值都在一起了，很方便我们取值！！</p>\r\n<p>所以先得到文件信息，<strong>变成单文件处理那种信息</strong></p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getFiles(){\r\n    </span><span style=\"color: #800080;\">$i</span>=0<span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">foreach</span>(<span style=\"color: #800080;\">$_FILES</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$file</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #008080;\">is_string</span>(<span style=\"color: #800080;\">$file</span>[\'name\'])){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">单文件判定</span>\r\n            <span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>]=<span style=\"color: #800080;\">$file</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #800080;\">$i</span>++<span style=\"color: #000000;\">;\r\n        }</span><span style=\"color: #0000ff;\">elseif</span>(<span style=\"color: #008080;\">is_array</span>(<span style=\"color: #800080;\">$file</span>[\'name\'<span style=\"color: #000000;\">])){\r\n            </span><span style=\"color: #0000ff;\">foreach</span>(<span style=\"color: #800080;\">$file</span>[\'name\'] <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$key</span>=&gt;<span style=\"color: #800080;\">$val</span>){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">我的天，这个$key用的diao</span>\r\n                <span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'name\']=<span style=\"color: #800080;\">$file</span>[\'name\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'type\']=<span style=\"color: #800080;\">$file</span>[\'type\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'tmp_name\']=<span style=\"color: #800080;\">$file</span>[\'tmp_name\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'error\']=<span style=\"color: #800080;\">$file</span>[\'error\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$files</span>[<span style=\"color: #800080;\">$i</span>][\'size\']=<span style=\"color: #800080;\">$file</span>[\'size\'][<span style=\"color: #800080;\">$key</span><span style=\"color: #000000;\">];\r\n                </span><span style=\"color: #800080;\">$i</span>++<span style=\"color: #000000;\">;\r\n            }\r\n        }\r\n    }\r\n    </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$files</span><span style=\"color: #000000;\">;\r\n    \r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>然后之前的那种exit错误，就把exit改一下就好了，这里用res</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span> uploadFile(<span style=\"color: #800080;\">$fileInfo</span>,<span style=\"color: #800080;\">$path</span>=\'./uploads\',<span style=\"color: #800080;\">$flag</span>=<span style=\"color: #0000ff;\">true</span>,<span style=\"color: #800080;\">$maxSize</span>=1048576,<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'gif\'<span style=\"color: #000000;\">)){\r\n    </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$flag=true;\r\n    //$allowExt=array(\'jpeg\',\'jpg\',\'gif\',\'png\');\r\n    //$maxSize=1048576;//1M\r\n    //判断错误号</span>\r\n    <span style=\"color: #800080;\">$res</span>=<span style=\"color: #0000ff;\">array</span><span style=\"color: #000000;\">();\r\n    </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'error\']===<span style=\"color: #000000;\">UPLOAD_ERR_OK){\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测上传得到小</span>\r\n        <span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'size\']&gt;<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'上传文件过大\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #800080;\">$ext</span>=getExt(<span style=\"color: #800080;\">$fileInfo</span>[\'name\'<span style=\"color: #000000;\">]);\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测上传文件的文件类型</span>\r\n        <span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$ext</span>,<span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">)){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'非法文件类型\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测是否是真实的图片类型</span>\r\n        <span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$flag</span><span style=\"color: #000000;\">){\r\n            </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n                </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'不是真实图片类型\'<span style=\"color: #000000;\">;\r\n            }\r\n        }\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">检测文件是否是通过HTTP POST上传上来的</span>\r\n        <span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'文件不是通过HTTP POST方式上传上来的\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$res</span>) <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$res</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">$path=\'./uploads\';</span>\r\n        <span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$path</span><span style=\"color: #000000;\">)){\r\n            </span><span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$path</span>,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n            </span><span style=\"color: #008080;\">chmod</span>(<span style=\"color: #800080;\">$path</span>,0777<span style=\"color: #000000;\">);\r\n        }\r\n        </span><span style=\"color: #800080;\">$uniName</span>=<span style=\"color: #000000;\">getUniName();\r\n        </span><span style=\"color: #800080;\">$destination</span>=<span style=\"color: #800080;\">$path</span>.\'/\'.<span style=\"color: #800080;\">$uniName</span>.\'.\'.<span style=\"color: #800080;\">$ext</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$fileInfo</span>[\'tmp_name\'],<span style=\"color: #800080;\">$destination</span><span style=\"color: #000000;\">)){\r\n            </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'文件移动失败\'<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #800080;\">$res</span>[\'mes\']=<span style=\"color: #800080;\">$fileInfo</span>[\'name\'].\'上传成功\'<span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$res</span>[\'dest\']=<span style=\"color: #800080;\">$destination</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$res</span><span style=\"color: #000000;\">;\r\n        \r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">匹配错误信息</span>\r\n        <span style=\"color: #0000ff;\">switch</span> (<span style=\"color: #800080;\">$fileInfo</span> [\'error\'<span style=\"color: #000000;\">]) {\r\n            </span><span style=\"color: #0000ff;\">case</span> 1 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'上传文件超过了PHP配置文件中upload_max_filesize选项的值\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 2 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'超过了表单MAX_FILE_SIZE限制的大小\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 3 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'文件部分被上传\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 4 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'没有选择上传文件\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 6 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'没有找到临时目录\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">case</span> 7 :\r\n            <span style=\"color: #0000ff;\">case</span> 8 :\r\n                <span style=\"color: #800080;\">$res</span>[\'mes\'] = \'系统错误\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$res</span><span style=\"color: #000000;\">;\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>里面封装了两个小的</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">function</span> getExt(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">strtolower</span>(<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$filename</span>,<span style=\"color: #000000;\">PATHINFO_EXTENSION));\r\n}\r\n\r\n</span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n * 产生唯一字符串\r\n * @return string\r\n </span><span style=\"color: #008000;\">*/</span>\r\n<span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getUniName(){\r\n    </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">));\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>然后静态中，用multiple属性实现多个文件的输入；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">form </span><span style=\"color: #ff0000;\">action</span><span style=\"color: #0000ff;\">=\"doAction6.php\"</span><span style=\"color: #ff0000;\"> method</span><span style=\"color: #0000ff;\">=\"POST\"</span><span style=\"color: #ff0000;\"> enctype</span><span style=\"color: #0000ff;\">=\"multipart/form-data\"</span><span style=\"color: #0000ff;\">&gt;</span><span style=\"color: #000000;\">\r\n请选择您要上传的文件：</span><span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"file\"</span><span style=\"color: #ff0000;\"> name</span><span style=\"color: #0000ff;\">=\"myFile[]\"</span><span style=\"color: #ff0000;\"> multiple</span><span style=\"color: #0000ff;\">=\'multiple\' </span><span style=\"color: #0000ff;\">/&gt;&lt;</span><span style=\"color: #800000;\">br</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">input </span><span style=\"color: #ff0000;\">type</span><span style=\"color: #0000ff;\">=\"submit\"</span><span style=\"color: #ff0000;\"> value</span><span style=\"color: #0000ff;\">=\"上传\"</span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">form</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>doAction6</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">print_r($_FILES);</span>\r\n<span style=\"color: #008080;\">header</span>(\"content-type:text/html;charset=utf-8\"<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #0000ff;\">require_once</span> \'upFunc2.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">require_once</span> \'common.func.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$files</span>=<span style=\"color: #000000;\">getFiles();\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> print_r($files);</span>\r\n<span style=\"color: #0000ff;\">foreach</span>(<span style=\"color: #800080;\">$files</span> <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #800080;\">$res</span>=uploadFile(<span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">);\r\n    </span><span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$res</span>[\'mes\'],\'&lt;br/&gt;\'<span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #800080;\">$uploadFiles</span>[]=@<span style=\"color: #800080;\">$res</span>[\'dest\'<span style=\"color: #000000;\">];\r\n}\r\n</span><span style=\"color: #800080;\">$uploadFiles</span>=<span style=\"color: #008080;\">array_values</span>(<span style=\"color: #008080;\">array_filter</span>(<span style=\"color: #800080;\">$uploadFiles</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">print_r($uploadFiles);</span></pre>\r\n</div>\r\n<p> </p>\r\n<p>这样子的几个文件，就实现比较强大的面向过程的上传文件的功能（学的叫一个心酸。。。）；</p>\r\n<p><strong>四、面向对象的文件上传</strong></p>\r\n<p> （不是很写的动了。。。先粘过来，再说吧。。。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> upload{\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$fileName</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$allowMime</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$uploadPath</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$imgFlag</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$fileInfo</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$error</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$ext</span><span style=\"color: #000000;\">;\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * @param string $fileName\r\n     * @param string $uploadPath\r\n     * @param string $imgFlag\r\n     * @param number $maxSize\r\n     * @param array $allowExt\r\n     * @param array $allowMime\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __construct(<span style=\"color: #800080;\">$fileName</span>=\'myFile\',<span style=\"color: #800080;\">$uploadPath</span>=\'./uploads\',<span style=\"color: #800080;\">$imgFlag</span>=<span style=\"color: #0000ff;\">true</span>,<span style=\"color: #800080;\">$maxSize</span>=5242880,<span style=\"color: #800080;\">$allowExt</span>=<span style=\"color: #0000ff;\">array</span>(\'jpeg\',\'jpg\',\'png\',\'gif\'),<span style=\"color: #800080;\">$allowMime</span>=<span style=\"color: #0000ff;\">array</span>(\'image/jpeg\',\'image/png\',\'image/gif\'<span style=\"color: #000000;\">)){\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;fileName=<span style=\"color: #800080;\">$fileName</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;maxSize=<span style=\"color: #800080;\">$maxSize</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;allowMime=<span style=\"color: #800080;\">$allowMime</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;allowExt=<span style=\"color: #800080;\">$allowExt</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;uploadPath=<span style=\"color: #800080;\">$uploadPath</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;imgFlag=<span style=\"color: #800080;\">$imgFlag</span><span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;fileInfo=<span style=\"color: #800080;\">$_FILES</span>[<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">fileName];\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测上传文件是否出错\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkError(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">is_null</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">fileInfo)){\r\n            </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'error\']&gt;0<span style=\"color: #000000;\">){\r\n                </span><span style=\"color: #0000ff;\">switch</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'error\'<span style=\"color: #000000;\">]){\r\n                    </span><span style=\"color: #0000ff;\">case</span> 1:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'超过了PHP配置文件中upload_max_filesize选项的值\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 2:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'超过了表单中MAX_FILE_SIZE设置的值\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 3:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'文件部分被上传\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 4:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'没有选择上传文件\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 6:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'没有找到临时目录\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 7:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'文件不可写\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                    </span><span style=\"color: #0000ff;\">case</span> 8:\r\n                        <span style=\"color: #800080;\">$this</span>-&gt;error=\'由于PHP的扩展程序中断文件上传\'<span style=\"color: #000000;\">;\r\n                        </span><span style=\"color: #0000ff;\">break</span><span style=\"color: #000000;\">;\r\n                        \r\n                }\r\n                </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n            }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n                </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n            }\r\n        }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'文件上传出错\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测上传文件的大小\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkSize(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'size\']&gt;<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">maxSize){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'上传文件过大\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测扩展名\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkExt(){\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;ext=<span style=\"color: #008080;\">strtolower</span>(<span style=\"color: #008080;\">pathinfo</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'name\'],<span style=\"color: #000000;\">PATHINFO_EXTENSION));\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$this</span>-&gt;ext,<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">allowExt)){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'不允许的扩展名\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测文件的类型\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkMime(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">in_array</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'type\'],<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">allowMime)){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'不允许的文件类型\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测是否是真实图片\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkTrueImg(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">imgFlag){\r\n            </span><span style=\"color: #0000ff;\">if</span>(!@<span style=\"color: #008080;\">getimagesize</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n                </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'不是真实图片\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n            }\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n        }\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测是否通过HTTP POST方式上传上来的\r\n     * @return boolean\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkHTTPPost(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">is_uploaded_file</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'tmp_name\'<span style=\"color: #000000;\">])){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'文件不是通过HTTP POST方式上传上来的\'<span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     *显示错误 \r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> showError(){\r\n        </span><span style=\"color: #0000ff;\">exit</span>(\'&lt;span style=\"color:red\"&gt;\'.<span style=\"color: #800080;\">$this</span>-&gt;error.\'&lt;/span&gt;\'<span style=\"color: #000000;\">);\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 检测目录不存在则创建\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> checkUploadPath(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">uploadPath)){\r\n            </span><span style=\"color: #008080;\">mkdir</span>(<span style=\"color: #800080;\">$this</span>-&gt;uploadPath,0777,<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">);\r\n        }\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 产生唯一字符串\r\n     * @return string\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getUniName(){\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">md5</span>(<span style=\"color: #008080;\">uniqid</span>(<span style=\"color: #008080;\">microtime</span>(<span style=\"color: #0000ff;\">true</span>),<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">));\r\n    }\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">*\r\n     * 上传文件\r\n     * @return string\r\n     </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> uploadFile(){\r\n        </span><span style=\"color: #0000ff;\">if</span>(<span style=\"color: #800080;\">$this</span>-&gt;checkError()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkSize()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkExt()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkMime()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;checkTrueImg()&amp;&amp;<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">checkHTTPPost()){\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">checkUploadPath();\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;uniName=<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">getUniName();\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;destination=<span style=\"color: #800080;\">$this</span>-&gt;uploadPath.\'/\'.<span style=\"color: #800080;\">$this</span>-&gt;uniName.\'.\'.<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">ext;\r\n            </span><span style=\"color: #0000ff;\">if</span>(@<span style=\"color: #008080;\">move_uploaded_file</span>(<span style=\"color: #800080;\">$this</span>-&gt;fileInfo[\'tmp_name\'], <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">destination)){\r\n                </span><span style=\"color: #0000ff;\">return</span>  <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">destination;\r\n            }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n                </span><span style=\"color: #800080;\">$this</span>-&gt;error=\'文件移动失败\'<span style=\"color: #000000;\">;\r\n                </span><span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">showError();\r\n            }\r\n        }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n            </span><span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">showError();\r\n        }\r\n    }\r\n}</span></pre>\r\n</div>\r\n<p> </p>\r\n<p> </p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #008080;\">header</span>(\'content-type:text/html;charset=utf-8\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #0000ff;\">require_once</span> \'upload.class.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$upload</span>=<span style=\"color: #0000ff;\">new</span> upload(\'myFile1\',\'imooc\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$dest</span>=<span style=\"color: #800080;\">$upload</span>-&gt;<span style=\"color: #000000;\">uploadFile();\r\n</span><span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$dest</span>;</pre>\r\n</div>\r\n<p> </p>\r\n<p>四、下载</p>\r\n<p>对于浏览器不识别的，可以直接下载，但对于能识别的，需要多一两步</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #0000ff;\">&lt;!</span><span style=\"color: #ff00ff;\">DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">html </span><span style=\"color: #ff0000;\">xmlns</span><span style=\"color: #0000ff;\">=\"http://www.w3.org/1999/xhtml\"</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">meta </span><span style=\"color: #ff0000;\">http-equiv</span><span style=\"color: #0000ff;\">=\"Content-Type\"</span><span style=\"color: #ff0000;\"> content</span><span style=\"color: #0000ff;\">=\"text/html; charset=UTF-8\"</span> <span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>Insert title here<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">title</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">head</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"1.rar\"</span><span style=\"color: #0000ff;\">&gt;</span>下载1.rar<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">br </span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"1.jpg\"</span><span style=\"color: #0000ff;\">&gt;</span>下载1.jpg<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">br </span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"doDownload.php?filename=1.jpg\"</span><span style=\"color: #0000ff;\">&gt;</span>通过程序下载1.jpg<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">br </span><span style=\"color: #0000ff;\">/&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;</span><span style=\"color: #800000;\">a </span><span style=\"color: #ff0000;\">href</span><span style=\"color: #0000ff;\">=\"doDownload.php?filename=../upload/nv.jpg\"</span><span style=\"color: #0000ff;\">&gt;</span>下载nv.jpg<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">a</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;?</span><span style=\"color: #ff00ff;\">php\r\n\r\n</span><span style=\"color: #0000ff;\">?&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">body</span><span style=\"color: #0000ff;\">&gt;</span>\r\n<span style=\"color: #0000ff;\">&lt;/</span><span style=\"color: #800000;\">html</span><span style=\"color: #0000ff;\">&gt;</span></pre>\r\n</div>\r\n<p> </p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #800080;\">$filename</span>=<span style=\"color: #800080;\">$_GET</span>[\'filename\'<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #008080;\">header</span>(\'content-disposition:attachment;filename=\'.<span style=\"color: #008080;\">basename</span>(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\">header</span>(\'content-length:\'.<span style=\"color: #008080;\">filesize</span>(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\">readfile</span>(<span style=\"color: #800080;\">$filename</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p>------------------总结-----------------------</p>\r\n<pre>&lt;form action=\"doAction.php\" method=\"post\" enctype=\"multipart/form-data\"&gt;</pre>\r\n<p> &lt;input type=\"file\" name=\"myFile\" /&gt;&lt;br/&gt;</p>\r\n<p> 二维数组的降维处理；</p>\r\n<p>$_FILES变量</p>\r\n<p>move_upload_file();copy();</p>\r\n<p>tmp_name临时文件；</p>\r\n<p>拓展名的提取；</p>\r\n<p>真实图片的验证；</p>\r\n<p>唯一文件名的生成；</p>\r\n<p>函数封装以及调用；</p>\r\n<p>利用单个文件函数实现多文件上传；</p>\r\n<p>小功能的封装；</p>\r\n<p>多文件的遍历；</p>\r\n<p>面向对象的开发过程；</p>\r\n<p>下载；</p>\r\n<p>----------------------------------------</p>\r\n<p>妈蛋啊。。。。。。。。。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:05:10', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3117', 'PHP&MySQL（二）——困也得啃书 ', '网络', '\n<p>madan，所有事情都敢赶在一起。。。以后每天中午去学车啊，好开心。。晚上好困，但是困也得啃书。。。。。。。。</p>\r\n<p>二、PHP脚本编程语言</p>\r\n<p>什么变量啊，数据类型啊，特别特别基本的不记录了，说点容易忽略的。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">define</span>(\"PI\", 3.1415926);  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">常量的定义</span>\r\n\r\n<span style=\"color: #0000ff;\">echo</span> \"圆周率=\".<span style=\"color: #008080;\">PI</span>.\"&lt;br/&gt;\";   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">.的链接作用，同样用于$var的赋值等</span>\r\n\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">PI</span>&lt;3&amp;&amp;<span style=\"color: #008080;\">PI</span>&gt;=2<span style=\"color: #000000;\">) {  \r\n    </span><span style=\"color: #800080;\">$var</span>=\"shit\"<span style=\"color: #000000;\">;\r\n}</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n    </span><span style=\"color: #0000ff;\">echo</span> \"f**k\".\"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n}\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\"> 先判断PI&lt;3，如果不成立，就直接进入else——称为短路设计，加快程序速度；\r\n// 同理，为了实现程序的高效，把最容易出错的放前面，最复杂的计算放右边</span>\r\n\r\n<span style=\"color: #800080;\">$var</span>=\"asldkjflajdfklj\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #800080;\">$v2</span>=(<span style=\"color: #0000ff;\">boolean</span>)<span style=\"color: #800080;\">$var</span>;   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">强制类型转换</span>\r\n<span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$v2</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n\r\n</span><span style=\"color: #800080;\">$v_true</span>=<span style=\"color: #0000ff;\">true</span>;   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">boolean值也可以直接赋值</span>\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">is_bool</span>(<span style=\"color: #800080;\">$v2</span>)&amp;&amp;<span style=\"color: #800080;\">$v2</span>===<span style=\"color: #800080;\">$v_true</span>) {    <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">恒等===，可以判断数据类型是否相同；is_bool</span>\r\n    <span style=\"color: #0000ff;\">echo</span> \"Variables have the same value and type!\"<span style=\"color: #000000;\">;  \r\n    </span><span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n}\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">另外，非恒等仍然是!==</span>\r\n\r\n<span style=\"color: #800080;\">$lll</span>=\"dfa\"+333<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">echo</span> <span style=\"color: #008080;\">gettype</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">var_dump允许一次检查多个变量，同时提供信息；print_r多用来对数组和对象进行输出；</span>\r\n\r\n<span style=\"color: #0000ff;\">if</span> (<span style=\"color: #0000ff;\">isset</span>(<span style=\"color: #800080;\">$lll</span>)&amp;&amp;!<span style=\"color: #0000ff;\">empty</span>(<span style=\"color: #800080;\">$v2</span>)) {  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断是否为空</span>\r\n    <span style=\"color: #0000ff;\">unset</span>(<span style=\"color: #800080;\">$lll</span><span style=\"color: #000000;\">);\r\n}\r\n</span><span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$lll</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\";  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">会报错，但仍能输出null</span>\r\n\r\n<span style=\"color: #0000ff;\">function</span> doubleint(<span style=\"color: #800080;\">$var</span>){   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">自定义函数</span>\r\n    <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">is_int</span>(<span style=\"color: #800080;\">$var</span><span style=\"color: #000000;\">)) {\r\n        </span><span style=\"color: #800080;\">$var</span>=<span style=\"color: #800080;\">$var</span>*2<span style=\"color: #000000;\">;\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$var</span><span style=\"color: #000000;\">;\r\n    }</span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"Please enter a int data.\"<span style=\"color: #000000;\">;\r\n    }\r\n}\r\n\r\n</span><span style=\"color: #0000ff;\">echo</span> doubleint(<span style=\"color: #800080;\">$var</span>);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #0000ff;\">echo</span> doubleint(4);<span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">个人觉得，还是少用global和地址传递，逻辑上容易出错，程序没错，结果却不对\r\n\r\n// 关于include和require\r\n// 多用include吧\r\n// include失败了只是警告，后者则是错误然后中断程序\r\n// 同时推荐没事儿就写绝对路径，好读也不易出错</span></pre>\r\n</div>\r\n<p>要说的都在上面了，总结下就是：常量，连接符，自定义函数，类型转换，类型判断，文件引用，恒等符，短路设计，var_dump。</p>\r\n<p>比较乱。</p>\r\n<p>最后举个例子吧，自制乘法表</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Chapter 2\'s example which is a chengfabiao</span>\r\n<span style=\"color: #0000ff;\">function</span> chengfabiao(<span style=\"color: #800080;\">$var</span><span style=\"color: #000000;\">){\r\n    </span><span style=\"color: #0000ff;\">for</span> (<span style=\"color: #800080;\">$row</span>=1;<span style=\"color: #800080;\">$row</span>&lt;=<span style=\"color: #800080;\">$var</span>;<span style=\"color: #800080;\">$row</span>++<span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #0000ff;\">for</span>(<span style=\"color: #800080;\">$queue</span>=1;<span style=\"color: #800080;\">$queue</span>&lt;=<span style=\"color: #800080;\">$var</span>;<span style=\"color: #800080;\">$queue</span>++<span style=\"color: #000000;\">){\r\n            </span><span style=\"color: #800080;\">$answer</span>=<span style=\"color: #800080;\">$row</span>*<span style=\"color: #800080;\">$queue</span><span style=\"color: #000000;\">;\r\n            </span><span style=\"color: #0000ff;\">echo</span> \"<span style=\"color: #800080;\">$row</span>*<span style=\"color: #800080;\">$queue</span>=\".<span style=\"color: #800080;\">$answer</span>.\"  \"<span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">echo</span> \"&lt;hr/&gt;\"<span style=\"color: #000000;\">;\r\n    }        \r\n}\r\n</span><span style=\"color: #800080;\">$var</span>=9<span style=\"color: #000000;\">;\r\nchengfabiao(</span><span style=\"color: #800080;\">$var</span>);</pre>\r\n</div>\r\n<p><br>自己改着玩吧。基础的东西也得常常拿出来温习下，我是这么认为的。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:05:10', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3118', '一起来啃书——PHP看书 ', '网络', '\n<p>形式所迫，不得不开展android的学习，PHP这边也开始了啃书的日子。两部500+的书，45天够不，有点忙有点忙。。。</p>\r\n<p>早上的胃胀，简直是一记闷棍，长点儿记性吧。。。。。。。。</p>\r\n<p>1、PHP+MYSQL开发指南（一）</p>\r\n<p>一、数据库应用程序与web</p>\r\n<p>1、本书中</p>\r\n<p>PHP+PEAR函数库；</p>\r\n<p>2、三层体系结构</p>\r\n<p>底层/数据库层——》中间层/程序逻辑层——》用户层/浏览器；</p>\r\n<p>MySQL（一种数据库管理系统DBMS）——》PHP程序/web脚本程序——》强化浏览器能力（Javascript）</p>\r\n<p>根据流量等指标调整每一层的安排。</p>\r\n<p>3、PHP优点</p>\r\n<p>老生常谈，但还是得知道，为了就是最大限度的发挥其特性。</p>\r\n<p>灵活——与HTML的集合；</p>\r\n<p>多功能实现；</p>\r\n<p>函数库/源码丰富；</p>\r\n<p>多平台的可移植。</p>\r\n<p>-----------------------------------------</p>\r\n<p> </p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:05:10', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3119', 'I am back-电商网站开发&jQuery ', '网络', '\n<p>　　hi</p>\r\n<p>之前有将近两周的时间没有更新，除了懒就是其他的事情耽误了。现在好了，回家了，虽然家里停水，外面又有积雪，天寒地冻的，但诸多不便，都比不过有点闲的好。</p>\r\n<p>开搞每个学PHP的必经之路——电商网站的开发。</p>\r\n<p><strong>1、电商网站开发——前端</strong></p>\r\n<p><strong>一、首页制作</strong></p>\r\n<p><strong>1.1 概况&amp;准备</strong></p>\r\n<p>整个电商网站包括什么呢，就是首页信息，后面的分类信息页，商品详情页，购物页面，售后页面等等，所以就一步步做。自己做的时候可以简单的画个概况图来指导开发，免得逻辑搞混。</p>\r\n<p>准备：项目文件夹，其中要有images（图片素材），js（javascript），style（css）三个子文件夹中。工具的话，看个人爱好，不过涉及的是前端，一般上习惯用DS的多，我比较懒，直接用zend+浏览器算求。</p>\r\n<p>其中准备中有一部是实现reset.css，也就是清零/清除css效果。css我基本算是个白痴，找个源码贴出来，侵删：</p>\r\n<p>@charset \"utf-8\";<br>/* CSS Document */<br>body,ul,ol,li,p,h1,h2,h3,h4,h5,h6,form,fieldset,table,td,img,div,dl,dt,dd,input{margin:0;padding:0;}<br>body{font-size:12px;}<br>img{border:none;}<br>li{list-style:none;}<br>input,select,textarea{outline:none;border:none; background:none;}<br>textarea{resize:none;}<br>a{text-decoration:none; color:#656565;}</p>\r\n<p>/*清浮动*/<br>.clearfix:after{content:\"\";display:block;clear:both;}<br>.clearfix{zoom:1;}<br>.fl{float:left;}<br>.fr{float:right;}</p>\r\n<p>1.2 顶部结构</p>\r\n<p> 用fireworks做，我还不会，先去学习下。</p>\r\n<p>--------真是蛋疼，做个开头就发现自己naive，先完成web进阶的jQuery吧----------</p>\r\n<p><strong>2、jQuery</strong></p>\r\n<p><strong>十二、jQuery在线聊天室</strong></p>\r\n<p><strong>12.1 基本功能介绍</strong></p>\r\n<p>登陆后才能进入（用于基本信息的在线显示）；</p>\r\n<p>动态显示交流后的内容；</p>\r\n<p>文字和表情的沟通实现（表情也是字符代号编码）</p>\r\n<p><strong>技术重点</strong>：<strong>ajax</strong>的无刷新技术展示数据</p>\r\n<p><strong>12.2 实现效果</strong></p>\r\n<p>利用jq中的ajax函数（比如$.ajax等）实现登陆，登陆时，显示登陆中，正确或失败，有相应的动作；</p>\r\n<p>聊天室就是聊天内容区域，输入区域，人员显示区域。</p>\r\n<p><strong>12.3 流程</strong></p>\r\n<p>登录页面——》向服务器请求登录信息（用户名和密码信息）——》成功：跳转到聊天主页；否则，跳回登录页面。</p>\r\n<p>聊天页面——》请求聊天数据——》获取聊天数据；</p>\r\n<p>在线人员信息——》请求——》获取；</p>\r\n<p>所以，可以简单作图，这里我掠过了，然后清楚的看到需要做的页面数量，请求和响应的逻辑和对应关系。</p>\r\n<p><strong>12.4 登录页面开发login</strong></p>\r\n<p>--功能</p>\r\n<p>验证登录信息；</p>\r\n<p>进入聊天室；</p>\r\n<p>--代码</p>\r\n<p>以前在PDO中讲过的一种，直接用POST方法传递表格参数的方法：</p>\r\n<p>&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"&gt;<br>&lt;html&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html;chraset=UTF-8\"&gt;<br>&lt;title&gt;登录&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;form action=\'login.php\' method=\'post\'&gt;<br>用户名：&lt;input type=\'text\' name=\'username\'/&gt;&lt;br/&gt;<br>密     码：&lt;input type=\'password\' name=\'password\'/&gt;&lt;br/&gt;<br>&lt;input type=\'submit\' value=\'登录\'/&gt;<br>&lt;/form&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>然后后续工作在login.php中实现就好了；</p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>$username=$_POST[\'username\'];<br>$password=$_POST[\'password\'];<br>try {<br>	$pdo=new PDO(\'mysql:host=localhost;dbname=imooc\',\'root\',\'\');<br>	$pdo-&gt;exec(\'use imooc_pdo\');<br>	$sql=\"select * from user where username=? and password=?\";<br>	$stmt=$pdo-&gt;prepare($sql);<br>	$stmt-&gt;execute(array($username,$password));<br>	//$stmt=$pdo-&gt;query($sql);<br><br>	$shit=$stmt-&gt;rowCount();//显示结果集statement对象中的行数<br>	echo $shit;<br>	if($shit == 1){<br>		//$url=\"ChatMain.html\";<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"alert(\\\"登录成功\\\")\";<br>		echo \"&lt;/script&gt;\";<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"document.location=\\\"ChatMain.html\\\"\";<br>		echo \"&lt;/script&gt;\";<br>	}else{	<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"alert(\\\"用户名或密码错误\\\")\";<br>		echo \"&lt;/script&gt;\";<br>		echo \"&lt;script language=\\\"javascript\\\"&gt;\";<br>		echo \"document.location=\\\"login2.html\\\"\";<br>		echo \"&lt;/script&gt;\";<br>	}</p>\r\n<p>} catch (PDOException $e) {<br>	echo $e-&gt;getMessage();<br>}</p>\r\n<p>----------------------------------------------</p>\r\n<p>我们在这里想要的是jQuery实现方法：换一种实现，同时把登录做的稍微好看一点点哈（我觉得好看，一个在于对应的css文件的编写，另一个在html中实现，DS工具实现要方便一点，有时间也得整着学一下）；</p>\r\n<p>&lt;!DOCTYPE html&gt;<br>&lt;HTML&gt;<br>&lt;head&gt;<br>&lt;TITLE&gt;登录&lt;/TITLE&gt;<br>  &lt;SCRIPT type=\"text/javascript\" src=\"jq/jquery-1.8.2.min.js\"&gt;&lt;/SCRIPT&gt;<br>  &lt;SCRIPT type=\"text/javascript\" src=\"js/jsLogin.js\"&gt;&lt;/SCRIPT&gt;<br>  &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"style/cssLogin.css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>  &lt;div id=\"divLogin\"&gt;<br>    &lt;h3&gt;用户登录&lt;/h3&gt;<br>      &lt;div class=\"content\"&gt;<br>        &lt;div&gt;用户：&lt;input id=\"txtName\" type=\"text\" class=\"txt\" /&gt;&lt;/div&gt;<br>        &lt;div&gt;密码：&lt;input id=\"txtPass\" type=\"text\" class=\"txt\" /&gt;&lt;/div&gt;<br>        &lt;div class=\"btnCenter\"&gt;<br>          &lt;input id=\"Button1\" type=\"button\" value=\"登录\" class=\"btn\" /&gt;<br>          &amp;nbsp;&amp;nbsp;<br>          &lt;input id=\"Button2\" type=\"button\" value=\"取消\" class=\"btn\" /&gt;<br>        &lt;/div&gt;<br>        &lt;span id=\"divMsg\" class=\"clsTip\"&gt;&lt;/span&gt;<br>      &lt;/div&gt;<br>  &lt;/div&gt;<br>&lt;/body&gt;<br>&lt;/HTML&gt;</p>\r\n<p>其中，js是javascript逻辑控制文件；jq是jquery实现文件；css是css文件；后面的span标签，是为了实现某些功能暂时留下的。</p>\r\n<p>$(function(){<br>	//元素绑定全局ajaxStart事件<br>	//这里就是用到span的标签，给出过程<br>	$(\"#divMsg\").ajaxStart(function(){<br>		$(this).show().html(\"正在发送登录请求...\");<br>	})<br>	$(\"#divMsg\").ajaxStop(function(){<br>		$(this).html(\"请求处理已完成！\").hide();<br>	})<br>	$(\"#Button1\").click(function(){<br>		var $name=$(\"#txtName\");<br>		var $pass=$(\"#txtPass\");<br>		if($name.val() !== \"\" &amp;&amp; $pass.val()!==\"\"){<br>			UserLogin($name.val(),$pass.val());<br>		}else{<br>			if($name.val()==\"\"){<br>				alert(\"用户名不能为空！\");<br>				$name.focus();<br>				return false;  // 阻止进一步的动作，很重要的一步<br>			}else{<br>				alert(\"密码不能为空！\");<br>				$pass.focus();<br>				return false;<br>			}<br>		}<br>	})<br>});</p>\r\n<p>function UserLogin(name,pass){<br>	$.ajax({<br>		type: \"GET\",  //提交方式<br>		url: \"index.php\",   //提交对象<br>		data:\"action=Login&amp;d=\"+new Date()+\"&amp;name=\"+name+\"&amp;pass=\"+pass, //提交数据<br>		success:function(data){<br>			if(data==\"1\"){<br>			window.location=\"ChatMain.html\";<br>		}else{<br>			alert(\"用户名或密码错误！\");<br>			return false;<br>		}<br>	}<br>	});<br>} </p>\r\n<p>其实这里面还是有错误的，实现起来感觉没有第一种实现方法简单明了，希望了解的兄弟们指点下，两种方法的优缺点。</p>\r\n<p>我还是稍微完善了下第一种PDO方法，直接在html中post表格数据，与数据库进行比对，然后返回信息。</p>\r\n<p> 当然呢，第二种，也就是本来应该采用的这种方式，很明显的优点在于其模块化实现，对于开发人员来说也是清晰明了。但，私以为，小型任务中，如果没有统一规划好的名称啊，什么的，这样子模块化是不是显得冗余，毕竟还需要看模块是否匹配啊什么的，不知道理解的对不对。</p>\r\n<p><strong>12.5 聊天室页面ChatMain</strong></p>\r\n<p>从页面本身来说，就是head包含jq文件，js文件，css文件；body实现当前页面的效果，也有接口功能的实现；</p>\r\n<p>从布局来说，就是聊天窗口的样子，三个框框搞定（可是尼玛老子不会用css啊！！！！）；</p>\r\n<p> -----晚上不一定还会写，先发了吧-----</p>\n ', '2016-04-28 20:05:10', '2016-04-28 20:19:24', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3120', '这回真的是挤时间了-PHP基础（三） ', '网络', '\n<p>　　hi</p>\r\n<p>刚看了唐人街探案，5星好评啊亲。由于是早就约好的，也不好推辞（虽然是和男的..），但该写的还是得挤时间写。明天早上老师的项目结题，虽然和我关系不大，但不要添乱就好！！</p>\r\n<p><strong>1、PHP </strong></p>\r\n<p><strong>一、PHP基础（三）</strong><br><strong>1.3.2 Int</strong></p>\r\n<p>整型。</p>\r\n<p>几个点：<strong>进制问题</strong>（2，8，16）；</p>\r\n<p>溢出——溢出后自动转为float型；</p>\r\n<p>整除；</p>\r\n<p>float转为int——向下取整；</p>\r\n<p>例子给出</p>\r\n<p><strong>$shi=123;</strong><br><strong>$bin=0b100001;</strong><br><strong>$ba=0123;</strong><br><strong>$shiliu=0x1234555;</strong></p>\r\n<p>function show($a){<br>	echo \"Truth is:\";<br>	var_dump($a);<br>	echo \"&lt;br/&gt;\";<br>}</p>\r\n<p>show($shiliu);<br>show($ba);<br>show($bin);</p>\r\n<p><strong>$qiguaideba=01237823;  //八进制的“溢出”,会截断，只输出01237</strong></p>\r\n<p>show($qiguaideba);</p>\r\n<p>function zhengchu($a,$b){<br>	$c=$a/$b;<br>	if(is_float($c)){<br><strong>var_dump(round($c));   //用round控制输出结果</strong><br>	}else{<br>		var_dump($c);<br>	}<br>}</p>\r\n<p>zhengchu($shiliu , $ba);</p>\r\n<p><strong>1.3.3 float</strong></p>\r\n<p>php版本不同，浮点型的精确度似乎是有变化的；而且坑爹的是，<strong>由于PHP内部机制的问题，也许会出现：</strong></p>\r\n<p><strong>var_dump(floor((0.1+0.7)*10));</strong></p>\r\n<p><strong>返回的往往是7而不是期望中的8....</strong></p>\r\n<p>使用高精度的话，<strong>用gmp函数</strong>，请自行去了解...</p>\r\n<p>然后真想比较的话，不妨<strong>设置一个最小值</strong>来比较：</p>\r\n<p>$bijiao1=0.232342342;<br>$bijiao2=0.232342323;<br><strong>$esp=0.000001;</strong><br>if(abs($bijiao1-$bijiao2)&lt;=$esp){<br>	echo \"True\".\"&lt;br/&gt;\";<br>}else{<br>	echo \"F**k\".\"&lt;br/&gt;\";<br>}</p>\r\n<p><strong>1.3.4 字符串</strong></p>\r\n<p>单双引号括起来的就是了~</p>\r\n<p>然后只想说一点的就是heredoc：</p>\r\n<p><strong>$str= &lt;&lt;&lt; EOF</strong><br>alsidjflja<br>akjsdhflkj<br>dfjlkj.<br><strong>EOF;</strong></p>\r\n<p>echo $str;</p>\r\n<p>基本就是这么个样子，但是注意，<strong>最后一行那个EOF;是必须要和分号紧紧相依的，而且分号后面必须是换行，EOF前面不能出现包括空格的一切东西；</strong></p>\r\n<p>然后heredoc还可以用在传递参数，初始化静态值等等；</p>\r\n<p>当然，heredoc中也可以调用参数啊属性的什么的——把EOF看成是大大的双引号就好了。</p>\r\n<p>其他的字符串相关，比如我经常用到的.做连接符什么的，比较基础，但是好用，去看一下视频就很明了。</p>\r\n<p>nowdoc也是一种比较新的方式，不太熟悉，然后似乎相当于单引号。</p>\r\n<p><strong>1.4 变量</strong></p>\r\n<p>变量好用，变量灵活，变量难用——一般就是渐渐的这么认为的。</p>\r\n<p>第一，PHP中不强调赋初值，不需要声明，但是<strong>推荐还是赋初值，养成好习惯</strong>；不赋初值，变量值为其类型的默认值；</p>\r\n<p>第二，引用赋值要知道，$b=&amp;$a;  只能对变量名进行操作；</p>\r\n<p>第三，赋值一次更新一次：</p>\r\n<p>$shit=\"asdf\";<br>$s=123;</p>\r\n<p>echo $shit;</p>\r\n<p>$shit=$s;<br>echo $shit;</p>\r\n<p><strong>2、GD库实现图片水印与缩略图</strong></p>\r\n<p><strong>一、简介</strong></p>\r\n<p>使用PHP中自带的GD库制作图片的水印。</p>\r\n<p>适合大批量的图片的简单处理。</p>\r\n<p>学习基本的方法，然后封装为一个工具类。 </p>\r\n<p> </p>\r\n<p>这周末除了看星球大战，就来补过补过，知道错了。。。。。</p>\n ', '2016-04-28 20:05:11', '2016-04-28 20:05:11', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3121', '好好写，好好干-PHP基础（二） ', '网络', '\n<p>　　hi</p>\r\n<p>好久没写，昨儿一写，感觉还是有人看的，至少是有一两个评论的~~好好干！</p>\r\n<p>每天需要坚持的就那么4件事儿：写这个，学一点法语，看会儿书，锻炼。单身狗也有好处。</p>\r\n<p><strong>1、PHP</strong></p>\r\n<p><strong>一、PHP基础（二）</strong></p>\r\n<p><strong>1.3 数据类型</strong></p>\r\n<p><strong>8种——4种标量：布尔boolean，整型integer，浮点float/双精度double，字符串string；2种复合：数组array，对象object；2种特殊：资源resource，NULL无；</strong></p>\r\n<p>推荐记住英文，在学习的过程中，变量通常都是这么来命名的。</p>\r\n<p><strong>php是弱类型语言</strong>，也就是说，不需要提前声明变量的类型。</p>\r\n<p>查看变量的类型：gettype()；</p>\r\n<p>判断类型：is_*()，其中*为各种数据类型的简写。</p>\r\n<p><strong>1.3.1 Boolean</strong></p>\r\n<p>true或false，不区分大小写，习惯上（我）写全小写。</p>\r\n<p><strong>一般不需要强制转换为布尔值，系统自动判断；（见下例）</strong></p>\r\n<p><strong>这些都被认为为false：false；0；0.0；空字符串以及字符串\"0\"；空数组；NULL；从空标记生成的SimpleXML对象（我也不是很理解还，主要是还没有涉及XML）；</strong></p>\r\n<p>相对应的是其他都认为为true——<strong>注意，-1，也是true；</strong></p>\r\n<p>&lt;?php</p>\r\n<p>$boola=true;<br>$boolb=false;<br>$boolc=null;<br>$boold=-1;<br>$boole=\"sdkljf\";</p>\r\n<p>echo gettype($boola).\"&lt;hr/&gt;\";</p>\r\n<p>function isbool($bool){<br>	if(<strong>is_bool($bool)</strong>){<br>		echo \"You are damn right.It is boolean.\".\"&lt;br/&gt;\";<br>	}else{<br>		echo \"Sorry, it is not this type.Please try again.\".\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>isbool($boola);<br>isbool($boolc);<br>isbool($boold);<br>isbool($boole);</p>\r\n<p>function booluse($bool){<br><strong>if($bool)</strong>{<br>		echo \"It is equal to TRUE.\".\"&lt;br/&gt;\";<br>	}else{<br>		echo \"It is equal to FALSE.\".\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>booluse($boola);<br>booluse($boolc);<br>booluse($boold);</p>\r\n<p> 在上述例子中注意，如果直接判断是否为boolean，一般的数据类型是不会强制转换的，只有当用在if等判断中时，才会自动的、强制的转换为boolean使用。 </p>\r\n<p>1.3.2 Int</p>\r\n<p>整型。</p>\r\n<p> </p>\r\n<p> 我错了。。。写一半被老板召唤加班，明天保证完成该系列第一部分（说明晚要看唐人街的嘛。。）。</p>\r\n<p>晚安，看书去了</p>\n ', '2016-04-28 20:05:11', '2016-04-28 20:05:11', '0', '0', '0', '0', '80');
INSERT INTO `blog` VALUES ('3122', '自罚一杯-PHP基础（一） ', '网络', '\n<p>　　hi</p>\r\n<p>懒癌是最可怕的癌了吧，在即将迎来本命年时，给自己定下每天必干的几件成习惯的事情，望不再鸽！！</p>\r\n<p>php是我一直在学习的东西，但总以为php简单，难点在需要掌握大量的相关知识，其实并不完全对，php也是有算法好吧，php也值得认真对待，既然决定学了，拿点样子出来啊，是男人吧。</p>\r\n<p><strong>1、PHP</strong></p>\r\n<p><strong>一、PHP基础（一）</strong></p>\r\n<p><strong>1.1 简介</strong></p>\r\n<p>PHP=Hypertext Preprocessor=超文本预处理语言；</p>\r\n<p><strong>脚本语言；</strong></p>\r\n<p><strong>执行效率高（就是速度快）；</strong></p>\r\n<p>可大可小，大网站往往不只使用它一种语言，比如淘宝，前p后j好像是；</p>\r\n<p>俗语：电子商务三大宝——上线，支付宝，php；</p>\r\n<p>版本问题：目前最新为PHP 7.0.0；我一般还在用PHP5。</p>\r\n<p>环境问题：windows各种集成环境，wamp，xampp，或者自行百度自助搭建；linux我前面的博文中有说，其实就几行命令的问题，当然系统版本不同，可能命令有所不同，大同小异，举一反三~</p>\r\n<p><strong>1.2 基础语法</strong></p>\r\n<p><strong>--PHP标记</strong></p>\r\n<p>&lt;?php和?&gt;；</p>\r\n<p>天生为html而生，嵌套其中；</p>\r\n<p><strong>一般在编译器中，不要写?&gt;，因为容易在结束标记前有不希望输出的空格等内容；直接删掉就行了，会自动结束的；</strong></p>\r\n<p>--从HTML中分离</p>\r\n<p><strong>&lt;?php if ($expression==true): ?&gt;</strong><br><strong> aaaaaaaaa</strong><br><strong> &lt;?php else: ?&gt;</strong><br><strong> bbbbbb</strong><br><strong> &lt;?php endif;?&gt;</strong></p>\r\n<p>一般情况下，php标记能很好的从HTML中分离，但上述例子情况例外——<strong>使用条件的高级分离方法</strong>；</p>\r\n<p>当解释器遇到未完成的条件语句时，会跳过标记寻找相应的东西（比如else）；</p>\r\n<p><strong>适用于输出大段文本，比echo等更有效率。</strong></p>\r\n<p>另外，开始结束的标记也可以用其他的，但推荐&lt;?php；</p>\r\n<p><span style=\"line-height: 1.5;\">--其他</span></p>\r\n<p><span style=\"line-height: 1.5;\">注释：//单行，/*多行；</span></p>\r\n<p><span style=\"line-height: 1.5;\">指令分隔符：分号</span></p>\r\n<p> </p>\r\n<p>把憋了一个月的电影去看了，时间挤啊挤，才有a杯那么一点，明天继续！</p>\r\n<p> </p>\n ', '2016-04-28 20:05:11', '2016-04-28 20:19:21', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3123', '睡觉问题早晚成为我顶头疼的问题。。。-PHP ', '网络', '\n<p>　　hi</p>\r\n<p>昨晚又作自己，睡不好整个人都不好。。。</p>\r\n<p><strong>1、PHP实现页面静态化</strong></p>\r\n<p><strong>二、纯静态化</strong></p>\r\n<p><strong>2.2 实现页面纯静态化的原理</strong></p>\r\n<p><strong>--基本方式</strong></p>\r\n<p>file_put_contents()函数；</p>\r\n<p>使用php内置缓存机制，output_buffering.</p>\r\n<p>具体信息可以去php手册中查找。重点看函数格式，参数，返回值。</p>\r\n<p><strong>--栗子file_put_contents()</strong></p>\r\n<p>&lt;?php<br>/*<br> * 写入函数<br> */</p>\r\n<p><strong>file_put_contents(\'index.shtml\',\'asdklfj\');</strong></p>\r\n<p>运行http://localhost/phpJingtaihua/index.shtml，得到结果。很简单的一个函数。</p>\r\n<p><strong>--栗子output_buffering</strong></p>\r\n<p>有内置函数，<strong>ob（output_buffering)系列的。</strong></p>\r\n<p>主要涉及四个</p>\r\n<p>ob_start,打开输出控制缓冲；</p>\r\n<p>ob_get_contents,返回输出缓冲区内容；</p>\r\n<p>ob_clean,清空输出缓冲区；</p>\r\n<p>ob_get_clean，得到缓冲区内容并删除当前输出缓冲区。</p>\r\n<p><strong>ob_start(); //打开缓冲区</strong><br>echo 1234;<br><strong>echo ob_get_contents();</strong></p>\r\n<p>得到12341234的序列。也就是说，所有输出都要经过缓冲区——就像是水龙头上装了个滤嘴。</p>\r\n<p>ob_start(); //打开缓冲区<br>echo 111;echo \"&lt;br/&gt;\";<br>echo ob_get_contents();echo \"&lt;br/&gt;\";<br><strong>ob_clean();</strong><br>echo ob_get_contents();echo \"&lt;br/&gt;\";</p>\r\n<p>echo 222;echo \"&lt;br/&gt;\";</p>\r\n<p>echo ob_get_clean();echo \"&lt;br/&gt;\";</p>\r\n<p>这里呢，111因为缓冲区的清除，而不会再输出，即使是原始的echo语句也不行。</p>\r\n<p><strong>2.3 纯静态化案例实现简介</strong></p>\r\n<p>终极目的就是生成静态文件。</p>\r\n<p>其一，写入数据到静态文件。</p>\r\n<p>其二，利用ob机制，获取（可以写入到静态文件的）数据。</p>\r\n<p><strong>2.4 案例实现步骤</strong></p>\r\n<p>链接数据库，从数据库中获取数据——》把获取到的数据填充到模板文件中去——》把动态页面转化为静态页面，生成纯静态文件。</p>\r\n<p> </p>\r\n<p>-----------------</p>\r\n<p>先这样，晚上有时间再写。。。。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:11', '2016-04-28 20:17:26', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3124', '其实今天没有欲望..-MySQLi ', '网络', '\n<p>　　hi</p>\r\n<p>中午爽爽的游了会儿泳，但是下午把一拳超人看完了，竟然萌生不出学习的欲望了。。。强迫自己更新点东西吧，一会儿看书去。</p>\r\n<p><strong>1、MySQLi</strong></p>\r\n<p><strong>二、MySQLi基于OOP的编程</strong></p>\r\n<p><strong>2.1 使用解析</strong></p>\r\n<p>--基本</p>\r\n<p><strong>MySQLi是一个拓展类库，本质上是个类</strong>（？）。</p>\r\n<p>一般流程和MySQL一样：<strong>连接，选库，字符集设定，SQL语句执行，关闭连接</strong>。</p>\r\n<p><strong>--链接库例子</strong></p>\r\n<p>&lt;?php<br>/*<br> * <strong>连接和选库</strong><br> */<br><strong>$mysqli=new mysqli(\'localhost\', \'root\', \'\');</strong><br>print_r($mysqli);echo \"&lt;br/&gt;\";</p>\r\n<p>echo <strong>$mysqli-&gt;select_db</strong>(\'test\');echo \"&lt;br/&gt;\";</p>\r\n<p><strong>$mysqli2=new mysqli();</strong><br>print_r(<strong>$mysqli2-&gt;connect</strong>(\'localhost\', \'root\', \'\'));echo \"&lt;br/&gt;\";</p>\r\n<p>print_r(<strong>$mysqli3=new mysqli(\'localhost\', \'root\', \'\',\'test\')</strong>);echo \"&lt;br/&gt;\";</p>\r\n<p>三种不同的方法，这里的方法都是利用mysqli的类属性来做的；当然也可以利用mysqli的命令来链接；</p>\r\n<p>$con=mysqli_connect(HOST,USERNAME,PASSWORD)</p>\r\n<p>结果中有一些信息</p>\r\n<table><tbody>\n<tr>\n<td class=\"webkit-line-content\">mysqli Object</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">(</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[affected_rows] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[client_info] =&gt; mysqlnd 5.0.11-dev - 20120503 - $Id: bf9ad53b11c9a57efdb1057292d73b928b8c5c77 $</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[client_version] =&gt; 50011</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[connect_errno] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[connect_error] =&gt;</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[errno] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[error] =&gt;</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[error_list] =&gt; Array</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">(</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">)</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\"> </td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[field_count] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[host_info] =&gt; localhost via TCP/IP</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[info] =&gt;</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[insert_id] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[server_info] =&gt; 5.6.17</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[server_version] =&gt; 50617</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[stat] =&gt; Uptime: 968 Threads: 1 Questions: 24 Slow queries: 0 Opens: 70 Flush tables: 1 Open tables: 63 Queries per second avg: 0.024</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[sqlstate] =&gt; 00000</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[protocol_version] =&gt; 10</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[thread_id] =&gt; 11</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">[warning_count] =&gt; 0</td>\r\n\r\n</tr>\n<tr>\n<td class=\"webkit-line-number\"> </td>\r\n<td class=\"webkit-line-content\">)</td>\r\n\r\n</tr>\n</tbody></table>\n<p>这些属性都是可以通过对象的属性来得到的，比如</p>\r\n<p>echo $mysqli-&gt;client_info;echo \"&lt;br/&gt;\";</p>\r\n<p>或者是通过相对应的方法得到，这些东西查手册可以看到。</p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>//1.建立到MySQL数据的连接<br>// $mysqli=new mysqli(\'localhost\',\'root\',\'root\');<br>// //print_r($mysqli);<br>// //2.打开指定的数据库<br>// $mysqli-&gt;select_db(\'test\');<br>// $mysqli=new mysqli();<br>// $mysqli-&gt;connect(\'127.0.0.1\',\'root\',\'root\');<br>// print_r($mysqli);</p>\r\n<p>//建立连接的同时打开指定数据库<br>$mysqli=@new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>//print_r($mysqli);<br>//$mysqli-&gt;connect_errno:得到连接产生的错误编号<br>//$mysqli-&gt;connect_error:得到连接产生的错误信息<br>if($mysqli-&gt;connect_errno){<br>	die(\'Connect Error:\'.$mysqli-&gt;connect_error);<br>}<br>print_r($mysqli);<br>echo \'&lt;hr color=\"red\"/&gt;\';<br>echo \'客户端的信息：\'.$mysqli-&gt;client_info.\'&lt;br/&gt;\';<br>echo $mysqli-&gt;get_client_info().\'&lt;br/&gt;\';<br>echo \'客户端的版本：\'.$mysqli-&gt;client_version.\'&lt;br/&gt;\';<br>echo \'&lt;hr/&gt;\';<br>echo \'服务器端信息：\'.$mysqli-&gt;server_info.\'&lt;br/&gt;\';<br>echo $mysqli-&gt;get_server_info();<br>echo \'&lt;hr/&gt;\';<br>echo \'服务器版本：\'.$mysqli-&gt;server_version.\'&lt;br/&gt;\';</p>\r\n<p>echo \'&lt;hr/&gt;\';</p>\r\n<p><strong>--字符集例子</strong></p>\r\n<p>&lt;?php<br>//1.建立到MySQL的连接<br>$mysqli=@new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'Connect Error:\'.$mysqli-&gt;connect_error);<br>}<br>//2.设置默认的客户端编码方式utf8<br><strong>$mysqli-&gt;set_charset(\'utf8\');</strong></p>\r\n<p>//3.执行SQL查询<br>$sql=&lt;&lt;&lt;EOF<br>	CREATE TABLE IF NOT EXISTS mysqli(<br>		id TINYINT UNSIGNED AUTO_INCREMENT KEY,<br>		username VARCHAR(20) NOT NULL<br>	);<br>EOF;<br>$res=$mysqli-&gt;query($sql);<br>var_dump($res);</p>\r\n<p>/*<br> SELECT/DESC/DESCRIBE/SHOW/EXPLAIN执行成功返回mysqli_result对象，执行失败返回false<br> 对于其它SQL语句的执行，执行成功返回true，否则返回false<br> */<br>//关闭连接<br>$mysqli-&gt;close();</p>\r\n<p>需要注意的是数据库中的是utf8，而不是utf-8；</p>\r\n<p><strong>2.2 插入记录操作</strong></p>\r\n<p>增。</p>\r\n<p><strong>--connect.php</strong></p>\r\n<p>因为连接数据库的一系列操作是常用的，对于这种，我们简便的方法就是<strong>封装起来，到处调用</strong></p>\r\n<p>require_once \'connect.php\';</p>\r\n<p>connect.php</p>\r\n<p>&lt;?php<br>/*<br> * <strong>连接和选库（头）文件</strong><br> */<br>$mysqli=new mysqli(\'localhost\', \'root\', \'\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'Connect Error:\'.$mysqli-&gt;connect_error);<br>}else{<br>	echo \'客户端的信息：\'.$mysqli-&gt;client_info.\'&lt;br/&gt;\';<br>}<br>$mysqli-&gt;set_charset(\'utf8\');</p>\r\n<p><strong>--增</strong></p>\r\n<p>&lt;?php<br>/*<br> * 数据库插入数据<br> */</p>\r\n<p><strong>require_once \'connect.php\';</strong></p>\r\n<p>$sql=\"insert mysqli(username) value(\'Tom\')\";<br><strong>echo $mysqli-&gt;query($sql);</strong></p>\r\n<p>这里执行的是单条的sql语句。</p>\r\n<p>或者完善一点，添加一个判断，并输出错误信息。</p>\r\n<p>if($res){<br>	echo $mysqli-&gt;insert_id; <br>}else{<br>	echo \'ERROR \'.$mysqli-&gt;error;<br>}</p>\r\n<p>或者，插入多条记录</p>\r\n<p>$sql=\"insert mysqli(username) value(\'Sdaf\'),(\'Andy\')\";</p>\r\n<p><strong>2.3 更新记录</strong></p>\r\n<p>更新。</p>\r\n<p>$sql=\"update test set id=id+10\";<br>$mysqli-&gt;query($sql);</p>\r\n<p><strong>2.4 删除</strong></p>\r\n<p>删</p>\r\n<p>$sql=\"delete from mysqli where id&gt;=2\";</p>\r\n<p>--</p>\r\n<p><strong>特别说明，affected_rows返回的情况有三种：</strong></p>\r\n<p><strong>-1  sql语句有问题；</strong></p>\r\n<p>0 没有受影响的语句；</p>\r\n<p>&gt;=0 受影响的条数。</p>\r\n<p><strong>--小结</strong></p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>$mysqli=new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'CONNECT ERROR:\'.$mysqli-&gt;connect_error);<br>}<br>$mysqli-&gt;set_charset(\'utf8\');</p>\r\n<p>//执行SQL查询<br>//添加记录<br>//执行单条SQL语句,只能执行一条SQL语句<br>// $sql=\"INSERT user(username,password) VALUES(\'king\',\'king\');\";<br>// $sql.=\"DROP TABLE user;\";<br>$sql=\"INSERT user(username,password) VALUES(\'queen1\',\'queen1\'),(\'queen2\',\'queen2\'),(\'queen3\',\'queen3\'),(\'queen4\',\'queen4\')\";<br>$res=$mysqli-&gt;query($sql);<br>if($res){<br>	//得到上一插入操作产生的AUTO_INCREMENT的值<br>	echo \'恭喜您注册成功，您是网站第\'.$mysqli-&gt;insert_id.\'位用户&lt;br/&gt;\';<br>	//得到上一步操作产生的受影响记录条数<br>	echo \'有\'.$mysqli-&gt;affected_rows.\'记录被影响\';<br>}else{<br>	//得到上一步操作产生的错误号和错误信息<br>	echo \'ERROR \'.$mysqli-&gt;errno.\':\'.$mysqli-&gt;error;<br>}<br>echo \'&lt;hr/&gt;\';</p>\r\n<p>//将表中年龄+10<br>$sql=\"UPDATE user SET age=age+10\";<br>$res=$mysqli-&gt;query($sql);<br>if($res){<br>	echo $mysqli-&gt;affected_rows.\'条记录被更新\';<br>}else{<br>	echo \"ERROR \".$mysqli-&gt;errno.\':\'.$mysqli-&gt;error;<br>}<br>echo \'&lt;hr/&gt;\';</p>\r\n<p>//将表中id&lt;=6的用户删除掉<br>$sql=\"DELETE FROM user WHERE id&lt;=6\";<br>$res=$mysqli-&gt;query($sql);<br>if($res){<br>	echo $mysqli-&gt;affected_rows.\'条记录被删除\';<br>}else{<br>	echo \"ERROR \".$mysqli-&gt;errno.\':\'.$mysqli-&gt;error;<br>}<br>//关闭到MySQL的连接<br>$mysqli-&gt;close();</p>\r\n<p><strong>2.5 查</strong></p>\r\n<p>需要注意的是，用的是select，所以返回的是结果集，是可以打印出来的print_r或var_dump。</p>\r\n<p>所以这里就要说一下，返回的结果集的选择了。</p>\r\n<p>&lt;?php<br>header(\'content-type:text/html;charset=utf-8\');<br>$mysqli=new mysqli(\'localhost\',\'root\',\'root\',\'test\');<br>if($mysqli-&gt;connect_errno){<br>	die(\'CONNECT ERROR:\'.$mysqli-&gt;connect_error);<br>}<br>$mysqli-&gt;set_charset(\'utf8\');<br>$sql=\"SELECT id,username,age FROM user\";<br><strong>$mysqli_result=$mysqli-&gt;query($sql);</strong><br>//var_dump($mysqli_result);<br>if($mysqli_result &amp;&amp; $mysqli_result-&gt;num_rows&gt;0){<br>	//echo $mysqli_result-&gt;num_rows;<br><strong>//$rows=$mysqli_result-&gt;fetch_all();//获取结果集中所有记录，默认返回的是二维的</strong><br>	//索引+索引的形式<br>	//$rows=$mysqli_result-&gt;fetch_all(MYSQLI_NUM);<br>	//$rows=$mysqli_result-&gt;fetch_all(MYSQLI_ASSOC);<br>	//$rows=$mysqli_result-&gt;fetch_all(MYSQLI_BOTH);<br><strong>// 	$row=$mysqli_result-&gt;fetch_row();//取得结果集中一条记录作为索引数组返回</strong><br>// 	print_r($row);<br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_assoc();//取得结果集中的一条记录作为关联数组返回</strong><br>// 	print_r($row);<br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_array();//二者都有的</strong><br>// 	print_r($row);<br><br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_array(MYSQLI_ASSOC);</strong><br>// 	print_r($row);<br><br>// 	echo \'&lt;hr/&gt;\';<br><strong>// 	$row=$mysqli_result-&gt;fetch_object();</strong><br>// 	print_r($row);<br>// 	echo \'&lt;hr/&gt;\';<br>// 	//移动结果集内部指针<br>// 	$mysqli_result-&gt;data_seek(0);<br>// 	$row=$mysqli_result-&gt;fetch_assoc();<br>// 	print_r($row);<br><br>// 	print_r($rows);</p>\r\n<p>	while($row=$mysqli_result-&gt;fetch_assoc()){<br>		//print_r($row);<br>		//echo \'&lt;hr/&gt;\';<br>		$rows[]=$row;<br>	}<br>	print_r($rows);<br><br><strong>//释放结果集</strong><br><strong>	$mysqli_result-&gt;free();</strong><br><br><br>}else{<br>	echo \'查询错误或者结果集中没有记录\';<br>}<br>$mysqli-&gt;close();</p>\r\n<p> </p>\n ', '2016-04-28 20:05:11', '2016-04-28 20:17:24', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3125', '感觉没睡好就..-shenmedoumeixie.... ', '网络', '\n<p>　　hi</p>\r\n<p>昨晚没睡好，虽然梦很香，但睡不好没精神做科研啊。。。</p>\r\n<p><strong>1、jQuery</strong></p>\r\n<p><strong>十二、实现聊天室创建</strong></p>\r\n<p><strong>12.1 基本功能</strong></p>\r\n<p>登陆；</p>\r\n<p><strong>无刷新实时交流；</strong></p>\r\n<p>支持表情。</p>\r\n<p>12.2 大致效果</p>\r\n<p>登陆——》验证，打算用AJAX来做；</p>\r\n<p>聊天——》php实现具体功能就行。</p>\r\n<p>12.3 数据流分析</p>\r\n<p>登陆页面：获取用户名和密码请求登陆-返回聊天页面或失败信息以及登陆页面；</p>\r\n<p>聊天页面：聊天内容的请求和返回（实现无刷新的更新数据）；在线人员信息的请求和返回；处理发送内容的请求，写入聊天内容。</p>\r\n<p><strong>12.4 登陆页面开发</strong></p>\r\n<p> --------突然间发现需要AJAX的知识储备，但我今天不想看ajax，周末再来吧。。。-----------</p>\r\n<p><strong>2、PHP实现页面静态化（一）</strong></p>\r\n<p><strong>一、静态化简介</strong></p>\r\n<p><strong>1.1、动态页面和静态页面</strong></p>\r\n<p>动态：执行动态程序，php，jsp等；比如php，语法分析，编译再运行。</p>\r\n<p>静态：html等文件。</p>\r\n<p><strong>1.2、关于优化页面响应时间</strong></p>\r\n<p><span style=\"line-height: 1.5;\">--主要手段</span></p>\r\n<p><span style=\"line-height: 1.5;\">动态页面静态化——本节重点；</span></p>\r\n<p>优化数据库；</p>\r\n<p>使用负载均衡；</p>\r\n<p>使用缓存；</p>\r\n<p><strong>--动态页面静态化</strong></p>\r\n<p><strong>场景</strong>：页面中的一些内容不经常改动；</p>\r\n<p><strong>实质：生成静态的HTML文件</strong>；（减少了执行步骤，也就节省了时间）</p>\r\n<p>减少响应时间，<strong>重要的是减少服务器负担。</strong></p>\r\n<p>不适合微博等更新较快的。</p>\r\n<p><strong>1.3 关于动态URL地址设置静态形式</strong></p>\r\n<p>http://state.com/index.php?c=play&amp;a=index&amp;id=8123</p>\r\n<p>变为</p>\r\n<p>http://state.com/play/8123.shtml</p>\r\n<p>这个过程暂时还是伪静态（实际上还是动态文件，只是换了个马甲）。</p>\r\n<p><strong>1.4 PHP静态化</strong></p>\r\n<p><strong>--纯静态</strong></p>\r\n<p>通过php程序生成的真正的静态文件。</p>\r\n<p>又分为局部纯静态（/局部动态，实现方法可能是ajax的异步操作）和全局纯静态。</p>\r\n<p><strong>--伪静态</strong></p>\r\n<p>把URL地址转化为类似html的情况。</p>\r\n<p><strong>二、纯静态化案例实现</strong></p>\r\n<p><strong>2.1 buffer</strong></p>\r\n<p>--概述</p>\r\n<p><strong>其实就是缓冲区</strong>，一个内存地址空间，用于存储数据。</p>\r\n<p>实现静态化，要围绕buffer展开。</p>\r\n<p>比如说电脑系统中的buffer，就是当有数据要进行存储操作的时候，需要先把某个buffer存满，然后再写入磁盘。</p>\r\n<p><strong>--流程</strong></p>\r\n<p>内容——php buffer——tcp——终端</p>\r\n<p><strong>--使用</strong></p>\r\n<p>&lt;?php<br>echo 1;echo \"&lt;br/&gt;\";<br>echo ob_get_contents();</p>\r\n<p>如果没开启，要么改php.ini，要么加头文件</p>\r\n<p>ob_start();</p>\r\n<p>2.2 实现纯静态化</p>\r\n<p>--基本方式</p>\r\n<p>file_put_contents()</p>\r\n<p>output_buffering()</p>\r\n<p> </p>\n ', '2016-04-28 20:05:11', '2016-04-28 20:17:22', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3126', '周一干不干活-PHP+MySQLi ', '网络', '\n<p>hi</p>\r\n<p>本来是雄心壮志的要干活的，哪知天有不测，早上大阴天起不来，中午又回寝室折腾衣服（做女工啊，牛不牛）没睡午觉，这样的迷糊状态，怎么科研，写这个好了。</p>\r\n<p><strong>1、PHP的OOP编程</strong></p>\r\n<p><strong>4.7 多态</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>由于接口的方法实现有多种多样，这种特性称之为多态</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>function eat($obj){<br>  if($obj instanceof ICanEat){ <br>    $obj-&gt;eat(\"FOOD\"); // 不需要知道到底是Human还是Animal，直接吃就行了<br>  }else{<br>    echo \"Can\'t eat!\\n\";<br>  }<br>}</p>\r\n<p>$man = new Human();<br>$monkey = new Animal();</p>\r\n<p><strong>// 同样的代码，传入接口的不同实现类的时候，表现不同。这就是为什么成为多态的原因。</strong><br>eat($man);<br>eat($monkey);</p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 多态<br> * 1. 只要某个对象实现了接口（instanceof），就可以直接在对象上调用接口的方法<br> */</p>\r\n<p><strong>4.8 抽象类</strong></p>\r\n<p><strong>--问题</strong></p>\r\n<p>连接接口的类，某些方法都是相同的，那么是否能够允许类中不实现，而是在接口中实现。</p>\r\n<p>比如，人和动物吃东西不同，但呼吸相同。</p>\r\n<p><strong>--栗子</strong></p>\r\n<p><strong>abstract class ACanEat{ //关键字改变</strong><br><strong>abstract public function eat($food);//需要类自行实现的，前面加上abstract关键字</strong><br><br>	public function breath(){<br>		echo \"Breath use the air.&lt;br/&gt;\";<br>	}<br><br>}</p>\r\n<p>class Human extends ACanEat{       //实现接口用implenments，这里用extends<br>	public function eat($food){<br>		echo \"Human eating \".$food.\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class Animal <strong>extends</strong> ACanEat{       <strong>//实现接口用implenments，这里用extends</strong><br>	public function eat($food){<br>		echo \"Animal eating \".$food.\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>$xiaoming=new Human();<br>$xiaohei=new Animal();</p>\r\n<p>$xiaoming-&gt;breath();$xiaoming-&gt;eat(\"food\");<br>$xiaohei-&gt;breath();$xiaohei-&gt;eat(\"shit\");</p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 抽象类<br> * 1. 抽象类允许类里面的部分方法暂时没有具体实现，这些方法我们成为抽象方法<br> * 2. 一旦类里面有抽象方法，这个类就必须是抽象类<br> * 3. 抽象类跟接口一样，不能直接实例化为对象<br> */</p>\r\n<p><strong>五、魔术方法</strong></p>\r\n<p><strong>5.1 简介</strong></p>\r\n<p><strong>注意所有的魔术方法前面都是两个下划线__</strong></p>\r\n<p>PHP中的OOP特有的。</p>\r\n<p>比如构造函数和析构函数。</p>\r\n<p><strong>5.2 __tostring()和__invoke()</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>__tostring()，当对象被当作String使用时，这个方法会被自动调用；echo $obj;</p>\r\n<p>__invoke()，当对象被当作方法（函数）调用时，这个方法被自动调用；$obj(4);</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>&lt;?php<br>/*<br> * tostring()魔术方法<br> * invoke()魔术方法<br> */</p>\r\n<p>class MagicTest{<br>	public function __toString(){<br>	return \"This is the class magictest.\";<br>}<br>   public function __invoke($x){<br>   	echo \"&lt;br/&gt;\".$x;<br>   }<br>}<br>$obj=new MagicTest();<br>echo $obj;</p>\r\n<p>$obj(5);</p>\r\n<p>用法和构造函数析构函数类似。比较自动化（自动调用，即使没有声明也会调用），但同时<strong>比较容易出错，小心。</strong></p>\r\n<p><strong>5.3 __call()和__callStatic()或重载（overloading）</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>当对象访问不存在的方法名称时，__call()会被自动调用；</p>\r\n<p>当对象访问不存在的静态方法名称时，__callStatic()会被自动调用；</p>\r\n<p>这两个方法，又称为重载（不同于重写）；通过这两个方法，同一个方法的名称的调用可以对应不同的方法实现</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>&lt;?php<br>/*<br> * tostring()魔术方法<br> * invoke()魔术方法<br> */</p>\r\n<p>class MagicTest{<br>	public function __toString(){<br>	return \"This is the class magictest.\";<br>}<br>   public function __invoke($x){<br>   	echo \"&lt;br/&gt;\".$x.\"&lt;br/&gt;\";<br>   }<br><strong>public function __call($name,$arguments){    //__call的格式是固定的，第一个是方法名，第二个是方法内的参数</strong><br>   	  echo \"Calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br>   public <strong>static</strong> function __callstatic($name,$arguments){ <br>   	echo \"Static calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br>}<br>$obj=new MagicTest();<br>echo $obj;</p>\r\n<p>$obj(5);</p>\r\n<p>$obj-&gt;runTest(\"para1\",\"para2\");<br>$obj::runTest(\"para3\",\"para4\");</p>\r\n<p>注意这里要求定义方法的时候格式是固定的。</p>\r\n<p><strong>5.4 __get()__set()__isset()__unset</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>这几个方法也被称为<strong>属性重载</strong>的魔术方法。</p>\r\n<p>__set()，在给<strong>不可访问属性（一种是属性未定义，另一种是没有访问权限，如private）</strong>赋值时调用；</p>\r\n<p>__get()，读取不可访问属性的值时调用；</p>\r\n<p>__isset()，当对不可访问属性调用isset（）或empty（）时调用；</p>\r\n<p>__unset()，。。。。。。。。。unset（）。。。。。。。。。。</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>&lt;?php<br>/*<br> * tostring()魔术方法<br> * invoke()魔术方法<br> */</p>\r\n<p>class MagicTest{<br>	public function __toString(){<br>	return \"This is the class magictest.\";<br>}<br>   public function __invoke($x){<br>   	echo \"&lt;br/&gt;\".$x.\"&lt;br/&gt;\";<br>   }<br>   public function __call($name,$arguments){    //__call的格式是固定的，第一个是方法名，第二个是方法内的参数<br>   	  echo \"Calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br>   public static function __callstatic($name,$arguments){    <br>   	echo \"Static calling \".$name.\" with parameters: \".implode(\",\", $arguments).\"&lt;br/&gt;\";<br>   }<br><strong>public function __get($name){  //get要有name</strong><br>   	return \"Getting the property \".$name.\"&lt;br/&gt;\"; 	  	<br>   } <br><strong>public function __set($name,$value){   //set要有名有值</strong><br>   	echo \"Setting the property \".$name.\" to value \".$value.\".&lt;br/&gt;\";<br>   }<br><strong>public function __isset($name){    //判断是否定义了属性</strong><br>   	echo \"__isset invoked&lt;br/&gt;\";<br>   	return true;<br>   }<br><strong>public function __unset($name){   //撤销</strong><br>   	echo \"unsetting protery \".$name.\"&lt;br/&gt;\";<br>   	return true;<br>   }<br>}<br>$obj=new MagicTest();<br>echo $obj;</p>\r\n<p>$obj(5);</p>\r\n<p>$obj-&gt;runTest(\"para1\",\"para2\");<br>$obj::runTest(\"para3\",\"para4\");</p>\r\n<p>echo $obj-&gt;classname;<br>$obj-&gt;classname=\"shit\";</p>\r\n<p>echo isset($obj-&gt;classname).\"&lt;br/&gt;\";<br>unset($obj-&gt;classname);echo \"&lt;br/&gt;\";<br>echo empty($obj-&gt;classname).\"&lt;br/&gt;\";</p>\r\n<p>结果是</p>\r\n<p>This is the class magictest.<br>5<br>Calling runTest with parameters: para1,para2<br>Static calling runTest with parameters: para3,para4<br>Getting the property classname<br>Setting the property classname to value shit.<br>__isset invoked<br>1<br>unsetting protery classname<br><br>__isset invoked</p>\r\n<p>可以看到，<strong>其实isset和empty调用__isset时一对相反的操作。</strong></p>\r\n<p>然后，<strong>__set($name，$value)和__unset($name)</strong>是一对相反的操作，但所要元素不一样；</p>\r\n<p><strong>__isset($name),__get($name)</strong>都只需要名字（记住每个魔术方法的作用，理解了，就好记了）。</p>\r\n<p><strong>5.5 __clone()</strong></p>\r\n<p><strong>--定义</strong></p>\r\n<p>就是克隆，或克隆</p>\r\n<p><strong>--栗子</strong></p>\r\n<p>先给出<strong>clone关键字</strong>的用法。</p>\r\n<p>&lt;?php<br>/*<br> * 克隆魔术方法<br> */</p>\r\n<p>class  nbaPlayer{<br>	public $name;<br>}</p>\r\n<p>$james=new nbaPlayer();<br>$james-&gt;name=\'James\';<br>echo $james-&gt;name.\"&lt;br/&gt;\";</p>\r\n<p><strong>$kobe=clone $james;</strong><br>$kobe-&gt;name=\'Kobe\';<br>echo $kobe-&gt;name;</p>\r\n<p>clone后的，就是个单独的对象，对其操作不影响原对象。</p>\r\n<p><strong>加上__clone()</strong></p>\r\n<p>&lt;?php<br>/*<br> * 克隆魔术方法<br> */</p>\r\n<p>class  nbaPlayer{<br>	public $name;<br><br><strong>public function __clone(){</strong><br>		$this-&gt;name=\"shit\";<br>	}<br><br>}</p>\r\n<p>$james=new nbaPlayer();<br>$james-&gt;name=\'James\';<br>echo $james-&gt;name.\"&lt;br/&gt;\";</p>\r\n<p>$kobe=clone $james;<br><strong>echo $kobe-&gt;name.\"&lt;br/&gt;\";</strong><br>$kobe-&gt;name=\'Kobe\';<br>echo $kobe-&gt;name.\"&lt;br/&gt;\";</p>\r\n<p>一般来说，用处在于<strong>clone后的初始化</strong>；或者说，<strong>当复制后，不想透露的某些信息的掩盖。</strong></p>\r\n<p>在工作中常用到这一个，因为常有<strong>对某个对象的操作，又不想影响原有数据</strong>，就克隆/复制一个出来。</p>\r\n<p>----------------------------------------</p>\r\n<p><strong>2、MySQLi扩展</strong></p>\r\n<p><strong>一、安装及下载</strong></p>\r\n<p>1.1 优势及简介</p>\r\n<p>更新更好，PHP5及以后推荐使用（或者PDO）。</p>\r\n<p><strong>--优点</strong></p>\r\n<p>基于OOP和面向过程的使用；</p>\r\n<p>支持预处理语句；</p>\r\n<p>支持事务。</p>\r\n<p>--其他</p>\r\n<p>速度更快。安全性更好</p>\r\n<p><strong>1.2 安装及配置</strong></p>\r\n<p>--安装</p>\r\n<p>配置php，开启php_mysqli.dll；</p>\r\n<p>配置extension_dir=\'ext目录位置\';</p>\r\n<p>重启服务器。</p>\r\n<p>（我用的是WAMP，直接打对勾就行）</p>\r\n<p><strong>--验证</strong></p>\r\n<p>&lt;?php<br>/*<br> * 验证mysqli是否开启<br> */</p>\r\n<p>//phpinfo();<br>//2.检测扩展是否已经加载<br>var_dump(extension_loaded(\'mysqli\'));<br>var_dump(extension_loaded(\'curl\'));<br>echo \'&lt;hr/&gt;\';<br>//3.检测函数是否存在<br>var_dump(function_exists(\'mysqli_connect\'));<br>echo \'&lt;hr/&gt;\';<br>//4.得到当前已经开启的扩展<br>print_r(get_loaded_extensions());<br>echo \'&lt;hr/&gt;\';</p>\r\n<p> </p>\r\n<p>---</p>\r\n<p>困了，回去洗洗睡觉。。。</p>\r\n<p> </p>\n ', '2016-04-28 20:05:11', '2016-04-28 20:17:20', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3127', '荒芜的周六-PHP之面向对象（三） ', '网络', '\n<p>　　hi　　</p>\r\n<p>又是开森的周六了。积攒的两周的衣服，终于是差不多洗完了。大下午的才来学点东西~~</p>\r\n<p><strong>1、PHP面向对象（三）</strong></p>\r\n<p><strong>四、OOP的高级实践</strong></p>\r\n<p><strong>4.3 Static-静态成员</strong></p>\r\n<p>&lt;?php<br>date_default_timezone_set(\"PRC\");<br>/**<br> * 1. 类的定义以class关键字开始，后面跟着这个类的名称。类的名称命名通常每个单词的第一个字母大写。<br> * 2. 定义类的属性<br> * 3. 定义类的方法<br> * 4. 实例化类的对象<br> * 5. 使用对象的属性和方法<br> */</p>\r\n<p>class Human{<br>	public $name;<br>	public $height;<br>	public $weight;<br><br>	public function eat($food){<br>		echo $this-&gt;name.\"\'s eating \".$food.\"&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class Animal{<br>	public $kind;<br>	public $gender;<br>}</p>\r\n<p><br>class NbaPlayer extends Human{<br>    // 类的属性的定义<br>    public $name=\"Jordan\";// 定义属性<br>    public $height=\"198cm\";<br>    public $weight=\"98kg\";<br>    public $team=\"Bull\";<br>    public $playerNumber=\"23\";<br>    private $age=\"44\";<br>    public $president=\"David Stern\";<br><br><br><br>    // 类的方法的定义<br>    public function changePresident($newP){<br>    	$this-&gt;president=$newP;<br>    }<br><br>    public function run() {<br>        echo \"Running&lt;br/&gt;\";<br>    }</p>\r\n<p>    public function jump(){<br>        echo \"Jumping&lt;br/&gt;\";<br>    }<br><br>    public function dribble(){<br>        echo \"Dribbling&lt;br/&gt;\";<br>    }<br><br>    public function shoot(){<br>        echo \"Shooting&lt;br/&gt;\";<br>    }<br><br>    public function dunk(){<br>        echo \"Dunking&lt;br/&gt;\";<br>    }<br><br>    public function pass(){<br>        echo \"Passing&lt;br/&gt;\";<br>    }<br><br>    public function getAge(){<br>    	echo $this-&gt;name.\"\'s age is \".$this-&gt;age;<br>    }<br><br>    function __construct($name, $height, $weight, $team, $playerNumber){<br>    	print $name . \";\" . $height . \";\" . $weight . \";\" . $team . \";\" . $playerNumber.\"\\n\";<br>    	$this-&gt;name = $name; // $this是php里面的伪变量，表示对象自身<br>    	$this-&gt;height = $height; // 通过$this可以设置对象的属性值<br>    	$this-&gt;weight = $weight;<br>    	$this-&gt;team = $team;<br>    	$this-&gt;playerNumber = $playerNumber;<br>    }<br><br>}</p>\r\n<p><br>/**<br> * 1. 类实例化为对象时使用new关键字，new之后紧跟类的名称和一对括号。<br> * 2. 使用对象可以像使用其他值一样进行赋值操作<br> */<br>$jordan = new NbaPlayer(\"Jordan\", \"198cm\",\"98kg\",\"Bull\",\"23\");echo \"&lt;br/&gt;\";<br>$james=new NbaPlayer(\"James\", \"203cm\", \"120kg\", \"Heat\", \"6\");echo \"&lt;br/&gt;\";<br>// 访问对象的属性使用的语法是-&gt;符号，后面跟着属性的名称<br>echo $jordan-&gt;name.\"&lt;br/&gt;\";<br>// 调用对象的某个方法使用的语法是-&gt;符号，后面跟着方法的名称和一对括号<br>$jordan-&gt;run();<br>$jordan-&gt;pass();<br>//子类调用父类的方法<br>$jordan-&gt;eat(\"apple\");<br>//试着调用private,直接以及通过内部的public函数<br>//$jordan-&gt;age;<br>$jordan-&gt;getAge();echo \"&lt;br/&gt;\";</p>\r\n<p>$jordan-&gt;changePresident(\"Adam Silver\");<br>echo $jordan-&gt;president.\"&lt;br/&gt;\";<br>echo $james-&gt;president.\"&lt;br/&gt;\";</p>\r\n<p> 直接从上述例子开始吧。</p>\r\n<p>这里想得到的是，<strong>把两位对象的某一个变量同时变掉。——用static</strong></p>\r\n<p><strong> public static $president=\"David Stern\";</strong><br><br>    // 类的方法的定义<br>    public <strong>static</strong> function changePresident($newP){<br><strong>static::$president=$newP;//这里static换成self更符合规范</strong><br>    }</p>\r\n<p>注意这里static的位置，以及，方法内的::</p>\r\n<p>调用的方法也有所变动。</p>\r\n<p>echo <strong>NbaPlayer::$president;</strong>echo \"&lt;br/&gt;\";<br><strong>NbaPlayer::changePresident(\"Adam Silver\");</strong><br>echo NbaPlayer::$president;echo \"&lt;br/&gt;\";</p>\r\n<p>也就是像之前说的，<strong>静态成员就是个常量，所以不针对某个具体的对象（不受具体对象的约束）</strong>——基于此，定义&amp;赋值&amp;调用都不需要具体的对象参与。</p>\r\n<p><strong>内部调用要用self/static::$...</strong></p>\r\n<p><strong>外部调用，类名::</strong></p>\r\n<p>用处就是所有的对象共用的数据。</p>\r\n<p><strong>--如果内部调用时，变量在父类中</strong></p>\r\n<p>比如说，在上述例子中，父类human中写这么一句话</p>\r\n<p>public static $aaa=\"dafdfa\";</p>\r\n<p>然后在子类nbaplayer中，调用父类的静态成员时，要</p>\r\n<p>echo <strong>parent::$aaa;</strong></p>\r\n<p>而外部调用，按照上面说的，类名::，所以，直接父类类名即可</p>\r\n<p>echo Human::$aaa;</p>\r\n<p>--其他</p>\r\n<p><strong>在静态方法中，是无法访问其他变量的，也就是说，不能用$this-&gt;</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 静态成员<br> * 1. 静态属性用于保存类的公有数据<br> * 2. 静态方法里面只能访问静态属性<br> * 3. 静态成员不需要实例化对象就可以访问<br> * 4. 类内部，可以通过self或者static关键字访问自身的静态成员<br> * 5. 可以通过parent关键字访问父类的静态成员<br> * 6. 可以通过类名称在外部访问类的静态成员<br> */</p>\r\n<p><strong>4.4 Final成员</strong></p>\r\n<p><strong>--问题</strong></p>\r\n<p>不希望某个类拥有子类；</p>\r\n<p>不希望子类修改父类中的某个变量（避免重写？）</p>\r\n<p><strong>--final</strong></p>\r\n<p>》=php5版本</p>\r\n<p>举个例子</p>\r\n<p>class BaseClass{<br>	public  function test(){<br>		echo \"BaseClass::test called&lt;br/&gt;\";<br>	}<br><br>	public function test1(){<br>		echo \"BaseClass::test1 called&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class  ChildClass extends BaseClass{<br>	public function test(){<br>		echo \"ChildClass::test called&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>$obj=new ChildClass();<br>$obj-&gt;test();</p>\r\n<p>子类中编写跟父类中完全一致的方法名（内容可以不同），会完成对父类方法的<strong>重写</strong>！</p>\r\n<p><strong> 所以，不希望被重写的父类中的方法，写上final</strong></p>\r\n<p><strong><strong>final </strong>public function test(){</strong></p>\r\n<p>依此类推，对于不想有子类的父类，在类名那里写上final</p>\r\n<p><strong>final class BaseClass{</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 重写和Final<br> * 1. 子类中编写跟父类完全一致的方法可以完成对父类方法的重写<br> * 2. 对于不想被任何类继承的类可以在class之前添加final关键字<br> * 3. 对于不想被子类重写（overwrite, 修改）的方法，可以在方法定义前面添加final关键字<br> */</p>\r\n<p><strong>4.5 数据访问</strong></p>\r\n<p>先把final都去掉</p>\r\n<p>--parent</p>\r\n<p>然后再子类中的方法中写</p>\r\n<p>parent::test();</p>\r\n<p>运行后会发现，依然可以<strong>通过parent的关键字调用父类中，即使是被重写的数据</strong></p>\r\n<p>--self</p>\r\n<p>然后在父类中的方法test中写</p>\r\n<p><span class=\"Apple-tab-span\"> self::test1();</span></p>\r\n<p>运行后，发现<strong>self可以调用同一个类中的数据（其他方法/静态变量/常量const）</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 数据访问补充<br> * 1. parent关键字可以用于调用父类被重写的类成员<br> * 2. self关键字可以用于访问类自身的成员方法，也可以用于访问自身的静态成员和类常量；不能用于访问类自身的属性；访问类常量时不用在常量名称前面加$符号<br> * 3. static关键字用于访问类自身定义的静态成员，访问静态属性时需要在属性名前面添加$符号<br> */</p>\r\n<p><strong>4.6 对象接口</strong></p>\r\n<p>非常重要！！！</p>\r\n<p><strong>--问题</strong></p>\r\n<p>不同的类，有着相同的行为，但相同的行为又有着不同的实现方法。</p>\r\n<p>比如人和动物都会吃东西，但吃的方式方法又不太一样。</p>\r\n<p>--定义</p>\r\n<p><strong>接口就是把不同类的共同行为进行了定义，然后在不同的类里面实现不同的功能。</strong></p>\r\n<p><strong>--栗子 </strong></p>\r\n<p>//定义一个接口<br><strong>interface ICanEat{</strong><br>	public function eat($food);<br>}</p>\r\n<p>可以看到，接口中并没有方法的具体实现，但必须有方法！</p>\r\n<p>那么，下面是，“人类会吃”</p>\r\n<p>//具体对象，连接到接口<br><strong>class Human implements ICanEat{</strong><br><br>	public function eat($food){<br>		echo \"Human eating \".$food.\".&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>$obj=new Human();<br>$obj-&gt;eat(\"shit\");</p>\r\n<p>请忽略我给出的“食物”。</p>\r\n<p>注意，<strong>不再用extends，而是implements。然后，同样是方法名的完全相同。然后，对象必须/最好实现方法。</strong></p>\r\n<p>继续</p>\r\n<p>interface ICanEat{<br>	public function eat($food);<br>}</p>\r\n<p>//具体对象，连接到接口<br>class Human implements ICanEat{<br>public function eat($food){<br>		echo \"Human eating \".$food.\".&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p>class Animal implements ICanEat{<br>    public function eat($food){<br>		echo \"Animal eating \".$food.\".&lt;br/&gt;\";<br>	}<br>}</p>\r\n<p><br>$obj=new Human();<br>$obj-&gt;eat(\"shit\");</p>\r\n<p>$monkey=new Animal();<br>$monkey-&gt;eat(\"banana\");</p>\r\n<p>让动物也吃起来！</p>\r\n<p><strong>--逆向操作</strong></p>\r\n<p>判断某个对象是否连接了某个接口。</p>\r\n<p>var_dump($obj<strong> instanceof</strong> ICanEat);</p>\r\n<p>会返回boolean值。</p>\r\n<p><strong>--更多的栗子</strong></p>\r\n<p><strong>interface ICanPee extends ICanEat{</strong><br>	public function pee();<br>}</p>\r\n<p>class Demon implements ICanPee{<br>	public function pee(){<br>		echo \"Can demon pee?\";<br>	}<br>	public function eat($food){<br>		echo \"Can demon eat \".$food;<br>	}<br>}</p>\r\n<p>$ghost=new Demon();<br>$ghost-&gt;pee();<br>$ghost-&gt;eat(\"shit\");</p>\r\n<p><strong>接口本质上也是类，可以被继承/继承，但是使用继承接口的接口，所有父类、“爷类”的方法都要有具体实现。</strong></p>\r\n<p><strong>--小结</strong></p>\r\n<p>/**<br> * 接口<br> * 1. 接口的基本概念和基本使用方法<br> * 2. 接口里面的方法没有具体的实现<br> * 3. 实现了某个接口的类必须提供接口中定义的方法<br> * 4. 不能用接口创建对象，但是能够判断某个对象是否实现了某个接口<br> * 5. 接口可以继承接口（interface extends interface）<br> * 6. 接口中定义的所有方法都必须是公有，这是接口的特性。<br> */</p>\r\n<p> </p>\r\n<p>aaaaaaaaaaaaaa</p>\r\n<p>bu xiang xie le....................</p>\r\n<p>ming tian yao ge ..............</p>\r\n<p> </p>\n ', '2016-04-28 20:05:11', '2016-04-28 20:17:18', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3128', '周五了啦啦啦啦-LAMP+PHP‘s OOP ', '网络', '\n<p>　　hi</p>\r\n<p>周五咯~~</p>\r\n<p><strong>1、LAMP配置完结篇</strong></p>\r\n<p><strong>五、LAMP配置环境优化</strong></p>\r\n<p><strong>5.4 虚拟主机工作原理</strong></p>\r\n<p>apache的虚拟主机。virtual-host</p>\r\n<p>用不同的域名访问不同的目录——手动模拟dns</p>\r\n<p>修改host文件即可实现。具体就是主机地址 域名</p>\r\n<p><strong>复习</strong></p>\r\n<p>liang@liang-andy:~$ sudo apt-get install apache2</p>\r\n<p>liang@liang-andy:~$ sudo apt-get install php5<br>然后加载/检查php5.load这个php实现对apache2操作的模块<strong>（LAMP的互相，就是模块的启动/连接）</strong><br>liang@liang-andy:~$ cat /etc/apache2/mods-enabled/php5.load<br>liang@liang-andy:~$ sudo apt-get install mysql-server</p>\r\n<p>sudo apt-get install apache2 php5 mysql-server php5-mysql</p>\r\n<p>liang@liang-andy:~$ sudo service mysql restart<br>liang@liang-andy:~$ sudo service apache2 restart</p>\r\n<p>----创建phpinfo探针</p>\r\n<p>先装vim</p>\r\n<p>sudo apt-get install vim</p>\r\n<p>再切换到php的www文件夹，用cd命令</p>\r\n<p>cd /var/www/html（14.4版本）</p>\r\n<p>然后在这里创建一个php文件</p>\r\n<p>sudo vim info.php</p>\r\n<p>写php代码</p>\r\n<p>&lt;?php<br>echo mysql_connect(\'localhost\',\'root\',\'hanhan123\') ? \'Hoho\' : \'WTF\';<br><br>phpinfo();<br>然后esc键，输入:wq保存退出</p>\r\n<p>http://192.168.1.100/info.php 浏览器输入验证结果</p>\r\n<p><strong>复习结束</strong></p>\r\n<p><strong>5.5 安装phpmyadmin</strong></p>\r\n<p>--</p>\r\n<p><strong>apt-get命令</strong></p>\r\n<p>sudo apt-get install phpmyadmin</p>\r\n<p>sudo ln -s /usr/share/phpmyadmin/ /var/www/pma</p>\r\n<p><strong> 六、服务器集群了解</strong></p>\r\n<p>国内外有很多著名的巨型服务器集群。</p>\r\n<p>用于同时处理大批量的请求</p>\r\n<p>-----------------------------------</p>\r\n<p><strong>2、PHP的OOP编程</strong></p>\r\n<p><strong>四、OOP的高级实践</strong></p>\r\n<p><strong>程序准备</strong></p>\r\n<p>&lt;?php<br>date_default_timezone_set(\"PRC\");<br>/**<br> * 1. 类的定义以class关键字开始，后面跟着这个类的名称。类的名称命名通常每个单词的第一个字母大写。<br> * 2. 定义类的属性<br> * 3. 定义类的方法<br> * 4. 实例化类的对象<br> * 5. 使用对象的属性和方法<br> */<br>class NbaPlayer<br>{<br>    // 类的属性的定义<br>    public $name=\"Jordan\";// 定义属性<br>    public $height=\"198cm\";<br>    public $weight=\"98kg\";<br>    public $team=\"Bull\";<br>    public $playerNumber=\"23\";</p>\r\n<p>    // 类的方法的定义<br>    public function run() {<br>        echo \"Running\\n\";<br>    }</p>\r\n<p>    public function jump(){<br>        echo \"Jumping\\n\";<br>    }<br>    public function dribble(){<br>        echo \"Dribbling\\n\";<br>    }<br>    public function shoot(){<br>        echo \"Shooting\\n\";<br>    }<br>    public function dunk(){<br>        echo \"Dunking\\n\";<br>    }<br>    public function pass(){<br>        echo \"Passing\\n\";<br>    }<br>}</p>\r\n<p>/**<br> * 1. 类实例化为对象时使用new关键字，new之后紧跟类的名称和一对括号。<br> * 2. 使用对象可以像使用其他值一样进行赋值操作<br> */<br>$jordan = new NbaPlayer();<br>// 访问对象的属性使用的语法是-&gt;符号，后面跟着属性的名称<br>echo $jordan-&gt;name.\"\\n\";<br>// 调用对象的某个方法使用的语法是-&gt;符号，后面跟着方法的名称和一对括号<br>$jordan-&gt;run();<br>$jordan-&gt;pass();</p>\r\n<p>?&gt;</p>\r\n<p><strong> 4.1 继承</strong></p>\r\n<p>也就是对象相似的部分，可以多处使用——避免代码冗余，开发效率提高。</p>\r\n<p>优点：父类中定义的了，子类中无需再次定义——效率高；对于外部，表现一致（父类是一样的）；重写，来修改子类。</p>\r\n<p>举个栗子</p>\r\n<p>class Human{<br>	public $name;<br>	public $height;<br>	public $weight;<br><br>	public function eat($food){<br>		echo $this-&gt;name.\"\'s eating\".$food.\"\\n\";<br>	}<br>}</p>\r\n<p>人类作为父类，然后nba球员作为子类</p>\r\n<p><strong>class NbaPlayer extends Human{</strong></p>\r\n<p>试着直接通过子类调用父类中的function</p>\r\n<p>$jordan-&gt;eat(\"apple\");</p>\r\n<p>输出</p>\r\n<p>Jordan\'s eating apple</p>\r\n<p>没有问题！<strong>子类是可以直接调用父类的属性和方法的！！（在子类的对象上可以直接访问父类中定义的方法和属性）</strong></p>\r\n<p>毕竟从它的意思来看，子类就是父类的延伸。</p>\r\n<p>另外，<strong>父类中的属性可以在子类中进行访问（实际上，简单的理解就是，所有的子类都是大于等于父类的对象，想象一下文氏图）</strong></p>\r\n<p>类的继承，用extends，<strong>只能跟一个“爸爸”——php的单继承原则</strong></p>\r\n<p><strong>4.2 访问控制</strong></p>\r\n<p>所有的属性和方法都有访问权限的选择——选择可以被谁访问</p>\r\n<p><strong>public：公有，任何地方</strong></p>\r\n<p><strong>protected：受保护的，被自身以及其子类</strong></p>\r\n<p><strong>private：私有，只能被自身访问</strong></p>\r\n<p>举个private的栗子</p>\r\n<p>在Nbaplayer这个子类中，新增加定义</p>\r\n<p>    private $age=\"44\";</p>\r\n<p> public function getAge(){<br>    	echo $this-&gt;name.\"\'s age is \".$this-&gt;age;<br>    }</p>\r\n<p>//试着调用private,直接以及通过内部的public函数<br>//$jordan-&gt;age;<br>$jordan-&gt;getAge();</p>\r\n<p>然后，<strong>关于protected，范围紧紧的限制在了父类中和子类中，也就是说，出了子类的定义那个大括号就失效了！</strong></p>\r\n<p><strong>4.3 静态成员</strong></p>\r\n<p>可以简单的理解为常量（？）</p>\r\n<p>static</p>\r\n<p> </p>\r\n<p> </p>\r\n<p>bu xiang xie le </p>\r\n<p> </p>\n ', '2016-04-28 20:05:11', '2016-04-28 20:17:16', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3129', '敲-PHP与MySQL，JSON ', '网络', '\n<p>hi</p>\r\n<p>敲代码~</p>\r\n<p><strong>1、php与mysql</strong></p>\r\n<p><strong>5.4 修改界面</strong></p>\r\n<p>同样是界面和程序。</p>\r\n<p><strong>界面article.modify.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	//读取旧信息<br>	$id = $_GET[\'id\'];<br>	$query = mysqli_query($con,\"select * from article where id=$id\");<br>	$data = mysqli_fetch_assoc($query);<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"213\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;      &lt;a href=\"article.add.php\"&gt;&lt;/a&gt;&lt;/td&gt;<br>    &lt;td width=\"854\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;&lt;form id=\"form1\" name=\"form1\" method=\"post\" action=\"article.modify.handle.php\"&gt;<br>    	&lt;input type=\"hidden\" name=\"id\" value=\"&lt;?php echo $data[\'id\']?&gt;\" /&gt;<br>      &lt;table width=\"590\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\"&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"center\"&gt;修改文章&lt;/td&gt;<br>          &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td width=\"119\"&gt;标题&lt;/td&gt;<br>          &lt;td width=\"437\"&gt;&lt;label for=\"title\"&gt;&lt;/label&gt;<br>            &lt;input type=\"text\" name=\"title\" id=\"title\" value=\"&lt;?php echo $data[\'title\']?&gt;\"/&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;作者&lt;/td&gt;<br>          &lt;td&gt;&lt;input type=\"text\" name=\"author\" id=\"author\"  value=\"&lt;?php echo $data[\'author\']?&gt;\"/&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;简介&lt;/td&gt;<br>          &lt;td&gt;&lt;label for=\"description\"&gt;&lt;/label&gt;<br>            &lt;textarea name=\"description\" id=\"description\" cols=\"60\" rows=\"5\"&gt;&lt;?php echo $data[\'description\']?&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;内容&lt;/td&gt;<br>          &lt;td&gt;&lt;textarea name=\"content\" cols=\"60\" rows=\"20\" id=\"content\"&gt;&lt;?php echo $data[\'content\']?&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"right\"&gt;&lt;input type=\"submit\" name=\"button\" id=\"button\" value=\"提交\" /&gt;&lt;/td&gt;<br>          &lt;/tr&gt;<br>      &lt;/table&gt;<br>    &lt;/form&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>关键点在于php的读取，以及在html中value的php调用。</p>\r\n<p><strong>修改程序article.modify.handle.php</strong></p>\r\n<p>&lt;?php <br>//和数据库有关的，无条件写上这么一句话<br>	require_once(\'../connect.php\');<br><br>	//接受修改后的数据（表单传递）<br>	$id = $_POST[\'id\'];<br>	$title = $_POST[\'title\'];<br>	$author = $_POST[\'author\'];<br>	$description = $_POST[\'description\'];<br>	$content = $_POST[\'content\'];<br>	$dateline =  time();<br><br>	//写sql修改语句，并做成功与否的判断，并跳回修改界面<br>	$updatesql = \"update article set title=\'$title\',author=\'$author\',description=\'$description\',content=\'$content\',dateline=$dateline where id=$id\";<br>	if(mysqli_query($con,$updatesql)){<br>		echo \"&lt;script&gt;alert(\'修改文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'修改文章失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p><strong>5.5 文章删除</strong></p>\r\n<p>先做需求的分析：同上面几个略有区别，<strong>删除文章不需要界面，只需要一个删除按钮来掉要就行了</strong>。所以只有一个文件。而关键的sql语句只有一句</p>\r\n<p><strong>$delsql=\"delete from article where id=$id\";</strong></p>\r\n<p><strong>aritcle.del.handle.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');</p>\r\n<p>//读取id号。不像其他的是有传递值的<br>	$id = $_GET[\'id\'];<br>	$deletesql = \"delete from article where id=$id\";<br>	if(mysql_query($deletesql)){<br>		echo \"&lt;script&gt;alert(\'删除文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'删除文章失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p><strong>5.6 文章管理列表</strong></p>\r\n<p>需求分析：列表显示出所有的文章，然后后面有两个按钮，删除（链接至上一节的删除模块）和修改（链接至之前的模块）</p>\r\n<p>所以，只需要一个文件，显示模块就好</p>\r\n<p><strong>article.manage.php</strong></p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	$sql = \"select * from article order by dateline desc\";<br>	$query  = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row =mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}else{<br>		$data = array();<br>	}</p>\r\n<p>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"156\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;&lt;/td&gt;<br>    &lt;td width=\"837\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;&lt;table width=\"743\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>      &lt;tr&gt;<br>        &lt;td colspan=\"3\" align=\"center\" bgcolor=\"#FFFFFF\"&gt;文章管理列表&lt;/td&gt;<br>        &lt;/tr&gt;<br>      &lt;tr&gt;<br>        &lt;td width=\"37\" bgcolor=\"#FFFFFF\"&gt;编号&lt;/td&gt;<br>        &lt;td width=\"572\" bgcolor=\"#FFFFFF\"&gt;标题&lt;/td&gt;<br>        &lt;td width=\"82\" bgcolor=\"#FFFFFF\"&gt;操作&lt;/td&gt;<br>      &lt;/tr&gt;<br>	&lt;?php <br>		if(!empty($data)){<br>			foreach($data as $value){<br>	?&gt;<br>      &lt;tr&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&amp;nbsp;&lt;?php echo $value[\'id\']?&gt;&lt;/td&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&amp;nbsp;&lt;?php echo $value[\'title\']?&gt;&lt;/td&gt;<br>        &lt;td bgcolor=\"#FFFFFF\"&gt;&lt;a href=\"article.del.handle.php?id=&lt;?php echo $value[\'id\']?&gt;\"&gt;删除&lt;/a&gt; &lt;a href=\"article.modify.php?id=&lt;?php echo $value[\'id\']?&gt;\"&gt;修改&lt;/a&gt;&lt;/td&gt;<br>      &lt;/tr&gt;<br>    &lt;/table&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>5.7 函数总结</strong></p>\r\n<p>mysqli_connect()</p>\r\n<p>mysqli_select_db()</p>\r\n<p>mysqli_query()</p>\r\n<p>mysqli_error()</p>\r\n<p>mysqli_fetch_assoc()</p>\r\n<p>mysqli_num_rows()</p>\r\n<p><strong>六、前台管理界面的开发</strong></p>\r\n<p><strong>6.1 文章列表</strong></p>\r\n<p><strong>article.list.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from article order by dateline desc\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row = mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>	&lt;?php<br>		if(empty($data)){	<br>			echo \"当前没有文章，请管理员在后台添加文章\";<br>		}else{<br>			foreach($data as $value){<br>	?&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;?php echo $value[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $value[\'author\']?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $value[\'description\']?&gt;<br>			&lt;/div&gt;<br>			&lt;div class=\"meta\"&gt;<br>				&lt;p class=\"links\"&gt;&lt;a href=\"article.show.php?id=&lt;?php echo $value[\'id\']?&gt;\" class=\"more\"&gt;查看详细&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;raquo;&amp;nbsp;&amp;nbsp;&lt;/p&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;?php<br>			}<br>		}<br>	?&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"article.search.php\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"key\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.2 文章详情页</strong></p>\r\n<p><strong>article.show.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$id = intval($_GET[\'id\']);<br>	$sql = \"select * from article where id=$id\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		$row = mysqli_fetch_assoc($query);<br>	}else{<br>		echo \"这篇文章不存在\";<br>		exit;<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"#\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"#\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"#\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;!--文章标题放置到这里--&gt;&lt;?php echo $row[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $row[\'author\'];?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;!--文章内容放置到这里--&gt;<br>				&lt;?php echo $row[\'content\']?&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.3 检索</strong></p>\r\n<p>article.search.php</p>\r\n<p>这里的查询的是根据题目来查询。</p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$key = $_GET[\'key\'];<br>	$sql = \"select * from article where title like \'%$key%\' order by dateline desc\";<br>	$query = mysqli_query($con,$sql);<br>	if($query&amp;&amp;mysqli_num_rows($query)){<br>		while($row = mysqli_fetch_assoc($query)){<br>			$data[] = $row;<br>		}<br>	}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br>	&lt;?php<br>		if(empty($data)){	<br>			echo \"当前没有文章，请管理员在后台添加文章\";<br>		}else{<br>			foreach($data as $value){<br>	?&gt;<br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;&lt;?php echo $value[\'title\']?&gt;&lt;span style=\"color:#ccc;font-size:14px;\"&gt;　　作者：&lt;!--作者放置到这里--&gt;&lt;?php echo $value[\'author\']?&gt;&lt;/span&gt;&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $value[\'description\']?&gt;<br>			&lt;/div&gt;<br>			&lt;div class=\"meta\"&gt;<br>				&lt;p class=\"links\"&gt;&lt;a href=\"article.show.php?id=&lt;?php echo $value[\'id\']?&gt;\" class=\"more\"&gt;查看详细&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;raquo;&amp;nbsp;&amp;nbsp;&lt;/p&gt;<br>			&lt;/div&gt;<br>		&lt;/div&gt;<br>	&lt;?php<br>			}<br>		}<br>	?&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>6.4 关于我们和联系我们</strong></p>\r\n<p><strong>about.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from  introduce\";<br>	$query = mysqli_query($con,$sql);<br>	//if($query&amp;&amp;mysqli_num_rows($query)){<br>		$about = \"啦啦啦\";<br>	//}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br><br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;关于我们&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $about?&gt;<br>			&lt;/div&gt;<br><br>		&lt;/div&gt;<br><br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;<br>	&lt;p id=\"legal\"&gt;&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p><strong>contact.php</strong></p>\r\n<p>&lt;?php <br>	require_once(\'connect.php\');<br>	$sql = \"select * from  introduce\";<br>	$query = mysqli_query($con,$sql);<br>	//$arr=mysqli_fetch_array($query, MYSQL_ASSOC);<br>	//if($query&amp;&amp;mysqli_num_rows($query)){<br>		$contact = \"asdfadf\";<br>	//}<br>?&gt;<br>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;文章发布系统&lt;/title&gt;<br>&lt;meta name=\"keywords\" content=\"\" /&gt;<br>&lt;meta name=\"description\" content=\"\" /&gt;<br>&lt;link href=\"default.css\" rel=\"stylesheet\" type=\"text/css\" /&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;div id=\"wrapper\"&gt;<br>&lt;!-- start header --&gt;<br>&lt;div id=\"header\"&gt;<br>	&lt;div id=\"logo\"&gt;<br>		&lt;h1&gt;&lt;a href=\"#\"&gt;php与mysql&lt;sup&gt;&lt;/sup&gt;&lt;/a&gt;&lt;/h1&gt;<br>		&lt;h2&gt;&lt;/h2&gt;<br>	&lt;/div&gt;<br>	&lt;div id=\"menu\"&gt;<br>		&lt;ul&gt;<br>			&lt;li class=\"active\"&gt;&lt;a href=\"article.list.php\"&gt;文章&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"about.php\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;<br>			&lt;li&gt;&lt;a href=\"contact.php\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end header --&gt;<br>&lt;/div&gt;</p>\r\n<p>&lt;!-- start page --&gt;<br>&lt;div id=\"page\"&gt;<br>	&lt;!-- start content --&gt;<br>	&lt;div id=\"content\"&gt;<br><br>		&lt;div class=\"post\"&gt;<br>			&lt;h1 class=\"title\"&gt;联系我们&lt;/h1&gt;<br>			&lt;div class=\"entry\"&gt;<br>				&lt;?php echo $contact?&gt;<br>			&lt;/div&gt;<br><br>		&lt;/div&gt;<br><br>	&lt;/div&gt;<br>	&lt;!-- end content --&gt;<br>	&lt;!-- start sidebar --&gt;<br>	&lt;div id=\"sidebar\"&gt;<br>		&lt;ul&gt;<br>			&lt;li id=\"search\"&gt;<br>				&lt;h2&gt;&lt;b class=\"text1\"&gt;Search&lt;/b&gt;&lt;/h2&gt;<br>				&lt;form method=\"get\" action=\"\"&gt;<br>					&lt;fieldset&gt;<br>					&lt;input type=\"text\" id=\"s\" name=\"s\" value=\"\" /&gt;<br>					&lt;input type=\"submit\" id=\"x\" value=\"Search\" /&gt;<br>					&lt;/fieldset&gt;<br>				&lt;/form&gt;<br>			&lt;/li&gt;<br>		&lt;/ul&gt;<br>	&lt;/div&gt;<br>	&lt;!-- end sidebar --&gt;<br>	&lt;div style=\"clear: both;\"&gt;&amp;nbsp;&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- end page --&gt;<br>&lt;!-- start footer --&gt;<br>&lt;div id=\"footer\"&gt;</p>\r\n<p>&lt;/div&gt;<br>&lt;!-- end footer --&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p> ------------------------------------------</p>\r\n<p><strong>2、JSON基础</strong></p>\r\n<p><strong>1.2 JSON的使用</strong></p>\r\n<p>--<strong>JSON与serialize</strong>数据格式的异同和使用</p>\r\n<p>相同点：把其他数据类型转换为一个可以传输的字符串；都是结构性数据；</p>\r\n<p>不同点：s序列化之后，保存数据原有类型——适用于存储带有加密方式的数据串；JSON更简洁——适合数据量大，不要求数据类型保存的情况</p>\r\n<p>举个栗子</p>\r\n<p>&lt;?php<br>//输出模块<br>function createHtmlTag($tag=\"\"){<br>	echo \"&lt;h1&gt;$tag&lt;/h1&gt;&lt;br/&gt;\";<br>}<br>createHtmlTag(\"Hello!\");<br>createHtmlTag(\"JSON和serialize的对比\");</p>\r\n<p>//测试用数组<br>$member=array(\"username\",\"age\");<br>var_dump($member);</p>\r\n<p><br>$jsonObj=json_encode($member);</p>\r\n<p>$serializeObj=serialize($member);</p>\r\n<p>createHtmlTag($jsonObj);<br>createHtmlTag($serializeObj);</p>\r\n<p>结果</p>\r\n<h1>Hello!</h1>\r\n<p> </p>\r\n<h1>JSON和serialize的对比</h1>\r\n<p> </p>\r\n<pre class=\"xdebug-var-dump\"><strong>array</strong> <em>(size=2)</em>\r\n  0 <span style=\"color: #888a85;\">=&gt;</span> </pre>\r\n<p><small>string</small></p>\r\n<pre class=\"xdebug-var-dump\"> <span style=\"color: #cc0000;\">\'username\'</span> <em>(length=8)</em>\r\n  1 <span style=\"color: #888a85;\">=&gt;</span> </pre>\r\n<p><small>string</small></p>\r\n<pre class=\"xdebug-var-dump\"> <span style=\"color: #cc0000;\">\'age\'</span> <em>(length=3)</em>\r\n</pre>\r\n<h1>[\"username\",\"age\"]</h1>\r\n<p> </p>\r\n<h1>a:2:{i:0;s:8:\"username\";i:1;s:3:\"age\";}</h1>\r\n<p><strong>--常用JSON函数</strong></p>\r\n<p>json_encode()——JSON加密</p>\r\n<p>json_decode()——解密</p>\r\n<p><strong>1.3 JSON实例讲解</strong></p>\r\n<p> </p>\n ', '2016-04-28 20:05:11', '2016-04-28 20:17:13', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3130', '挤点时间写博客-php&MySQL实践 ', '网络', '\n<p>　　hi</p>\r\n<p>晚上要吃火锅的嘛，挤点时间写点东西吧，别被老板发现哦</p>\r\n<p>1、PHP与MySQL</p>\r\n<p><strong>五、文章发布系统之后台</strong></p>\r\n<p><strong>5.2 创建配置文件和初始化文件</strong></p>\r\n<p>为了统一配置以及管理方便，还有就是减少代码的冗余。</p>\r\n<p>分别为config.php和connect.php</p>\r\n<p><strong>config.php</strong></p>\r\n<p>&lt;?php<br>/*<br> * 配置文件<br> */<br>//配置数据库的相关信息<br>//由于是常量，直接用define<br>define(\'HOST\', \'127.0.0.1\');<br>define(\'USERNAME\', \'root\');<br>define(\'PASSWORD\', \'\');</p>\r\n<p> </p>\r\n<p><strong>connect.php</strong></p>\r\n<p>&lt;?php<br>/*<br> * 链接到数据库的文件<br> * 主要是链接到数据库服务器，然后选择数据库。<br> * 特殊的是设置字符集。<br> * 然后希望对每个操作进行判断<br> */</p>\r\n<p> </p>\r\n<p>//包含配置文件<br>require_once \'config.php\';</p>\r\n<p>//连库<br>if(!$con=mysqli_connect(HOST,USERNAME,PASSWORD)){<br>	echo mysqli_error($con);<br>}</p>\r\n<p>//选库<br>if(mysqli_select_db($con, \'info\')){<br>	echo mysqli_error($con);<br>}</p>\r\n<p>//字符集<br>if(mysqli_query($con,\'set names utf8\')){<br>	echo mysqli_error($con);<br>}</p>\r\n<p>完成后测试一下链接文件就ok了。这里的mysqli和mysql都可以，只要格式正确就行。</p>\r\n<p><strong>5.3 发布文章</strong></p>\r\n<p><strong>文章发布界面article.add.php</strong></p>\r\n<p>&lt;!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"&gt;<br>&lt;html xmlns=\"http://www.w3.org/1999/xhtml\"&gt;<br>&lt;head&gt;<br>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /&gt;<br>&lt;title&gt;无标题文档&lt;/title&gt;<br>&lt;style type=\"text/css\"&gt;<br>body {<br>	margin-left: 0px;<br>	margin-top: 0px;<br>	margin-right: 0px;<br>	margin-bottom: 0px;<br>}<br>&lt;/style&gt;<br>&lt;/head&gt;</p>\r\n<p>&lt;body&gt;<br>&lt;table width=\"100%\" height=\"520\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\" bgcolor=\"#000000\"&gt;<br>  &lt;tr&gt;<br>    &lt;td height=\"89\" colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;后台管理系统&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td width=\"156\" height=\"287\" align=\"left\" valign=\"top\" bgcolor=\"#FFFF99\"&gt;&lt;p&gt;&lt;a href=\"article.add.php\"&gt;发布文章&lt;/a&gt;&lt;/p&gt;<br>    &lt;p&gt;&lt;a href=\"article.manage.php\"&gt;管理文章&lt;/a&gt;&lt;/p&gt;      &lt;a href=\"article.add.php\"&gt;&lt;/a&gt;&lt;/td&gt;<br>    &lt;td width=\"837\" valign=\"top\" bgcolor=\"#FFFFFF\"&gt;<br>    &lt;form id=\"form1\" name=\"form1\" method=\"post\" action=\"article.add.handle.php\"&gt;<br>      &lt;table width=\"779\" border=\"0\" cellpadding=\"8\" cellspacing=\"1\"&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"center\"&gt;发布文章&lt;/td&gt;<br>          &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td width=\"119\"&gt;标题&lt;/td&gt;<br>          &lt;td width=\"625\"&gt;&lt;label for=\"title\"&gt;&lt;/label&gt;<br>            &lt;input type=\"text\" name=\"title\" id=\"title\" /&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;作者&lt;/td&gt;<br>          &lt;td&gt;&lt;input type=\"text\" name=\"author\" id=\"author\" /&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;简介&lt;/td&gt;<br>          &lt;td&gt;&lt;label for=\"description\"&gt;&lt;/label&gt;<br>            &lt;textarea name=\"description\" id=\"description\" cols=\"60\" rows=\"5\"&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td&gt;内容&lt;/td&gt;<br>          &lt;td&gt;&lt;textarea name=\"content\" cols=\"60\" rows=\"15\" id=\"content\"&gt;&lt;/textarea&gt;&lt;/td&gt;<br>        &lt;/tr&gt;<br>        &lt;tr&gt;<br>          &lt;td colspan=\"2\" align=\"right\"&gt;&lt;input type=\"submit\" name=\"button\" id=\"button\" value=\"提交\" /&gt;&lt;/td&gt;<br>          &lt;/tr&gt;<br>      &lt;/table&gt;<br>    &lt;/form&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>  &lt;tr&gt;<br>    &lt;td colspan=\"2\" bgcolor=\"#FFFF99\"&gt;&lt;strong&gt;版权所有&lt;/strong&gt;&lt;/td&gt;<br>  &lt;/tr&gt;<br>&lt;/table&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p>\r\n<p>不是很漂亮就是了，学习嘛</p>\r\n<p> </p>\r\n<p>文章发布处理程序article.add.handle.php</p>\r\n<p>&lt;?php<br>	require_once(\'../connect.php\');<br>	//把传递过来的信息入库,在入库之前对所有的信息进行校验。<br>	if(!(isset($_POST[\'title\'])&amp;&amp;(!empty($_POST[\'title\'])))){<br>		echo \"&lt;script&gt;alert(\'标题不能为空\');window.location.href=\'article.add.php\';&lt;/script&gt;\";<br>	}<br>	$title = $_POST[\'title\'];<br>	$author = $_POST[\'author\'];<br>	$description = $_POST[\'description\'];<br>	$content = $_POST[\'content\'];<br>	$dateline =  time();<br>	$insertsql = \"insert into article(title, author, description, content, dateline) values(\'$title\', \'$author\', \'$description\', \'$content\', $dateline)\";<br>	if(mysqli_query($con,$insertsql)){<br>		echo \"&lt;script&gt;alert(\'发布文章成功\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}else{<br>		echo \"&lt;script&gt;alert(\'发布失败\');window.location.href=\'article.manage.php\';&lt;/script&gt;\";<br>	}<br>?&gt;</p>\r\n<p>注意两者的功能和连接，就是add页面把东西传给handle处理</p>\r\n<p> ------------------------</p>\r\n<p>由于我遇到了前所未见的乱码问题。。。跪着解决中。。。。望大家不吝赐教（wamp环境，mysql，zend，浏览器都已经设置为utf8，apache配置文件中添加了AddDefaultCharset UTF-8，问题依然存在，我晕啊。。。。）</p>\n ', '2016-04-28 20:05:11', '2016-04-28 20:17:10', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3131', '突然发现这周有点忙。。着玩-PHP进阶 ', '网络', '\n<p>　　hi</p>\r\n<p>周二才，不过我突然意识到这周有点忙着玩的感觉，还是很期待的——今天下午去市里，晚上回来看电影，明晚聚餐吃火锅，后天下午拍短片，晚上可能要打球，周五，嗯，就到周五了。虽然这样下去连怎么写（bian）周报都不知道，但还是来做这个的好。</p>\r\n<p><strong>1、PHP进阶完结篇</strong></p>\r\n<p><strong>十一、数据库操作</strong></p>\r\n<p><strong>11.1 PHP支持哪些数据库</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP通过安装相应的扩展来实现数据库操作，现代应用程序的设计离不开数据库的应用，当前主流的数据库有MsSQL，MySQL，Sybase，Db2，Oracle，PostgreSQL，Access等，这些数据库PHP都能够安装扩展来支持，一般情况下常说的LAMP架构指的是：Linux、Apache、Mysql、PHP，因此Mysql数据库在PHP中的应用非常广泛，我们会在本章中简单的了解Mysql的操作方法。</p>\r\n</div>\r\n</div>\r\n<p><strong>11.2 数据库扩展</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP中一个数据库可能有一个或者多个扩展，其中既有官方的，也有第三方提供的。像Mysql常用的扩展有原生的mysql库，也可以使用增强版的mysqli扩展，还可以使用PDO进行连接与操作。</p>\r\n<p>不同的扩展提供基本相近的操作方法，不同的是可能具备一些新特性，以及操作性能可能会有所不同。</p>\r\n<p>mysql扩展进行数据库连接的方法：</p>\r\n<pre class=\"code\">$link = mysql_connect(\'mysql_host\', \'mysql_user\', \'mysql_password\');</pre>\r\n<p>mysqli扩展：</p>\r\n<pre class=\"code\">$link = mysqli_connect(\'mysql_host\', \'mysql_user\', \'mysql_password\');</pre>\r\n<p>PDO扩展</p>\r\n<pre class=\"code\">$dsn = \'mysql:dbname=testdb;host=127.0.0.1\';\r\n$user = \'dbuser\';\r\n$password = \'dbpass\';\r\n$dbh = new PDO($dsn, $user, $password);</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>$link = mysql_connect(\'127.0.0.1\', \'code1\', \'\') or die(\'数据库连接失败\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>$result = mysql_query(\'select * from user limit 1\');<br>$row = mysql_fetch_assoc($result);<br>print_r($row);</p>\r\n<p><strong>11.3 连接MySQL数据库</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>PHP要对数据库进行操作，首先要做的是与数据库建立连接，通常我们使用mysql_connect函数进行数据库连接，该函数需要指定数据库的地址，用户名及密码。</p>\r\n<pre class=\"code\">$host = \'localhost\';\r\n$user = \'code1\';\r\n$pass = \'\';\r\n$link = mysql_connect($host, $user, $pass);</pre>\r\n<p>PHP连接数据库的方式类似于直接在命令行下通过进行连接，类似：<code class=\"marker\">mysql -hlocalhost -ucode1 -p</code>，当连接成功以后，我们需要选择一个操作的数据库，通过mysql_select_db函数来选择数据库。</p>\r\n<pre class=\"code\">mysql_select_db(\'code1\');</pre>\r\n<p>通常我们会先设置一下当前连接使用的字符编码，一般的我们会使用utf8编码。</p>\r\n<pre class=\"code\">mysql_query(\"set names \'utf8\'\");</pre>\r\n<p>通过上面的步骤，我们就与数据库建立了连接，可以进行数据操作了。</p>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>$host = \'127.0.0.1\';<br>$user = \'code1\';<br>$pass = \'\';<br>//在这里编写数据库连接代码<br>mysql_connect($host,$user,$pass);<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");</p>\r\n<p><strong> 11.4 执行MySQL查询</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>在数据库建立连接以后就可以进行查询，采用mysql_query加sql语句的形式向数据库发送查询指令。</p>\r\n<pre class=\"code\">$res = mysql_query(\'select * from user limit 1\');</pre>\r\n<p>对于查询类的语句会返回一个资源句柄（resource），可以通过该资源获取查询结果集中的数据。</p>\r\n<pre class=\"code\">$row = mysql_fetch_array($res);\r\nvar_dump($row);</pre>\r\n<p>默认的，PHP使用最近的数据库连接执行查询，但如果存在多个连接的情况，则可以通过参数指令从那个连接中进行查询。</p>\r\n<pre class=\"code\">$link1 = mysql_connect(\'127.0.0.1\', \'code1\', \'\');\r\n$link2 = mysql_connect(\'127.0.0.1\', \'code1\', \'\', true); //开启一个新的连接\r\n$res = mysql_query(\'select * from user limit 1\', $link1); //从第一个连接中查询数据</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//在这里进行数据查询<br>$arr=mysql_query(\"select * from user limit 1\");<br>$row=mysql_fetch_row($arr);<br>print_r($row);<br>echo $row[0];</p>\r\n<p>11.5 插入新数据到MySQL中</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>当我们了解了如何使用mysql_query进行数据查询以后，那么类似的，插入数据其实也是通过执行一个sql语句来实现，例如：</p>\r\n<pre class=\"code\">$sql = \"insert into user(name, age, class) values(\'李四\', 18, \'高三一班\')\";\r\nmysql_query($sql); //执行插入语句</pre>\r\n<p>通常数据都是存储在变量或者数组中，因此sql语句需要先进行字符串拼接得到。</p>\r\n<pre class=\"code\">$name = \'李四\';\r\n$age = 18;\r\n$class = \'高三一班\';\r\n$sql = \"insert into user(name, age, class) values(\'$name\', \'$age\', \'$class\')\";\r\nmysql_query($sql); //执行插入语句</pre>\r\n<p>在mysql中，执行插入语句以后，可以得到自增的主键id,通过PHP的mysql_insert_id函数可以获取该id。</p>\r\n<pre class=\"code\">$uid = mysql_insert_id();</pre>\r\n<p>这个id的作用非常大，通常可以用来判断是否插入成功，或者作为关联ID进行其他的数据操作。</p>\r\n</div>\r\n</div>\r\n<p><strong>11.6 取得数据查询结果</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>通过前面的章节，我们发现PHP操作数据库跟MySql客户端上操作极为相似，先进行连接，然后执行sql语句，再然后获取我们想要的结果集。</p>\r\n<p>PHP有多个函数可以获取数据集中的一行数据，最常用的是mysql_fetch_array，可以通过设定参数来更改行数据的下标，默认的会包含数字索引的下标以及字段名的关联索引下标。</p>\r\n<pre class=\"code\">$sql = \"select * from user limit 1\";\r\n$result = mysql_query($sql);\r\n$row = mysql_fetch_array($result);</pre>\r\n<p>可以通过设定参数MYSQL_NUM只获取数字索引数组，等同于mysql_fetch_row函数，如果设定参数为MYSQL_ASSOC则只获取关联索引数组，等同于mysql_fetch_assoc函数。</p>\r\n<pre class=\"code\">$row = mysql_fetch_row($result);\r\n$row = mysql_fetch_array($result, MYSQL_NUM); //这两个方法获取的数据是一样的</pre>\r\n<pre class=\"code\">$row = mysql_fetch_assoc($result);\r\n$row = mysql_fetch_array($result, MYSQL_ASSOC);</pre>\r\n<p>如果要获取数据集中的所有数据，我们通过循环来遍历整个结果集。</p>\r\n<pre class=\"code\">$data = array();\r\nwhile ($row = mysql_fetch_array($result)) {\r\n    $data[] = $row;\r\n}</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//数据预处理 防止查询不到数据<br>mysql_query(\"insert into user(name, age, class) values(\'王二\', 19, \'高三五班\')\");<br>//进行数据查询<br>$sql = \"select * from user limit 1\";<br>$result = mysql_query($sql);</p>\r\n<p>//在这里获取一行数据<br>$row=mysql_fetch_assoc($result);</p>\r\n<p>echo \'&lt;pre&gt;\';<br>print_r($row);<br>echo \'&lt;/pre&gt;\';</p>\r\n<p><strong>11.7 查询分页数据</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>上一节中，我们了解到通过循环可以获取一个查询的所有数据，在实际应用中，我们并不希望一次性获取数据表中的所有数据，那样性能会非常的低，因此会使用翻页功能，每页仅显示10条或者20条数据。</p>\r\n<p>通过mysql的limit可以很容易的实现分页，limit m,n表示从m行后取n行数据，在PHP中我们需要构造m与n来实现获取某一页的所有数据。</p>\r\n<p>假定当前页为$page，每页显示$n条数据，那么m为当前页前面所有的数据，既$m = ($page-1) * $n，在知道了翻页原理以后，那么我们很容易通过构造SQL语句在PHP中实现数据翻页。</p>\r\n<pre class=\"code\">$page = 2;\r\n$n = 2;\r\n$m = ($page - 1) * $n;\r\n$sql = \"select * from user limit $m, $n\";\r\n$result = mysql_query($sql);\r\n//循环获取当前页的数据\r\n$data = array();\r\nwhile ($row = mysql_fetch_assoc($result)) {\r\n    $data[] = $row;\r\n}\r\n</pre>\r\n<p>在上面的例子中，我们使用了$m与$n变量来表示偏移量与每页数据条数，但我们推荐使用更有意义的变量名来表示，比如$pagesize, $start, $offset等，这样更容易理解，有助于团队协作开发。</p>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//预设翻页参数<br>$page = 2;<br>$pagesize = 2;<br>//在这里构建分页查询<br>$start=($page-1)*$pagesize;</p>\r\n<p>$sql=\"SELECT * FROM user LIMIT $start,$pagesize\";</p>\r\n<p>//获取翻页数据<br>$result = mysql_query($sql);<br>$data = array();<br>while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {<br>    $data[] = $row;<br>}<br>echo \'&lt;pre&gt;\';<br>print_r($data);<br>echo \'&lt;/pre&gt;\';</p>\r\n<p>11.8 更新与删除数据</p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>数据的更新与删除相对比较简单，只需要构建好相应的sql语句，然后调用mysql_query执行就能完成相应的更新与删除操作。</p>\r\n<pre class=\"code\">$sql = \"update user set name = \'曹操\' where id=2 limit 1\";\r\nif (mysql_query($sql)) {\r\n    echo \'更新成功\';\r\n}</pre>\r\n<p>同样的删除可以使用类似以下的代码：</p>\r\n<pre class=\"code\">$sql = \"delete from user where id=2 limit 1\";\r\nif (mysql_query($sql)) {\r\n    echo \'删除成功\';\r\n}</pre>\r\n<p>对于删除与更新操作，可以通过mysql_affected_rows函数来获取更新过的数据行数，如果数据没有变化，则结果为0。</p>\r\n<pre class=\"code\">$sql = \"update user set name = \'曹操\' where id=2 limit 1\";\r\nif (mysql_query($sql)) {\r\n    echo mysql_affected_rows();\r\n}</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//预设数据以便进行更新操作<br>mysql_query(\"insert into user(name, age, class) values(\'王二\', 19, \'高三五班\')\");<br>$id = mysql_insert_id();<br>//在这里更新id为$id的行的名字为李白<br>$sql=\"update user set name=\'李白\' where id=$id limit 1\";<br>mysql_query($sql);<br>//输出更新数据条数<br>echo \'数据更新行数：\'.mysql_affected_rows();<br>mysql_query(\"delete from user where id=\'$id\'\");</p>\r\n<p><strong>11.9 关闭MySQL连接</strong></p>\r\n<div id=\"J_CodeDescr\" class=\"code-description\">\r\n<div class=\"code-desc co\">\r\n<p>当数据库操作完成以后，可以使用mysql_close关闭数据库连接，默认的，当PHP执行完毕以后，会自动的关闭数据库连接。</p>\r\n<pre class=\"code\">mysql_close();</pre>\r\n<p>虽然PHP会自动关闭数据库连接，一般情况下已经满足需求，但是在对性能要求比较高的情况下，可以在进行完数据库操作之后尽快关闭数据库连接，以节省资源，提高性能。</p>\r\n<p>在存在多个数据库连接的情况下，可以设定连接资源参数来关闭指定的数据库连接。</p>\r\n<pre class=\"code\">$link = mysql_connect($host, $user, $pass);\r\nmysql_close($link);</pre>\r\n</div>\r\n</div>\r\n<p>&lt;?php<br>//连接数据库<br>$con=mysql_connect(\'127.0.0.1\', \'code1\', \'\');<br>mysql_select_db(\'code1\');<br>mysql_query(\"set names \'utf8\'\");<br>//在这里关闭数据库连接</p>\r\n<p>mysql_close($con);</p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n<p> </p>\r\n\r\n</div>\r\n\r\n</div>\n ', '2016-04-28 20:05:11', '2016-04-28 20:17:08', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3132', 'PHP_Bibel阅读笔记（二）——脸黑的一天（？一年） ', '网络', '\n<p>　　一早上起来把50包开了，一张橙卡。。。就问还有谁。。。。。。。。。。。本命年啊，我去买红内裤还不行么。。。。</p>\r\n<p>实时更新，老哥的号的30包什么都没有。。。。不过中午又开了5包，皇帝，好评啊！！！</p>\r\n<p><strong>五、代码重用与函数编写</strong></p>\r\n<p>include警告与require的错误；</p>\r\n<p>大量的包含实现，可以改ini文件中的：auto_prepend_file和auto_append_file;</p>\r\n<p>global关键字也是可以用在函数内的参数的；</p>\r\n<p>参数的引用传递和return</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">1</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\FunctionUse;\r\n</span><span style=\"color: #008080;\">2</span> \r\n<span style=\"color: #008080;\">3</span> <span style=\"color: #0000ff;\">include_once</span> \'index.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">4</span> <span style=\"color: #800080;\">$value</span>=10<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">5</span> increment1(<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">6</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$value</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">7</span> <span style=\"color: #800080;\">$value2</span>=100<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">8</span> <span style=\"color: #800080;\">$value2</span>=increment2(<span style=\"color: #800080;\">$value2</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">9</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$value2</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\";</pre>\r\n</div>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #0000ff;\">function</span> increment1(&amp;<span style=\"color: #800080;\">$value</span>,<span style=\"color: #800080;\">$mount</span>=1<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\"> 4</span>     <span style=\"color: #800080;\">$value</span>=<span style=\"color: #800080;\">$value</span>+<span style=\"color: #800080;\">$mount</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 6</span> \r\n<span style=\"color: #008080;\"> 7</span> <span style=\"color: #0000ff;\">function</span> increment2(<span style=\"color: #800080;\">$value</span>,<span style=\"color: #800080;\">$mount</span>=1<span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\"> 9</span>     <span style=\"color: #800080;\">$value</span>=<span style=\"color: #800080;\">$value</span>+<span style=\"color: #800080;\">$mount</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">11</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>递归函数比循环慢且占用更多内存，虽然很多循环都可以用递归来代替；（在应用领域中基本不用它</p>\r\n<p><strong>六、面向对象</strong></p>\r\n<p>好玩的代码，学到些东西！</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">  1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\">  2</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\ObjectPage;\r\n</span><span style=\"color: #008080;\">  3</span> \r\n<span style=\"color: #008080;\">  4</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Chapter6.P132</span>\r\n<span style=\"color: #008080;\">  5</span> \r\n<span style=\"color: #008080;\">  6</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> Page\r\n</span><span style=\"color: #008080;\">  7</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">  8</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$content</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">  9</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$title</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 10</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$keyword</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 11</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$button</span>=<span style=\"color: #0000ff;\">array</span>(\"Home\"=&gt;\"http://115.159.201.78/wordpress/\",\r\n<span style=\"color: #008080;\"> 12</span>         \"Basic\"=&gt;\"Section1.php\"\r\n<span style=\"color: #008080;\"> 13</span> <span style=\"color: #000000;\">    );\r\n</span><span style=\"color: #008080;\"> 14</span>     \r\n<span style=\"color: #008080;\"> 15</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __set(<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 16</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 17</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #800080;\">$name</span>=<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 18</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 19</span>     \r\n<span style=\"color: #008080;\"> 20</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> Display()\r\n</span><span style=\"color: #008080;\"> 21</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 22</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;html&gt;\\n&lt;head&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 23</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayTitle();\r\n</span><span style=\"color: #008080;\"> 24</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayKeywords();\r\n</span><span style=\"color: #008080;\"> 25</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayStyles();\r\n</span><span style=\"color: #008080;\"> 26</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/head&gt;\\n&lt;body&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 27</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayHeader();\r\n</span><span style=\"color: #008080;\"> 28</span>         <span style=\"color: #800080;\">$this</span>-&gt;DisplayMenu(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">button);\r\n</span><span style=\"color: #008080;\"> 29</span>         <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">content;\r\n</span><span style=\"color: #008080;\"> 30</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">DisplayFooter();\r\n</span><span style=\"color: #008080;\"> 31</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/body&gt;\\n&lt;/html&gt;\\n\"<span style=\"color: #000000;\">;   \r\n</span><span style=\"color: #008080;\"> 32</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 33</span>     \r\n<span style=\"color: #008080;\"> 34</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayTitle()\r\n</span><span style=\"color: #008080;\"> 35</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 36</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;title&gt;\".<span style=\"color: #800080;\">$this</span>-&gt;title.\"&lt;/title&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 37</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 38</span>     \r\n<span style=\"color: #008080;\"> 39</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayKeywords()\r\n</span><span style=\"color: #008080;\"> 40</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 41</span>         <span style=\"color: #0000ff;\">foreach</span> (<span style=\"color: #800080;\">$this</span>-&gt;keyword <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$words</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 42</span>             <span style=\"color: #0000ff;\">echo</span> \"&lt;meta name=\\\"keywords\\\" content=\\\"\".<span style=\"color: #800080;\">$words</span>.\"\\\"/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 43</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\"> 44</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 45</span>     \r\n<span style=\"color: #008080;\"> 46</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayStyles()\r\n</span><span style=\"color: #008080;\"> 47</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 48</span>    ?&gt;\r\n<span style=\"color: #008080;\"> 49</span>      &lt;style&gt;\r\n<span style=\"color: #008080;\"> 50</span> <span style=\"color: #000000;\">      h1 {\r\n</span><span style=\"color: #008080;\"> 51</span>             color:white; font-size:24pt; text-align:<span style=\"color: #000000;\">center;\r\n</span><span style=\"color: #008080;\"> 52</span>             font-family:arial,sans-<span style=\"color: #000000;\">serif\r\n</span><span style=\"color: #008080;\"> 53</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 54</span>     .<span style=\"color: #000000;\">menu {\r\n</span><span style=\"color: #008080;\"> 55</span>         color:white; font-size:12pt; text-align:<span style=\"color: #000000;\">center;\r\n</span><span style=\"color: #008080;\"> 56</span>         font-family:arial,sans-serif; font-weight:<span style=\"color: #000000;\">bold\r\n</span><span style=\"color: #008080;\"> 57</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 58</span> <span style=\"color: #000000;\">    td {\r\n</span><span style=\"color: #008080;\"> 59</span>         background:<span style=\"color: #000000;\">black\r\n</span><span style=\"color: #008080;\"> 60</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 61</span> <span style=\"color: #000000;\">    p {\r\n</span><span style=\"color: #008080;\"> 62</span>         color:black; font-size:12pt; text-align:<span style=\"color: #000000;\">justify;\r\n</span><span style=\"color: #008080;\"> 63</span>         font-family:arial,sans-<span style=\"color: #000000;\">serif\r\n</span><span style=\"color: #008080;\"> 64</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 65</span>     p.<span style=\"color: #000000;\">foot {\r\n</span><span style=\"color: #008080;\"> 66</span>         color:white; font-size:12pt; text-align:<span style=\"color: #000000;\">center;\r\n</span><span style=\"color: #008080;\"> 67</span>         font-family:arial,sans-serif; font-weight:<span style=\"color: #000000;\">bold\r\n</span><span style=\"color: #008080;\"> 68</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 69</span>     a:link,a:visited,a:<span style=\"color: #000000;\">active {\r\n</span><span style=\"color: #008080;\"> 70</span>         color:<span style=\"color: #000000;\">white\r\n</span><span style=\"color: #008080;\"> 71</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 72</span>     &lt;/style&gt;\r\n<span style=\"color: #008080;\"> 73</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 74</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 75</span>     \r\n<span style=\"color: #008080;\"> 76</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayHeader()\r\n</span><span style=\"color: #008080;\"> 77</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 78</span> ?&gt;\r\n<span style=\"color: #008080;\"> 79</span>   &lt;table width=\"100%\" cellpadding=\"12\" \r\n<span style=\"color: #008080;\"> 80</span>          cellspacing=\"0\" border=\"0\"&gt;\r\n<span style=\"color: #008080;\"> 81</span>   &lt;tr bgcolor=\"black\"&gt;\r\n<span style=\"color: #008080;\"> 82</span>     &lt;td align=\"left\"&gt;&lt;img alt=\"img\" src=\"logo.png\"&gt;&lt;/td&gt;\r\n<span style=\"color: #008080;\"> 83</span>     &lt;td&gt;&lt;h1&gt;The OOP page&lt;/h1&gt;&lt;/td&gt;\r\n<span style=\"color: #008080;\"> 84</span>   &lt;/tr&gt;\r\n<span style=\"color: #008080;\"> 85</span> &lt;/table&gt;\r\n<span style=\"color: #008080;\"> 86</span> &lt;?<span style=\"color: #000000;\">php \r\n</span><span style=\"color: #008080;\"> 87</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 88</span>     \r\n<span style=\"color: #008080;\"> 89</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span> DisplayMenu(<span style=\"color: #800080;\">$button</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\"> 90</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 91</span>         <span style=\"color: #0000ff;\">echo</span> \"<span style=\"color: #000000;\">&lt;table width=\\\"100%\\\" bgcolor=\\\"white\\\"\r\n</span><span style=\"color: #008080;\"> 92</span>               cellpadding=\\\"4\\\"    cellsapcing=\\\"4\\\"&gt;\\n \"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 93</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;tr&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 94</span>         <span style=\"color: #800080;\">$width</span>=100/<span style=\"color: #008080;\">count</span>(<span style=\"color: #800080;\">$button</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 95</span>         <span style=\"color: #0000ff;\">while</span> (<span style=\"color: #0000ff;\">list</span>(<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$url</span>)=<span style=\"color: #008080;\">each</span>(<span style=\"color: #800080;\">$button</span><span style=\"color: #000000;\">)) {\r\n</span><span style=\"color: #008080;\"> 96</span>             <span style=\"color: #800080;\">$this</span>-&gt;DisplayButton(<span style=\"color: #800080;\">$width</span>,<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$url</span>,\r\n<span style=\"color: #008080;\"> 97</span>                 !<span style=\"color: #800080;\">$this</span>-&gt;IsURLCurrentPage(<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">));\r\n</span><span style=\"color: #008080;\"> 98</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\"> 99</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/tr&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">100</span>         <span style=\"color: #0000ff;\">echo</span> \"&lt;/table&gt;\\n\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">101</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">102</span>     \r\n<span style=\"color: #008080;\">103</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span> IsURLCurrentPage(<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">104</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">105</span>         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #008080;\">strpos</span>(<span style=\"color: #800080;\">$_SERVER</span>[\'PHP_SELF\'], <span style=\"color: #800080;\">$url</span>)==<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">106</span>             <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">107</span>         } <span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">108</span>             <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">109</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\">110</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">111</span>     \r\n<span style=\"color: #008080;\">112</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span> DisplayButton(<span style=\"color: #800080;\">$width</span>,<span style=\"color: #800080;\">$name</span>,<span style=\"color: #800080;\">$url</span>,<span style=\"color: #800080;\">$active</span>=<span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">113</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">114</span>         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$active</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">115</span>             <span style=\"color: #0000ff;\">echo</span> \"&lt;td width=\\\"\".<span style=\"color: #800080;\">$width</span>.\"<span style=\"color: #000000;\">%\\\"&gt;\r\n</span><span style=\"color: #008080;\">116</span>             &lt;a href=\\\"\".<span style=\"color: #800080;\">$url</span>.\"<span style=\"color: #000000;\">\\\" onclick=\\\"blank\\\"&gt;\r\n</span><span style=\"color: #008080;\">117</span>             &lt;img src=\\\"w-logo-blue.png\\\" alt=\\\"\".<span style=\"color: #800080;\">$name</span>.\"<span style=\"color: #000000;\">\\\" border=\\\"0\\\" /&gt;&lt;/a&gt;\r\n</span><span style=\"color: #008080;\">118</span>             &lt;a href=\\\"\".<span style=\"color: #800080;\">$url</span>.\"\\\"&gt;&lt;span class=\\\"menu\\\"&gt;\".<span style=\"color: #800080;\">$name</span>.\"<span style=\"color: #000000;\">&lt;/span&gt;&lt;/a&gt;\r\n</span><span style=\"color: #008080;\">119</span>                 &lt;/td&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">120</span>         } <span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">121</span>             <span style=\"color: #0000ff;\">echo</span> \"&lt;td width=\\\"\".<span style=\"color: #800080;\">$width</span>.\"<span style=\"color: #000000;\">%\\\"&gt;\r\n</span><span style=\"color: #008080;\">122</span> <span style=\"color: #000000;\">            &lt;img src=\\\"w-logo-white.png\\\"&gt;\r\n</span><span style=\"color: #008080;\">123</span>             &lt;span class=\\\"menu\\\"&gt;\".<span style=\"color: #800080;\">$name</span>.\"&lt;/span&gt;&lt;/td&gt;\"<span style=\"color: #000000;\">;            \r\n</span><span style=\"color: #008080;\">124</span> <span style=\"color: #000000;\">        }        \r\n</span><span style=\"color: #008080;\">125</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">126</span>     \r\n<span style=\"color: #008080;\">127</span>     <span style=\"color: #0000ff;\">private</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> DisplayFooter()\r\n</span><span style=\"color: #008080;\">128</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">129</span> ?&gt;\r\n<span style=\"color: #008080;\">130</span>   &lt;table width=\"100%\" bgcolor=\"black\" cellpadding=\"12\" border=\"0\"&gt;\r\n<span style=\"color: #008080;\">131</span>   &lt;tr&gt;\r\n<span style=\"color: #008080;\">132</span>     &lt;td&gt;\r\n<span style=\"color: #008080;\">133</span>     &lt;p <span style=\"color: #0000ff;\">class</span>=\"foot\"&gt;&amp;<span style=\"color: #008080;\">copy</span>; Andy Liang.&lt;/p&gt;\r\n<span style=\"color: #008080;\">134</span>     &lt;p <span style=\"color: #0000ff;\">class</span>=\"foot\"&gt;Please visit my own site:&lt;a href=\"http://115.159.201.78/wordpress/\"&gt;Andy\'<span style=\"color: #000000;\">s Learning Diary&lt;/a&gt;&lt;/p&gt;\r\n</span><span style=\"color: #008080;\">135</span> <span style=\"color: #000000;\">    &lt;/td&gt;\r\n</span><span style=\"color: #008080;\">136</span> <span style=\"color: #000000;\">  &lt;/tr&gt;\r\n</span><span style=\"color: #008080;\">137</span> <span style=\"color: #000000;\">&lt;/table&gt;\r\n</span><span style=\"color: #008080;\">138</span> <span style=\"color: #000000;\">&lt;?php \r\n</span><span style=\"color: #008080;\">139</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">140</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">141</span> \r\n<span style=\"color: #008080;\">142</span> <span style=\"color: #000000;\">$homepage=new Page();\r\n</span><span style=\"color: #008080;\">143</span> <span style=\"color: #000000;\">$homepage-&gt;content=\"&lt;p&gt;\".\"I do not know what to write down, how about this?\".\"&lt;/p&gt;\";\r\n</span><span style=\"color: #008080;\">144</span> <span style=\"color: #000000;\">$homepage-&gt;title=\"You have to try OO.\";\r\n</span><span style=\"color: #008080;\">145</span> <span style=\"color: #000000;\">$homepage-&gt;keyword=array(\"SAR\",\"MRF\");\r\n</span><span style=\"color: #008080;\">146</span> $homepage-&gt;Display();</pre>\r\n</div>\r\n<p> </p>\r\n<p>就是个默认网页的生成对象，还是有改进空间的。</p>\r\n<p>然后，php写html，有点繁琐，但写完了一身爽。</p>\r\n<p>&lt;?php ?&gt;标记的活用有点厉害啊，套路~</p>\r\n<p>PS:上面代码中的链接不要乱点~会吓到你的。</p>\r\n<p>当然，其实这种得到页面在应用中是不推荐的，只是试着练下手。</p>\r\n<p><strong>七、错误和异常处理</strong></p>\r\n<p>try{ throw new Exception() }  catch{  }</p>\r\n<p>PHP中，异常必须手动抛出；</p>\r\n<p>try代码块和catch代码块是“绑定的”，每个try一定要有一个catch！</p>\r\n<p>一个try可以有多个catch</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Session1.Chapter7.P146</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\ExceptionTry;\r\n</span><span style=\"color: #008080;\"> 4</span> \r\n<span style=\"color: #008080;\"> 5</span> <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\r\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> \\ErrorException(\"A serious wrong has occured!\", 14<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #0000ff;\">catch</span> (\\ErrorException <span style=\"color: #800080;\">$e</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 9</span>     <span style=\"color: #0000ff;\">echo</span> \"Exceotion\".<span style=\"color: #800080;\">$e</span>-&gt;getCode().\":\".<span style=\"color: #800080;\">$e</span>-&gt;getMessage().\"&lt;br/&gt;\"\r\n<span style=\"color: #008080;\">10</span>         .\"File:\".<span style=\"color: #800080;\">$e</span>-&gt;getFile().\"at Line:\".<span style=\"color: #800080;\">$e</span>-&gt;getLine().\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">11</span>     <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$e</span><span style=\"color: #000000;\">;    \r\n</span><span style=\"color: #008080;\">12</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>应用中，希望可以<strong>自定义异常处理</strong>：继承已有的Exception类就好，需要注意的是，一般的getMessage等是final的，不能进行重载的，只有_tostring这一个方法可以重载；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">class</span> MyException <span style=\"color: #0000ff;\">extends</span><span style=\"color: #000000;\"> \\ErrorException\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\"> 3</span>     <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> _tostring()\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\"> 5</span>         <span style=\"color: #0000ff;\">return</span> \"Fatal error,sorry!\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {\r\n</span><span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> MyException(\"OH\", 14<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #0000ff;\">catch</span> (MyException <span style=\"color: #800080;\">$e</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">13</span>     <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$e</span>-&gt;<span style=\"color: #000000;\">_tostring();\r\n</span><span style=\"color: #008080;\">14</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>应用中，<strong>常常把异常处理用在最容易出错的I/O部分</strong>；格式一般都是</p>\r\n<p>try{ if(!...) throw...} catch(){}</p>\r\n<p> </p>\r\n<p>Session 2</p>\r\n<p>（二） 使用MySQL</p>\r\n<p>八、设计Web数据库</p>\r\n<p> </p>\n ', '2016-04-28 20:05:11', '2016-04-28 20:17:05', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3133', 'PHP_Bibel阅读学习（一）——看书看经典，写文写代码 ', '网络', '\n<p>　　基础快速再看一下，然后每天有新的好玩的看。</p>\r\n<p>这本书，反正好评不少，就是`PHP和MySQL Web开发`，机械工业出版社，澳洲人写的，红皮，有兴趣的可以看一下。</p>\r\n<p> </p>\r\n<p><strong>第一篇 使用PHP</strong></p>\r\n<p><strong>一、入门</strong></p>\r\n<p>5分钟翻一下，两个点吧。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//From Bible\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Session1 Based\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//Chapter1-Use</span>\r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\Using;\r\n</span><span style=\"color: #008080;\">10</span> \r\n<span style=\"color: #008080;\">11</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">引用操作符\r\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #008000;\">//这样子赋值的变量享有同一个空间</span>\r\n<span style=\"color: #008080;\">13</span> <span style=\"color: #800080;\">$a</span>=3<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$a</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #800080;\">$b</span>=&amp;<span style=\"color: #800080;\">$a</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">16</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$b</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">17</span> <span style=\"color: #800080;\">$b</span>=3333<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">18</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$a</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">19</span> \r\n<span style=\"color: #008080;\">20</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">执行操作符\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #008000;\">//``</span>\r\n<span style=\"color: #008080;\">22</span> <span style=\"color: #800080;\">$out</span>=`ls -<span style=\"color: #000000;\">la`;\r\n</span><span style=\"color: #008080;\">23</span> <span style=\"color: #0000ff;\">echo</span> \'&lt;pre&gt;\'.<span style=\"color: #800080;\">$out</span>.\'&lt;/pre&gt;\';</pre>\r\n</div>\r\n<p><strong> 二、数据的存储与检索（文件直接操作</strong></p>\r\n<p>想说的都在代码里了。</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\DataUsing;\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">判断文件是否存在——打开文件——锁定文件——读取文件——写入数据——解锁——关闭文件</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #800080;\">$filename</span>=\'test.txt\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #0000ff;\">if</span> (!<span style=\"color: #008080;\">file_exists</span>(<span style=\"color: #800080;\">$filename</span><span style=\"color: #000000;\">)) {\r\n</span><span style=\"color: #008080;\"> 5</span>     <span style=\"color: #0000ff;\">echo</span> \'The file you want to visit is not exist!\';<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">exit</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #800080;\">$fp</span>=@<span style=\"color: #008080;\">fopen</span>(<span style=\"color: #800080;\">$filename</span>,\'r+\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008080;\">flock</span>(<span style=\"color: #800080;\">$fp</span>, LOCK_EX);  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">锁定文件，只允许一个写入</span>\r\n<span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">while</span> (!<span style=\"color: #008080;\">feof</span>(<span style=\"color: #800080;\">$fp</span>)){   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">按行读取文件内容</span>\r\n<span style=\"color: #008080;\">11</span>     <span style=\"color: #800080;\">$content</span>=<span style=\"color: #008080;\">fgets</span>(<span style=\"color: #800080;\">$fp</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">12</span>     <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$content</span>;<span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #800080;\">$writeContent</span>=\'I have something to write into\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #008080;\">fwrite</span>(<span style=\"color: #800080;\">$fp</span>, <span style=\"color: #800080;\">$writeContent</span>,<span style=\"color: #008080;\">strlen</span>(<span style=\"color: #800080;\">$writeContent</span>));  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">控制写入长度，兼容性考虑</span>\r\n<span style=\"color: #008080;\">16</span> <span style=\"color: #008080;\">flock</span>(<span style=\"color: #800080;\">$fp</span>, LOCK_UN);  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">释放锁定</span>\r\n<span style=\"color: #008080;\">17</span> <span style=\"color: #008080;\">fclose</span>(<span style=\"color: #800080;\">$fp</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong>三、数组</strong></p>\r\n<p>其他的都老生常谈，大概查一下随便用，就是熟练度的问题，但还是得知道哈。</p>\r\n<p>然后学到了usort（用户自定义排序）的妙处：</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">Chapter3.Array</span>\r\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">namespace Bible\\Basic\\ArrayUsort;\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">多维数组的排序</span>\r\n<span style=\"color: #008080;\"> 4</span> <span style=\"color: #800080;\">$array1</span>=<span style=\"color: #0000ff;\">array</span>(54654,545,668<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #800080;\">$array2</span>=<span style=\"color: #0000ff;\">array</span>(5454,88,37,54<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #800080;\">$array3</span>=<span style=\"color: #0000ff;\">array</span>(123,4444,5453<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #800080;\">$arrayAll</span>=<span style=\"color: #0000ff;\">array</span>(<span style=\"color: #800080;\">$array1</span>,<span style=\"color: #800080;\">$array2</span>,<span style=\"color: #800080;\">$array3</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$arrayAll</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\"> 9</span> \r\n<span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">function</span> dimensionsCompare(<span style=\"color: #800080;\">$x</span>,<span style=\"color: #800080;\">$y</span><span style=\"color: #000000;\">)\r\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">12</span>     <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$x</span>[1]==<span style=\"color: #800080;\">$y</span>[1<span style=\"color: #000000;\">]){\r\n</span><span style=\"color: #008080;\">13</span>         <span style=\"color: #0000ff;\">return</span> 0<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">14</span>     }<span style=\"color: #0000ff;\">elseif</span> (<span style=\"color: #800080;\">$x</span>[1]&lt;<span style=\"color: #800080;\">$y</span>[1<span style=\"color: #000000;\">]){\r\n</span><span style=\"color: #008080;\">15</span>         <span style=\"color: #0000ff;\">return</span> -1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">16</span>     }<span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">17</span>         <span style=\"color: #0000ff;\">return</span> 1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">20</span> @<span style=\"color: #008080;\">usort</span>(<span style=\"color: #800080;\">$arrayAll</span>, \"dimensionsCompare\"<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$arrayAll</span>);</pre>\r\n</div>\r\n<p> </p>\r\n<p>其他什么的explode还是有点好玩的。</p>\r\n<p><strong>四、字符串操作和正则表达式</strong></p>\r\n<p>字符串整理</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\">1</span> <span style=\"color: #800080;\">$name</span>=<span style=\"color: #008080;\">trim</span>(<span style=\"color: #800080;\">$_POST</span>[\'name\'<span style=\"color: #000000;\">]);\r\n</span><span style=\"color: #008080;\">2</span> <span style=\"color: #800080;\">$email</span>=<span style=\"color: #008080;\">rtrim</span>(<span style=\"color: #800080;\">$_POST</span>[\'email\'<span style=\"color: #000000;\">]);\r\n</span><span style=\"color: #008080;\">3</span> <span style=\"color: #800080;\">$feedback</span>=<span style=\"color: #008080;\">chop</span>(<span style=\"color: #800080;\">$_POST</span>[\'feedback\']);</pre>\r\n</div>\r\n<p> </p>\n ', '2016-04-28 20:05:11', '2016-04-28 20:16:58', '0', '0', '0', '1', '80');
INSERT INTO `blog` VALUES ('3134', 'MordenPHP阅读笔记（一）——先跑再说，跑累了再走 ', '网络', '\n<p>---恢复内容开始---</p>\r\n<p>　　后台一大堆半成品，或者是几乎不成的。。。</p>\r\n<p>这本书不错，起码是别人推荐的，然后也是比较新的东西，学哪本不是学嘛，关键是得看。</p>\r\n<p>今儿个网不好，科研所需的代码下不到，看书做笔记吧。</p>\r\n<p>这本书基本将的是5.4版本后的一些新变化，写的浅显易懂，虽然鄙人走的还不顺溜，跑一跑也摔不到哪儿去，跑累了我有的是走的机会~~</p>\r\n<p><strong>（一）特性</strong></p>\r\n<p><strong>一、命名空间</strong></p>\r\n<p>一个文件一个类，用了命名空间方便互相调用；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//Namespace\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 4</span> <span style=\"color: #000000;\">namespace ModernPHP\\feature\\mingmingkongjian;\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #0000ff;\">function</span> <span style=\"color: #008080;\">var_dump</span><span style=\"color: #000000;\">(){\r\n</span><span style=\"color: #008080;\"> 6</span>     <span style=\"color: #0000ff;\">echo</span> \"Shit!\".\"&lt;/br&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #800080;\">$test</span>=\"OK\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #008080;\">var_dump</span>(<span style=\"color: #800080;\">$test</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">11</span> \\ModernPHP\\feature\\mingmingkongjian\\<span style=\"color: #008080;\">var_dump</span><span style=\"color: #000000;\">();\r\n</span><span style=\"color: #008080;\">12</span> \r\n<span style=\"color: #008080;\">13</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">命名空间必须顶头，但一个文件中可以有很多命名空间，然后也可以有子空间\r\n</span><span style=\"color: #008080;\">14</span> <span style=\"color: #008000;\">//厂商的命名空间是最顶层的命名空间，用于识别品牌\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #008000;\">//旨在解决命名冲突的问题，当然现在应该有比较灵活的其他用法\r\n</span><span style=\"color: #008080;\">16</span> \r\n<span style=\"color: #008080;\">17</span> <span style=\"color: #008000;\">//一个比较实用的点：导入和别名\r\n</span><span style=\"color: #008080;\">18</span> <span style=\"color: #008000;\">//导入另一个文件夹下的类定义，直接用</span>\r\n<span style=\"color: #008080;\">19</span> <span style=\"color: #0000ff;\">require</span> \'index.php\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">20</span> <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> a\\aaa;\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #800080;\">$daoru</span>=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> aaa;\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #800080;\">$daoru</span>-&gt;<span style=\"color: #000000;\">send();\r\n</span><span style=\"color: #008080;\">23</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">use是导入，然后在use中设置最懒的别名\r\n</span><span style=\"color: #008080;\">24</span> <span style=\"color: #008000;\">//另外，5.6版本后可以实现use 函数\r\n</span><span style=\"color: #008080;\">25</span> <span style=\"color: #008000;\">// use func a\\call;\r\n</span><span style=\"color: #008080;\">26</span> <span style=\"color: #008000;\">// \\a\\call();</span></pre>\r\n</div>\r\n<p>index.php</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #000000;\">namespace a;\r\n</span><span style=\"color: #008080;\"> 3</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> aaa{\r\n</span><span style=\"color: #008080;\"> 4</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> send(){\r\n</span><span style=\"color: #008080;\"> 5</span>         <span style=\"color: #0000ff;\">echo</span> \"ok\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> call(){\r\n</span><span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">echo</span> \"func_use is successful.\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">11</span> }</pre>\r\n</div>\r\n<p><strong>二、使用接口</strong></p>\r\n<p>接口，本来没太懂，看懂了之后简直了，牛逼啊！</p>\r\n<p>一个接口，大家只要遵守接口规定，就都能用，就这么个意思。</p>\r\n<p>下面是一个获得内容的接口示例，还可以写更多基于此接口的模块；（其中，模块中getContent的我基本都不会。。。哭）</p>\r\n<div class=\"cnblogs_code\">\r\n<pre>&lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">\r\n//Chapter2.P19\r\n//Feature_Interface\r\n//</span>\r\n<span style=\"color: #000000;\">namespace ModernPHP\\feature\\jiekou;\r\n\r\n\r\n\r\n</span><span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> DocumentStore{\r\n    </span><span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$data</span>=<span style=\"color: #000000;\">[];\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> addDocument(Documentable <span style=\"color: #800080;\">$document</span>){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">这里注明只能使用接口的参数</span>\r\n        <span style=\"color: #800080;\">$key</span>=<span style=\"color: #800080;\">$document</span>-&gt;<span style=\"color: #000000;\">getID();\r\n        </span><span style=\"color: #800080;\">$value</span>=<span style=\"color: #800080;\">$document</span>-&gt;<span style=\"color: #000000;\">getContent();\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;data[<span style=\"color: #800080;\">$key</span>]=<span style=\"color: #800080;\">$value</span><span style=\"color: #000000;\">;\r\n    }\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getDocuments(){\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">data;\r\n    }\r\n}\r\n\r\n</span><span style=\"color: #0000ff;\">interface</span> Documentable{     <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">定义接口，说白了就是定规矩，其他地方要用，就得说一声</span>\r\n    <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getId();\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getContent();\r\n}\r\n\r\n</span><span style=\"color: #0000ff;\">class</span> HtmlDocument <span style=\"color: #0000ff;\">implements</span> Documentable{   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">声明要用接口；这个是获得url的内容的</span>\r\n    <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">;\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __construct(<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">){\r\n        </span><span style=\"color: #800080;\">$this</span>-&gt;url=<span style=\"color: #800080;\">$url</span><span style=\"color: #000000;\">;\r\n    }\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getId(){\r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">url;\r\n    }\r\n    \r\n    </span><span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getContent(){\r\n        </span><span style=\"color: #800080;\">$ch</span>=curl_init();   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">这里的curl是针对url进行操作一个库（相当于）。这个命令是开启一个curl对话，所以下面这些都是一个对话</span>\r\n        curl_setopt(<span style=\"color: #800080;\">$ch</span>, CURLOPT_URL, <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">url);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>, CURLOPT_RETURNTRANSFER, 1<span style=\"color: #000000;\">);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>,CURLOPT_CONNECTTIMEOUT,3<span style=\"color: #000000;\">);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>,CURLOPT_FOLLOWLOCATION,1<span style=\"color: #000000;\">);\r\n        curl_setopt(</span><span style=\"color: #800080;\">$ch</span>,CURLOPT_MAXREDIRS,3<span style=\"color: #000000;\">);\r\n        </span><span style=\"color: #800080;\">$html</span>=curl_exec(<span style=\"color: #800080;\">$ch</span>);   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">由这个命令执行刚才的对话</span>\r\n        curl_close(<span style=\"color: #800080;\">$ch</span><span style=\"color: #000000;\">);\r\n        \r\n        </span><span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$html</span><span style=\"color: #000000;\">;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n</span><span style=\"color: #800080;\">$documentStore</span>=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> DocumentStore();\r\n\r\n</span><span style=\"color: #800080;\">$htmlDoc</span>=<span style=\"color: #0000ff;\">new</span> HtmlDocument(\'http://www.baidu.com\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #800080;\">$documentStore</span>-&gt;addDocument(<span style=\"color: #800080;\">$htmlDoc</span><span style=\"color: #000000;\">);\r\n\r\n\r\n\r\n</span><span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$documentStore</span>-&gt;getDocuments());</pre>\r\n</div>\r\n<p> 另一个模块</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> <span style=\"color: #0000ff;\">class</span> StreamDocument <span style=\"color: #0000ff;\">implements</span> Documentable{  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">流媒体</span>\r\n<span style=\"color: #008080;\"> 2</span>     <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$resource</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 3</span>     <span style=\"color: #0000ff;\">protected</span> <span style=\"color: #800080;\">$buffer</span>;   <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">缓冲区大小</span>\r\n<span style=\"color: #008080;\"> 4</span>     \r\n<span style=\"color: #008080;\"> 5</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span> __construct(<span style=\"color: #800080;\">$resource</span>,<span style=\"color: #800080;\">$buffer</span>=4096<span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\"> 6</span>         <span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>=<span style=\"color: #800080;\">$resource</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 7</span>         <span style=\"color: #800080;\">$this</span>-&gt;buffer=<span style=\"color: #800080;\">$buffer</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\"> 8</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\"> 9</span>     \r\n<span style=\"color: #008080;\">10</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getId(){\r\n</span><span style=\"color: #008080;\">11</span>         <span style=\"color: #0000ff;\">return</span> \'resource-\'.(int)<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">13</span>     \r\n<span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> getContent(){\r\n</span><span style=\"color: #008080;\">15</span>         <span style=\"color: #800080;\">$streamContent</span>=\'\'<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">16</span>         <span style=\"color: #008080;\">rewind</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>); <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">rewind() 函数将文件指针的位置倒回文件的开头</span>\r\n<span style=\"color: #008080;\">17</span>         <span style=\"color: #0000ff;\">while</span> (<span style=\"color: #008080;\">feof</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>)===<span style=\"color: #0000ff;\">false</span>){    <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">feof() 函数检测是否已到达文件末尾 (eof)。</span>\r\n<span style=\"color: #008080;\">18</span>             <span style=\"color: #800080;\">$streamContent</span>.=<span style=\"color: #008080;\">fread</span>(<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #0000ff;\">resource</span>,<span style=\"color: #800080;\">$this</span>-&gt;<span style=\"color: #000000;\">buffer);\r\n</span><span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\">20</span>         \r\n<span style=\"color: #008080;\">21</span>         <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$streamContent</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">23</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong> 三、性状</strong></p>\r\n<p>奇怪的东西。。。</p>\r\n<p>其实就是为了多重继承或者一对多个不同的类别吧</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter2.P23\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Feature_Trait\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//性状\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//前面说的接口，是针对同类型的东西，实现相同的功能的；\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\">//这里的性状是针对不同的东西，实现相同的功能\r\n</span><span style=\"color: #008080;\">10</span> \r\n<span style=\"color: #008080;\">11</span> <span style=\"color: #008000;\">//基本用法如下</span>\r\n<span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">trait traitName{\r\n</span><span style=\"color: #008080;\">13</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> testThis(){\r\n</span><span style=\"color: #008080;\">14</span>         <span style=\"color: #0000ff;\">echo</span> \"This is how trait works.\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">16</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">17</span> \r\n<span style=\"color: #008080;\">18</span> <span style=\"color: #000000;\">trait traitMore{\r\n</span><span style=\"color: #008080;\">19</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> testAgain(){\r\n</span><span style=\"color: #008080;\">20</span>         <span style=\"color: #0000ff;\">echo</span> \"This is multiple use.\".\"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">23</span> \r\n<span style=\"color: #008080;\">24</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> className{\r\n</span><span style=\"color: #008080;\">25</span>     <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> traitName;\r\n</span><span style=\"color: #008080;\">26</span>     <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> traitMore;\r\n</span><span style=\"color: #008080;\">27</span>     \r\n<span style=\"color: #008080;\">28</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">29</span> \r\n<span style=\"color: #008080;\">30</span> <span style=\"color: #800080;\">$classMine</span>=<span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> className();\r\n</span><span style=\"color: #008080;\">31</span> <span style=\"color: #800080;\">$classMine</span>-&gt;<span style=\"color: #000000;\">testThis();\r\n</span><span style=\"color: #008080;\">32</span> <span style=\"color: #800080;\">$classMine</span>-&gt;testAgain();</pre>\r\n</div>\r\n<p> </p>\r\n<p><strong> 四、生成器</strong></p>\r\n<p>直接上代码</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter2.P26\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Feature_Generator\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//生成器\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//其实就是在函数中使用了yield语句的东西\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\">//优点在于节省了内存使用情况\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #008000;\">//方法是通过动态分配内存进行循环操作\r\n</span><span style=\"color: #008080;\">11</span> <span style=\"color: #008000;\">//典型用处是处理csv类数据文件</span>\r\n<span style=\"color: #008080;\">12</span> \r\n<span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">namespace ModernPHP\\feature\\shengchegnqi;\r\n</span><span style=\"color: #008080;\">14</span> \r\n<span style=\"color: #008080;\">15</span> <span style=\"color: #0000ff;\">function</span> getRows(<span style=\"color: #800080;\">$file</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">16</span>     <span style=\"color: #800080;\">$handle</span>=<span style=\"color: #008080;\">fopen</span>(<span style=\"color: #800080;\">$file</span>,\'rb\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">17</span>     <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$handle</span>===<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">18</span>         <span style=\"color: #0000ff;\">throw</span> <span style=\"color: #0000ff;\">new</span> <span style=\"color: #0000ff;\">Exception</span>();  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">抛出错误原因</span>\r\n<span style=\"color: #008080;\">19</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">20</span>     <span style=\"color: #0000ff;\">while</span> (<span style=\"color: #008080;\">feof</span>(<span style=\"color: #800080;\">$handle</span>)===<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">) {\r\n</span><span style=\"color: #008080;\">21</span>         yield <span style=\"color: #008080;\">fgetcsv</span>(<span style=\"color: #800080;\">$handle</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">22</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">23</span>     <span style=\"color: #008080;\">fclose</span>(<span style=\"color: #800080;\">$handle</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">24</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">25</span> \r\n<span style=\"color: #008080;\">26</span> <span style=\"color: #0000ff;\">foreach</span> (getRows(\'data.csv\') <span style=\"color: #0000ff;\">as</span> <span style=\"color: #800080;\">$row</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">27</span>     <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$row</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">28</span>     <span style=\"color: #0000ff;\">echo</span> \"&lt;br/&gt;\"<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">29</span> <span style=\"color: #000000;\">}\r\n</span><span style=\"color: #008080;\">30</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">当数据文件很大时，效果尤其明显</span></pre>\r\n</div>\r\n<p> </p>\r\n<p><strong> 五、闭包</strong></p>\r\n<p>这里闭包基本等于匿名函数</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter2.P29\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//Feature_ClosePatch\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//闭包或匿名函数\r\n</span><span style=\"color: #008080;\"> 6</span> <span style=\"color: #008000;\">//\r\n</span><span style=\"color: #008080;\"> 7</span> \r\n<span style=\"color: #008080;\"> 8</span> <span style=\"color: #008000;\">//把函数当作是变量\r\n</span><span style=\"color: #008080;\"> 9</span> <span style=\"color: #008000;\">//然后它就可以像变量一样用来用去了。。\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #008000;\">//常用做函数和方法的回调</span>\r\n<span style=\"color: #008080;\">11</span> \r\n<span style=\"color: #008080;\">12</span> <span style=\"color: #000000;\">namespace ModernPHP\\feature\\bibao;\r\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #800080;\">$var</span>=<span style=\"color: #0000ff;\">function</span> (<span style=\"color: #800080;\">$name</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">return</span> <span style=\"color: #008080;\">sprintf</span>(\'Hello %s\',<span style=\"color: #800080;\">$name</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">15</span> <span style=\"color: #000000;\">};\r\n</span><span style=\"color: #008080;\">16</span> \r\n<span style=\"color: #008080;\">17</span> <span style=\"color: #0000ff;\">echo</span> <span style=\"color: #800080;\">$var</span>(\'Andy\'<span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">18</span> \r\n<span style=\"color: #008080;\">19</span> <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">做回调</span>\r\n<span style=\"color: #008080;\">20</span> <span style=\"color: #800080;\">$array</span>=[2,3,4<span style=\"color: #000000;\">];\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #800080;\">$num</span>=<span style=\"color: #008080;\">array_map</span>(<span style=\"color: #0000ff;\">function</span> (<span style=\"color: #800080;\">$number</span>){  <span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">array_map,将函数作用到数组中的每个值上，每个值都乘以本身，并返回带有新值的数组</span>\r\n<span style=\"color: #008080;\">22</span>     <span style=\"color: #0000ff;\">return</span> <span style=\"color: #800080;\">$number</span>+1<span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">23</span> },<span style=\"color: #800080;\">$array</span><span style=\"color: #000000;\">);\r\n</span><span style=\"color: #008080;\">24</span> <span style=\"color: #008080;\">print_r</span>(<span style=\"color: #800080;\">$num</span>);</pre>\r\n</div>\r\n<p> 六、附加状态</p>\r\n<p>这个没搞懂。。。</p>\r\n<p>（二）标准</p>\r\n<p>PHP-FIG的一些约定俗成；</p>\r\n<p>---类名称，驼峰式，ShitHappens</p>\r\n<p>---方法名称，驼峰式，但首字母小写，shitHappens</p>\r\n<p>---缩进统一为4个空格</p>\r\n<p>---不写?&gt;结束符号；</p>\r\n<p>---{另起一行；</p>\r\n<p>---命名空间要有空格；</p>\r\n<p>---类中属性和方法必须有可见性声明；</p>\r\n<p>---if等控制性结构后面有空格；</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"color: #008080;\"> 1</span> &lt;?<span style=\"color: #000000;\">php\r\n</span><span style=\"color: #008080;\"> 2</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 3</span> <span style=\"color: #008000;\">//Chapter3.P44\r\n</span><span style=\"color: #008080;\"> 4</span> <span style=\"color: #008000;\">//PHP-FIG puts PSRs\r\n</span><span style=\"color: #008080;\"> 5</span> <span style=\"color: #008000;\">//</span>\r\n<span style=\"color: #008080;\"> 6</span> \r\n<span style=\"color: #008080;\"> 7</span> <span style=\"color: #000000;\">namespace ModernPHP\\standard\\realize;\r\n</span><span style=\"color: #008080;\"> 8</span> \r\n<span style=\"color: #008080;\"> 9</span> <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> ModernPHP\\feature\\bibao;\r\n</span><span style=\"color: #008080;\">10</span> <span style=\"color: #0000ff;\">use</span><span style=\"color: #000000;\"> ModernPHP\\feature\\fujiazhuangtai;\r\n</span><span style=\"color: #008080;\">11</span> \r\n<span style=\"color: #008080;\">12</span> <span style=\"color: #0000ff;\">class</span><span style=\"color: #000000;\"> ShitHappens\r\n</span><span style=\"color: #008080;\">13</span> <span style=\"color: #000000;\">{\r\n</span><span style=\"color: #008080;\">14</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #800080;\">$a</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">15</span>     \r\n<span style=\"color: #008080;\">16</span>     <span style=\"color: #0000ff;\">public</span> <span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> suck()\r\n</span><span style=\"color: #008080;\">17</span> <span style=\"color: #000000;\">    {\r\n</span><span style=\"color: #008080;\">18</span>         <span style=\"color: #0000ff;\">if</span> (<span style=\"color: #800080;\">$this</span>-&gt;a===<span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">){\r\n</span><span style=\"color: #008080;\">19</span>             <span style=\"color: #0000ff;\">return</span> <span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">;\r\n</span><span style=\"color: #008080;\">20</span> <span style=\"color: #000000;\">        }\r\n</span><span style=\"color: #008080;\">21</span> <span style=\"color: #000000;\">    }\r\n</span><span style=\"color: #008080;\">22</span> }</pre>\r\n</div>\r\n<p> </p>\r\n<p>----------------------</p>\r\n<p>后面的都是讲述的东西，有需要的我再写吧。 </p>\r\n<p> </p>\n ', '2016-04-28 20:05:11', '2016-04-28 20:16:53', '0', '0', '0', '1', '80');

-- ----------------------------
-- Table structure for `category`
-- ----------------------------
DROP TABLE IF EXISTS `category`;
CREATE TABLE `category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) NOT NULL COMMENT '分类名称',
  `parent_id` int(10) unsigned NOT NULL COMMENT '父类ID',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=87 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of category
-- ----------------------------
INSERT INTO `category` VALUES ('64', '前端技术', '0');
INSERT INTO `category` VALUES ('74', 'js', '64');
INSERT INTO `category` VALUES ('75', 'jquery', '64');
INSERT INTO `category` VALUES ('76', 'ajax', '64');
INSERT INTO `category` VALUES ('77', 'html', '64');
INSERT INTO `category` VALUES ('79', '后端技术', '0');
INSERT INTO `category` VALUES ('80', 'php', '79');
INSERT INTO `category` VALUES ('83', 'linux', '79');
INSERT INTO `category` VALUES ('84', 'mysql', '79');
INSERT INTO `category` VALUES ('85', 'git', '79');
INSERT INTO `category` VALUES ('86', 'json', '79');
